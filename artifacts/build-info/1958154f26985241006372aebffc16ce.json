{"id":"1958154f26985241006372aebffc16ce","_format":"hh-sol-build-info-1","solcVersion":"0.8.18","solcLongVersion":"0.8.18+commit.87f61d96","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/AccessControl.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IAccessControl.sol\";\nimport \"../utils/Context.sol\";\nimport \"../utils/Strings.sol\";\nimport \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address => bool) members;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with a standardized message including the required role.\n     *\n     * The format of the revert reason is given by the following regular expression:\n     *\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n     *\n     * _Available since v4.1._\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual override returns (bool) {\n        return _roles[role].members[account];\n    }\n\n    /**\n     * @dev Revert with a standard message if `_msgSender()` is missing `role`.\n     * Overriding this function changes the behavior of the {onlyRole} modifier.\n     *\n     * Format of the revert message is described in {_checkRole}.\n     *\n     * _Available since v4.6._\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Revert with a standard message if `account` is missing `role`.\n     *\n     * The format of the revert reason is given by the following regular expression:\n     *\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert(\n                string(\n                    abi.encodePacked(\n                        \"AccessControl: account \",\n                        Strings.toHexString(account),\n                        \" is missing role \",\n                        Strings.toHexString(uint256(role), 32)\n                    )\n                )\n            );\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `account`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address account) public virtual override {\n        require(account == _msgSender(), \"AccessControl: can only renounce roles for self\");\n\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event. Note that unlike {grantRole}, this function doesn't perform any\n     * checks on the calling account.\n     *\n     * May emit a {RoleGranted} event.\n     *\n     * [WARNING]\n     * ====\n     * This function should only be called from the constructor when setting\n     * up the initial roles for the system.\n     *\n     * Using this function in any other way is effectively circumventing the admin\n     * system imposed by {AccessControl}.\n     * ====\n     *\n     * NOTE: This function is deprecated in favor of {_grantRole}.\n     */\n    function _setupRole(bytes32 role, address account) internal virtual {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual {\n        if (!hasRole(role, account)) {\n            _roles[role].members[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n        }\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual {\n        if (hasRole(role, account)) {\n            _roles[role].members[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n        }\n    }\n}\n"},"@openzeppelin/contracts/access/IAccessControl.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/IAccessControl.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev External interface of AccessControl declared to support ERC165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     *\n     * _Available since v3.1._\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call, an admin role\n     * bearer except when using {AccessControl-_setupRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `account`.\n     */\n    function renounceRole(bytes32 role, address account) external;\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(\n        uint256 x,\n        uint256 y,\n        uint256 denominator\n    ) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1);\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(\n        uint256 x,\n        uint256 y,\n        uint256 denominator,\n        Rounding rounding\n    ) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10**64) {\n                value /= 10**64;\n                result += 64;\n            }\n            if (value >= 10**32) {\n                value /= 10**32;\n                result += 32;\n            }\n            if (value >= 10**16) {\n                value /= 10**16;\n                result += 16;\n            }\n            if (value >= 10**8) {\n                value /= 10**8;\n                result += 8;\n            }\n            if (value >= 10**4) {\n                value /= 10**4;\n                result += 4;\n            }\n            if (value >= 10**2) {\n                value /= 10**2;\n                result += 2;\n            }\n            if (value >= 10**1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (rounding == Rounding.Up && 10**result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (rounding == Rounding.Up && 1 << (result * 8) < value ? 1 : 0);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./math/Math.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n}\n"},"contracts/AccessControl/ERC165.sol":{"content":"pragma solidity ^0.8.4;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts may inherit from this and call {_registerInterface} to declare\n * their support of an interface.\n */\ncontract ERC165 is IERC165 {\n    /*\n     * bytes4(keccak256('supportsInterface(bytes4)')) == 0x01ffc9a7\n     */\n    bytes4 private constant _INTERFACE_ID_ERC165 = 0x01ffc9a7;\n\n    /**\n     * @dev Mapping of interface ids to whether or not it's supported.\n     */\n    mapping(bytes4 => bool) private _supportedInterfaces;\n\n    constructor () {\n        // Derived contracts need only register support for their own interfaces,\n        // we register support for ERC165 itself here\n        _registerInterface(_INTERFACE_ID_ERC165);\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     *\n     * Time complexity O(1), guaranteed to always use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool) {\n        return _supportedInterfaces[interfaceId];\n    }\n\n    /**\n     * @dev Registers the contract as an implementer of the interface defined by\n     * `interfaceId`. Support of the actual ERC165 interface is automatic and\n     * registering its interface id is not required.\n     *\n     * See {IERC165-supportsInterface}.\n     *\n     * Requirements:\n     *\n     * - `interfaceId` cannot be the ERC165 invalid interface (`0xffffffff`).\n     */\n    function _registerInterface(bytes4 interfaceId) internal {\n        require(interfaceId != 0xffffffff, \"ERC165: invalid interface id\");\n        _supportedInterfaces[interfaceId] = true;\n    }\n}\n"},"contracts/AccessControl/ERC165A.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.4;\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts may inherit from this and call {_registerInterface} to declare\n * their support of an interface.\n */\nabstract contract ERC165A {\n    /*\n     * bytes4(keccak256('supportsInterface(bytes4)')) == 0x01ffc9a7\n     */\n    bytes4 private constant _INTERFACE_ID_ERC165 = 0x01ffc9a7;\n\n    /**\n     * @dev Mapping of interface ids to whether or not it's supported.\n     */\n    mapping(bytes4 => bool) private _supportedInterfaces;\n\n    constructor () internal {\n        // Derived contracts need only register support for their own interfaces,\n        // we register support for ERC165 itself here\n        _registerInterface(_INTERFACE_ID_ERC165);\n    }\n\n    // /**\n    //  * @dev See {IERC165-supportsInterface}.\n    //  *\n    //  * Time complexity O(1), guaranteed to always use less than 30 000 gas.\n    //  */\n    // function supportsInterface(bytes4 interfaceId) public view override returns (bool) {\n    //     return _supportedInterfaces[interfaceId];\n    // }\n\n    /**\n     * @dev Registers the contract as an implementer of the interface defined by\n     * `interfaceId`. Support of the actual ERC165 interface is automatic and\n     * registering its interface id is not required.\n     *\n     * See {IERC165-supportsInterface}.\n     *\n     * Requirements:\n     *\n     * - `interfaceId` cannot be the ERC165 invalid interface (`0xffffffff`).\n     */\n    function _registerInterface(bytes4 interfaceId) internal virtual {\n        require(interfaceId != 0xffffffff, \"ERC165: invalid interface id\");\n        _supportedInterfaces[interfaceId] = true;\n    }\n}"},"contracts/AccessControl/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.4;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}"},"contracts/dao/DAOCommitteeProxyV1.sol":{"content":"// // SPDX-License-Identifier: MIT\n// pragma solidity ^0.8.17;\n// pragma abicoder v2;\n\n// import \"./StorageStateCommittee.sol\";\n// //import \"../../node_modules/@openzeppelin/contracts/access/Ownable.sol\";\n// import \"../../node_modules/@openzeppelin/contracts/access/AccessControl.sol\";\n// import { ERC165 } from \"../../node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\";\n\n// contract DAOCommitteeProxy is StorageStateCommittee, AccessControl, ERC165 {\n//     address internal _implementation;\n//     bool public pauseProxy;\n\n//     event Upgraded(address indexed implementation);\n\n//     modifier onlyOwner() {\n//         require(hasRole(DEFAULT_ADMIN_ROLE, msg.sender), \"DAOCommitteeProxy: msg.sender is not an admin\");\n//         _;\n//     }\n     \n//     constructor(\n//         address _ton,\n//         address _impl,\n//         address _seigManager,\n//         address _layer2Registry,\n//         address _agendaManager,\n//         address _candidateFactory,\n//         //address _activityRewardManager,\n//         address _daoVault\n//     )\n//     {\n//         require(\n//             _ton != address(0)\n//             || _impl != address(0)\n//             || _seigManager != address(0)\n//             || _layer2Registry != address(0)\n//             || _agendaManager != address(0)\n//             || _candidateFactory != address(0),\n//             \"DAOCommitteeProxy: input is zero\"\n//         );\n//         ton = _ton;\n//         _implementation = _impl;\n//         seigManager = ISeigManager(_seigManager);\n//         layer2Registry = ILayer2Registry(_layer2Registry);\n//         agendaManager = IDAOAgendaManager(_agendaManager);\n//         candidateFactory = ICandidateFactory(_candidateFactory);\n//         daoVault = IDAOVault(_daoVault);\n//         quorum = 2;\n//         activityRewardPerSecond = 3170979198376458;\n\n//         _registerInterface(bytes4(keccak256(\"onApprove(address,address,uint256,bytes)\")));\n//         _setupRole(DEFAULT_ADMIN_ROLE, msg.sender);\n//         _setupRole(DEFAULT_ADMIN_ROLE, address(this));\n//     }\n\n//     /// @notice Set pause state\n//     /// @param _pause true:pause or false:resume\n//     function setProxyPause(bool _pause) external onlyOwner {\n//         pauseProxy = _pause;\n//     }\n\n//     /// @notice Set implementation contract\n//     /// @param impl New implementation contract address\n//     function upgradeTo(address impl) external onlyOwner {\n//         require(_implementation != address(0), \"DAOCommitteeProxy: input is zero\");\n//         require(_implementation != impl, \"DAOCommitteeProxy: The input address is same as the state\");\n//         _implementation = impl;\n//         emit Upgraded(impl);\n//     }\n\n//     function implementation() public view returns (address) {\n//         return _implementation;\n//     }\n\n//     fallback() external {\n//         _fallback();\n//     }\n\n//     function _fallback() internal {\n//         address _impl = implementation();\n//         require(_impl != address(0) && !pauseProxy, \"DAOCommitteeProxy: impl is zero OR proxy is false\");\n\n//         assembly {\n//             // Copy msg.data. We take full control of memory in this inline assembly\n//             // block because it will not return to Solidity code. We overwrite the\n//             // Solidity scratch pad at memory position 0.\n//             calldatacopy(0, 0, calldatasize())\n\n//             // Call the implementation.\n//             // out and outsize are 0 because we don't know the size yet.\n//             let result := delegatecall(gas(), _impl, 0, calldatasize(), 0, 0)\n\n//             // Copy the returned data.\n//             returndatacopy(0, 0, returndatasize())\n\n//             switch result\n//             // delegatecall returns 0 on error.\n//             case 0 { revert(0, returndatasize()) }\n//             default { return(0, returndatasize()) }\n//         }\n//     }\n// }\n"},"contracts/dao/StorageStateCommittee.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.17;\npragma abicoder v2;\n\nimport { IStorageStateCommittee } from \"../interfaces/IStorageStateCommittee.sol\";\nimport { ICandidateFactory } from \"../interfaces/ICandidateFactory.sol\";\nimport { ILayer2Registry } from \"../interfaces/ILayer2Registry.sol\";\nimport { ISeigManager } from \"../interfaces/ISeigManager.sol\";\nimport { IDAOAgendaManager } from \"../interfaces/IDAOAgendaManager.sol\";\nimport { IDAOVault } from \"../interfaces/IDAOVault.sol\";\nimport { ICandidate } from \"../interfaces/ICandidate.sol\";\n\ncontract StorageStateCommittee is IStorageStateCommittee {\n    enum AgendaStatus { NONE, NOTICE, VOTING, EXEC, ENDED, PENDING, RISK }\n    enum AgendaResult { UNDEFINED, ACCEPT, REJECT, DISMISS }\n\n    address public override ton;\n    IDAOVault public override daoVault;\n    IDAOAgendaManager public override agendaManager;\n    ICandidateFactory public override candidateFactory;\n    ILayer2Registry public override layer2Registry;\n    ISeigManager public override seigManager;\n\n    address[] public override candidates;\n    address[] public override members;\n    uint256 public override maxMember;\n\n    // candidate EOA => candidate information\n    mapping(address => CandidateInfo) internal _candidateInfos;\n    uint256 public override quorum;\n\n    uint256 public override activityRewardPerSecond;\n\n    modifier validAgendaManager() {\n        require(address(agendaManager) != address(0), \"StorageStateCommittee: AgendaManager is zero\");\n        _;\n    }\n    \n    modifier validCommitteeL2Factory() {\n        require(address(candidateFactory) != address(0), \"StorageStateCommittee: invalid CommitteeL2Factory\");\n        _;\n    }\n\n    modifier validLayer2Registry() {\n        require(address(layer2Registry) != address(0), \"StorageStateCommittee: invalid Layer2Registry\");\n        _;\n    }\n\n    modifier validSeigManager() {\n        require(address(seigManager) != address(0), \"StorageStateCommittee: invalid SeigManagere\");\n        _;\n    }\n\n    modifier onlyMember() {\n        require(isMember(msg.sender), \"StorageStateCommittee: not a member\");\n        _;\n    }\n\n    modifier onlyMemberContract() {\n        address candidate = ICandidate(msg.sender).candidate();\n        require(isMember(candidate), \"StorageStateCommittee: not a member\");\n        _;\n    }\n    \n    function isMember(address _candidate) public view override returns (bool) {\n        return _candidateInfos[_candidate].memberJoinedTime > 0;\n    }\n\n    function candidateContract(address _candidate) public view override returns (address) {\n        return _candidateInfos[_candidate].candidateContract;\n    }\n\n    function candidateInfos(address _candidate) external override returns (CandidateInfo memory) {\n        return _candidateInfos[_candidate];\n    }\n\n    /*function getCandidate() public view returns (address) {\n        ILayer2(_candidateContract).\n    }*/\n}\n"},"contracts/interfaces/ICandidate.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.17;\n\nimport { IDAOCommittee } from \"../interfaces/IDAOCommittee.sol\";\nimport { ISeigManager } from \"../interfaces/ISeigManager.sol\";\n\ninterface ICandidate {\n    function setSeigManager(address _seigMan) external;\n    function setCommittee(address _committee) external;\n    function updateSeigniorage() external returns (bool);\n    function changeMember(uint256 _memberIndex) external returns (bool);\n    function retireMember() external returns (bool);\n    function castVote(uint256 _agendaID, uint256 _vote, string calldata _comment) external;\n    function isCandidateContract() external view returns (bool);\n    function totalStaked() external view returns (uint256 totalsupply);\n    function stakedOf(address _account) external view returns (uint256 amount);\n    function setMemo(string calldata _memo) external;\n    function claimActivityReward() external;\n\n    // getter\n    function candidate() external view returns (address);\n    function isLayer2Candidate() external view returns (bool);\n    function memo() external view returns (string memory);\n    function committee() external view returns (IDAOCommittee);\n    function seigManager() external view returns (ISeigManager);\n}\n"},"contracts/interfaces/ICandidateFactory.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.17;\n\ninterface ICandidateFactory {\n    function deploy(\n        address _candidate,\n        bool _isLayer2Candidate,\n        string memory _name,\n        address _committee,\n        address _seigManager\n    )\n        external\n        returns (address);\n}\n"},"contracts/interfaces/IDAOAgendaManager.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.17;\n\nimport { LibAgenda } from \"../lib/Agenda.sol\";\n// import { IDAOCommittee } from \"../interfaces/IDAOCommittee.sol\";\n\ninterface IDAOAgendaManager  {\n    struct Ratio {\n        uint256 numerator;\n        uint256 denominator;\n    }\n\n    function setCommittee(address _committee) external;\n    function setCreateAgendaFees(uint256 _createAgendaFees) external;\n    function setMinimumNoticePeriodSeconds(uint256 _minimumNoticePeriodSeconds) external;\n    function setMinimumVotingPeriodSeconds(uint256 _minimumVotingPeriodSeconds) external;\n    function setExecutingPeriodSeconds(uint256 _executingPeriodSeconds) external;\n    function newAgenda(\n        address[] memory _targets,\n        uint256 _noticePeriodSeconds,\n        uint256 _votingPeriodSeconds,\n        bool _atomicExecute,\n        bytes[] calldata _functionBytecodes\n    )\n        external\n        returns (uint256 agendaID);\n    function castVote(uint256 _agendaID, address voter, uint256 _vote) external returns (bool);\n    function setExecutedAgenda(uint256 _agendaID) external;\n    function setResult(uint256 _agendaID, LibAgenda.AgendaResult _result) external;\n    function setStatus(uint256 _agendaID, LibAgenda.AgendaStatus _status) external;\n    function endAgendaVoting(uint256 _agendaID) external;\n    function setExecutedCount(uint256 _agendaID, uint256 _count) external;\n     \n    // -- view functions\n    function isVoter(uint256 _agendaID, address _user) external view returns (bool);\n    function hasVoted(uint256 _agendaID, address _user) external view returns (bool);\n    function getVoteStatus(uint256 _agendaID, address _user) external view returns (bool, uint256);\n    function getAgendaNoticeEndTimeSeconds(uint256 _agendaID) external view returns (uint256);\n    function getAgendaVotingStartTimeSeconds(uint256 _agendaID) external view returns (uint256);\n    function getAgendaVotingEndTimeSeconds(uint256 _agendaID) external view returns (uint256) ;\n\n    function canExecuteAgenda(uint256 _agendaID) external view returns (bool);\n    function getAgendaStatus(uint256 _agendaID) external view returns (uint256 status);\n    function totalAgendas() external view returns (uint256);\n    function getAgendaResult(uint256 _agendaID) external view returns (uint256 result, bool executed);\n    function getExecutionInfo(uint256 _agendaID)\n        external\n        view\n        returns(\n            address[] memory target,\n            bytes[] memory functionBytecode,\n            bool atomicExecute,\n            uint256 executeStartFrom\n        );\n    function isVotableStatus(uint256 _agendaID) external view returns (bool);\n    function getVotingCount(uint256 _agendaID)\n        external\n        view\n        returns (\n            uint256 countingYes,\n            uint256 countingNo,\n            uint256 countingAbstain\n        );\n    function getAgendaTimestamps(uint256 _agendaID)\n        external\n        view\n        returns (\n            uint256 createdTimestamp,\n            uint256 noticeEndTimestamp,\n            uint256 votingStartedTimestamp,\n            uint256 votingEndTimestamp,\n            uint256 executedTimestamp\n        );\n    function numAgendas() external view returns (uint256);\n    function getVoters(uint256 _agendaID) external view returns (address[] memory);\n\n    function getStatus(uint256 _createAgendaFees) external pure returns (LibAgenda.AgendaStatus);\n\n    // getter\n    // function committee() external view returns (IDAOCommittee);\n    function createAgendaFees() external view returns (uint256);\n    function minimumNoticePeriodSeconds() external view returns (uint256);\n    function minimumVotingPeriodSeconds() external view returns (uint256);\n    function executingPeriodSeconds() external view returns (uint256);\n    function agendas(uint256 _index) external view returns (LibAgenda.Agenda memory);\n    function voterInfos(uint256 _index1, address _index2) external view returns (LibAgenda.Voter memory);\n}\n"},"contracts/interfaces/IDAOCommittee.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.17;\npragma abicoder v2;\n\nimport { IStorageStateCommittee } from \"../interfaces/IStorageStateCommittee.sol\";\n\ninterface IDAOCommittee is IStorageStateCommittee {\n    //--owner\n    function setSeigManager(address _seigManager) external;\n    function setCandidatesSeigManager(address[] calldata _candidateContracts, address _seigManager) external;\n    function setCandidatesCommittee(address[] calldata _candidateContracts, address _committee) external;\n    function setLayer2Registry(address _layer2Registry) external;\n    function setAgendaManager(address _agendaManager) external;\n    function setCandidateFactory(address _candidateFactory) external;\n    function setTon(address _ton) external;\n    function setActivityRewardPerSecond(uint256 _value) external;\n    function setDaoVault(address _daoVault) external;\n\n    function increaseMaxMember(uint256 _newMaxMember, uint256 _quorum) external;\n    function decreaseMaxMember(uint256 _reducingMemberIndex, uint256 _quorum) external;\n    function createCandidate(string calldata _memo) external;\n    function registerLayer2Candidate(address _layer2, string memory _memo) external;\n    function registerLayer2CandidateByOwner(address _operator, address _layer2, string memory _memo) external;\n    function changeMember(uint256 _memberIndex) external returns (bool);\n    function retireMember() external returns (bool);\n    function setMemoOnCandidate(address _candidate, string calldata _memo) external;\n    function setMemoOnCandidateContract(address _candidate, string calldata _memo) external;\n\n    function onApprove(\n        address owner,\n        address spender,\n        uint256 tonAmount,\n        bytes calldata data\n    )\n        external\n        returns (bool);\n\n    function setQuorum(uint256 _quorum) external;\n    function setCreateAgendaFees(uint256 _fees) external;\n    function setMinimumNoticePeriodSeconds(uint256 _minimumNoticePeriod) external;\n    function setMinimumVotingPeriodSeconds(uint256 _minimumVotingPeriod) external;\n    function setExecutingPeriodSeconds(uint256 _executingPeriodSeconds) external;\n    function castVote(uint256 _AgendaID, uint256 _vote, string calldata _comment) external;\n    function endAgendaVoting(uint256 _agendaID) external;\n    function executeAgenda(uint256 _AgendaID) external;\n    function setAgendaStatus(uint256 _agendaID, uint256 _status, uint256 _result) external;\n\n    function updateSeigniorage(address _candidate) external returns (bool);\n    function updateSeigniorages(address[] calldata _candidates) external returns (bool);\n    function claimActivityReward(address _receiver) external;\n\n    function isCandidate(address _candidate) external view returns (bool);\n    function totalSupplyOnCandidate(address _candidate) external view returns (uint256);\n    function balanceOfOnCandidate(address _candidate, address _account) external view returns (uint256);\n    function totalSupplyOnCandidateContract(address _candidateContract) external view returns (uint256);\n    function balanceOfOnCandidateContract(address _candidateContract, address _account) external view returns (uint256);\n    function candidatesLength() external view returns (uint256);\n    function isExistCandidate(address _candidate) external view returns (bool);\n    function getClaimableActivityReward(address _candidate) external view returns (uint256);\n}\n\n"},"contracts/interfaces/IDAOVault.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.17;\n\ninterface IDAOVault {\n    function setTON(address _ton) external;\n    function setWTON(address _wton) external;\n    function approveTON(address _to, uint256 _amount) external;\n    function approveWTON(address _to, uint256 _amount) external;\n    function approveERC20(address _token, address _to, uint256 _amount) external;\n    function claimTON(address _to, uint256 _amount) external;\n    function claimWTON(address _to, uint256 _amount) external;\n    function claimERC20(address _token, address _to, uint256 _amount) external;\n}\n"},"contracts/interfaces/ILayer2Registry.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.17;\n\ninterface ILayer2Registry {\n    function layer2s(address layer2) external view returns (bool);\n\n    function register(address layer2) external returns (bool);\n    function numLayer2s() external view returns (uint256);\n    function layer2ByIndex(uint256 index) external view returns (address);\n\n    function deployCoinage(address layer2, address seigManager) external returns (bool);\n    function registerAndDeployCoinage(address layer2, address seigManager) external returns (bool);\n    function unregister(address layer2) external returns (bool);\n}\n"},"contracts/interfaces/ISeigManager.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.17;\n\ninterface ISeigManager {\n    function registry() external view returns (address);\n    function depositManager() external view returns (address);\n    function ton() external view returns (address);\n    function wton() external view returns (address);\n    function powerton() external view returns (address);\n    function tot() external view returns (address);\n    function coinages(address layer2) external view returns (address);\n    function commissionRates(address layer2) external view returns (uint256);\n\n    function lastCommitBlock(address layer2) external view returns (uint256);\n    function seigPerBlock() external view returns (uint256);\n    function lastSeigBlock() external view returns (uint256);\n    function pausedBlock() external view returns (uint256);\n    function unpausedBlock() external view returns (uint256);\n    function DEFAULT_FACTOR() external view returns (uint256);\n\n    function deployCoinage(address layer2) external returns (bool);\n    function setCommissionRate(address layer2, uint256 commission, bool isCommissionRateNegative) external returns (bool);\n\n    function uncomittedStakeOf(address layer2, address account) external view returns (uint256);\n    function stakeOf(address layer2, address account) external view returns (uint256);\n    function additionalTotBurnAmount(address layer2, address account, uint256 amount) external view returns (uint256 totAmount);\n\n    function onTransfer(address sender, address recipient, uint256 amount) external returns (bool);\n    function updateSeigniorage() external returns (bool);\n    function onDeposit(address layer2, address account, uint256 amount) external returns (bool);\n    function onWithdraw(address layer2, address account, uint256 amount) external returns (bool);\n}\n"},"contracts/interfaces/IStorageStateCommittee.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.17;\npragma abicoder v2;\n\nimport { ICandidateFactory } from \"../interfaces/ICandidateFactory.sol\";\nimport { ILayer2Registry } from \"../interfaces/ILayer2Registry.sol\";\nimport { ISeigManager } from \"../interfaces/ISeigManager.sol\";\nimport { IDAOAgendaManager } from \"../interfaces/IDAOAgendaManager.sol\";\nimport { IDAOVault } from \"../interfaces/IDAOVault.sol\";\n\ninterface IStorageStateCommittee {\n    struct CandidateInfo {\n        address candidateContract;\n        uint256 indexMembers;\n        uint128 memberJoinedTime;\n        uint128 rewardPeriod;\n        uint128 claimedTimestamp;\n    }\n\n    function ton() external returns (address);\n    function daoVault() external returns (IDAOVault);\n    function agendaManager() external returns (IDAOAgendaManager);\n    function candidateFactory() external returns (ICandidateFactory);\n    function layer2Registry() external returns (ILayer2Registry);\n    function seigManager() external returns (ISeigManager);\n    function candidates(uint256 _index) external returns (address);\n    function members(uint256 _index) external returns (address);\n    function maxMember() external returns (uint256);\n    function candidateInfos(address _candidate) external returns (CandidateInfo memory);\n    function quorum() external returns (uint256);\n    function activityRewardPerSecond() external returns (uint256);\n\n    function isMember(address _candidate) external returns (bool);\n    function candidateContract(address _candidate) external returns (address);\n}\n\n"},"contracts/lib/Agenda.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.17;\n\nlibrary LibAgenda {\n    //using LibAgenda for Agenda;\n\n    enum AgendaStatus { NONE, NOTICE, VOTING, WAITING_EXEC, EXECUTED, ENDED }\n    enum AgendaResult { PENDING, ACCEPT, REJECT, DISMISS }\n\n    //votor : based operator \n    struct Voter {\n        bool isVoter;\n        bool hasVoted;\n        uint256 vote;\n    }\n\n    // counting abstainVotes yesVotes noVotes\n    struct Agenda {\n        uint256 createdTimestamp;\n        uint256 noticeEndTimestamp;\n        uint256 votingPeriodInSeconds;\n        uint256 votingStartedTimestamp;\n        uint256 votingEndTimestamp;\n        uint256 executableLimitTimestamp;\n        uint256 executedTimestamp;\n        uint256 countingYes;\n        uint256 countingNo;\n        uint256 countingAbstain;\n        AgendaStatus status;\n        AgendaResult result;\n        address[] voters;\n        bool executed;\n    }\n\n    struct AgendaExecutionInfo {\n        address[] targets;\n        bytes[] functionBytecodes;\n        bool atomicExecute;\n        uint256 executeStartFrom;\n    }\n\n    /*function getAgenda(Agenda[] storage agendas, uint256 index) public view returns (Agenda storage agenda) {\n        return agendas[index];\n    }*/\n}"},"contracts/test/DAOCommitteeProxy.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.4;\npragma abicoder v2;\n\nimport \"../dao/StorageStateCommittee.sol\";\n//import \"../../node_modules/@openzeppelin/contracts/access/Ownable.sol\";\nimport \"../../node_modules/@openzeppelin/contracts/access/AccessControl.sol\";\nimport { ERC165A } from \"../AccessControl/ERC165A.sol\";\n\ncontract DAOCommitteeProxy is StorageStateCommittee, AccessControl, ERC165A {\n    address internal _implementation;\n    bool public pauseProxy;\n\n    event Upgraded(address indexed implementation);\n\n    modifier onlyOwner() {\n        require(hasRole(DEFAULT_ADMIN_ROLE, msg.sender), \"DAOCommitteeProxy: msg.sender is not an admin\");\n        _;\n    }\n     \n    constructor(\n        address _ton,\n        address _impl,\n        address _seigManager,\n        address _layer2Registry,\n        address _agendaManager,\n        address _candidateFactory,\n        //address _activityRewardManager,\n        address _daoVault\n    )\n    {\n        require(\n            _ton != address(0)\n            || _impl != address(0)\n            || _seigManager != address(0)\n            || _layer2Registry != address(0)\n            || _agendaManager != address(0)\n            || _candidateFactory != address(0),\n            \"DAOCommitteeProxy: input is zero\"\n        );\n        ton = _ton;\n        _implementation = _impl;\n        seigManager = ISeigManager(_seigManager);\n        layer2Registry = ILayer2Registry(_layer2Registry);\n        agendaManager = IDAOAgendaManager(_agendaManager);\n        candidateFactory = ICandidateFactory(_candidateFactory);\n        daoVault = IDAOVault(_daoVault);\n        quorum = 2;\n        activityRewardPerSecond = 3170979198376458;\n\n        _registerInterface(bytes4(keccak256(\"onApprove(address,address,uint256,bytes)\")));\n        _setupRole(DEFAULT_ADMIN_ROLE, msg.sender);\n        _setupRole(DEFAULT_ADMIN_ROLE, address(this));\n    }\n\n    /// @notice Set pause state\n    /// @param _pause true:pause or false:resume\n    function setProxyPause(bool _pause) external onlyOwner {\n        pauseProxy = _pause;\n    }\n\n    /// @notice Set implementation contract\n    /// @param impl New implementation contract address\n    function upgradeTo(address impl) external onlyOwner {\n        require(_implementation != address(0), \"DAOCommitteeProxy: input is zero\");\n        require(_implementation != impl, \"DAOCommitteeProxy: The input address is same as the state\");\n        _implementation = impl;\n        emit Upgraded(impl);\n    }\n\n    function implementation() public view returns (address) {\n        return _implementation;\n    }\n\n    fallback() external {\n        _fallback();\n    }\n\n    function _fallback() internal {\n        address _impl = implementation();\n        require(_impl != address(0) && !pauseProxy, \"DAOCommitteeProxy: impl is zero OR proxy is false\");\n\n        assembly {\n            // Copy msg.data. We take full control of memory in this inline assembly\n            // block because it will not return to Solidity code. We overwrite the\n            // Solidity scratch pad at memory position 0.\n            calldatacopy(0, 0, calldatasize())\n\n            // Call the implementation.\n            // out and outsize are 0 because we don't know the size yet.\n            let result := delegatecall(gas(), _impl, 0, calldatasize(), 0, 0)\n\n            // Copy the returned data.\n            returndatacopy(0, 0, returndatasize())\n\n            switch result\n            // delegatecall returns 0 on error.\n            case 0 { revert(0, returndatasize()) }\n            default { return(0, returndatasize()) }\n        }\n    }\n}\n"}},"settings":{"optimizer":{"enabled":true,"runs":100},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"errors":[{"component":"general","errorCode":"1878","formattedMessage":"Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/AccessControl/ERC165.sol\n\n","message":"SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.","severity":"warning","sourceLocation":{"end":-1,"file":"contracts/AccessControl/ERC165.sol","start":-1},"type":"Warning"},{"component":"general","errorCode":"3420","formattedMessage":"Warning: Source file does not specify required compiler version! Consider adding \"pragma solidity ^0.8.18;\"\n--> contracts/dao/DAOCommitteeProxyV1.sol\n\n","message":"Source file does not specify required compiler version! Consider adding \"pragma solidity ^0.8.18;\"","severity":"warning","sourceLocation":{"end":-1,"file":"contracts/dao/DAOCommitteeProxyV1.sol","start":-1},"type":"Warning"},{"component":"general","errorCode":"2462","formattedMessage":"Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.\n  --> contracts/AccessControl/ERC165A.sol:22:5:\n   |\n22 |     constructor () internal {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n","message":"Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.","severity":"warning","sourceLocation":{"end":772,"file":"contracts/AccessControl/ERC165A.sol","start":555},"type":"Warning"},{"component":"general","errorCode":"2018","formattedMessage":"Warning: Function state mutability can be restricted to view\n  --> contracts/dao/StorageStateCommittee.sol:73:5:\n   |\n73 |     function candidateInfos(address _candidate) external override returns (CandidateInfo memory) {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n","message":"Function state mutability can be restricted to view","severity":"warning","sourceLocation":{"end":2782,"file":"contracts/dao/StorageStateCommittee.sol","start":2638},"type":"Warning"}],"sources":{"@openzeppelin/contracts/access/AccessControl.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/AccessControl.sol","exportedSymbols":{"AccessControl":[315],"Context":[410],"ERC165":[609],"IAccessControl":[388],"IERC165":[621],"Math":[1486],"Strings":[585]},"id":316,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"108:23:0"},{"absolutePath":"@openzeppelin/contracts/access/IAccessControl.sol","file":"./IAccessControl.sol","id":2,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":316,"sourceUnit":389,"src":"133:30:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":316,"sourceUnit":411,"src":"164:30:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../utils/Strings.sol","id":4,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":316,"sourceUnit":586,"src":"195:30:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../utils/introspection/ERC165.sol","id":5,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":316,"sourceUnit":610,"src":"226:43:0","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":7,"name":"Context","nameLocations":["1841:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":410,"src":"1841:7:0"},"id":8,"nodeType":"InheritanceSpecifier","src":"1841:7:0"},{"baseName":{"id":9,"name":"IAccessControl","nameLocations":["1850:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":388,"src":"1850:14:0"},"id":10,"nodeType":"InheritanceSpecifier","src":"1850:14:0"},{"baseName":{"id":11,"name":"ERC165","nameLocations":["1866:6:0"],"nodeType":"IdentifierPath","referencedDeclaration":609,"src":"1866:6:0"},"id":12,"nodeType":"InheritanceSpecifier","src":"1866:6:0"}],"canonicalName":"AccessControl","contractDependencies":[],"contractKind":"contract","documentation":{"id":6,"nodeType":"StructuredDocumentation","src":"271:1534:0","text":" @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it."},"fullyImplemented":true,"id":315,"linearizedBaseContracts":[315,609,621,388,410],"name":"AccessControl","nameLocation":"1824:13:0","nodeType":"ContractDefinition","nodes":[{"canonicalName":"AccessControl.RoleData","id":19,"members":[{"constant":false,"id":16,"mutability":"mutable","name":"members","nameLocation":"1930:7:0","nodeType":"VariableDeclaration","scope":19,"src":"1905:32:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":15,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":13,"name":"address","nodeType":"ElementaryTypeName","src":"1913:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1905:24:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":14,"name":"bool","nodeType":"ElementaryTypeName","src":"1924:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"internal"},{"constant":false,"id":18,"mutability":"mutable","name":"adminRole","nameLocation":"1955:9:0","nodeType":"VariableDeclaration","scope":19,"src":"1947:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":17,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1947:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"RoleData","nameLocation":"1886:8:0","nodeType":"StructDefinition","scope":315,"src":"1879:92:0","visibility":"public"},{"constant":false,"id":24,"mutability":"mutable","name":"_roles","nameLocation":"2014:6:0","nodeType":"VariableDeclaration","scope":315,"src":"1977:43:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData)"},"typeName":{"id":23,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":20,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1985:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"1977:28:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":22,"nodeType":"UserDefinedTypeName","pathNode":{"id":21,"name":"RoleData","nameLocations":["1996:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":19,"src":"1996:8:0"},"referencedDeclaration":19,"src":"1996:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$19_storage_ptr","typeString":"struct AccessControl.RoleData"}}},"visibility":"private"},{"constant":true,"functionSelector":"a217fddf","id":27,"mutability":"constant","name":"DEFAULT_ADMIN_ROLE","nameLocation":"2051:18:0","nodeType":"VariableDeclaration","scope":315,"src":"2027:49:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":25,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2027:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"30783030","id":26,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2072:4:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"public"},{"body":{"id":37,"nodeType":"Block","src":"2495:44:0","statements":[{"expression":{"arguments":[{"id":33,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30,"src":"2516:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":32,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[92,131],"referencedDeclaration":92,"src":"2505:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$__$","typeString":"function (bytes32) view"}},"id":34,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2505:16:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":35,"nodeType":"ExpressionStatement","src":"2505:16:0"},{"id":36,"nodeType":"PlaceholderStatement","src":"2531:1:0"}]},"documentation":{"id":28,"nodeType":"StructuredDocumentation","src":"2083:375:0","text":" @dev Modifier that checks that an account has a specific role. Reverts\n with a standardized message including the required role.\n The format of the revert reason is given by the following regular expression:\n  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n _Available since v4.1._"},"id":38,"name":"onlyRole","nameLocation":"2472:8:0","nodeType":"ModifierDefinition","parameters":{"id":31,"nodeType":"ParameterList","parameters":[{"constant":false,"id":30,"mutability":"mutable","name":"role","nameLocation":"2489:4:0","nodeType":"VariableDeclaration","scope":38,"src":"2481:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":29,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2481:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2480:14:0"},"src":"2463:76:0","virtual":false,"visibility":"internal"},{"baseFunctions":[608],"body":{"id":59,"nodeType":"Block","src":"2697:111:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":57,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":52,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":47,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41,"src":"2714:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":49,"name":"IAccessControl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"2734:14:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAccessControl_$388_$","typeString":"type(contract IAccessControl)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IAccessControl_$388_$","typeString":"type(contract IAccessControl)"}],"id":48,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2729:4:0","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":50,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2729:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IAccessControl_$388","typeString":"type(contract IAccessControl)"}},"id":51,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2750:11:0","memberName":"interfaceId","nodeType":"MemberAccess","src":"2729:32:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"2714:47:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":55,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41,"src":"2789:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":53,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2765:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AccessControl_$315_$","typeString":"type(contract super AccessControl)"}},"id":54,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2771:17:0","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":608,"src":"2765:23:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":56,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2765:36:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2714:87:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":46,"id":58,"nodeType":"Return","src":"2707:94:0"}]},"documentation":{"id":39,"nodeType":"StructuredDocumentation","src":"2545:56:0","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":60,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"2615:17:0","nodeType":"FunctionDefinition","overrides":{"id":43,"nodeType":"OverrideSpecifier","overrides":[],"src":"2673:8:0"},"parameters":{"id":42,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41,"mutability":"mutable","name":"interfaceId","nameLocation":"2640:11:0","nodeType":"VariableDeclaration","scope":60,"src":"2633:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":40,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2633:6:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2632:20:0"},"returnParameters":{"id":46,"nodeType":"ParameterList","parameters":[{"constant":false,"id":45,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":60,"src":"2691:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":44,"name":"bool","nodeType":"ElementaryTypeName","src":"2691:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2690:6:0"},"scope":315,"src":"2606:202:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[355],"body":{"id":78,"nodeType":"Block","src":"2987:53:0","statements":[{"expression":{"baseExpression":{"expression":{"baseExpression":{"id":71,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"3004:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":73,"indexExpression":{"id":72,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":63,"src":"3011:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3004:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$19_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":74,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3017:7:0","memberName":"members","nodeType":"MemberAccess","referencedDeclaration":16,"src":"3004:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":76,"indexExpression":{"id":75,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":65,"src":"3025:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3004:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":70,"id":77,"nodeType":"Return","src":"2997:36:0"}]},"documentation":{"id":61,"nodeType":"StructuredDocumentation","src":"2814:76:0","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","id":79,"implemented":true,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"2904:7:0","nodeType":"FunctionDefinition","overrides":{"id":67,"nodeType":"OverrideSpecifier","overrides":[],"src":"2963:8:0"},"parameters":{"id":66,"nodeType":"ParameterList","parameters":[{"constant":false,"id":63,"mutability":"mutable","name":"role","nameLocation":"2920:4:0","nodeType":"VariableDeclaration","scope":79,"src":"2912:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":62,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2912:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":65,"mutability":"mutable","name":"account","nameLocation":"2934:7:0","nodeType":"VariableDeclaration","scope":79,"src":"2926:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":64,"name":"address","nodeType":"ElementaryTypeName","src":"2926:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2911:31:0"},"returnParameters":{"id":70,"nodeType":"ParameterList","parameters":[{"constant":false,"id":69,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":79,"src":"2981:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":68,"name":"bool","nodeType":"ElementaryTypeName","src":"2981:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2980:6:0"},"scope":315,"src":"2895:145:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":91,"nodeType":"Block","src":"3390:47:0","statements":[{"expression":{"arguments":[{"id":86,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":82,"src":"3411:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":87,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":400,"src":"3417:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":88,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3417:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":85,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[92,131],"referencedDeclaration":131,"src":"3400:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address) view"}},"id":89,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3400:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":90,"nodeType":"ExpressionStatement","src":"3400:30:0"}]},"documentation":{"id":80,"nodeType":"StructuredDocumentation","src":"3046:283:0","text":" @dev Revert with a standard message if `_msgSender()` is missing `role`.\n Overriding this function changes the behavior of the {onlyRole} modifier.\n Format of the revert message is described in {_checkRole}.\n _Available since v4.6._"},"id":92,"implemented":true,"kind":"function","modifiers":[],"name":"_checkRole","nameLocation":"3343:10:0","nodeType":"FunctionDefinition","parameters":{"id":83,"nodeType":"ParameterList","parameters":[{"constant":false,"id":82,"mutability":"mutable","name":"role","nameLocation":"3362:4:0","nodeType":"VariableDeclaration","scope":92,"src":"3354:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":81,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3354:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3353:14:0"},"returnParameters":{"id":84,"nodeType":"ParameterList","parameters":[],"src":"3390:0:0"},"scope":315,"src":"3334:103:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":130,"nodeType":"Block","src":"3791:406:0","statements":[{"condition":{"id":104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3805:23:0","subExpression":{"arguments":[{"id":101,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":95,"src":"3814:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":102,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":97,"src":"3820:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":100,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":79,"src":"3806:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":103,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3806:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":129,"nodeType":"IfStatement","src":"3801:390:0","trueBody":{"id":128,"nodeType":"Block","src":"3830:361:0","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"hexValue":"416363657373436f6e74726f6c3a206163636f756e7420","id":110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3938:25:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874","typeString":"literal_string \"AccessControl: account \""},"value":"AccessControl: account "},{"arguments":[{"id":113,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":97,"src":"4009:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":111,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":585,"src":"3989:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$585_$","typeString":"type(library Strings)"}},"id":112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3997:11:0","memberName":"toHexString","nodeType":"MemberAccess","referencedDeclaration":584,"src":"3989:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$","typeString":"function (address) pure returns (string memory)"}},"id":114,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3989:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"206973206d697373696e6720726f6c6520","id":115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4043:19:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69","typeString":"literal_string \" is missing role \""},"value":" is missing role "},{"arguments":[{"arguments":[{"id":120,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":95,"src":"4116:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":119,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4108:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":118,"name":"uint256","nodeType":"ElementaryTypeName","src":"4108:7:0","typeDescriptions":{}}},"id":121,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4108:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"3332","id":122,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4123:2:0","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"}],"expression":{"id":116,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":585,"src":"4088:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$585_$","typeString":"type(library Strings)"}},"id":117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4096:11:0","memberName":"toHexString","nodeType":"MemberAccess","referencedDeclaration":564,"src":"4088:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4088:38:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874","typeString":"literal_string \"AccessControl: account \""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69","typeString":"literal_string \" is missing role \""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":108,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3896:3:0","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":109,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3900:12:0","memberName":"encodePacked","nodeType":"MemberAccess","src":"3896:16:0","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":124,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3896:252:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":107,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3868:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":106,"name":"string","nodeType":"ElementaryTypeName","src":"3868:6:0","typeDescriptions":{}}},"id":125,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3868:298:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":105,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"3844:6:0","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":126,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3844:336:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":127,"nodeType":"ExpressionStatement","src":"3844:336:0"}]}}]},"documentation":{"id":93,"nodeType":"StructuredDocumentation","src":"3443:270:0","text":" @dev Revert with a standard message if `account` is missing `role`.\n The format of the revert reason is given by the following regular expression:\n  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/"},"id":131,"implemented":true,"kind":"function","modifiers":[],"name":"_checkRole","nameLocation":"3727:10:0","nodeType":"FunctionDefinition","parameters":{"id":98,"nodeType":"ParameterList","parameters":[{"constant":false,"id":95,"mutability":"mutable","name":"role","nameLocation":"3746:4:0","nodeType":"VariableDeclaration","scope":131,"src":"3738:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":94,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3738:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":97,"mutability":"mutable","name":"account","nameLocation":"3760:7:0","nodeType":"VariableDeclaration","scope":131,"src":"3752:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":96,"name":"address","nodeType":"ElementaryTypeName","src":"3752:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3737:31:0"},"returnParameters":{"id":99,"nodeType":"ParameterList","parameters":[],"src":"3791:0:0"},"scope":315,"src":"3718:479:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[363],"body":{"id":145,"nodeType":"Block","src":"4461:46:0","statements":[{"expression":{"expression":{"baseExpression":{"id":140,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"4478:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":142,"indexExpression":{"id":141,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":134,"src":"4485:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4478:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$19_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":143,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4491:9:0","memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":18,"src":"4478:22:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":139,"id":144,"nodeType":"Return","src":"4471:29:0"}]},"documentation":{"id":132,"nodeType":"StructuredDocumentation","src":"4203:170:0","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."},"functionSelector":"248a9ca3","id":146,"implemented":true,"kind":"function","modifiers":[],"name":"getRoleAdmin","nameLocation":"4387:12:0","nodeType":"FunctionDefinition","overrides":{"id":136,"nodeType":"OverrideSpecifier","overrides":[],"src":"4434:8:0"},"parameters":{"id":135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":134,"mutability":"mutable","name":"role","nameLocation":"4408:4:0","nodeType":"VariableDeclaration","scope":146,"src":"4400:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":133,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4400:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4399:14:0"},"returnParameters":{"id":139,"nodeType":"ParameterList","parameters":[{"constant":false,"id":138,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":146,"src":"4452:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":137,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4452:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4451:9:0"},"scope":315,"src":"4378:129:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[371],"body":{"id":165,"nodeType":"Block","src":"4906:42:0","statements":[{"expression":{"arguments":[{"id":161,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":149,"src":"4927:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":162,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":151,"src":"4933:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":160,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":283,"src":"4916:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":163,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4916:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":164,"nodeType":"ExpressionStatement","src":"4916:25:0"}]},"documentation":{"id":147,"nodeType":"StructuredDocumentation","src":"4513:285:0","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."},"functionSelector":"2f2ff15d","id":166,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":156,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":149,"src":"4899:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":155,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"4886:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4886:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":158,"kind":"modifierInvocation","modifierName":{"id":154,"name":"onlyRole","nameLocations":["4877:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":38,"src":"4877:8:0"},"nodeType":"ModifierInvocation","src":"4877:28:0"}],"name":"grantRole","nameLocation":"4812:9:0","nodeType":"FunctionDefinition","overrides":{"id":153,"nodeType":"OverrideSpecifier","overrides":[],"src":"4868:8:0"},"parameters":{"id":152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":149,"mutability":"mutable","name":"role","nameLocation":"4830:4:0","nodeType":"VariableDeclaration","scope":166,"src":"4822:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":148,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4822:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":151,"mutability":"mutable","name":"account","nameLocation":"4844:7:0","nodeType":"VariableDeclaration","scope":166,"src":"4836:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":150,"name":"address","nodeType":"ElementaryTypeName","src":"4836:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4821:31:0"},"returnParameters":{"id":159,"nodeType":"ParameterList","parameters":[],"src":"4906:0:0"},"scope":315,"src":"4803:145:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[379],"body":{"id":185,"nodeType":"Block","src":"5332:43:0","statements":[{"expression":{"arguments":[{"id":181,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":169,"src":"5354:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":182,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":171,"src":"5360:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":180,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":314,"src":"5342:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":183,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5342:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":184,"nodeType":"ExpressionStatement","src":"5342:26:0"}]},"documentation":{"id":167,"nodeType":"StructuredDocumentation","src":"4954:269:0","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."},"functionSelector":"d547741f","id":186,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":176,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":169,"src":"5325:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":175,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"5312:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5312:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":178,"kind":"modifierInvocation","modifierName":{"id":174,"name":"onlyRole","nameLocations":["5303:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":38,"src":"5303:8:0"},"nodeType":"ModifierInvocation","src":"5303:28:0"}],"name":"revokeRole","nameLocation":"5237:10:0","nodeType":"FunctionDefinition","overrides":{"id":173,"nodeType":"OverrideSpecifier","overrides":[],"src":"5294:8:0"},"parameters":{"id":172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":169,"mutability":"mutable","name":"role","nameLocation":"5256:4:0","nodeType":"VariableDeclaration","scope":186,"src":"5248:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":168,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5248:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":171,"mutability":"mutable","name":"account","nameLocation":"5270:7:0","nodeType":"VariableDeclaration","scope":186,"src":"5262:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":170,"name":"address","nodeType":"ElementaryTypeName","src":"5262:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5247:31:0"},"returnParameters":{"id":179,"nodeType":"ParameterList","parameters":[],"src":"5332:0:0"},"scope":315,"src":"5228:147:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[387],"body":{"id":208,"nodeType":"Block","src":"5989:137:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":196,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":191,"src":"6007:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":197,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":400,"src":"6018:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":198,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6018:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6007:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c66","id":200,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6032:49:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b","typeString":"literal_string \"AccessControl: can only renounce roles for self\""},"value":"AccessControl: can only renounce roles for self"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b","typeString":"literal_string \"AccessControl: can only renounce roles for self\""}],"id":195,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5999:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":201,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5999:83:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":202,"nodeType":"ExpressionStatement","src":"5999:83:0"},{"expression":{"arguments":[{"id":204,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":189,"src":"6105:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":205,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":191,"src":"6111:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":203,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":314,"src":"6093:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":206,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6093:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":207,"nodeType":"ExpressionStatement","src":"6093:26:0"}]},"documentation":{"id":187,"nodeType":"StructuredDocumentation","src":"5381:526:0","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `account`.\n May emit a {RoleRevoked} event."},"functionSelector":"36568abe","id":209,"implemented":true,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"5921:12:0","nodeType":"FunctionDefinition","overrides":{"id":193,"nodeType":"OverrideSpecifier","overrides":[],"src":"5980:8:0"},"parameters":{"id":192,"nodeType":"ParameterList","parameters":[{"constant":false,"id":189,"mutability":"mutable","name":"role","nameLocation":"5942:4:0","nodeType":"VariableDeclaration","scope":209,"src":"5934:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":188,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5934:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":191,"mutability":"mutable","name":"account","nameLocation":"5956:7:0","nodeType":"VariableDeclaration","scope":209,"src":"5948:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":190,"name":"address","nodeType":"ElementaryTypeName","src":"5948:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5933:31:0"},"returnParameters":{"id":194,"nodeType":"ParameterList","parameters":[],"src":"5989:0:0"},"scope":315,"src":"5912:214:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":222,"nodeType":"Block","src":"6879:42:0","statements":[{"expression":{"arguments":[{"id":218,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":212,"src":"6900:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":219,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":214,"src":"6906:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":217,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":283,"src":"6889:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":220,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6889:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":221,"nodeType":"ExpressionStatement","src":"6889:25:0"}]},"documentation":{"id":210,"nodeType":"StructuredDocumentation","src":"6132:674:0","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event. Note that unlike {grantRole}, this function doesn't perform any\n checks on the calling account.\n May emit a {RoleGranted} event.\n [WARNING]\n ====\n This function should only be called from the constructor when setting\n up the initial roles for the system.\n Using this function in any other way is effectively circumventing the admin\n system imposed by {AccessControl}.\n ====\n NOTE: This function is deprecated in favor of {_grantRole}."},"id":223,"implemented":true,"kind":"function","modifiers":[],"name":"_setupRole","nameLocation":"6820:10:0","nodeType":"FunctionDefinition","parameters":{"id":215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":212,"mutability":"mutable","name":"role","nameLocation":"6839:4:0","nodeType":"VariableDeclaration","scope":223,"src":"6831:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":211,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6831:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":214,"mutability":"mutable","name":"account","nameLocation":"6853:7:0","nodeType":"VariableDeclaration","scope":223,"src":"6845:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":213,"name":"address","nodeType":"ElementaryTypeName","src":"6845:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6830:31:0"},"returnParameters":{"id":216,"nodeType":"ParameterList","parameters":[],"src":"6879:0:0"},"scope":315,"src":"6811:110:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":250,"nodeType":"Block","src":"7119:174:0","statements":[{"assignments":[232],"declarations":[{"constant":false,"id":232,"mutability":"mutable","name":"previousAdminRole","nameLocation":"7137:17:0","nodeType":"VariableDeclaration","scope":250,"src":"7129:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":231,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7129:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":236,"initialValue":{"arguments":[{"id":234,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":226,"src":"7170:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":233,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"7157:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":235,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7157:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"7129:46:0"},{"expression":{"id":242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":237,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"7185:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":239,"indexExpression":{"id":238,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":226,"src":"7192:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7185:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$19_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":240,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7198:9:0","memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":18,"src":"7185:22:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":241,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":228,"src":"7210:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"7185:34:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":243,"nodeType":"ExpressionStatement","src":"7185:34:0"},{"eventCall":{"arguments":[{"id":245,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":226,"src":"7251:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":246,"name":"previousAdminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":232,"src":"7257:17:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":247,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":228,"src":"7276:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":244,"name":"RoleAdminChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"7234:16:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (bytes32,bytes32,bytes32)"}},"id":248,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7234:52:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":249,"nodeType":"EmitStatement","src":"7229:57:0"}]},"documentation":{"id":224,"nodeType":"StructuredDocumentation","src":"6927:114:0","text":" @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."},"id":251,"implemented":true,"kind":"function","modifiers":[],"name":"_setRoleAdmin","nameLocation":"7055:13:0","nodeType":"FunctionDefinition","parameters":{"id":229,"nodeType":"ParameterList","parameters":[{"constant":false,"id":226,"mutability":"mutable","name":"role","nameLocation":"7077:4:0","nodeType":"VariableDeclaration","scope":251,"src":"7069:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":225,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7069:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":228,"mutability":"mutable","name":"adminRole","nameLocation":"7091:9:0","nodeType":"VariableDeclaration","scope":251,"src":"7083:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":227,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7083:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7068:33:0"},"returnParameters":{"id":230,"nodeType":"ParameterList","parameters":[],"src":"7119:0:0"},"scope":315,"src":"7046:247:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":282,"nodeType":"Block","src":"7529:165:0","statements":[{"condition":{"id":263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7543:23:0","subExpression":{"arguments":[{"id":260,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"7552:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":261,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"7558:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":259,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":79,"src":"7544:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":262,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7544:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":281,"nodeType":"IfStatement","src":"7539:149:0","trueBody":{"id":280,"nodeType":"Block","src":"7568:120:0","statements":[{"expression":{"id":271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"id":264,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"7582:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":266,"indexExpression":{"id":265,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"7589:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7582:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$19_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":267,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7595:7:0","memberName":"members","nodeType":"MemberAccess","referencedDeclaration":16,"src":"7582:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":269,"indexExpression":{"id":268,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"7603:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7582:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":270,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7614:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"7582:36:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":272,"nodeType":"ExpressionStatement","src":"7582:36:0"},{"eventCall":{"arguments":[{"id":274,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"7649:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":275,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"7655:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":276,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":400,"src":"7664:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":277,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7664:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":273,"name":"RoleGranted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":336,"src":"7637:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":278,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7637:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":279,"nodeType":"EmitStatement","src":"7632:45:0"}]}}]},"documentation":{"id":252,"nodeType":"StructuredDocumentation","src":"7299:157:0","text":" @dev Grants `role` to `account`.\n Internal function without access restriction.\n May emit a {RoleGranted} event."},"id":283,"implemented":true,"kind":"function","modifiers":[],"name":"_grantRole","nameLocation":"7470:10:0","nodeType":"FunctionDefinition","parameters":{"id":257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":254,"mutability":"mutable","name":"role","nameLocation":"7489:4:0","nodeType":"VariableDeclaration","scope":283,"src":"7481:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":253,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7481:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":256,"mutability":"mutable","name":"account","nameLocation":"7503:7:0","nodeType":"VariableDeclaration","scope":283,"src":"7495:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":255,"name":"address","nodeType":"ElementaryTypeName","src":"7495:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7480:31:0"},"returnParameters":{"id":258,"nodeType":"ParameterList","parameters":[],"src":"7529:0:0"},"scope":315,"src":"7461:233:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":313,"nodeType":"Block","src":"7934:165:0","statements":[{"condition":{"arguments":[{"id":292,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":286,"src":"7956:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":293,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":288,"src":"7962:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":291,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":79,"src":"7948:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":294,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7948:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":312,"nodeType":"IfStatement","src":"7944:149:0","trueBody":{"id":311,"nodeType":"Block","src":"7972:121:0","statements":[{"expression":{"id":302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"id":295,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"7986:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":297,"indexExpression":{"id":296,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":286,"src":"7993:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7986:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$19_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":298,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7999:7:0","memberName":"members","nodeType":"MemberAccess","referencedDeclaration":16,"src":"7986:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":300,"indexExpression":{"id":299,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":288,"src":"8007:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7986:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":301,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8018:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"7986:37:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":303,"nodeType":"ExpressionStatement","src":"7986:37:0"},{"eventCall":{"arguments":[{"id":305,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":286,"src":"8054:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":306,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":288,"src":"8060:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":307,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":400,"src":"8069:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8069:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":304,"name":"RoleRevoked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":345,"src":"8042:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8042:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":310,"nodeType":"EmitStatement","src":"8037:45:0"}]}}]},"documentation":{"id":284,"nodeType":"StructuredDocumentation","src":"7700:160:0","text":" @dev Revokes `role` from `account`.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."},"id":314,"implemented":true,"kind":"function","modifiers":[],"name":"_revokeRole","nameLocation":"7874:11:0","nodeType":"FunctionDefinition","parameters":{"id":289,"nodeType":"ParameterList","parameters":[{"constant":false,"id":286,"mutability":"mutable","name":"role","nameLocation":"7894:4:0","nodeType":"VariableDeclaration","scope":314,"src":"7886:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":285,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7886:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":288,"mutability":"mutable","name":"account","nameLocation":"7908:7:0","nodeType":"VariableDeclaration","scope":314,"src":"7900:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":287,"name":"address","nodeType":"ElementaryTypeName","src":"7900:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7885:31:0"},"returnParameters":{"id":290,"nodeType":"ParameterList","parameters":[],"src":"7934:0:0"},"scope":315,"src":"7865:234:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":316,"src":"1806:6295:0","usedErrors":[]}],"src":"108:7994:0"},"id":0},"@openzeppelin/contracts/access/IAccessControl.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/IAccessControl.sol","exportedSymbols":{"IAccessControl":[388]},"id":389,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":317,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"94:23:1"},{"abstract":false,"baseContracts":[],"canonicalName":"IAccessControl","contractDependencies":[],"contractKind":"interface","documentation":{"id":318,"nodeType":"StructuredDocumentation","src":"119:89:1","text":" @dev External interface of AccessControl declared to support ERC165 detection."},"fullyImplemented":false,"id":388,"linearizedBaseContracts":[388],"name":"IAccessControl","nameLocation":"219:14:1","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":319,"nodeType":"StructuredDocumentation","src":"240:292:1","text":" @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this.\n _Available since v3.1._"},"eventSelector":"bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff","id":327,"name":"RoleAdminChanged","nameLocation":"543:16:1","nodeType":"EventDefinition","parameters":{"id":326,"nodeType":"ParameterList","parameters":[{"constant":false,"id":321,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"576:4:1","nodeType":"VariableDeclaration","scope":327,"src":"560:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":320,"name":"bytes32","nodeType":"ElementaryTypeName","src":"560:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":323,"indexed":true,"mutability":"mutable","name":"previousAdminRole","nameLocation":"598:17:1","nodeType":"VariableDeclaration","scope":327,"src":"582:33:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":322,"name":"bytes32","nodeType":"ElementaryTypeName","src":"582:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":325,"indexed":true,"mutability":"mutable","name":"newAdminRole","nameLocation":"633:12:1","nodeType":"VariableDeclaration","scope":327,"src":"617:28:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":324,"name":"bytes32","nodeType":"ElementaryTypeName","src":"617:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"559:87:1"},"src":"537:110:1"},{"anonymous":false,"documentation":{"id":328,"nodeType":"StructuredDocumentation","src":"653:212:1","text":" @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call, an admin role\n bearer except when using {AccessControl-_setupRole}."},"eventSelector":"2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d","id":336,"name":"RoleGranted","nameLocation":"876:11:1","nodeType":"EventDefinition","parameters":{"id":335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":330,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"904:4:1","nodeType":"VariableDeclaration","scope":336,"src":"888:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":329,"name":"bytes32","nodeType":"ElementaryTypeName","src":"888:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":332,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"926:7:1","nodeType":"VariableDeclaration","scope":336,"src":"910:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":331,"name":"address","nodeType":"ElementaryTypeName","src":"910:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":334,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"951:6:1","nodeType":"VariableDeclaration","scope":336,"src":"935:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":333,"name":"address","nodeType":"ElementaryTypeName","src":"935:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"887:71:1"},"src":"870:89:1"},{"anonymous":false,"documentation":{"id":337,"nodeType":"StructuredDocumentation","src":"965:275:1","text":" @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"},"eventSelector":"f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b","id":345,"name":"RoleRevoked","nameLocation":"1251:11:1","nodeType":"EventDefinition","parameters":{"id":344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":339,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"1279:4:1","nodeType":"VariableDeclaration","scope":345,"src":"1263:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":338,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1263:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":341,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1301:7:1","nodeType":"VariableDeclaration","scope":345,"src":"1285:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":340,"name":"address","nodeType":"ElementaryTypeName","src":"1285:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":343,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1326:6:1","nodeType":"VariableDeclaration","scope":345,"src":"1310:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":342,"name":"address","nodeType":"ElementaryTypeName","src":"1310:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1262:71:1"},"src":"1245:89:1"},{"documentation":{"id":346,"nodeType":"StructuredDocumentation","src":"1340:76:1","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","id":355,"implemented":false,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"1430:7:1","nodeType":"FunctionDefinition","parameters":{"id":351,"nodeType":"ParameterList","parameters":[{"constant":false,"id":348,"mutability":"mutable","name":"role","nameLocation":"1446:4:1","nodeType":"VariableDeclaration","scope":355,"src":"1438:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":347,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1438:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":350,"mutability":"mutable","name":"account","nameLocation":"1460:7:1","nodeType":"VariableDeclaration","scope":355,"src":"1452:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":349,"name":"address","nodeType":"ElementaryTypeName","src":"1452:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1437:31:1"},"returnParameters":{"id":354,"nodeType":"ParameterList","parameters":[{"constant":false,"id":353,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":355,"src":"1492:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":352,"name":"bool","nodeType":"ElementaryTypeName","src":"1492:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1491:6:1"},"scope":388,"src":"1421:77:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":356,"nodeType":"StructuredDocumentation","src":"1504:184:1","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."},"functionSelector":"248a9ca3","id":363,"implemented":false,"kind":"function","modifiers":[],"name":"getRoleAdmin","nameLocation":"1702:12:1","nodeType":"FunctionDefinition","parameters":{"id":359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":358,"mutability":"mutable","name":"role","nameLocation":"1723:4:1","nodeType":"VariableDeclaration","scope":363,"src":"1715:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":357,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1715:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1714:14:1"},"returnParameters":{"id":362,"nodeType":"ParameterList","parameters":[{"constant":false,"id":361,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":363,"src":"1752:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":360,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1752:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1751:9:1"},"scope":388,"src":"1693:68:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":364,"nodeType":"StructuredDocumentation","src":"1767:239:1","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"2f2ff15d","id":371,"implemented":false,"kind":"function","modifiers":[],"name":"grantRole","nameLocation":"2020:9:1","nodeType":"FunctionDefinition","parameters":{"id":369,"nodeType":"ParameterList","parameters":[{"constant":false,"id":366,"mutability":"mutable","name":"role","nameLocation":"2038:4:1","nodeType":"VariableDeclaration","scope":371,"src":"2030:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":365,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2030:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":368,"mutability":"mutable","name":"account","nameLocation":"2052:7:1","nodeType":"VariableDeclaration","scope":371,"src":"2044:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":367,"name":"address","nodeType":"ElementaryTypeName","src":"2044:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2029:31:1"},"returnParameters":{"id":370,"nodeType":"ParameterList","parameters":[],"src":"2069:0:1"},"scope":388,"src":"2011:59:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":372,"nodeType":"StructuredDocumentation","src":"2076:223:1","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"d547741f","id":379,"implemented":false,"kind":"function","modifiers":[],"name":"revokeRole","nameLocation":"2313:10:1","nodeType":"FunctionDefinition","parameters":{"id":377,"nodeType":"ParameterList","parameters":[{"constant":false,"id":374,"mutability":"mutable","name":"role","nameLocation":"2332:4:1","nodeType":"VariableDeclaration","scope":379,"src":"2324:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":373,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2324:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":376,"mutability":"mutable","name":"account","nameLocation":"2346:7:1","nodeType":"VariableDeclaration","scope":379,"src":"2338:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":375,"name":"address","nodeType":"ElementaryTypeName","src":"2338:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2323:31:1"},"returnParameters":{"id":378,"nodeType":"ParameterList","parameters":[],"src":"2363:0:1"},"scope":388,"src":"2304:60:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":380,"nodeType":"StructuredDocumentation","src":"2370:480:1","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `account`."},"functionSelector":"36568abe","id":387,"implemented":false,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"2864:12:1","nodeType":"FunctionDefinition","parameters":{"id":385,"nodeType":"ParameterList","parameters":[{"constant":false,"id":382,"mutability":"mutable","name":"role","nameLocation":"2885:4:1","nodeType":"VariableDeclaration","scope":387,"src":"2877:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":381,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2877:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":384,"mutability":"mutable","name":"account","nameLocation":"2899:7:1","nodeType":"VariableDeclaration","scope":387,"src":"2891:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":383,"name":"address","nodeType":"ElementaryTypeName","src":"2891:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2876:31:1"},"returnParameters":{"id":386,"nodeType":"ParameterList","parameters":[],"src":"2916:0:1"},"scope":388,"src":"2855:62:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":389,"src":"209:2710:1","usedErrors":[]}],"src":"94:2826:1"},"id":1},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[410]},"id":411,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":390,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"86:23:2"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":391,"nodeType":"StructuredDocumentation","src":"111:496:2","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":410,"linearizedBaseContracts":[410],"name":"Context","nameLocation":"626:7:2","nodeType":"ContractDefinition","nodes":[{"body":{"id":399,"nodeType":"Block","src":"702:34:2","statements":[{"expression":{"expression":{"id":396,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"719:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"723:6:2","memberName":"sender","nodeType":"MemberAccess","src":"719:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":395,"id":398,"nodeType":"Return","src":"712:17:2"}]},"id":400,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"649:10:2","nodeType":"FunctionDefinition","parameters":{"id":392,"nodeType":"ParameterList","parameters":[],"src":"659:2:2"},"returnParameters":{"id":395,"nodeType":"ParameterList","parameters":[{"constant":false,"id":394,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":400,"src":"693:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":393,"name":"address","nodeType":"ElementaryTypeName","src":"693:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"692:9:2"},"scope":410,"src":"640:96:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":408,"nodeType":"Block","src":"809:32:2","statements":[{"expression":{"expression":{"id":405,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"826:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"830:4:2","memberName":"data","nodeType":"MemberAccess","src":"826:8:2","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":404,"id":407,"nodeType":"Return","src":"819:15:2"}]},"id":409,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"751:8:2","nodeType":"FunctionDefinition","parameters":{"id":401,"nodeType":"ParameterList","parameters":[],"src":"759:2:2"},"returnParameters":{"id":404,"nodeType":"ParameterList","parameters":[{"constant":false,"id":403,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":409,"src":"793:14:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":402,"name":"bytes","nodeType":"ElementaryTypeName","src":"793:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"792:16:2"},"scope":410,"src":"742:99:2","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":411,"src":"608:235:2","usedErrors":[]}],"src":"86:758:2"},"id":2},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[1486],"Strings":[585]},"id":586,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":412,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"101:23:3"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":413,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":586,"sourceUnit":1487,"src":"126:25:3","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":414,"nodeType":"StructuredDocumentation","src":"153:34:3","text":" @dev String operations."},"fullyImplemented":true,"id":585,"linearizedBaseContracts":[585],"name":"Strings","nameLocation":"196:7:3","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":417,"mutability":"constant","name":"_SYMBOLS","nameLocation":"235:8:3","nodeType":"VariableDeclaration","scope":585,"src":"210:54:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":415,"name":"bytes16","nodeType":"ElementaryTypeName","src":"210:7:3","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":416,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"246:18:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":420,"mutability":"constant","name":"_ADDRESS_LENGTH","nameLocation":"293:15:3","nodeType":"VariableDeclaration","scope":585,"src":"270:43:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":418,"name":"uint8","nodeType":"ElementaryTypeName","src":"270:5:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":419,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"311:2:3","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"body":{"id":467,"nodeType":"Block","src":"486:625:3","statements":[{"id":466,"nodeType":"UncheckedBlock","src":"496:609:3","statements":[{"assignments":[429],"declarations":[{"constant":false,"id":429,"mutability":"mutable","name":"length","nameLocation":"528:6:3","nodeType":"VariableDeclaration","scope":466,"src":"520:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":428,"name":"uint256","nodeType":"ElementaryTypeName","src":"520:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":436,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":432,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":423,"src":"548:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":430,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1486,"src":"537:4:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$1486_$","typeString":"type(library Math)"}},"id":431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"542:5:3","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":1323,"src":"537:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":433,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"537:17:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":434,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"557:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"537:21:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"520:38:3"},{"assignments":[438],"declarations":[{"constant":false,"id":438,"mutability":"mutable","name":"buffer","nameLocation":"586:6:3","nodeType":"VariableDeclaration","scope":466,"src":"572:20:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":437,"name":"string","nodeType":"ElementaryTypeName","src":"572:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":443,"initialValue":{"arguments":[{"id":441,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":429,"src":"606:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":440,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"595:10:3","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":439,"name":"string","nodeType":"ElementaryTypeName","src":"599:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":442,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"595:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"572:41:3"},{"assignments":[445],"declarations":[{"constant":false,"id":445,"mutability":"mutable","name":"ptr","nameLocation":"635:3:3","nodeType":"VariableDeclaration","scope":466,"src":"627:11:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":444,"name":"uint256","nodeType":"ElementaryTypeName","src":"627:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":446,"nodeType":"VariableDeclarationStatement","src":"627:11:3"},{"AST":{"nodeType":"YulBlock","src":"708:67:3","statements":[{"nodeType":"YulAssignment","src":"726:35:3","value":{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"737:6:3"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"749:2:3","type":"","value":"32"},{"name":"length","nodeType":"YulIdentifier","src":"753:6:3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"745:3:3"},"nodeType":"YulFunctionCall","src":"745:15:3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"733:3:3"},"nodeType":"YulFunctionCall","src":"733:28:3"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"726:3:3"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":438,"isOffset":false,"isSlot":false,"src":"737:6:3","valueSize":1},{"declaration":429,"isOffset":false,"isSlot":false,"src":"753:6:3","valueSize":1},{"declaration":445,"isOffset":false,"isSlot":false,"src":"726:3:3","valueSize":1}],"id":447,"nodeType":"InlineAssembly","src":"699:76:3"},{"body":{"id":462,"nodeType":"Block","src":"801:267:3","statements":[{"expression":{"id":450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"819:5:3","subExpression":{"id":449,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":445,"src":"819:3:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":451,"nodeType":"ExpressionStatement","src":"819:5:3"},{"AST":{"nodeType":"YulBlock","src":"902:84:3","statements":[{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"932:3:3"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"946:5:3"},{"kind":"number","nodeType":"YulLiteral","src":"953:2:3","type":"","value":"10"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"942:3:3"},"nodeType":"YulFunctionCall","src":"942:14:3"},{"name":"_SYMBOLS","nodeType":"YulIdentifier","src":"958:8:3"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"937:4:3"},"nodeType":"YulFunctionCall","src":"937:30:3"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"924:7:3"},"nodeType":"YulFunctionCall","src":"924:44:3"},"nodeType":"YulExpressionStatement","src":"924:44:3"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":417,"isOffset":false,"isSlot":false,"src":"958:8:3","valueSize":1},{"declaration":445,"isOffset":false,"isSlot":false,"src":"932:3:3","valueSize":1},{"declaration":423,"isOffset":false,"isSlot":false,"src":"946:5:3","valueSize":1}],"id":452,"nodeType":"InlineAssembly","src":"893:93:3"},{"expression":{"id":455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":453,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":423,"src":"1003:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":454,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1012:2:3","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1003:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":456,"nodeType":"ExpressionStatement","src":"1003:11:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":457,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":423,"src":"1036:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":458,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1045:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1036:10:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":461,"nodeType":"IfStatement","src":"1032:21:3","trueBody":{"id":460,"nodeType":"Break","src":"1048:5:3"}}]},"condition":{"hexValue":"74727565","id":448,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"795:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":463,"nodeType":"WhileStatement","src":"788:280:3"},{"expression":{"id":464,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":438,"src":"1088:6:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":427,"id":465,"nodeType":"Return","src":"1081:13:3"}]}]},"documentation":{"id":421,"nodeType":"StructuredDocumentation","src":"320:90:3","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":468,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"424:8:3","nodeType":"FunctionDefinition","parameters":{"id":424,"nodeType":"ParameterList","parameters":[{"constant":false,"id":423,"mutability":"mutable","name":"value","nameLocation":"441:5:3","nodeType":"VariableDeclaration","scope":468,"src":"433:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":422,"name":"uint256","nodeType":"ElementaryTypeName","src":"433:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"432:15:3"},"returnParameters":{"id":427,"nodeType":"ParameterList","parameters":[{"constant":false,"id":426,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":468,"src":"471:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":425,"name":"string","nodeType":"ElementaryTypeName","src":"471:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"470:15:3"},"scope":585,"src":"415:696:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":487,"nodeType":"Block","src":"1290:100:3","statements":[{"id":486,"nodeType":"UncheckedBlock","src":"1300:84:3","statements":[{"expression":{"arguments":[{"id":477,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":471,"src":"1343:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":480,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":471,"src":"1362:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":478,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1486,"src":"1350:4:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$1486_$","typeString":"type(library Math)"}},"id":479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1355:6:3","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":1446,"src":"1350:11:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":481,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1350:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":482,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1371:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1350:22:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":476,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[488,564,584],"referencedDeclaration":564,"src":"1331:11:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1331:42:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":475,"id":485,"nodeType":"Return","src":"1324:49:3"}]}]},"documentation":{"id":469,"nodeType":"StructuredDocumentation","src":"1117:94:3","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":488,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1225:11:3","nodeType":"FunctionDefinition","parameters":{"id":472,"nodeType":"ParameterList","parameters":[{"constant":false,"id":471,"mutability":"mutable","name":"value","nameLocation":"1245:5:3","nodeType":"VariableDeclaration","scope":488,"src":"1237:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":470,"name":"uint256","nodeType":"ElementaryTypeName","src":"1237:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1236:15:3"},"returnParameters":{"id":475,"nodeType":"ParameterList","parameters":[{"constant":false,"id":474,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":488,"src":"1275:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":473,"name":"string","nodeType":"ElementaryTypeName","src":"1275:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1274:15:3"},"scope":585,"src":"1216:174:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":563,"nodeType":"Block","src":"1603:347:3","statements":[{"assignments":[499],"declarations":[{"constant":false,"id":499,"mutability":"mutable","name":"buffer","nameLocation":"1626:6:3","nodeType":"VariableDeclaration","scope":563,"src":"1613:19:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":498,"name":"bytes","nodeType":"ElementaryTypeName","src":"1613:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":508,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1645:1:3","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":503,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":493,"src":"1649:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1645:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":505,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1658:1:3","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"1645:14:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":501,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1635:9:3","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":500,"name":"bytes","nodeType":"ElementaryTypeName","src":"1639:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":507,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1635:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1613:47:3"},{"expression":{"id":513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":509,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":499,"src":"1670:6:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":511,"indexExpression":{"hexValue":"30","id":510,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1677:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1670:9:3","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":512,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1682:3:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"1670:15:3","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":514,"nodeType":"ExpressionStatement","src":"1670:15:3"},{"expression":{"id":519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":515,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":499,"src":"1695:6:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":517,"indexExpression":{"hexValue":"31","id":516,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1702:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1695:9:3","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":518,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1707:3:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"1695:15:3","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":520,"nodeType":"ExpressionStatement","src":"1695:15:3"},{"body":{"id":549,"nodeType":"Block","src":"1765:83:3","statements":[{"expression":{"id":543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":535,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":499,"src":"1779:6:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":537,"indexExpression":{"id":536,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":522,"src":"1786:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1779:9:3","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":538,"name":"_SYMBOLS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":417,"src":"1791:8:3","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":542,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":539,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":491,"src":"1800:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":540,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1808:3:3","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"1800:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1791:21:3","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"1779:33:3","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":544,"nodeType":"ExpressionStatement","src":"1779:33:3"},{"expression":{"id":547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":545,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":491,"src":"1826:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":546,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1836:1:3","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"1826:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":548,"nodeType":"ExpressionStatement","src":"1826:11:3"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":529,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":522,"src":"1753:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":530,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1757:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1753:5:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":550,"initializationExpression":{"assignments":[522],"declarations":[{"constant":false,"id":522,"mutability":"mutable","name":"i","nameLocation":"1733:1:3","nodeType":"VariableDeclaration","scope":550,"src":"1725:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":521,"name":"uint256","nodeType":"ElementaryTypeName","src":"1725:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":528,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":523,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1737:1:3","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":524,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":493,"src":"1741:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1737:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":526,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1750:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1737:14:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1725:26:3"},"loopExpression":{"expression":{"id":533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"1760:3:3","subExpression":{"id":532,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":522,"src":"1762:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":534,"nodeType":"ExpressionStatement","src":"1760:3:3"},"nodeType":"ForStatement","src":"1720:128:3"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":552,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":491,"src":"1865:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":553,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1874:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1865:10:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"537472696e67733a20686578206c656e67746820696e73756666696369656e74","id":555,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1877:34:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""},"value":"Strings: hex length insufficient"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""}],"id":551,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1857:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":556,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1857:55:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":557,"nodeType":"ExpressionStatement","src":"1857:55:3"},{"expression":{"arguments":[{"id":560,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":499,"src":"1936:6:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":559,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1929:6:3","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":558,"name":"string","nodeType":"ElementaryTypeName","src":"1929:6:3","typeDescriptions":{}}},"id":561,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1929:14:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":497,"id":562,"nodeType":"Return","src":"1922:21:3"}]},"documentation":{"id":489,"nodeType":"StructuredDocumentation","src":"1396:112:3","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":564,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1522:11:3","nodeType":"FunctionDefinition","parameters":{"id":494,"nodeType":"ParameterList","parameters":[{"constant":false,"id":491,"mutability":"mutable","name":"value","nameLocation":"1542:5:3","nodeType":"VariableDeclaration","scope":564,"src":"1534:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":490,"name":"uint256","nodeType":"ElementaryTypeName","src":"1534:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":493,"mutability":"mutable","name":"length","nameLocation":"1557:6:3","nodeType":"VariableDeclaration","scope":564,"src":"1549:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":492,"name":"uint256","nodeType":"ElementaryTypeName","src":"1549:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1533:31:3"},"returnParameters":{"id":497,"nodeType":"ParameterList","parameters":[{"constant":false,"id":496,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":564,"src":"1588:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":495,"name":"string","nodeType":"ElementaryTypeName","src":"1588:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1587:15:3"},"scope":585,"src":"1513:437:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":583,"nodeType":"Block","src":"2175:76:3","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":577,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":567,"src":"2220:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":576,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2212:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":575,"name":"uint160","nodeType":"ElementaryTypeName","src":"2212:7:3","typeDescriptions":{}}},"id":578,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2212:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":574,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2204:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":573,"name":"uint256","nodeType":"ElementaryTypeName","src":"2204:7:3","typeDescriptions":{}}},"id":579,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2204:22:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":580,"name":"_ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":420,"src":"2228:15:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":572,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[488,564,584],"referencedDeclaration":564,"src":"2192:11:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":581,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2192:52:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":571,"id":582,"nodeType":"Return","src":"2185:59:3"}]},"documentation":{"id":565,"nodeType":"StructuredDocumentation","src":"1956:141:3","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."},"id":584,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2111:11:3","nodeType":"FunctionDefinition","parameters":{"id":568,"nodeType":"ParameterList","parameters":[{"constant":false,"id":567,"mutability":"mutable","name":"addr","nameLocation":"2131:4:3","nodeType":"VariableDeclaration","scope":584,"src":"2123:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":566,"name":"address","nodeType":"ElementaryTypeName","src":"2123:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2122:14:3"},"returnParameters":{"id":571,"nodeType":"ParameterList","parameters":[{"constant":false,"id":570,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":584,"src":"2160:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":569,"name":"string","nodeType":"ElementaryTypeName","src":"2160:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2159:15:3"},"scope":585,"src":"2102:149:3","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":586,"src":"188:2065:3","usedErrors":[]}],"src":"101:2153:3"},"id":3},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","exportedSymbols":{"ERC165":[609],"IERC165":[621]},"id":610,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":587,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"99:23:4"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"./IERC165.sol","id":588,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":610,"sourceUnit":622,"src":"124:23:4","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":590,"name":"IERC165","nameLocations":["754:7:4"],"nodeType":"IdentifierPath","referencedDeclaration":621,"src":"754:7:4"},"id":591,"nodeType":"InheritanceSpecifier","src":"754:7:4"}],"canonicalName":"ERC165","contractDependencies":[],"contractKind":"contract","documentation":{"id":589,"nodeType":"StructuredDocumentation","src":"149:576:4","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."},"fullyImplemented":true,"id":609,"linearizedBaseContracts":[609,621],"name":"ERC165","nameLocation":"744:6:4","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[620],"body":{"id":607,"nodeType":"Block","src":"920:64:4","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":600,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":594,"src":"937:11:4","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":602,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":621,"src":"957:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$621_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$621_$","typeString":"type(contract IERC165)"}],"id":601,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"952:4:4","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":603,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"952:13:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$621","typeString":"type(contract IERC165)"}},"id":604,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"966:11:4","memberName":"interfaceId","nodeType":"MemberAccess","src":"952:25:4","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"937:40:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":599,"id":606,"nodeType":"Return","src":"930:47:4"}]},"documentation":{"id":592,"nodeType":"StructuredDocumentation","src":"768:56:4","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":608,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"838:17:4","nodeType":"FunctionDefinition","overrides":{"id":596,"nodeType":"OverrideSpecifier","overrides":[],"src":"896:8:4"},"parameters":{"id":595,"nodeType":"ParameterList","parameters":[{"constant":false,"id":594,"mutability":"mutable","name":"interfaceId","nameLocation":"863:11:4","nodeType":"VariableDeclaration","scope":608,"src":"856:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":593,"name":"bytes4","nodeType":"ElementaryTypeName","src":"856:6:4","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"855:20:4"},"returnParameters":{"id":599,"nodeType":"ParameterList","parameters":[{"constant":false,"id":598,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":608,"src":"914:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":597,"name":"bool","nodeType":"ElementaryTypeName","src":"914:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"913:6:4"},"scope":609,"src":"829:155:4","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":610,"src":"726:260:4","usedErrors":[]}],"src":"99:888:4"},"id":4},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[621]},"id":622,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":611,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"100:23:5"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":612,"nodeType":"StructuredDocumentation","src":"125:279:5","text":" @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":621,"linearizedBaseContracts":[621],"name":"IERC165","nameLocation":"415:7:5","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":613,"nodeType":"StructuredDocumentation","src":"429:340:5","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":620,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"783:17:5","nodeType":"FunctionDefinition","parameters":{"id":616,"nodeType":"ParameterList","parameters":[{"constant":false,"id":615,"mutability":"mutable","name":"interfaceId","nameLocation":"808:11:5","nodeType":"VariableDeclaration","scope":620,"src":"801:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":614,"name":"bytes4","nodeType":"ElementaryTypeName","src":"801:6:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"800:20:5"},"returnParameters":{"id":619,"nodeType":"ParameterList","parameters":[{"constant":false,"id":618,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":620,"src":"844:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":617,"name":"bool","nodeType":"ElementaryTypeName","src":"844:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"843:6:5"},"scope":621,"src":"774:76:5","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":622,"src":"405:447:5","usedErrors":[]}],"src":"100:753:5"},"id":5},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[1486]},"id":1487,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":623,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"103:23:6"},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":624,"nodeType":"StructuredDocumentation","src":"128:73:6","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":1486,"linearizedBaseContracts":[1486],"name":"Math","nameLocation":"210:4:6","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":628,"members":[{"id":625,"name":"Down","nameLocation":"245:4:6","nodeType":"EnumValue","src":"245:4:6"},{"id":626,"name":"Up","nameLocation":"287:2:6","nodeType":"EnumValue","src":"287:2:6"},{"id":627,"name":"Zero","nameLocation":"318:4:6","nodeType":"EnumValue","src":"318:4:6"}],"name":"Rounding","nameLocation":"226:8:6","nodeType":"EnumDefinition","src":"221:122:6"},{"body":{"id":645,"nodeType":"Block","src":"480:37:6","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":638,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":631,"src":"497:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":639,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":633,"src":"501:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"497:5:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":642,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":633,"src":"509:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"497:13:6","trueExpression":{"id":641,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":631,"src":"505:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":637,"id":644,"nodeType":"Return","src":"490:20:6"}]},"documentation":{"id":629,"nodeType":"StructuredDocumentation","src":"349:59:6","text":" @dev Returns the largest of two numbers."},"id":646,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"422:3:6","nodeType":"FunctionDefinition","parameters":{"id":634,"nodeType":"ParameterList","parameters":[{"constant":false,"id":631,"mutability":"mutable","name":"a","nameLocation":"434:1:6","nodeType":"VariableDeclaration","scope":646,"src":"426:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":630,"name":"uint256","nodeType":"ElementaryTypeName","src":"426:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":633,"mutability":"mutable","name":"b","nameLocation":"445:1:6","nodeType":"VariableDeclaration","scope":646,"src":"437:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":632,"name":"uint256","nodeType":"ElementaryTypeName","src":"437:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"425:22:6"},"returnParameters":{"id":637,"nodeType":"ParameterList","parameters":[{"constant":false,"id":636,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":646,"src":"471:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":635,"name":"uint256","nodeType":"ElementaryTypeName","src":"471:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"470:9:6"},"scope":1486,"src":"413:104:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":663,"nodeType":"Block","src":"655:37:6","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":656,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":649,"src":"672:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":657,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":651,"src":"676:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"672:5:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":660,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":651,"src":"684:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"672:13:6","trueExpression":{"id":659,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":649,"src":"680:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":655,"id":662,"nodeType":"Return","src":"665:20:6"}]},"documentation":{"id":647,"nodeType":"StructuredDocumentation","src":"523:60:6","text":" @dev Returns the smallest of two numbers."},"id":664,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"597:3:6","nodeType":"FunctionDefinition","parameters":{"id":652,"nodeType":"ParameterList","parameters":[{"constant":false,"id":649,"mutability":"mutable","name":"a","nameLocation":"609:1:6","nodeType":"VariableDeclaration","scope":664,"src":"601:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":648,"name":"uint256","nodeType":"ElementaryTypeName","src":"601:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":651,"mutability":"mutable","name":"b","nameLocation":"620:1:6","nodeType":"VariableDeclaration","scope":664,"src":"612:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":650,"name":"uint256","nodeType":"ElementaryTypeName","src":"612:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"600:22:6"},"returnParameters":{"id":655,"nodeType":"ParameterList","parameters":[{"constant":false,"id":654,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":664,"src":"646:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":653,"name":"uint256","nodeType":"ElementaryTypeName","src":"646:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"645:9:6"},"scope":1486,"src":"588:104:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":686,"nodeType":"Block","src":"876:82:6","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":674,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":667,"src":"931:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":675,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":669,"src":"935:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"931:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":677,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"930:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":678,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":667,"src":"941:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":679,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":669,"src":"945:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"941:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":681,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"940:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"950:1:6","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"940:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"930:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":673,"id":685,"nodeType":"Return","src":"923:28:6"}]},"documentation":{"id":665,"nodeType":"StructuredDocumentation","src":"698:102:6","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":687,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"814:7:6","nodeType":"FunctionDefinition","parameters":{"id":670,"nodeType":"ParameterList","parameters":[{"constant":false,"id":667,"mutability":"mutable","name":"a","nameLocation":"830:1:6","nodeType":"VariableDeclaration","scope":687,"src":"822:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":666,"name":"uint256","nodeType":"ElementaryTypeName","src":"822:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":669,"mutability":"mutable","name":"b","nameLocation":"841:1:6","nodeType":"VariableDeclaration","scope":687,"src":"833:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":668,"name":"uint256","nodeType":"ElementaryTypeName","src":"833:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"821:22:6"},"returnParameters":{"id":673,"nodeType":"ParameterList","parameters":[{"constant":false,"id":672,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":687,"src":"867:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":671,"name":"uint256","nodeType":"ElementaryTypeName","src":"867:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"866:9:6"},"scope":1486,"src":"805:153:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":711,"nodeType":"Block","src":"1228:123:6","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":697,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":690,"src":"1316:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":698,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1321:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1316:6:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":701,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":690,"src":"1330:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":702,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1334:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1330:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":704,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1329:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":705,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":692,"src":"1339:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1329:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":707,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1343:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1329:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1316:28:6","trueExpression":{"hexValue":"30","id":700,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1325:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":696,"id":710,"nodeType":"Return","src":"1309:35:6"}]},"documentation":{"id":688,"nodeType":"StructuredDocumentation","src":"964:188:6","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."},"id":712,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"1166:7:6","nodeType":"FunctionDefinition","parameters":{"id":693,"nodeType":"ParameterList","parameters":[{"constant":false,"id":690,"mutability":"mutable","name":"a","nameLocation":"1182:1:6","nodeType":"VariableDeclaration","scope":712,"src":"1174:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":689,"name":"uint256","nodeType":"ElementaryTypeName","src":"1174:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":692,"mutability":"mutable","name":"b","nameLocation":"1193:1:6","nodeType":"VariableDeclaration","scope":712,"src":"1185:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":691,"name":"uint256","nodeType":"ElementaryTypeName","src":"1185:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1173:22:6"},"returnParameters":{"id":696,"nodeType":"ParameterList","parameters":[{"constant":false,"id":695,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":712,"src":"1219:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":694,"name":"uint256","nodeType":"ElementaryTypeName","src":"1219:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1218:9:6"},"scope":1486,"src":"1157:194:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":833,"nodeType":"Block","src":"1795:3797:6","statements":[{"id":832,"nodeType":"UncheckedBlock","src":"1805:3781:6","statements":[{"assignments":[725],"declarations":[{"constant":false,"id":725,"mutability":"mutable","name":"prod0","nameLocation":"2134:5:6","nodeType":"VariableDeclaration","scope":832,"src":"2126:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":724,"name":"uint256","nodeType":"ElementaryTypeName","src":"2126:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":726,"nodeType":"VariableDeclarationStatement","src":"2126:13:6"},{"assignments":[728],"declarations":[{"constant":false,"id":728,"mutability":"mutable","name":"prod1","nameLocation":"2206:5:6","nodeType":"VariableDeclaration","scope":832,"src":"2198:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":727,"name":"uint256","nodeType":"ElementaryTypeName","src":"2198:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":729,"nodeType":"VariableDeclarationStatement","src":"2198:13:6"},{"AST":{"nodeType":"YulBlock","src":"2278:157:6","statements":[{"nodeType":"YulVariableDeclaration","src":"2296:30:6","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2313:1:6"},{"name":"y","nodeType":"YulIdentifier","src":"2316:1:6"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2323:1:6","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2319:3:6"},"nodeType":"YulFunctionCall","src":"2319:6:6"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"2306:6:6"},"nodeType":"YulFunctionCall","src":"2306:20:6"},"variables":[{"name":"mm","nodeType":"YulTypedName","src":"2300:2:6","type":""}]},{"nodeType":"YulAssignment","src":"2343:18:6","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2356:1:6"},{"name":"y","nodeType":"YulIdentifier","src":"2359:1:6"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2352:3:6"},"nodeType":"YulFunctionCall","src":"2352:9:6"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"2343:5:6"}]},{"nodeType":"YulAssignment","src":"2378:43:6","value":{"arguments":[{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2395:2:6"},{"name":"prod0","nodeType":"YulIdentifier","src":"2399:5:6"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2391:3:6"},"nodeType":"YulFunctionCall","src":"2391:14:6"},{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2410:2:6"},{"name":"prod0","nodeType":"YulIdentifier","src":"2414:5:6"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2407:2:6"},"nodeType":"YulFunctionCall","src":"2407:13:6"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2387:3:6"},"nodeType":"YulFunctionCall","src":"2387:34:6"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"2378:5:6"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":725,"isOffset":false,"isSlot":false,"src":"2343:5:6","valueSize":1},{"declaration":725,"isOffset":false,"isSlot":false,"src":"2399:5:6","valueSize":1},{"declaration":725,"isOffset":false,"isSlot":false,"src":"2414:5:6","valueSize":1},{"declaration":728,"isOffset":false,"isSlot":false,"src":"2378:5:6","valueSize":1},{"declaration":715,"isOffset":false,"isSlot":false,"src":"2313:1:6","valueSize":1},{"declaration":715,"isOffset":false,"isSlot":false,"src":"2356:1:6","valueSize":1},{"declaration":717,"isOffset":false,"isSlot":false,"src":"2316:1:6","valueSize":1},{"declaration":717,"isOffset":false,"isSlot":false,"src":"2359:1:6","valueSize":1}],"id":730,"nodeType":"InlineAssembly","src":"2269:166:6"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":731,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":728,"src":"2516:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":732,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2525:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2516:10:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":739,"nodeType":"IfStatement","src":"2512:75:6","trueBody":{"id":738,"nodeType":"Block","src":"2528:59:6","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":734,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":725,"src":"2553:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":735,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":719,"src":"2561:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2553:19:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":723,"id":737,"nodeType":"Return","src":"2546:26:6"}]}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":741,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":719,"src":"2697:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":742,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":728,"src":"2711:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2697:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":740,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2689:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":744,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2689:28:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":745,"nodeType":"ExpressionStatement","src":"2689:28:6"},{"assignments":[747],"declarations":[{"constant":false,"id":747,"mutability":"mutable","name":"remainder","nameLocation":"2981:9:6","nodeType":"VariableDeclaration","scope":832,"src":"2973:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":746,"name":"uint256","nodeType":"ElementaryTypeName","src":"2973:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":748,"nodeType":"VariableDeclarationStatement","src":"2973:17:6"},{"AST":{"nodeType":"YulBlock","src":"3013:291:6","statements":[{"nodeType":"YulAssignment","src":"3082:38:6","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3102:1:6"},{"name":"y","nodeType":"YulIdentifier","src":"3105:1:6"},{"name":"denominator","nodeType":"YulIdentifier","src":"3108:11:6"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"3095:6:6"},"nodeType":"YulFunctionCall","src":"3095:25:6"},"variableNames":[{"name":"remainder","nodeType":"YulIdentifier","src":"3082:9:6"}]},{"nodeType":"YulAssignment","src":"3202:41:6","value":{"arguments":[{"name":"prod1","nodeType":"YulIdentifier","src":"3215:5:6"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"3225:9:6"},{"name":"prod0","nodeType":"YulIdentifier","src":"3236:5:6"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3222:2:6"},"nodeType":"YulFunctionCall","src":"3222:20:6"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3211:3:6"},"nodeType":"YulFunctionCall","src":"3211:32:6"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"3202:5:6"}]},{"nodeType":"YulAssignment","src":"3260:30:6","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"3273:5:6"},{"name":"remainder","nodeType":"YulIdentifier","src":"3280:9:6"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3269:3:6"},"nodeType":"YulFunctionCall","src":"3269:21:6"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"3260:5:6"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":719,"isOffset":false,"isSlot":false,"src":"3108:11:6","valueSize":1},{"declaration":725,"isOffset":false,"isSlot":false,"src":"3236:5:6","valueSize":1},{"declaration":725,"isOffset":false,"isSlot":false,"src":"3260:5:6","valueSize":1},{"declaration":725,"isOffset":false,"isSlot":false,"src":"3273:5:6","valueSize":1},{"declaration":728,"isOffset":false,"isSlot":false,"src":"3202:5:6","valueSize":1},{"declaration":728,"isOffset":false,"isSlot":false,"src":"3215:5:6","valueSize":1},{"declaration":747,"isOffset":false,"isSlot":false,"src":"3082:9:6","valueSize":1},{"declaration":747,"isOffset":false,"isSlot":false,"src":"3225:9:6","valueSize":1},{"declaration":747,"isOffset":false,"isSlot":false,"src":"3280:9:6","valueSize":1},{"declaration":715,"isOffset":false,"isSlot":false,"src":"3102:1:6","valueSize":1},{"declaration":717,"isOffset":false,"isSlot":false,"src":"3105:1:6","valueSize":1}],"id":749,"nodeType":"InlineAssembly","src":"3004:300:6"},{"assignments":[751],"declarations":[{"constant":false,"id":751,"mutability":"mutable","name":"twos","nameLocation":"3619:4:6","nodeType":"VariableDeclaration","scope":832,"src":"3611:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":750,"name":"uint256","nodeType":"ElementaryTypeName","src":"3611:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":759,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":752,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":719,"src":"3626:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"~","prefix":true,"src":"3641:12:6","subExpression":{"id":753,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":719,"src":"3642:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":755,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3656:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3641:16:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":757,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3640:18:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3626:32:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3611:47:6"},{"AST":{"nodeType":"YulBlock","src":"3681:362:6","statements":[{"nodeType":"YulAssignment","src":"3746:37:6","value":{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"3765:11:6"},{"name":"twos","nodeType":"YulIdentifier","src":"3778:4:6"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3761:3:6"},"nodeType":"YulFunctionCall","src":"3761:22:6"},"variableNames":[{"name":"denominator","nodeType":"YulIdentifier","src":"3746:11:6"}]},{"nodeType":"YulAssignment","src":"3850:25:6","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"3863:5:6"},{"name":"twos","nodeType":"YulIdentifier","src":"3870:4:6"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3859:3:6"},"nodeType":"YulFunctionCall","src":"3859:16:6"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"3850:5:6"}]},{"nodeType":"YulAssignment","src":"3990:39:6","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4010:1:6","type":"","value":"0"},{"name":"twos","nodeType":"YulIdentifier","src":"4013:4:6"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4006:3:6"},"nodeType":"YulFunctionCall","src":"4006:12:6"},{"name":"twos","nodeType":"YulIdentifier","src":"4020:4:6"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4002:3:6"},"nodeType":"YulFunctionCall","src":"4002:23:6"},{"kind":"number","nodeType":"YulLiteral","src":"4027:1:6","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3998:3:6"},"nodeType":"YulFunctionCall","src":"3998:31:6"},"variableNames":[{"name":"twos","nodeType":"YulIdentifier","src":"3990:4:6"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":719,"isOffset":false,"isSlot":false,"src":"3746:11:6","valueSize":1},{"declaration":719,"isOffset":false,"isSlot":false,"src":"3765:11:6","valueSize":1},{"declaration":725,"isOffset":false,"isSlot":false,"src":"3850:5:6","valueSize":1},{"declaration":725,"isOffset":false,"isSlot":false,"src":"3863:5:6","valueSize":1},{"declaration":751,"isOffset":false,"isSlot":false,"src":"3778:4:6","valueSize":1},{"declaration":751,"isOffset":false,"isSlot":false,"src":"3870:4:6","valueSize":1},{"declaration":751,"isOffset":false,"isSlot":false,"src":"3990:4:6","valueSize":1},{"declaration":751,"isOffset":false,"isSlot":false,"src":"4013:4:6","valueSize":1},{"declaration":751,"isOffset":false,"isSlot":false,"src":"4020:4:6","valueSize":1}],"id":760,"nodeType":"InlineAssembly","src":"3672:371:6"},{"expression":{"id":765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":761,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":725,"src":"4109:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":762,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":728,"src":"4118:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":763,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":751,"src":"4126:4:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4118:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4109:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":766,"nodeType":"ExpressionStatement","src":"4109:21:6"},{"assignments":[768],"declarations":[{"constant":false,"id":768,"mutability":"mutable","name":"inverse","nameLocation":"4456:7:6","nodeType":"VariableDeclaration","scope":832,"src":"4448:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":767,"name":"uint256","nodeType":"ElementaryTypeName","src":"4448:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":775,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":769,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4467:1:6","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":770,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":719,"src":"4471:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4467:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":772,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4466:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":773,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4486:1:6","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"4466:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4448:39:6"},{"expression":{"id":782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":776,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":768,"src":"4704:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":777,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4715:1:6","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":778,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":719,"src":"4719:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":779,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":768,"src":"4733:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4719:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4715:25:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4704:36:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":783,"nodeType":"ExpressionStatement","src":"4704:36:6"},{"expression":{"id":790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":784,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":768,"src":"4773:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":785,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4784:1:6","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":786,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":719,"src":"4788:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":787,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":768,"src":"4802:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4788:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4784:25:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4773:36:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":791,"nodeType":"ExpressionStatement","src":"4773:36:6"},{"expression":{"id":798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":792,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":768,"src":"4843:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":793,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4854:1:6","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":794,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":719,"src":"4858:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":795,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":768,"src":"4872:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4858:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4854:25:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4843:36:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":799,"nodeType":"ExpressionStatement","src":"4843:36:6"},{"expression":{"id":806,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":800,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":768,"src":"4913:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":801,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4924:1:6","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":802,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":719,"src":"4928:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":803,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":768,"src":"4942:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4928:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4924:25:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4913:36:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":807,"nodeType":"ExpressionStatement","src":"4913:36:6"},{"expression":{"id":814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":808,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":768,"src":"4983:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":809,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4994:1:6","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":810,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":719,"src":"4998:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":811,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":768,"src":"5012:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4998:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4994:25:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4983:36:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":815,"nodeType":"ExpressionStatement","src":"4983:36:6"},{"expression":{"id":822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":816,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":768,"src":"5054:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":817,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5065:1:6","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":818,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":719,"src":"5069:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":819,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":768,"src":"5083:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5069:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5065:25:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5054:36:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":823,"nodeType":"ExpressionStatement","src":"5054:36:6"},{"expression":{"id":828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":824,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":722,"src":"5524:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":825,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":725,"src":"5533:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":826,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":768,"src":"5541:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5533:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5524:24:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":829,"nodeType":"ExpressionStatement","src":"5524:24:6"},{"expression":{"id":830,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":722,"src":"5569:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":723,"id":831,"nodeType":"Return","src":"5562:13:6"}]}]},"documentation":{"id":713,"nodeType":"StructuredDocumentation","src":"1357:305:6","text":" @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."},"id":834,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"1676:6:6","nodeType":"FunctionDefinition","parameters":{"id":720,"nodeType":"ParameterList","parameters":[{"constant":false,"id":715,"mutability":"mutable","name":"x","nameLocation":"1700:1:6","nodeType":"VariableDeclaration","scope":834,"src":"1692:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":714,"name":"uint256","nodeType":"ElementaryTypeName","src":"1692:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":717,"mutability":"mutable","name":"y","nameLocation":"1719:1:6","nodeType":"VariableDeclaration","scope":834,"src":"1711:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":716,"name":"uint256","nodeType":"ElementaryTypeName","src":"1711:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":719,"mutability":"mutable","name":"denominator","nameLocation":"1738:11:6","nodeType":"VariableDeclaration","scope":834,"src":"1730:19:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":718,"name":"uint256","nodeType":"ElementaryTypeName","src":"1730:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1682:73:6"},"returnParameters":{"id":723,"nodeType":"ParameterList","parameters":[{"constant":false,"id":722,"mutability":"mutable","name":"result","nameLocation":"1787:6:6","nodeType":"VariableDeclaration","scope":834,"src":"1779:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":721,"name":"uint256","nodeType":"ElementaryTypeName","src":"1779:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1778:16:6"},"scope":1486,"src":"1667:3925:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":877,"nodeType":"Block","src":"5872:189:6","statements":[{"assignments":[850],"declarations":[{"constant":false,"id":850,"mutability":"mutable","name":"result","nameLocation":"5890:6:6","nodeType":"VariableDeclaration","scope":877,"src":"5882:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":849,"name":"uint256","nodeType":"ElementaryTypeName","src":"5882:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":856,"initialValue":{"arguments":[{"id":852,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":837,"src":"5906:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":853,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":839,"src":"5909:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":854,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":841,"src":"5912:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":851,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[834,878],"referencedDeclaration":834,"src":"5899:6:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":855,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5899:25:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5882:42:6"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$628","typeString":"enum Math.Rounding"},"id":860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":857,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":844,"src":"5938:8:6","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$628","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":858,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":628,"src":"5950:8:6","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$628_$","typeString":"type(enum Math.Rounding)"}},"id":859,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5959:2:6","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":626,"src":"5950:11:6","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$628","typeString":"enum Math.Rounding"}},"src":"5938:23:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":862,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":837,"src":"5972:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":863,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":839,"src":"5975:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":864,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":841,"src":"5978:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":861,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"5965:6:6","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":865,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5965:25:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":866,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5993:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5965:29:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5938:56:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":874,"nodeType":"IfStatement","src":"5934:98:6","trueBody":{"id":873,"nodeType":"Block","src":"5996:36:6","statements":[{"expression":{"id":871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":869,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":850,"src":"6010:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":870,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6020:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6010:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":872,"nodeType":"ExpressionStatement","src":"6010:11:6"}]}},{"expression":{"id":875,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":850,"src":"6048:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":848,"id":876,"nodeType":"Return","src":"6041:13:6"}]},"documentation":{"id":835,"nodeType":"StructuredDocumentation","src":"5598:121:6","text":" @notice Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":878,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"5733:6:6","nodeType":"FunctionDefinition","parameters":{"id":845,"nodeType":"ParameterList","parameters":[{"constant":false,"id":837,"mutability":"mutable","name":"x","nameLocation":"5757:1:6","nodeType":"VariableDeclaration","scope":878,"src":"5749:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":836,"name":"uint256","nodeType":"ElementaryTypeName","src":"5749:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":839,"mutability":"mutable","name":"y","nameLocation":"5776:1:6","nodeType":"VariableDeclaration","scope":878,"src":"5768:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":838,"name":"uint256","nodeType":"ElementaryTypeName","src":"5768:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":841,"mutability":"mutable","name":"denominator","nameLocation":"5795:11:6","nodeType":"VariableDeclaration","scope":878,"src":"5787:19:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":840,"name":"uint256","nodeType":"ElementaryTypeName","src":"5787:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":844,"mutability":"mutable","name":"rounding","nameLocation":"5825:8:6","nodeType":"VariableDeclaration","scope":878,"src":"5816:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$628","typeString":"enum Math.Rounding"},"typeName":{"id":843,"nodeType":"UserDefinedTypeName","pathNode":{"id":842,"name":"Rounding","nameLocations":["5816:8:6"],"nodeType":"IdentifierPath","referencedDeclaration":628,"src":"5816:8:6"},"referencedDeclaration":628,"src":"5816:8:6","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$628","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"5739:100:6"},"returnParameters":{"id":848,"nodeType":"ParameterList","parameters":[{"constant":false,"id":847,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":878,"src":"5863:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":846,"name":"uint256","nodeType":"ElementaryTypeName","src":"5863:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5862:9:6"},"scope":1486,"src":"5724:337:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":989,"nodeType":"Block","src":"6337:1585:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":886,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":881,"src":"6351:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":887,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6356:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6351:6:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":892,"nodeType":"IfStatement","src":"6347:45:6","trueBody":{"id":891,"nodeType":"Block","src":"6359:33:6","statements":[{"expression":{"hexValue":"30","id":889,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6380:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":885,"id":890,"nodeType":"Return","src":"6373:8:6"}]}},{"assignments":[894],"declarations":[{"constant":false,"id":894,"mutability":"mutable","name":"result","nameLocation":"7079:6:6","nodeType":"VariableDeclaration","scope":989,"src":"7071:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":893,"name":"uint256","nodeType":"ElementaryTypeName","src":"7071:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":903,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":895,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7088:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":897,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":881,"src":"7099:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":896,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[1158,1194],"referencedDeclaration":1158,"src":"7094:4:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":898,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7094:7:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":899,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7105:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7094:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":901,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7093:14:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7088:19:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7071:36:6"},{"id":988,"nodeType":"UncheckedBlock","src":"7508:408:6","statements":[{"expression":{"id":913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":904,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":894,"src":"7532:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":905,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":894,"src":"7542:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":906,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":881,"src":"7551:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":907,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":894,"src":"7555:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7551:10:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7542:19:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":910,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7541:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":911,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7566:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7541:26:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7532:35:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":914,"nodeType":"ExpressionStatement","src":"7532:35:6"},{"expression":{"id":924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":915,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":894,"src":"7581:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":916,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":894,"src":"7591:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":917,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":881,"src":"7600:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":918,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":894,"src":"7604:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7600:10:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7591:19:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":921,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7590:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":922,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7615:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7590:26:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7581:35:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":925,"nodeType":"ExpressionStatement","src":"7581:35:6"},{"expression":{"id":935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":926,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":894,"src":"7630:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":934,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":927,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":894,"src":"7640:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":928,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":881,"src":"7649:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":929,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":894,"src":"7653:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7649:10:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7640:19:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":932,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7639:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":933,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7664:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7639:26:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7630:35:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":936,"nodeType":"ExpressionStatement","src":"7630:35:6"},{"expression":{"id":946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":937,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":894,"src":"7679:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":938,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":894,"src":"7689:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":939,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":881,"src":"7698:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":940,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":894,"src":"7702:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7698:10:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7689:19:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":943,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7688:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":944,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7713:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7688:26:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7679:35:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":947,"nodeType":"ExpressionStatement","src":"7679:35:6"},{"expression":{"id":957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":948,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":894,"src":"7728:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":949,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":894,"src":"7738:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":950,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":881,"src":"7747:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":951,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":894,"src":"7751:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7747:10:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7738:19:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":954,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7737:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":955,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7762:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7737:26:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7728:35:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":958,"nodeType":"ExpressionStatement","src":"7728:35:6"},{"expression":{"id":968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":959,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":894,"src":"7777:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":960,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":894,"src":"7787:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":961,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":881,"src":"7796:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":962,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":894,"src":"7800:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7796:10:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7787:19:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":965,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7786:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":966,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7811:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7786:26:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7777:35:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":969,"nodeType":"ExpressionStatement","src":"7777:35:6"},{"expression":{"id":979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":970,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":894,"src":"7826:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":971,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":894,"src":"7836:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":974,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":972,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":881,"src":"7845:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":973,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":894,"src":"7849:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7845:10:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7836:19:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":976,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7835:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":977,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7860:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7835:26:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7826:35:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":980,"nodeType":"ExpressionStatement","src":"7826:35:6"},{"expression":{"arguments":[{"id":982,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":894,"src":"7886:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":983,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":881,"src":"7894:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":984,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":894,"src":"7898:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7894:10:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":981,"name":"min","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":664,"src":"7882:3:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":986,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7882:23:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":885,"id":987,"nodeType":"Return","src":"7875:30:6"}]}]},"documentation":{"id":879,"nodeType":"StructuredDocumentation","src":"6067:208:6","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."},"id":990,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"6289:4:6","nodeType":"FunctionDefinition","parameters":{"id":882,"nodeType":"ParameterList","parameters":[{"constant":false,"id":881,"mutability":"mutable","name":"a","nameLocation":"6302:1:6","nodeType":"VariableDeclaration","scope":990,"src":"6294:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":880,"name":"uint256","nodeType":"ElementaryTypeName","src":"6294:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6293:11:6"},"returnParameters":{"id":885,"nodeType":"ParameterList","parameters":[{"constant":false,"id":884,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":990,"src":"6328:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":883,"name":"uint256","nodeType":"ElementaryTypeName","src":"6328:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6327:9:6"},"scope":1486,"src":"6280:1642:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1025,"nodeType":"Block","src":"8098:161:6","statements":[{"id":1024,"nodeType":"UncheckedBlock","src":"8108:145:6","statements":[{"assignments":[1002],"declarations":[{"constant":false,"id":1002,"mutability":"mutable","name":"result","nameLocation":"8140:6:6","nodeType":"VariableDeclaration","scope":1024,"src":"8132:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1001,"name":"uint256","nodeType":"ElementaryTypeName","src":"8132:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1006,"initialValue":{"arguments":[{"id":1004,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":993,"src":"8154:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1003,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[990,1026],"referencedDeclaration":990,"src":"8149:4:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1005,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8149:7:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8132:24:6"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1007,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1002,"src":"8177:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$628","typeString":"enum Math.Rounding"},"id":1011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1008,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":996,"src":"8187:8:6","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$628","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1009,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":628,"src":"8199:8:6","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$628_$","typeString":"type(enum Math.Rounding)"}},"id":1010,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8208:2:6","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":626,"src":"8199:11:6","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$628","typeString":"enum Math.Rounding"}},"src":"8187:23:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1012,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1002,"src":"8214:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1013,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1002,"src":"8223:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8214:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1015,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":993,"src":"8232:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8214:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8187:46:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":1019,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8240:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":1020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8187:54:6","trueExpression":{"hexValue":"31","id":1018,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8236:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":1021,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8186:56:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"8177:65:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1000,"id":1023,"nodeType":"Return","src":"8170:72:6"}]}]},"documentation":{"id":991,"nodeType":"StructuredDocumentation","src":"7928:89:6","text":" @notice Calculates sqrt(a), following the selected rounding direction."},"id":1026,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"8031:4:6","nodeType":"FunctionDefinition","parameters":{"id":997,"nodeType":"ParameterList","parameters":[{"constant":false,"id":993,"mutability":"mutable","name":"a","nameLocation":"8044:1:6","nodeType":"VariableDeclaration","scope":1026,"src":"8036:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":992,"name":"uint256","nodeType":"ElementaryTypeName","src":"8036:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":996,"mutability":"mutable","name":"rounding","nameLocation":"8056:8:6","nodeType":"VariableDeclaration","scope":1026,"src":"8047:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$628","typeString":"enum Math.Rounding"},"typeName":{"id":995,"nodeType":"UserDefinedTypeName","pathNode":{"id":994,"name":"Rounding","nameLocations":["8047:8:6"],"nodeType":"IdentifierPath","referencedDeclaration":628,"src":"8047:8:6"},"referencedDeclaration":628,"src":"8047:8:6","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$628","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"8035:30:6"},"returnParameters":{"id":1000,"nodeType":"ParameterList","parameters":[{"constant":false,"id":999,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1026,"src":"8089:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":998,"name":"uint256","nodeType":"ElementaryTypeName","src":"8089:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8088:9:6"},"scope":1486,"src":"8022:237:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1157,"nodeType":"Block","src":"8444:922:6","statements":[{"assignments":[1035],"declarations":[{"constant":false,"id":1035,"mutability":"mutable","name":"result","nameLocation":"8462:6:6","nodeType":"VariableDeclaration","scope":1157,"src":"8454:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1034,"name":"uint256","nodeType":"ElementaryTypeName","src":"8454:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1037,"initialValue":{"hexValue":"30","id":1036,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8471:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8454:18:6"},{"id":1154,"nodeType":"UncheckedBlock","src":"8482:855:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1038,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1029,"src":"8510:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":1039,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8519:3:6","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8510:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1041,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8525:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8510:16:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1052,"nodeType":"IfStatement","src":"8506:99:6","trueBody":{"id":1051,"nodeType":"Block","src":"8528:77:6","statements":[{"expression":{"id":1045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1043,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1029,"src":"8546:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":1044,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8556:3:6","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8546:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1046,"nodeType":"ExpressionStatement","src":"8546:13:6"},{"expression":{"id":1049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1047,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1035,"src":"8577:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"313238","id":1048,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8587:3:6","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8577:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1050,"nodeType":"ExpressionStatement","src":"8577:13:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1053,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1029,"src":"8622:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":1054,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8631:2:6","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8622:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1056,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8636:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8622:15:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1067,"nodeType":"IfStatement","src":"8618:96:6","trueBody":{"id":1066,"nodeType":"Block","src":"8639:75:6","statements":[{"expression":{"id":1060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1058,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1029,"src":"8657:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":1059,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8667:2:6","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8657:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1061,"nodeType":"ExpressionStatement","src":"8657:12:6"},{"expression":{"id":1064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1062,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1035,"src":"8687:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":1063,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8697:2:6","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8687:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1065,"nodeType":"ExpressionStatement","src":"8687:12:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1068,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1029,"src":"8731:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":1069,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8740:2:6","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"8731:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1071,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8745:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8731:15:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1082,"nodeType":"IfStatement","src":"8727:96:6","trueBody":{"id":1081,"nodeType":"Block","src":"8748:75:6","statements":[{"expression":{"id":1075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1073,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1029,"src":"8766:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":1074,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8776:2:6","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"8766:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1076,"nodeType":"ExpressionStatement","src":"8766:12:6"},{"expression":{"id":1079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1077,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1035,"src":"8796:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":1078,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8806:2:6","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"8796:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1080,"nodeType":"ExpressionStatement","src":"8796:12:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1083,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1029,"src":"8840:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":1084,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8849:2:6","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"8840:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1086,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8854:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8840:15:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1097,"nodeType":"IfStatement","src":"8836:96:6","trueBody":{"id":1096,"nodeType":"Block","src":"8857:75:6","statements":[{"expression":{"id":1090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1088,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1029,"src":"8875:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":1089,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8885:2:6","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"8875:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1091,"nodeType":"ExpressionStatement","src":"8875:12:6"},{"expression":{"id":1094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1092,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1035,"src":"8905:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":1093,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8915:2:6","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"8905:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1095,"nodeType":"ExpressionStatement","src":"8905:12:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1098,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1029,"src":"8949:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":1099,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8958:1:6","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"8949:10:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1101,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8962:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8949:14:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1112,"nodeType":"IfStatement","src":"8945:93:6","trueBody":{"id":1111,"nodeType":"Block","src":"8965:73:6","statements":[{"expression":{"id":1105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1103,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1029,"src":"8983:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":1104,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8993:1:6","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"8983:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1106,"nodeType":"ExpressionStatement","src":"8983:11:6"},{"expression":{"id":1109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1107,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1035,"src":"9012:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":1108,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9022:1:6","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9012:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1110,"nodeType":"ExpressionStatement","src":"9012:11:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1113,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1029,"src":"9055:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"34","id":1114,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9064:1:6","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9055:10:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9068:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9055:14:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1127,"nodeType":"IfStatement","src":"9051:93:6","trueBody":{"id":1126,"nodeType":"Block","src":"9071:73:6","statements":[{"expression":{"id":1120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1118,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1029,"src":"9089:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":1119,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9099:1:6","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9089:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1121,"nodeType":"ExpressionStatement","src":"9089:11:6"},{"expression":{"id":1124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1122,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1035,"src":"9118:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":1123,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9128:1:6","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9118:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1125,"nodeType":"ExpressionStatement","src":"9118:11:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1128,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1029,"src":"9161:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"32","id":1129,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9170:1:6","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9161:10:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9174:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9161:14:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1142,"nodeType":"IfStatement","src":"9157:93:6","trueBody":{"id":1141,"nodeType":"Block","src":"9177:73:6","statements":[{"expression":{"id":1135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1133,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1029,"src":"9195:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"32","id":1134,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9205:1:6","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9195:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1136,"nodeType":"ExpressionStatement","src":"9195:11:6"},{"expression":{"id":1139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1137,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1035,"src":"9224:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":1138,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9234:1:6","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9224:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1140,"nodeType":"ExpressionStatement","src":"9224:11:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1143,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1029,"src":"9267:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1144,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9276:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9267:10:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1146,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9280:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9267:14:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1153,"nodeType":"IfStatement","src":"9263:64:6","trueBody":{"id":1152,"nodeType":"Block","src":"9283:44:6","statements":[{"expression":{"id":1150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1148,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1035,"src":"9301:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1149,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9311:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9301:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1151,"nodeType":"ExpressionStatement","src":"9301:11:6"}]}}]},{"expression":{"id":1155,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1035,"src":"9353:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1033,"id":1156,"nodeType":"Return","src":"9346:13:6"}]},"documentation":{"id":1027,"nodeType":"StructuredDocumentation","src":"8265:113:6","text":" @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."},"id":1158,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"8392:4:6","nodeType":"FunctionDefinition","parameters":{"id":1030,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1029,"mutability":"mutable","name":"value","nameLocation":"8405:5:6","nodeType":"VariableDeclaration","scope":1158,"src":"8397:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1028,"name":"uint256","nodeType":"ElementaryTypeName","src":"8397:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8396:15:6"},"returnParameters":{"id":1033,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1032,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1158,"src":"8435:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1031,"name":"uint256","nodeType":"ElementaryTypeName","src":"8435:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8434:9:6"},"scope":1486,"src":"8383:983:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1193,"nodeType":"Block","src":"9599:165:6","statements":[{"id":1192,"nodeType":"UncheckedBlock","src":"9609:149:6","statements":[{"assignments":[1170],"declarations":[{"constant":false,"id":1170,"mutability":"mutable","name":"result","nameLocation":"9641:6:6","nodeType":"VariableDeclaration","scope":1192,"src":"9633:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1169,"name":"uint256","nodeType":"ElementaryTypeName","src":"9633:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1174,"initialValue":{"arguments":[{"id":1172,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1161,"src":"9655:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1171,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[1158,1194],"referencedDeclaration":1158,"src":"9650:4:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1173,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9650:11:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9633:28:6"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1175,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1170,"src":"9682:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$628","typeString":"enum Math.Rounding"},"id":1179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1176,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1164,"src":"9692:8:6","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$628","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1177,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":628,"src":"9704:8:6","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$628_$","typeString":"type(enum Math.Rounding)"}},"id":1178,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9713:2:6","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":626,"src":"9704:11:6","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$628","typeString":"enum Math.Rounding"}},"src":"9692:23:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1180,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9719:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":1181,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1170,"src":"9724:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9719:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1183,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1161,"src":"9733:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9719:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9692:46:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":1187,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9745:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":1188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9692:54:6","trueExpression":{"hexValue":"31","id":1186,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9741:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":1189,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9691:56:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"9682:65:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1168,"id":1191,"nodeType":"Return","src":"9675:72:6"}]}]},"documentation":{"id":1159,"nodeType":"StructuredDocumentation","src":"9372:142:6","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":1194,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"9528:4:6","nodeType":"FunctionDefinition","parameters":{"id":1165,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1161,"mutability":"mutable","name":"value","nameLocation":"9541:5:6","nodeType":"VariableDeclaration","scope":1194,"src":"9533:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1160,"name":"uint256","nodeType":"ElementaryTypeName","src":"9533:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1164,"mutability":"mutable","name":"rounding","nameLocation":"9557:8:6","nodeType":"VariableDeclaration","scope":1194,"src":"9548:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$628","typeString":"enum Math.Rounding"},"typeName":{"id":1163,"nodeType":"UserDefinedTypeName","pathNode":{"id":1162,"name":"Rounding","nameLocations":["9548:8:6"],"nodeType":"IdentifierPath","referencedDeclaration":628,"src":"9548:8:6"},"referencedDeclaration":628,"src":"9548:8:6","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$628","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"9532:34:6"},"returnParameters":{"id":1168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1167,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1194,"src":"9590:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1166,"name":"uint256","nodeType":"ElementaryTypeName","src":"9590:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9589:9:6"},"scope":1486,"src":"9519:245:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1322,"nodeType":"Block","src":"9951:828:6","statements":[{"assignments":[1203],"declarations":[{"constant":false,"id":1203,"mutability":"mutable","name":"result","nameLocation":"9969:6:6","nodeType":"VariableDeclaration","scope":1322,"src":"9961:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1202,"name":"uint256","nodeType":"ElementaryTypeName","src":"9961:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1205,"initialValue":{"hexValue":"30","id":1204,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9978:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"9961:18:6"},{"id":1319,"nodeType":"UncheckedBlock","src":"9989:761:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1206,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1197,"src":"10017:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":1209,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1207,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10026:2:6","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":1208,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10030:2:6","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10026:6:6","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10017:15:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1222,"nodeType":"IfStatement","src":"10013:99:6","trueBody":{"id":1221,"nodeType":"Block","src":"10034:78:6","statements":[{"expression":{"id":1215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1211,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1197,"src":"10052:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":1214,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10061:2:6","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":1213,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10065:2:6","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10061:6:6","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10052:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1216,"nodeType":"ExpressionStatement","src":"10052:15:6"},{"expression":{"id":1219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1217,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1203,"src":"10085:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":1218,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10095:2:6","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10085:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1220,"nodeType":"ExpressionStatement","src":"10085:12:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1223,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1197,"src":"10129:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":1226,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1224,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10138:2:6","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":1225,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10142:2:6","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10138:6:6","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10129:15:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1239,"nodeType":"IfStatement","src":"10125:99:6","trueBody":{"id":1238,"nodeType":"Block","src":"10146:78:6","statements":[{"expression":{"id":1232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1228,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1197,"src":"10164:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":1231,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1229,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10173:2:6","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":1230,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10177:2:6","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10173:6:6","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10164:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1233,"nodeType":"ExpressionStatement","src":"10164:15:6"},{"expression":{"id":1236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1234,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1203,"src":"10197:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":1235,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10207:2:6","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10197:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1237,"nodeType":"ExpressionStatement","src":"10197:12:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1240,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1197,"src":"10241:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":1243,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1241,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10250:2:6","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":1242,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10254:2:6","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10250:6:6","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10241:15:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1256,"nodeType":"IfStatement","src":"10237:99:6","trueBody":{"id":1255,"nodeType":"Block","src":"10258:78:6","statements":[{"expression":{"id":1249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1245,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1197,"src":"10276:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":1248,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1246,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10285:2:6","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":1247,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10289:2:6","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10285:6:6","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10276:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1250,"nodeType":"ExpressionStatement","src":"10276:15:6"},{"expression":{"id":1253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1251,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1203,"src":"10309:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":1252,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10319:2:6","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10309:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1254,"nodeType":"ExpressionStatement","src":"10309:12:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1257,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1197,"src":"10353:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":1260,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10362:2:6","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":1259,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10366:1:6","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10362:5:6","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10353:14:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1273,"nodeType":"IfStatement","src":"10349:96:6","trueBody":{"id":1272,"nodeType":"Block","src":"10369:76:6","statements":[{"expression":{"id":1266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1262,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1197,"src":"10387:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":1265,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1263,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10396:2:6","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":1264,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10400:1:6","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10396:5:6","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10387:14:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1267,"nodeType":"ExpressionStatement","src":"10387:14:6"},{"expression":{"id":1270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1268,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1203,"src":"10419:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":1269,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10429:1:6","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10419:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1271,"nodeType":"ExpressionStatement","src":"10419:11:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1274,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1197,"src":"10462:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":1277,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10471:2:6","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":1276,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10475:1:6","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10471:5:6","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10462:14:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1290,"nodeType":"IfStatement","src":"10458:96:6","trueBody":{"id":1289,"nodeType":"Block","src":"10478:76:6","statements":[{"expression":{"id":1283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1279,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1197,"src":"10496:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":1282,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1280,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10505:2:6","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":1281,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10509:1:6","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10505:5:6","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10496:14:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1284,"nodeType":"ExpressionStatement","src":"10496:14:6"},{"expression":{"id":1287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1285,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1203,"src":"10528:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":1286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10538:1:6","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10528:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1288,"nodeType":"ExpressionStatement","src":"10528:11:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1291,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1197,"src":"10571:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":1294,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1292,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10580:2:6","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":1293,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10584:1:6","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10580:5:6","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10571:14:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1307,"nodeType":"IfStatement","src":"10567:96:6","trueBody":{"id":1306,"nodeType":"Block","src":"10587:76:6","statements":[{"expression":{"id":1300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1296,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1197,"src":"10605:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":1299,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1297,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10614:2:6","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":1298,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10618:1:6","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10614:5:6","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10605:14:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1301,"nodeType":"ExpressionStatement","src":"10605:14:6"},{"expression":{"id":1304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1302,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1203,"src":"10637:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":1303,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10647:1:6","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10637:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1305,"nodeType":"ExpressionStatement","src":"10637:11:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1308,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1197,"src":"10680:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":1311,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1309,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10689:2:6","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":1310,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10693:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10689:5:6","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"10680:14:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1318,"nodeType":"IfStatement","src":"10676:64:6","trueBody":{"id":1317,"nodeType":"Block","src":"10696:44:6","statements":[{"expression":{"id":1315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1313,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1203,"src":"10714:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1314,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10724:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10714:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1316,"nodeType":"ExpressionStatement","src":"10714:11:6"}]}}]},{"expression":{"id":1320,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1203,"src":"10766:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1201,"id":1321,"nodeType":"Return","src":"10759:13:6"}]},"documentation":{"id":1195,"nodeType":"StructuredDocumentation","src":"9770:114:6","text":" @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."},"id":1323,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"9898:5:6","nodeType":"FunctionDefinition","parameters":{"id":1198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1197,"mutability":"mutable","name":"value","nameLocation":"9912:5:6","nodeType":"VariableDeclaration","scope":1323,"src":"9904:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1196,"name":"uint256","nodeType":"ElementaryTypeName","src":"9904:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9903:15:6"},"returnParameters":{"id":1201,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1200,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1323,"src":"9942:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1199,"name":"uint256","nodeType":"ElementaryTypeName","src":"9942:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9941:9:6"},"scope":1486,"src":"9889:890:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1358,"nodeType":"Block","src":"11014:165:6","statements":[{"id":1357,"nodeType":"UncheckedBlock","src":"11024:149:6","statements":[{"assignments":[1335],"declarations":[{"constant":false,"id":1335,"mutability":"mutable","name":"result","nameLocation":"11056:6:6","nodeType":"VariableDeclaration","scope":1357,"src":"11048:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1334,"name":"uint256","nodeType":"ElementaryTypeName","src":"11048:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1339,"initialValue":{"arguments":[{"id":1337,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1326,"src":"11071:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1336,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[1323,1359],"referencedDeclaration":1323,"src":"11065:5:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1338,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11065:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11048:29:6"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1340,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1335,"src":"11098:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$628","typeString":"enum Math.Rounding"},"id":1344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1341,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1329,"src":"11108:8:6","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$628","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1342,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":628,"src":"11120:8:6","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$628_$","typeString":"type(enum Math.Rounding)"}},"id":1343,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11129:2:6","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":626,"src":"11120:11:6","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$628","typeString":"enum Math.Rounding"}},"src":"11108:23:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1345,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11135:2:6","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":1346,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1335,"src":"11139:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11135:10:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1348,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1326,"src":"11148:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11135:18:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11108:45:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":1352,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11160:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":1353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"11108:53:6","trueExpression":{"hexValue":"31","id":1351,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11156:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":1354,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11107:55:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11098:64:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1333,"id":1356,"nodeType":"Return","src":"11091:71:6"}]}]},"documentation":{"id":1324,"nodeType":"StructuredDocumentation","src":"10785:143:6","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":1359,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"10942:5:6","nodeType":"FunctionDefinition","parameters":{"id":1330,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1326,"mutability":"mutable","name":"value","nameLocation":"10956:5:6","nodeType":"VariableDeclaration","scope":1359,"src":"10948:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1325,"name":"uint256","nodeType":"ElementaryTypeName","src":"10948:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1329,"mutability":"mutable","name":"rounding","nameLocation":"10972:8:6","nodeType":"VariableDeclaration","scope":1359,"src":"10963:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$628","typeString":"enum Math.Rounding"},"typeName":{"id":1328,"nodeType":"UserDefinedTypeName","pathNode":{"id":1327,"name":"Rounding","nameLocations":["10963:8:6"],"nodeType":"IdentifierPath","referencedDeclaration":628,"src":"10963:8:6"},"referencedDeclaration":628,"src":"10963:8:6","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$628","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"10947:34:6"},"returnParameters":{"id":1333,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1332,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1359,"src":"11005:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1331,"name":"uint256","nodeType":"ElementaryTypeName","src":"11005:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11004:9:6"},"scope":1486,"src":"10933:246:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1445,"nodeType":"Block","src":"11493:600:6","statements":[{"assignments":[1368],"declarations":[{"constant":false,"id":1368,"mutability":"mutable","name":"result","nameLocation":"11511:6:6","nodeType":"VariableDeclaration","scope":1445,"src":"11503:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1367,"name":"uint256","nodeType":"ElementaryTypeName","src":"11503:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1370,"initialValue":{"hexValue":"30","id":1369,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11520:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11503:18:6"},{"id":1442,"nodeType":"UncheckedBlock","src":"11531:533:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1371,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1362,"src":"11559:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":1372,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11568:3:6","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11559:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1374,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11574:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11559:16:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1385,"nodeType":"IfStatement","src":"11555:98:6","trueBody":{"id":1384,"nodeType":"Block","src":"11577:76:6","statements":[{"expression":{"id":1378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1376,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1362,"src":"11595:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":1377,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11605:3:6","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11595:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1379,"nodeType":"ExpressionStatement","src":"11595:13:6"},{"expression":{"id":1382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1380,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1368,"src":"11626:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":1381,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11636:2:6","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11626:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1383,"nodeType":"ExpressionStatement","src":"11626:12:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1386,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1362,"src":"11670:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":1387,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11679:2:6","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11670:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1389,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11684:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11670:15:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1400,"nodeType":"IfStatement","src":"11666:95:6","trueBody":{"id":1399,"nodeType":"Block","src":"11687:74:6","statements":[{"expression":{"id":1393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1391,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1362,"src":"11705:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":1392,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11715:2:6","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11705:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1394,"nodeType":"ExpressionStatement","src":"11705:12:6"},{"expression":{"id":1397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1395,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1368,"src":"11735:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":1396,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11745:1:6","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"11735:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1398,"nodeType":"ExpressionStatement","src":"11735:11:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1401,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1362,"src":"11778:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":1402,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11787:2:6","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11778:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1404,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11792:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11778:15:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1415,"nodeType":"IfStatement","src":"11774:95:6","trueBody":{"id":1414,"nodeType":"Block","src":"11795:74:6","statements":[{"expression":{"id":1408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1406,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1362,"src":"11813:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":1407,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11823:2:6","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11813:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1409,"nodeType":"ExpressionStatement","src":"11813:12:6"},{"expression":{"id":1412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1410,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1368,"src":"11843:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":1411,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11853:1:6","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"11843:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1413,"nodeType":"ExpressionStatement","src":"11843:11:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1416,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1362,"src":"11886:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":1417,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11895:2:6","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11886:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1419,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11900:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11886:15:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1430,"nodeType":"IfStatement","src":"11882:95:6","trueBody":{"id":1429,"nodeType":"Block","src":"11903:74:6","statements":[{"expression":{"id":1423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1421,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1362,"src":"11921:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":1422,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11931:2:6","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11921:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1424,"nodeType":"ExpressionStatement","src":"11921:12:6"},{"expression":{"id":1427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1425,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1368,"src":"11951:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":1426,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11961:1:6","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"11951:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1428,"nodeType":"ExpressionStatement","src":"11951:11:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1431,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1362,"src":"11994:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":1432,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12003:1:6","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"11994:10:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1434,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12007:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11994:14:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1441,"nodeType":"IfStatement","src":"11990:64:6","trueBody":{"id":1440,"nodeType":"Block","src":"12010:44:6","statements":[{"expression":{"id":1438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1436,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1368,"src":"12028:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1437,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12038:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12028:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1439,"nodeType":"ExpressionStatement","src":"12028:11:6"}]}}]},{"expression":{"id":1443,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1368,"src":"12080:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1366,"id":1444,"nodeType":"Return","src":"12073:13:6"}]},"documentation":{"id":1360,"nodeType":"StructuredDocumentation","src":"11185:240:6","text":" @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":1446,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"11439:6:6","nodeType":"FunctionDefinition","parameters":{"id":1363,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1362,"mutability":"mutable","name":"value","nameLocation":"11454:5:6","nodeType":"VariableDeclaration","scope":1446,"src":"11446:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1361,"name":"uint256","nodeType":"ElementaryTypeName","src":"11446:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11445:15:6"},"returnParameters":{"id":1366,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1365,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1446,"src":"11484:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1364,"name":"uint256","nodeType":"ElementaryTypeName","src":"11484:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11483:9:6"},"scope":1486,"src":"11430:663:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1484,"nodeType":"Block","src":"12329:173:6","statements":[{"id":1483,"nodeType":"UncheckedBlock","src":"12339:157:6","statements":[{"assignments":[1458],"declarations":[{"constant":false,"id":1458,"mutability":"mutable","name":"result","nameLocation":"12371:6:6","nodeType":"VariableDeclaration","scope":1483,"src":"12363:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1457,"name":"uint256","nodeType":"ElementaryTypeName","src":"12363:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1462,"initialValue":{"arguments":[{"id":1460,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1449,"src":"12387:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1459,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[1446,1485],"referencedDeclaration":1446,"src":"12380:6:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1461,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12380:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12363:30:6"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1463,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1458,"src":"12414:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$628","typeString":"enum Math.Rounding"},"id":1467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1464,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1452,"src":"12424:8:6","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$628","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1465,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":628,"src":"12436:8:6","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$628_$","typeString":"type(enum Math.Rounding)"}},"id":1466,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12445:2:6","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":626,"src":"12436:11:6","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$628","typeString":"enum Math.Rounding"}},"src":"12424:23:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1468,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12451:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1469,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1458,"src":"12457:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"38","id":1470,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12466:1:6","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12457:10:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1472,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12456:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12451:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1474,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1449,"src":"12471:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12451:25:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12424:52:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":1478,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12483:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":1479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"12424:60:6","trueExpression":{"hexValue":"31","id":1477,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12479:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":1480,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12423:62:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12414:71:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1456,"id":1482,"nodeType":"Return","src":"12407:78:6"}]}]},"documentation":{"id":1447,"nodeType":"StructuredDocumentation","src":"12099:143:6","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":1485,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"12256:6:6","nodeType":"FunctionDefinition","parameters":{"id":1453,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1449,"mutability":"mutable","name":"value","nameLocation":"12271:5:6","nodeType":"VariableDeclaration","scope":1485,"src":"12263:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1448,"name":"uint256","nodeType":"ElementaryTypeName","src":"12263:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1452,"mutability":"mutable","name":"rounding","nameLocation":"12287:8:6","nodeType":"VariableDeclaration","scope":1485,"src":"12278:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$628","typeString":"enum Math.Rounding"},"typeName":{"id":1451,"nodeType":"UserDefinedTypeName","pathNode":{"id":1450,"name":"Rounding","nameLocations":["12278:8:6"],"nodeType":"IdentifierPath","referencedDeclaration":628,"src":"12278:8:6"},"referencedDeclaration":628,"src":"12278:8:6","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$628","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"12262:34:6"},"returnParameters":{"id":1456,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1455,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1485,"src":"12320:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1454,"name":"uint256","nodeType":"ElementaryTypeName","src":"12320:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12319:9:6"},"scope":1486,"src":"12247:255:6","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1487,"src":"202:12302:6","usedErrors":[]}],"src":"103:12402:6"},"id":6},"contracts/AccessControl/ERC165.sol":{"ast":{"absolutePath":"contracts/AccessControl/ERC165.sol","exportedSymbols":{"ERC165":[1542],"IERC165":[1594]},"id":1543,"nodeType":"SourceUnit","nodes":[{"id":1488,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"0:23:7"},{"absolutePath":"contracts/AccessControl/IERC165.sol","file":"./IERC165.sol","id":1489,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1543,"sourceUnit":1595,"src":"25:23:7","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1491,"name":"IERC165","nameLocations":["241:7:7"],"nodeType":"IdentifierPath","referencedDeclaration":1594,"src":"241:7:7"},"id":1492,"nodeType":"InheritanceSpecifier","src":"241:7:7"}],"canonicalName":"ERC165","contractDependencies":[],"contractKind":"contract","documentation":{"id":1490,"nodeType":"StructuredDocumentation","src":"50:171:7","text":" @dev Implementation of the {IERC165} interface.\n Contracts may inherit from this and call {_registerInterface} to declare\n their support of an interface."},"fullyImplemented":true,"id":1542,"linearizedBaseContracts":[1542,1594],"name":"ERC165","nameLocation":"231:6:7","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1495,"mutability":"constant","name":"_INTERFACE_ID_ERC165","nameLocation":"362:20:7","nodeType":"VariableDeclaration","scope":1542,"src":"338:57:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1493,"name":"bytes4","nodeType":"ElementaryTypeName","src":"338:6:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"value":{"hexValue":"30783031666663396137","id":1494,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"385:10:7","typeDescriptions":{"typeIdentifier":"t_rational_33540519_by_1","typeString":"int_const 33540519"},"value":"0x01ffc9a7"},"visibility":"private"},{"constant":false,"documentation":{"id":1496,"nodeType":"StructuredDocumentation","src":"402:82:7","text":" @dev Mapping of interface ids to whether or not it's supported."},"id":1500,"mutability":"mutable","name":"_supportedInterfaces","nameLocation":"521:20:7","nodeType":"VariableDeclaration","scope":1542,"src":"489:52:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes4_$_t_bool_$","typeString":"mapping(bytes4 => bool)"},"typeName":{"id":1499,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1497,"name":"bytes4","nodeType":"ElementaryTypeName","src":"497:6:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"Mapping","src":"489:23:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes4_$_t_bool_$","typeString":"mapping(bytes4 => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1498,"name":"bool","nodeType":"ElementaryTypeName","src":"507:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"private"},{"body":{"id":1507,"nodeType":"Block","src":"563:193:7","statements":[{"expression":{"arguments":[{"id":1504,"name":"_INTERFACE_ID_ERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1495,"src":"728:20:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":1503,"name":"_registerInterface","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1541,"src":"709:18:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes4_$returns$__$","typeString":"function (bytes4)"}},"id":1505,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"709:40:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1506,"nodeType":"ExpressionStatement","src":"709:40:7"}]},"id":1508,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1501,"nodeType":"ParameterList","parameters":[],"src":"560:2:7"},"returnParameters":{"id":1502,"nodeType":"ParameterList","parameters":[],"src":"563:0:7"},"scope":1542,"src":"548:208:7","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[1593],"body":{"id":1520,"nodeType":"Block","src":"982:57:7","statements":[{"expression":{"baseExpression":{"id":1516,"name":"_supportedInterfaces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1500,"src":"999:20:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes4_$_t_bool_$","typeString":"mapping(bytes4 => bool)"}},"id":1518,"indexExpression":{"id":1517,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1511,"src":"1020:11:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"999:33:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1515,"id":1519,"nodeType":"Return","src":"992:40:7"}]},"documentation":{"id":1509,"nodeType":"StructuredDocumentation","src":"762:139:7","text":" @dev See {IERC165-supportsInterface}.\n Time complexity O(1), guaranteed to always use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":1521,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"915:17:7","nodeType":"FunctionDefinition","parameters":{"id":1512,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1511,"mutability":"mutable","name":"interfaceId","nameLocation":"940:11:7","nodeType":"VariableDeclaration","scope":1521,"src":"933:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1510,"name":"bytes4","nodeType":"ElementaryTypeName","src":"933:6:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"932:20:7"},"returnParameters":{"id":1515,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1514,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1521,"src":"976:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1513,"name":"bool","nodeType":"ElementaryTypeName","src":"976:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"975:6:7"},"scope":1542,"src":"906:133:7","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":1540,"nodeType":"Block","src":"1490:133:7","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1528,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1524,"src":"1508:11:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30786666666666666666","id":1529,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1523:10:7","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xffffffff"},"src":"1508:25:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433136353a20696e76616c696420696e74657266616365206964","id":1531,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1535:30:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_282912c0dfceceb28d77d0333f496b83948f9ba5b3154358a8b140b849289dee","typeString":"literal_string \"ERC165: invalid interface id\""},"value":"ERC165: invalid interface id"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_282912c0dfceceb28d77d0333f496b83948f9ba5b3154358a8b140b849289dee","typeString":"literal_string \"ERC165: invalid interface id\""}],"id":1527,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1500:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1532,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1500:66:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1533,"nodeType":"ExpressionStatement","src":"1500:66:7"},{"expression":{"id":1538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1534,"name":"_supportedInterfaces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1500,"src":"1576:20:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes4_$_t_bool_$","typeString":"mapping(bytes4 => bool)"}},"id":1536,"indexExpression":{"id":1535,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1524,"src":"1597:11:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1576:33:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":1537,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1612:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"1576:40:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1539,"nodeType":"ExpressionStatement","src":"1576:40:7"}]},"documentation":{"id":1522,"nodeType":"StructuredDocumentation","src":"1045:383:7","text":" @dev Registers the contract as an implementer of the interface defined by\n `interfaceId`. Support of the actual ERC165 interface is automatic and\n registering its interface id is not required.\n See {IERC165-supportsInterface}.\n Requirements:\n - `interfaceId` cannot be the ERC165 invalid interface (`0xffffffff`)."},"id":1541,"implemented":true,"kind":"function","modifiers":[],"name":"_registerInterface","nameLocation":"1442:18:7","nodeType":"FunctionDefinition","parameters":{"id":1525,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1524,"mutability":"mutable","name":"interfaceId","nameLocation":"1468:11:7","nodeType":"VariableDeclaration","scope":1541,"src":"1461:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1523,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1461:6:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1460:20:7"},"returnParameters":{"id":1526,"nodeType":"ParameterList","parameters":[],"src":"1490:0:7"},"scope":1542,"src":"1433:190:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":1543,"src":"222:1403:7","usedErrors":[]}],"src":"0:1626:7"},"id":7},"contracts/AccessControl/ERC165A.sol":{"ast":{"absolutePath":"contracts/AccessControl/ERC165A.sol","exportedSymbols":{"ERC165A":[1582]},"id":1583,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1544,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"33:23:8"},{"abstract":true,"baseContracts":[],"canonicalName":"ERC165A","contractDependencies":[],"contractKind":"contract","documentation":{"id":1545,"nodeType":"StructuredDocumentation","src":"58:171:8","text":" @dev Implementation of the {IERC165} interface.\n Contracts may inherit from this and call {_registerInterface} to declare\n their support of an interface."},"fullyImplemented":true,"id":1582,"linearizedBaseContracts":[1582],"name":"ERC165A","nameLocation":"248:7:8","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1548,"mutability":"constant","name":"_INTERFACE_ID_ERC165","nameLocation":"369:20:8","nodeType":"VariableDeclaration","scope":1582,"src":"345:57:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1546,"name":"bytes4","nodeType":"ElementaryTypeName","src":"345:6:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"value":{"hexValue":"30783031666663396137","id":1547,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"392:10:8","typeDescriptions":{"typeIdentifier":"t_rational_33540519_by_1","typeString":"int_const 33540519"},"value":"0x01ffc9a7"},"visibility":"private"},{"constant":false,"documentation":{"id":1549,"nodeType":"StructuredDocumentation","src":"409:82:8","text":" @dev Mapping of interface ids to whether or not it's supported."},"id":1553,"mutability":"mutable","name":"_supportedInterfaces","nameLocation":"528:20:8","nodeType":"VariableDeclaration","scope":1582,"src":"496:52:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes4_$_t_bool_$","typeString":"mapping(bytes4 => bool)"},"typeName":{"id":1552,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1550,"name":"bytes4","nodeType":"ElementaryTypeName","src":"504:6:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"Mapping","src":"496:23:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes4_$_t_bool_$","typeString":"mapping(bytes4 => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1551,"name":"bool","nodeType":"ElementaryTypeName","src":"514:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"private"},{"body":{"id":1560,"nodeType":"Block","src":"579:193:8","statements":[{"expression":{"arguments":[{"id":1557,"name":"_INTERFACE_ID_ERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1548,"src":"744:20:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":1556,"name":"_registerInterface","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1581,"src":"725:18:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes4_$returns$__$","typeString":"function (bytes4)"}},"id":1558,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"725:40:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1559,"nodeType":"ExpressionStatement","src":"725:40:8"}]},"id":1561,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1554,"nodeType":"ParameterList","parameters":[],"src":"567:2:8"},"returnParameters":{"id":1555,"nodeType":"ParameterList","parameters":[],"src":"579:0:8"},"scope":1582,"src":"555:217:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1580,"nodeType":"Block","src":"1545:133:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1568,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1564,"src":"1563:11:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30786666666666666666","id":1569,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1578:10:8","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xffffffff"},"src":"1563:25:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433136353a20696e76616c696420696e74657266616365206964","id":1571,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1590:30:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_282912c0dfceceb28d77d0333f496b83948f9ba5b3154358a8b140b849289dee","typeString":"literal_string \"ERC165: invalid interface id\""},"value":"ERC165: invalid interface id"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_282912c0dfceceb28d77d0333f496b83948f9ba5b3154358a8b140b849289dee","typeString":"literal_string \"ERC165: invalid interface id\""}],"id":1567,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1555:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1572,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1555:66:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1573,"nodeType":"ExpressionStatement","src":"1555:66:8"},{"expression":{"id":1578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1574,"name":"_supportedInterfaces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1553,"src":"1631:20:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes4_$_t_bool_$","typeString":"mapping(bytes4 => bool)"}},"id":1576,"indexExpression":{"id":1575,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1564,"src":"1652:11:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1631:33:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":1577,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1667:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"1631:40:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1579,"nodeType":"ExpressionStatement","src":"1631:40:8"}]},"documentation":{"id":1562,"nodeType":"StructuredDocumentation","src":"1092:383:8","text":" @dev Registers the contract as an implementer of the interface defined by\n `interfaceId`. Support of the actual ERC165 interface is automatic and\n registering its interface id is not required.\n See {IERC165-supportsInterface}.\n Requirements:\n - `interfaceId` cannot be the ERC165 invalid interface (`0xffffffff`)."},"id":1581,"implemented":true,"kind":"function","modifiers":[],"name":"_registerInterface","nameLocation":"1489:18:8","nodeType":"FunctionDefinition","parameters":{"id":1565,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1564,"mutability":"mutable","name":"interfaceId","nameLocation":"1515:11:8","nodeType":"VariableDeclaration","scope":1581,"src":"1508:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1563,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1508:6:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1507:20:8"},"returnParameters":{"id":1566,"nodeType":"ParameterList","parameters":[],"src":"1545:0:8"},"scope":1582,"src":"1480:198:8","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1583,"src":"230:1450:8","usedErrors":[]}],"src":"33:1647:8"},"id":8},"contracts/AccessControl/IERC165.sol":{"ast":{"absolutePath":"contracts/AccessControl/IERC165.sol","exportedSymbols":{"IERC165":[1594]},"id":1595,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1584,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"33:23:9"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":1585,"nodeType":"StructuredDocumentation","src":"58:279:9","text":" @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":1594,"linearizedBaseContracts":[1594],"name":"IERC165","nameLocation":"348:7:9","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1586,"nodeType":"StructuredDocumentation","src":"362:340:9","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":1593,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"716:17:9","nodeType":"FunctionDefinition","parameters":{"id":1589,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1588,"mutability":"mutable","name":"interfaceId","nameLocation":"741:11:9","nodeType":"VariableDeclaration","scope":1593,"src":"734:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1587,"name":"bytes4","nodeType":"ElementaryTypeName","src":"734:6:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"733:20:9"},"returnParameters":{"id":1592,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1591,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1593,"src":"777:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1590,"name":"bool","nodeType":"ElementaryTypeName","src":"777:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"776:6:9"},"scope":1594,"src":"707:76:9","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1595,"src":"338:447:9","usedErrors":[]}],"src":"33:752:9"},"id":9},"contracts/dao/DAOCommitteeProxyV1.sol":{"ast":{"absolutePath":"contracts/dao/DAOCommitteeProxyV1.sol","exportedSymbols":{},"id":1596,"license":"MIT","nodeType":"SourceUnit","nodes":[],"src":"3883:0:10"},"id":10},"contracts/dao/StorageStateCommittee.sol":{"ast":{"absolutePath":"contracts/dao/StorageStateCommittee.sol","exportedSymbols":{"ICandidate":[1912],"ICandidateFactory":[1930],"IDAOAgendaManager":[2211],"IDAOVault":[2534],"ILayer2Registry":[2588],"ISeigManager":[2752],"IStorageStateCommittee":[2863],"StorageStateCommittee":[1817]},"id":1818,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1597,"literals":["solidity","^","0.8",".17"],"nodeType":"PragmaDirective","src":"32:24:11"},{"id":1598,"literals":["abicoder","v2"],"nodeType":"PragmaDirective","src":"57:19:11"},{"absolutePath":"contracts/interfaces/IStorageStateCommittee.sol","file":"../interfaces/IStorageStateCommittee.sol","id":1600,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1818,"sourceUnit":2864,"src":"78:82:11","symbolAliases":[{"foreign":{"id":1599,"name":"IStorageStateCommittee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2863,"src":"87:22:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/interfaces/ICandidateFactory.sol","file":"../interfaces/ICandidateFactory.sol","id":1602,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1818,"sourceUnit":1931,"src":"161:72:11","symbolAliases":[{"foreign":{"id":1601,"name":"ICandidateFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1930,"src":"170:17:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/interfaces/ILayer2Registry.sol","file":"../interfaces/ILayer2Registry.sol","id":1604,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1818,"sourceUnit":2589,"src":"234:68:11","symbolAliases":[{"foreign":{"id":1603,"name":"ILayer2Registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2588,"src":"243:15:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/interfaces/ISeigManager.sol","file":"../interfaces/ISeigManager.sol","id":1606,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1818,"sourceUnit":2753,"src":"303:62:11","symbolAliases":[{"foreign":{"id":1605,"name":"ISeigManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2752,"src":"312:12:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/interfaces/IDAOAgendaManager.sol","file":"../interfaces/IDAOAgendaManager.sol","id":1608,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1818,"sourceUnit":2212,"src":"366:72:11","symbolAliases":[{"foreign":{"id":1607,"name":"IDAOAgendaManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2211,"src":"375:17:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/interfaces/IDAOVault.sol","file":"../interfaces/IDAOVault.sol","id":1610,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1818,"sourceUnit":2535,"src":"439:56:11","symbolAliases":[{"foreign":{"id":1609,"name":"IDAOVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2534,"src":"448:9:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/interfaces/ICandidate.sol","file":"../interfaces/ICandidate.sol","id":1612,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1818,"sourceUnit":1913,"src":"496:58:11","symbolAliases":[{"foreign":{"id":1611,"name":"ICandidate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1912,"src":"505:10:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1613,"name":"IStorageStateCommittee","nameLocations":["590:22:11"],"nodeType":"IdentifierPath","referencedDeclaration":2863,"src":"590:22:11"},"id":1614,"nodeType":"InheritanceSpecifier","src":"590:22:11"}],"canonicalName":"StorageStateCommittee","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":1817,"linearizedBaseContracts":[1817,2863],"name":"StorageStateCommittee","nameLocation":"565:21:11","nodeType":"ContractDefinition","nodes":[{"canonicalName":"StorageStateCommittee.AgendaStatus","id":1622,"members":[{"id":1615,"name":"NONE","nameLocation":"639:4:11","nodeType":"EnumValue","src":"639:4:11"},{"id":1616,"name":"NOTICE","nameLocation":"645:6:11","nodeType":"EnumValue","src":"645:6:11"},{"id":1617,"name":"VOTING","nameLocation":"653:6:11","nodeType":"EnumValue","src":"653:6:11"},{"id":1618,"name":"EXEC","nameLocation":"661:4:11","nodeType":"EnumValue","src":"661:4:11"},{"id":1619,"name":"ENDED","nameLocation":"667:5:11","nodeType":"EnumValue","src":"667:5:11"},{"id":1620,"name":"PENDING","nameLocation":"674:7:11","nodeType":"EnumValue","src":"674:7:11"},{"id":1621,"name":"RISK","nameLocation":"683:4:11","nodeType":"EnumValue","src":"683:4:11"}],"name":"AgendaStatus","nameLocation":"624:12:11","nodeType":"EnumDefinition","src":"619:70:11"},{"canonicalName":"StorageStateCommittee.AgendaResult","id":1627,"members":[{"id":1623,"name":"UNDEFINED","nameLocation":"714:9:11","nodeType":"EnumValue","src":"714:9:11"},{"id":1624,"name":"ACCEPT","nameLocation":"725:6:11","nodeType":"EnumValue","src":"725:6:11"},{"id":1625,"name":"REJECT","nameLocation":"733:6:11","nodeType":"EnumValue","src":"733:6:11"},{"id":1626,"name":"DISMISS","nameLocation":"741:7:11","nodeType":"EnumValue","src":"741:7:11"}],"name":"AgendaResult","nameLocation":"699:12:11","nodeType":"EnumDefinition","src":"694:56:11"},{"baseFunctions":[2781],"constant":false,"functionSelector":"cc48b947","id":1630,"mutability":"mutable","name":"ton","nameLocation":"780:3:11","nodeType":"VariableDeclaration","overrides":{"id":1629,"nodeType":"OverrideSpecifier","overrides":[],"src":"771:8:11"},"scope":1817,"src":"756:27:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1628,"name":"address","nodeType":"ElementaryTypeName","src":"756:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"baseFunctions":[2787],"constant":false,"functionSelector":"5903bd6c","id":1634,"mutability":"mutable","name":"daoVault","nameLocation":"815:8:11","nodeType":"VariableDeclaration","overrides":{"id":1633,"nodeType":"OverrideSpecifier","overrides":[],"src":"806:8:11"},"scope":1817,"src":"789:34:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IDAOVault_$2534","typeString":"contract IDAOVault"},"typeName":{"id":1632,"nodeType":"UserDefinedTypeName","pathNode":{"id":1631,"name":"IDAOVault","nameLocations":["789:9:11"],"nodeType":"IdentifierPath","referencedDeclaration":2534,"src":"789:9:11"},"referencedDeclaration":2534,"src":"789:9:11","typeDescriptions":{"typeIdentifier":"t_contract$_IDAOVault_$2534","typeString":"contract IDAOVault"}},"visibility":"public"},{"baseFunctions":[2793],"constant":false,"functionSelector":"27fd92fd","id":1638,"mutability":"mutable","name":"agendaManager","nameLocation":"863:13:11","nodeType":"VariableDeclaration","overrides":{"id":1637,"nodeType":"OverrideSpecifier","overrides":[],"src":"854:8:11"},"scope":1817,"src":"829:47:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IDAOAgendaManager_$2211","typeString":"contract IDAOAgendaManager"},"typeName":{"id":1636,"nodeType":"UserDefinedTypeName","pathNode":{"id":1635,"name":"IDAOAgendaManager","nameLocations":["829:17:11"],"nodeType":"IdentifierPath","referencedDeclaration":2211,"src":"829:17:11"},"referencedDeclaration":2211,"src":"829:17:11","typeDescriptions":{"typeIdentifier":"t_contract$_IDAOAgendaManager_$2211","typeString":"contract IDAOAgendaManager"}},"visibility":"public"},{"baseFunctions":[2799],"constant":false,"functionSelector":"b5dd1158","id":1642,"mutability":"mutable","name":"candidateFactory","nameLocation":"916:16:11","nodeType":"VariableDeclaration","overrides":{"id":1641,"nodeType":"OverrideSpecifier","overrides":[],"src":"907:8:11"},"scope":1817,"src":"882:50:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ICandidateFactory_$1930","typeString":"contract ICandidateFactory"},"typeName":{"id":1640,"nodeType":"UserDefinedTypeName","pathNode":{"id":1639,"name":"ICandidateFactory","nameLocations":["882:17:11"],"nodeType":"IdentifierPath","referencedDeclaration":1930,"src":"882:17:11"},"referencedDeclaration":1930,"src":"882:17:11","typeDescriptions":{"typeIdentifier":"t_contract$_ICandidateFactory_$1930","typeString":"contract ICandidateFactory"}},"visibility":"public"},{"baseFunctions":[2805],"constant":false,"functionSelector":"cf2a239c","id":1646,"mutability":"mutable","name":"layer2Registry","nameLocation":"970:14:11","nodeType":"VariableDeclaration","overrides":{"id":1645,"nodeType":"OverrideSpecifier","overrides":[],"src":"961:8:11"},"scope":1817,"src":"938:46:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ILayer2Registry_$2588","typeString":"contract ILayer2Registry"},"typeName":{"id":1644,"nodeType":"UserDefinedTypeName","pathNode":{"id":1643,"name":"ILayer2Registry","nameLocations":["938:15:11"],"nodeType":"IdentifierPath","referencedDeclaration":2588,"src":"938:15:11"},"referencedDeclaration":2588,"src":"938:15:11","typeDescriptions":{"typeIdentifier":"t_contract$_ILayer2Registry_$2588","typeString":"contract ILayer2Registry"}},"visibility":"public"},{"baseFunctions":[2811],"constant":false,"functionSelector":"6fb7f558","id":1650,"mutability":"mutable","name":"seigManager","nameLocation":"1019:11:11","nodeType":"VariableDeclaration","overrides":{"id":1649,"nodeType":"OverrideSpecifier","overrides":[],"src":"1010:8:11"},"scope":1817,"src":"990:40:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ISeigManager_$2752","typeString":"contract ISeigManager"},"typeName":{"id":1648,"nodeType":"UserDefinedTypeName","pathNode":{"id":1647,"name":"ISeigManager","nameLocations":["990:12:11"],"nodeType":"IdentifierPath","referencedDeclaration":2752,"src":"990:12:11"},"referencedDeclaration":2752,"src":"990:12:11","typeDescriptions":{"typeIdentifier":"t_contract$_ISeigManager_$2752","typeString":"contract ISeigManager"}},"visibility":"public"},{"baseFunctions":[2818],"constant":false,"functionSelector":"3477ee2e","id":1654,"mutability":"mutable","name":"candidates","nameLocation":"1063:10:11","nodeType":"VariableDeclaration","overrides":{"id":1653,"nodeType":"OverrideSpecifier","overrides":[],"src":"1054:8:11"},"scope":1817,"src":"1037:36:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[]"},"typeName":{"baseType":{"id":1651,"name":"address","nodeType":"ElementaryTypeName","src":"1037:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1652,"nodeType":"ArrayTypeName","src":"1037:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"public"},{"baseFunctions":[2825],"constant":false,"functionSelector":"5daf08ca","id":1658,"mutability":"mutable","name":"members","nameLocation":"1105:7:11","nodeType":"VariableDeclaration","overrides":{"id":1657,"nodeType":"OverrideSpecifier","overrides":[],"src":"1096:8:11"},"scope":1817,"src":"1079:33:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[]"},"typeName":{"baseType":{"id":1655,"name":"address","nodeType":"ElementaryTypeName","src":"1079:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1656,"nodeType":"ArrayTypeName","src":"1079:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"public"},{"baseFunctions":[2830],"constant":false,"functionSelector":"03e3c9ac","id":1661,"mutability":"mutable","name":"maxMember","nameLocation":"1142:9:11","nodeType":"VariableDeclaration","overrides":{"id":1660,"nodeType":"OverrideSpecifier","overrides":[],"src":"1133:8:11"},"scope":1817,"src":"1118:33:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1659,"name":"uint256","nodeType":"ElementaryTypeName","src":"1118:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"id":1666,"mutability":"mutable","name":"_candidateInfos","nameLocation":"1247:15:11","nodeType":"VariableDeclaration","scope":1817,"src":"1204:58:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_CandidateInfo_$2776_storage_$","typeString":"mapping(address => struct IStorageStateCommittee.CandidateInfo)"},"typeName":{"id":1665,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1662,"name":"address","nodeType":"ElementaryTypeName","src":"1212:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1204:33:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_CandidateInfo_$2776_storage_$","typeString":"mapping(address => struct IStorageStateCommittee.CandidateInfo)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1664,"nodeType":"UserDefinedTypeName","pathNode":{"id":1663,"name":"CandidateInfo","nameLocations":["1223:13:11"],"nodeType":"IdentifierPath","referencedDeclaration":2776,"src":"1223:13:11"},"referencedDeclaration":2776,"src":"1223:13:11","typeDescriptions":{"typeIdentifier":"t_struct$_CandidateInfo_$2776_storage_ptr","typeString":"struct IStorageStateCommittee.CandidateInfo"}}},"visibility":"internal"},{"baseFunctions":[2843],"constant":false,"functionSelector":"1703a018","id":1669,"mutability":"mutable","name":"quorum","nameLocation":"1292:6:11","nodeType":"VariableDeclaration","overrides":{"id":1668,"nodeType":"OverrideSpecifier","overrides":[],"src":"1283:8:11"},"scope":1817,"src":"1268:30:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1667,"name":"uint256","nodeType":"ElementaryTypeName","src":"1268:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"baseFunctions":[2848],"constant":false,"functionSelector":"7f331636","id":1672,"mutability":"mutable","name":"activityRewardPerSecond","nameLocation":"1329:23:11","nodeType":"VariableDeclaration","overrides":{"id":1671,"nodeType":"OverrideSpecifier","overrides":[],"src":"1320:8:11"},"scope":1817,"src":"1305:47:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1670,"name":"uint256","nodeType":"ElementaryTypeName","src":"1305:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"body":{"id":1688,"nodeType":"Block","src":"1389:121:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1677,"name":"agendaManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1638,"src":"1415:13:11","typeDescriptions":{"typeIdentifier":"t_contract$_IDAOAgendaManager_$2211","typeString":"contract IDAOAgendaManager"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IDAOAgendaManager_$2211","typeString":"contract IDAOAgendaManager"}],"id":1676,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1407:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1675,"name":"address","nodeType":"ElementaryTypeName","src":"1407:7:11","typeDescriptions":{}}},"id":1678,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1407:22:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1681,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1441:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1680,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1433:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1679,"name":"address","nodeType":"ElementaryTypeName","src":"1433:7:11","typeDescriptions":{}}},"id":1682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1433:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1407:36:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53746f726167655374617465436f6d6d69747465653a204167656e64614d616e61676572206973207a65726f","id":1684,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1445:46:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_bc5a77dee9c5d4e3f159ef1f0f010e91d7de565aba049f29d2326f95067ab5ad","typeString":"literal_string \"StorageStateCommittee: AgendaManager is zero\""},"value":"StorageStateCommittee: AgendaManager is zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_bc5a77dee9c5d4e3f159ef1f0f010e91d7de565aba049f29d2326f95067ab5ad","typeString":"literal_string \"StorageStateCommittee: AgendaManager is zero\""}],"id":1674,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1399:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1685,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1399:93:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1686,"nodeType":"ExpressionStatement","src":"1399:93:11"},{"id":1687,"nodeType":"PlaceholderStatement","src":"1502:1:11"}]},"id":1689,"name":"validAgendaManager","nameLocation":"1368:18:11","nodeType":"ModifierDefinition","parameters":{"id":1673,"nodeType":"ParameterList","parameters":[],"src":"1386:2:11"},"src":"1359:151:11","virtual":false,"visibility":"internal"},{"body":{"id":1705,"nodeType":"Block","src":"1555:129:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1694,"name":"candidateFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1642,"src":"1581:16:11","typeDescriptions":{"typeIdentifier":"t_contract$_ICandidateFactory_$1930","typeString":"contract ICandidateFactory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ICandidateFactory_$1930","typeString":"contract ICandidateFactory"}],"id":1693,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1573:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1692,"name":"address","nodeType":"ElementaryTypeName","src":"1573:7:11","typeDescriptions":{}}},"id":1695,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1573:25:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1698,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1610:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1697,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1602:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1696,"name":"address","nodeType":"ElementaryTypeName","src":"1602:7:11","typeDescriptions":{}}},"id":1699,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1602:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1573:39:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53746f726167655374617465436f6d6d69747465653a20696e76616c696420436f6d6d69747465654c32466163746f7279","id":1701,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1614:51:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_38c1c7b5f08425ff12ecfb369fa5021cc73d1fee4d32b607b3ce69c428633180","typeString":"literal_string \"StorageStateCommittee: invalid CommitteeL2Factory\""},"value":"StorageStateCommittee: invalid CommitteeL2Factory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_38c1c7b5f08425ff12ecfb369fa5021cc73d1fee4d32b607b3ce69c428633180","typeString":"literal_string \"StorageStateCommittee: invalid CommitteeL2Factory\""}],"id":1691,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1565:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1702,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1565:101:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1703,"nodeType":"ExpressionStatement","src":"1565:101:11"},{"id":1704,"nodeType":"PlaceholderStatement","src":"1676:1:11"}]},"id":1706,"name":"validCommitteeL2Factory","nameLocation":"1529:23:11","nodeType":"ModifierDefinition","parameters":{"id":1690,"nodeType":"ParameterList","parameters":[],"src":"1552:2:11"},"src":"1520:164:11","virtual":false,"visibility":"internal"},{"body":{"id":1722,"nodeType":"Block","src":"1721:123:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1711,"name":"layer2Registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1646,"src":"1747:14:11","typeDescriptions":{"typeIdentifier":"t_contract$_ILayer2Registry_$2588","typeString":"contract ILayer2Registry"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ILayer2Registry_$2588","typeString":"contract ILayer2Registry"}],"id":1710,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1739:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1709,"name":"address","nodeType":"ElementaryTypeName","src":"1739:7:11","typeDescriptions":{}}},"id":1712,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1739:23:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1715,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1774:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1714,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1766:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1713,"name":"address","nodeType":"ElementaryTypeName","src":"1766:7:11","typeDescriptions":{}}},"id":1716,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1766:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1739:37:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53746f726167655374617465436f6d6d69747465653a20696e76616c6964204c61796572325265676973747279","id":1718,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1778:47:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_a41436bfe623ca4c49adf582f8529d827a853f6b494cda77d98486eaec7f245d","typeString":"literal_string \"StorageStateCommittee: invalid Layer2Registry\""},"value":"StorageStateCommittee: invalid Layer2Registry"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a41436bfe623ca4c49adf582f8529d827a853f6b494cda77d98486eaec7f245d","typeString":"literal_string \"StorageStateCommittee: invalid Layer2Registry\""}],"id":1708,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1731:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1719,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1731:95:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1720,"nodeType":"ExpressionStatement","src":"1731:95:11"},{"id":1721,"nodeType":"PlaceholderStatement","src":"1836:1:11"}]},"id":1723,"name":"validLayer2Registry","nameLocation":"1699:19:11","nodeType":"ModifierDefinition","parameters":{"id":1707,"nodeType":"ParameterList","parameters":[],"src":"1718:2:11"},"src":"1690:154:11","virtual":false,"visibility":"internal"},{"body":{"id":1739,"nodeType":"Block","src":"1878:118:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1728,"name":"seigManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1650,"src":"1904:11:11","typeDescriptions":{"typeIdentifier":"t_contract$_ISeigManager_$2752","typeString":"contract ISeigManager"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ISeigManager_$2752","typeString":"contract ISeigManager"}],"id":1727,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1896:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1726,"name":"address","nodeType":"ElementaryTypeName","src":"1896:7:11","typeDescriptions":{}}},"id":1729,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1896:20:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1732,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1928:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1731,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1920:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1730,"name":"address","nodeType":"ElementaryTypeName","src":"1920:7:11","typeDescriptions":{}}},"id":1733,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1920:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1896:34:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53746f726167655374617465436f6d6d69747465653a20696e76616c696420536569674d616e6167657265","id":1735,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1932:45:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_62c28a9d13838804b53266dd95675e2ee44344a4ade629221c863f50ed97b728","typeString":"literal_string \"StorageStateCommittee: invalid SeigManagere\""},"value":"StorageStateCommittee: invalid SeigManagere"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_62c28a9d13838804b53266dd95675e2ee44344a4ade629221c863f50ed97b728","typeString":"literal_string \"StorageStateCommittee: invalid SeigManagere\""}],"id":1725,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1888:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1736,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1888:90:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1737,"nodeType":"ExpressionStatement","src":"1888:90:11"},{"id":1738,"nodeType":"PlaceholderStatement","src":"1988:1:11"}]},"id":1740,"name":"validSeigManager","nameLocation":"1859:16:11","nodeType":"ModifierDefinition","parameters":{"id":1724,"nodeType":"ParameterList","parameters":[],"src":"1875:2:11"},"src":"1850:146:11","virtual":false,"visibility":"internal"},{"body":{"id":1751,"nodeType":"Block","src":"2024:96:11","statements":[{"expression":{"arguments":[{"arguments":[{"expression":{"id":1744,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2051:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2055:6:11","memberName":"sender","nodeType":"MemberAccess","src":"2051:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1743,"name":"isMember","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1788,"src":"2042:8:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":1746,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2042:20:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53746f726167655374617465436f6d6d69747465653a206e6f742061206d656d626572","id":1747,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2064:37:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_24953fb501d95030351d112b0e8f104c5fcf2e7520609ed0d20cc7ba02435b6f","typeString":"literal_string \"StorageStateCommittee: not a member\""},"value":"StorageStateCommittee: not a member"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_24953fb501d95030351d112b0e8f104c5fcf2e7520609ed0d20cc7ba02435b6f","typeString":"literal_string \"StorageStateCommittee: not a member\""}],"id":1742,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2034:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1748,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2034:68:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1749,"nodeType":"ExpressionStatement","src":"2034:68:11"},{"id":1750,"nodeType":"PlaceholderStatement","src":"2112:1:11"}]},"id":1752,"name":"onlyMember","nameLocation":"2011:10:11","nodeType":"ModifierDefinition","parameters":{"id":1741,"nodeType":"ParameterList","parameters":[],"src":"2021:2:11"},"src":"2002:118:11","virtual":false,"visibility":"internal"},{"body":{"id":1771,"nodeType":"Block","src":"2156:159:11","statements":[{"assignments":[1755],"declarations":[{"constant":false,"id":1755,"mutability":"mutable","name":"candidate","nameLocation":"2174:9:11","nodeType":"VariableDeclaration","scope":1771,"src":"2166:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1754,"name":"address","nodeType":"ElementaryTypeName","src":"2166:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1762,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"expression":{"id":1757,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2197:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2201:6:11","memberName":"sender","nodeType":"MemberAccess","src":"2197:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1756,"name":"ICandidate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1912,"src":"2186:10:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ICandidate_$1912_$","typeString":"type(contract ICandidate)"}},"id":1759,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2186:22:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ICandidate_$1912","typeString":"contract ICandidate"}},"id":1760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2209:9:11","memberName":"candidate","nodeType":"MemberAccess","referencedDeclaration":1889,"src":"2186:32:11","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":1761,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2186:34:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2166:54:11"},{"expression":{"arguments":[{"arguments":[{"id":1765,"name":"candidate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1755,"src":"2247:9:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1764,"name":"isMember","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1788,"src":"2238:8:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":1766,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2238:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53746f726167655374617465436f6d6d69747465653a206e6f742061206d656d626572","id":1767,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2259:37:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_24953fb501d95030351d112b0e8f104c5fcf2e7520609ed0d20cc7ba02435b6f","typeString":"literal_string \"StorageStateCommittee: not a member\""},"value":"StorageStateCommittee: not a member"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_24953fb501d95030351d112b0e8f104c5fcf2e7520609ed0d20cc7ba02435b6f","typeString":"literal_string \"StorageStateCommittee: not a member\""}],"id":1763,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2230:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1768,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2230:67:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1769,"nodeType":"ExpressionStatement","src":"2230:67:11"},{"id":1770,"nodeType":"PlaceholderStatement","src":"2307:1:11"}]},"id":1772,"name":"onlyMemberContract","nameLocation":"2135:18:11","nodeType":"ModifierDefinition","parameters":{"id":1753,"nodeType":"ParameterList","parameters":[],"src":"2153:2:11"},"src":"2126:189:11","virtual":false,"visibility":"internal"},{"baseFunctions":[2855],"body":{"id":1787,"nodeType":"Block","src":"2399:72:11","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint128","typeString":"uint128"},"id":1785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":1780,"name":"_candidateInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1666,"src":"2416:15:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_CandidateInfo_$2776_storage_$","typeString":"mapping(address => struct IStorageStateCommittee.CandidateInfo storage ref)"}},"id":1782,"indexExpression":{"id":1781,"name":"_candidate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1774,"src":"2432:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2416:27:11","typeDescriptions":{"typeIdentifier":"t_struct$_CandidateInfo_$2776_storage","typeString":"struct IStorageStateCommittee.CandidateInfo storage ref"}},"id":1783,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2444:16:11","memberName":"memberJoinedTime","nodeType":"MemberAccess","referencedDeclaration":2771,"src":"2416:44:11","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1784,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2463:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2416:48:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1779,"id":1786,"nodeType":"Return","src":"2409:55:11"}]},"functionSelector":"a230c524","id":1788,"implemented":true,"kind":"function","modifiers":[],"name":"isMember","nameLocation":"2334:8:11","nodeType":"FunctionDefinition","overrides":{"id":1776,"nodeType":"OverrideSpecifier","overrides":[],"src":"2375:8:11"},"parameters":{"id":1775,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1774,"mutability":"mutable","name":"_candidate","nameLocation":"2351:10:11","nodeType":"VariableDeclaration","scope":1788,"src":"2343:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1773,"name":"address","nodeType":"ElementaryTypeName","src":"2343:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2342:20:11"},"returnParameters":{"id":1779,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1778,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1788,"src":"2393:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1777,"name":"bool","nodeType":"ElementaryTypeName","src":"2393:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2392:6:11"},"scope":1817,"src":"2325:146:11","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[2862],"body":{"id":1801,"nodeType":"Block","src":"2563:69:11","statements":[{"expression":{"expression":{"baseExpression":{"id":1796,"name":"_candidateInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1666,"src":"2580:15:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_CandidateInfo_$2776_storage_$","typeString":"mapping(address => struct IStorageStateCommittee.CandidateInfo storage ref)"}},"id":1798,"indexExpression":{"id":1797,"name":"_candidate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1790,"src":"2596:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2580:27:11","typeDescriptions":{"typeIdentifier":"t_struct$_CandidateInfo_$2776_storage","typeString":"struct IStorageStateCommittee.CandidateInfo storage ref"}},"id":1799,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2608:17:11","memberName":"candidateContract","nodeType":"MemberAccess","referencedDeclaration":2767,"src":"2580:45:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1795,"id":1800,"nodeType":"Return","src":"2573:52:11"}]},"functionSelector":"651d08cd","id":1802,"implemented":true,"kind":"function","modifiers":[],"name":"candidateContract","nameLocation":"2486:17:11","nodeType":"FunctionDefinition","overrides":{"id":1792,"nodeType":"OverrideSpecifier","overrides":[],"src":"2536:8:11"},"parameters":{"id":1791,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1790,"mutability":"mutable","name":"_candidate","nameLocation":"2512:10:11","nodeType":"VariableDeclaration","scope":1802,"src":"2504:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1789,"name":"address","nodeType":"ElementaryTypeName","src":"2504:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2503:20:11"},"returnParameters":{"id":1795,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1794,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1802,"src":"2554:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1793,"name":"address","nodeType":"ElementaryTypeName","src":"2554:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2553:9:11"},"scope":1817,"src":"2477:155:11","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[2838],"body":{"id":1815,"nodeType":"Block","src":"2731:51:11","statements":[{"expression":{"baseExpression":{"id":1811,"name":"_candidateInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1666,"src":"2748:15:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_CandidateInfo_$2776_storage_$","typeString":"mapping(address => struct IStorageStateCommittee.CandidateInfo storage ref)"}},"id":1813,"indexExpression":{"id":1812,"name":"_candidate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1804,"src":"2764:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2748:27:11","typeDescriptions":{"typeIdentifier":"t_struct$_CandidateInfo_$2776_storage","typeString":"struct IStorageStateCommittee.CandidateInfo storage ref"}},"functionReturnParameters":1810,"id":1814,"nodeType":"Return","src":"2741:34:11"}]},"functionSelector":"2e011c1e","id":1816,"implemented":true,"kind":"function","modifiers":[],"name":"candidateInfos","nameLocation":"2647:14:11","nodeType":"FunctionDefinition","overrides":{"id":1806,"nodeType":"OverrideSpecifier","overrides":[],"src":"2691:8:11"},"parameters":{"id":1805,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1804,"mutability":"mutable","name":"_candidate","nameLocation":"2670:10:11","nodeType":"VariableDeclaration","scope":1816,"src":"2662:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1803,"name":"address","nodeType":"ElementaryTypeName","src":"2662:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2661:20:11"},"returnParameters":{"id":1810,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1809,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1816,"src":"2709:20:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_CandidateInfo_$2776_memory_ptr","typeString":"struct IStorageStateCommittee.CandidateInfo"},"typeName":{"id":1808,"nodeType":"UserDefinedTypeName","pathNode":{"id":1807,"name":"CandidateInfo","nameLocations":["2709:13:11"],"nodeType":"IdentifierPath","referencedDeclaration":2776,"src":"2709:13:11"},"referencedDeclaration":2776,"src":"2709:13:11","typeDescriptions":{"typeIdentifier":"t_struct$_CandidateInfo_$2776_storage_ptr","typeString":"struct IStorageStateCommittee.CandidateInfo"}},"visibility":"internal"}],"src":"2708:22:11"},"scope":1817,"src":"2638:144:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1818,"src":"556:2336:11","usedErrors":[]}],"src":"32:2861:11"},"id":11},"contracts/interfaces/ICandidate.sol":{"ast":{"absolutePath":"contracts/interfaces/ICandidate.sol","exportedSymbols":{"ICandidate":[1912],"IDAOCommittee":[2475],"ISeigManager":[2752]},"id":1913,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1819,"literals":["solidity","^","0.8",".17"],"nodeType":"PragmaDirective","src":"32:24:12"},{"absolutePath":"contracts/interfaces/IDAOCommittee.sol","file":"../interfaces/IDAOCommittee.sol","id":1821,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1913,"sourceUnit":2476,"src":"58:64:12","symbolAliases":[{"foreign":{"id":1820,"name":"IDAOCommittee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2475,"src":"67:13:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/interfaces/ISeigManager.sol","file":"../interfaces/ISeigManager.sol","id":1823,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1913,"sourceUnit":2753,"src":"123:62:12","symbolAliases":[{"foreign":{"id":1822,"name":"ISeigManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2752,"src":"132:12:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ICandidate","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":1912,"linearizedBaseContracts":[1912],"name":"ICandidate","nameLocation":"197:10:12","nodeType":"ContractDefinition","nodes":[{"functionSelector":"7657f20a","id":1828,"implemented":false,"kind":"function","modifiers":[],"name":"setSeigManager","nameLocation":"223:14:12","nodeType":"FunctionDefinition","parameters":{"id":1826,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1825,"mutability":"mutable","name":"_seigMan","nameLocation":"246:8:12","nodeType":"VariableDeclaration","scope":1828,"src":"238:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1824,"name":"address","nodeType":"ElementaryTypeName","src":"238:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"237:18:12"},"returnParameters":{"id":1827,"nodeType":"ParameterList","parameters":[],"src":"264:0:12"},"scope":1912,"src":"214:51:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"bddae40e","id":1833,"implemented":false,"kind":"function","modifiers":[],"name":"setCommittee","nameLocation":"279:12:12","nodeType":"FunctionDefinition","parameters":{"id":1831,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1830,"mutability":"mutable","name":"_committee","nameLocation":"300:10:12","nodeType":"VariableDeclaration","scope":1833,"src":"292:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1829,"name":"address","nodeType":"ElementaryTypeName","src":"292:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"291:20:12"},"returnParameters":{"id":1832,"nodeType":"ParameterList","parameters":[],"src":"320:0:12"},"scope":1912,"src":"270:51:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"764a7856","id":1838,"implemented":false,"kind":"function","modifiers":[],"name":"updateSeigniorage","nameLocation":"335:17:12","nodeType":"FunctionDefinition","parameters":{"id":1834,"nodeType":"ParameterList","parameters":[],"src":"352:2:12"},"returnParameters":{"id":1837,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1836,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1838,"src":"373:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1835,"name":"bool","nodeType":"ElementaryTypeName","src":"373:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"372:6:12"},"scope":1912,"src":"326:53:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"11f19e04","id":1845,"implemented":false,"kind":"function","modifiers":[],"name":"changeMember","nameLocation":"393:12:12","nodeType":"FunctionDefinition","parameters":{"id":1841,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1840,"mutability":"mutable","name":"_memberIndex","nameLocation":"414:12:12","nodeType":"VariableDeclaration","scope":1845,"src":"406:20:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1839,"name":"uint256","nodeType":"ElementaryTypeName","src":"406:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"405:22:12"},"returnParameters":{"id":1844,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1843,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1845,"src":"446:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1842,"name":"bool","nodeType":"ElementaryTypeName","src":"446:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"445:6:12"},"scope":1912,"src":"384:68:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"c4ef9c00","id":1850,"implemented":false,"kind":"function","modifiers":[],"name":"retireMember","nameLocation":"466:12:12","nodeType":"FunctionDefinition","parameters":{"id":1846,"nodeType":"ParameterList","parameters":[],"src":"478:2:12"},"returnParameters":{"id":1849,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1848,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1850,"src":"499:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1847,"name":"bool","nodeType":"ElementaryTypeName","src":"499:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"498:6:12"},"scope":1912,"src":"457:48:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"24f99b1e","id":1859,"implemented":false,"kind":"function","modifiers":[],"name":"castVote","nameLocation":"519:8:12","nodeType":"FunctionDefinition","parameters":{"id":1857,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1852,"mutability":"mutable","name":"_agendaID","nameLocation":"536:9:12","nodeType":"VariableDeclaration","scope":1859,"src":"528:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1851,"name":"uint256","nodeType":"ElementaryTypeName","src":"528:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1854,"mutability":"mutable","name":"_vote","nameLocation":"555:5:12","nodeType":"VariableDeclaration","scope":1859,"src":"547:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1853,"name":"uint256","nodeType":"ElementaryTypeName","src":"547:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1856,"mutability":"mutable","name":"_comment","nameLocation":"578:8:12","nodeType":"VariableDeclaration","scope":1859,"src":"562:24:12","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":1855,"name":"string","nodeType":"ElementaryTypeName","src":"562:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"527:60:12"},"returnParameters":{"id":1858,"nodeType":"ParameterList","parameters":[],"src":"596:0:12"},"scope":1912,"src":"510:87:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"77ff21c4","id":1864,"implemented":false,"kind":"function","modifiers":[],"name":"isCandidateContract","nameLocation":"611:19:12","nodeType":"FunctionDefinition","parameters":{"id":1860,"nodeType":"ParameterList","parameters":[],"src":"630:2:12"},"returnParameters":{"id":1863,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1862,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1864,"src":"656:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1861,"name":"bool","nodeType":"ElementaryTypeName","src":"656:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"655:6:12"},"scope":1912,"src":"602:60:12","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"817b1cd2","id":1869,"implemented":false,"kind":"function","modifiers":[],"name":"totalStaked","nameLocation":"676:11:12","nodeType":"FunctionDefinition","parameters":{"id":1865,"nodeType":"ParameterList","parameters":[],"src":"687:2:12"},"returnParameters":{"id":1868,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1867,"mutability":"mutable","name":"totalsupply","nameLocation":"721:11:12","nodeType":"VariableDeclaration","scope":1869,"src":"713:19:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1866,"name":"uint256","nodeType":"ElementaryTypeName","src":"713:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"712:21:12"},"scope":1912,"src":"667:67:12","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"af500ba3","id":1876,"implemented":false,"kind":"function","modifiers":[],"name":"stakedOf","nameLocation":"748:8:12","nodeType":"FunctionDefinition","parameters":{"id":1872,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1871,"mutability":"mutable","name":"_account","nameLocation":"765:8:12","nodeType":"VariableDeclaration","scope":1876,"src":"757:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1870,"name":"address","nodeType":"ElementaryTypeName","src":"757:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"756:18:12"},"returnParameters":{"id":1875,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1874,"mutability":"mutable","name":"amount","nameLocation":"806:6:12","nodeType":"VariableDeclaration","scope":1876,"src":"798:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1873,"name":"uint256","nodeType":"ElementaryTypeName","src":"798:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"797:16:12"},"scope":1912,"src":"739:75:12","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"25d60861","id":1881,"implemented":false,"kind":"function","modifiers":[],"name":"setMemo","nameLocation":"828:7:12","nodeType":"FunctionDefinition","parameters":{"id":1879,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1878,"mutability":"mutable","name":"_memo","nameLocation":"852:5:12","nodeType":"VariableDeclaration","scope":1881,"src":"836:21:12","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":1877,"name":"string","nodeType":"ElementaryTypeName","src":"836:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"835:23:12"},"returnParameters":{"id":1880,"nodeType":"ParameterList","parameters":[],"src":"867:0:12"},"scope":1912,"src":"819:49:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"8bf7a3ab","id":1884,"implemented":false,"kind":"function","modifiers":[],"name":"claimActivityReward","nameLocation":"882:19:12","nodeType":"FunctionDefinition","parameters":{"id":1882,"nodeType":"ParameterList","parameters":[],"src":"901:2:12"},"returnParameters":{"id":1883,"nodeType":"ParameterList","parameters":[],"src":"912:0:12"},"scope":1912,"src":"873:40:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"6c8381f8","id":1889,"implemented":false,"kind":"function","modifiers":[],"name":"candidate","nameLocation":"942:9:12","nodeType":"FunctionDefinition","parameters":{"id":1885,"nodeType":"ParameterList","parameters":[],"src":"951:2:12"},"returnParameters":{"id":1888,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1887,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1889,"src":"977:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1886,"name":"address","nodeType":"ElementaryTypeName","src":"977:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"976:9:12"},"scope":1912,"src":"933:53:12","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"9b638268","id":1894,"implemented":false,"kind":"function","modifiers":[],"name":"isLayer2Candidate","nameLocation":"1000:17:12","nodeType":"FunctionDefinition","parameters":{"id":1890,"nodeType":"ParameterList","parameters":[],"src":"1017:2:12"},"returnParameters":{"id":1893,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1892,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1894,"src":"1043:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1891,"name":"bool","nodeType":"ElementaryTypeName","src":"1043:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1042:6:12"},"scope":1912,"src":"991:58:12","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"58c3b870","id":1899,"implemented":false,"kind":"function","modifiers":[],"name":"memo","nameLocation":"1063:4:12","nodeType":"FunctionDefinition","parameters":{"id":1895,"nodeType":"ParameterList","parameters":[],"src":"1067:2:12"},"returnParameters":{"id":1898,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1897,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1899,"src":"1093:13:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1896,"name":"string","nodeType":"ElementaryTypeName","src":"1093:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1092:15:12"},"scope":1912,"src":"1054:54:12","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"d864e740","id":1905,"implemented":false,"kind":"function","modifiers":[],"name":"committee","nameLocation":"1122:9:12","nodeType":"FunctionDefinition","parameters":{"id":1900,"nodeType":"ParameterList","parameters":[],"src":"1131:2:12"},"returnParameters":{"id":1904,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1903,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1905,"src":"1157:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IDAOCommittee_$2475","typeString":"contract IDAOCommittee"},"typeName":{"id":1902,"nodeType":"UserDefinedTypeName","pathNode":{"id":1901,"name":"IDAOCommittee","nameLocations":["1157:13:12"],"nodeType":"IdentifierPath","referencedDeclaration":2475,"src":"1157:13:12"},"referencedDeclaration":2475,"src":"1157:13:12","typeDescriptions":{"typeIdentifier":"t_contract$_IDAOCommittee_$2475","typeString":"contract IDAOCommittee"}},"visibility":"internal"}],"src":"1156:15:12"},"scope":1912,"src":"1113:59:12","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"6fb7f558","id":1911,"implemented":false,"kind":"function","modifiers":[],"name":"seigManager","nameLocation":"1186:11:12","nodeType":"FunctionDefinition","parameters":{"id":1906,"nodeType":"ParameterList","parameters":[],"src":"1197:2:12"},"returnParameters":{"id":1910,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1909,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1911,"src":"1223:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ISeigManager_$2752","typeString":"contract ISeigManager"},"typeName":{"id":1908,"nodeType":"UserDefinedTypeName","pathNode":{"id":1907,"name":"ISeigManager","nameLocations":["1223:12:12"],"nodeType":"IdentifierPath","referencedDeclaration":2752,"src":"1223:12:12"},"referencedDeclaration":2752,"src":"1223:12:12","typeDescriptions":{"typeIdentifier":"t_contract$_ISeigManager_$2752","typeString":"contract ISeigManager"}},"visibility":"internal"}],"src":"1222:14:12"},"scope":1912,"src":"1177:60:12","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1913,"src":"187:1052:12","usedErrors":[]}],"src":"32:1208:12"},"id":12},"contracts/interfaces/ICandidateFactory.sol":{"ast":{"absolutePath":"contracts/interfaces/ICandidateFactory.sol","exportedSymbols":{"ICandidateFactory":[1930]},"id":1931,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1914,"literals":["solidity","^","0.8",".17"],"nodeType":"PragmaDirective","src":"32:24:13"},{"abstract":false,"baseContracts":[],"canonicalName":"ICandidateFactory","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":1930,"linearizedBaseContracts":[1930],"name":"ICandidateFactory","nameLocation":"68:17:13","nodeType":"ContractDefinition","nodes":[{"functionSelector":"e64a31f6","id":1929,"implemented":false,"kind":"function","modifiers":[],"name":"deploy","nameLocation":"101:6:13","nodeType":"FunctionDefinition","parameters":{"id":1925,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1916,"mutability":"mutable","name":"_candidate","nameLocation":"125:10:13","nodeType":"VariableDeclaration","scope":1929,"src":"117:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1915,"name":"address","nodeType":"ElementaryTypeName","src":"117:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1918,"mutability":"mutable","name":"_isLayer2Candidate","nameLocation":"150:18:13","nodeType":"VariableDeclaration","scope":1929,"src":"145:23:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1917,"name":"bool","nodeType":"ElementaryTypeName","src":"145:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1920,"mutability":"mutable","name":"_name","nameLocation":"192:5:13","nodeType":"VariableDeclaration","scope":1929,"src":"178:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1919,"name":"string","nodeType":"ElementaryTypeName","src":"178:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1922,"mutability":"mutable","name":"_committee","nameLocation":"215:10:13","nodeType":"VariableDeclaration","scope":1929,"src":"207:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1921,"name":"address","nodeType":"ElementaryTypeName","src":"207:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1924,"mutability":"mutable","name":"_seigManager","nameLocation":"243:12:13","nodeType":"VariableDeclaration","scope":1929,"src":"235:20:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1923,"name":"address","nodeType":"ElementaryTypeName","src":"235:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"107:154:13"},"returnParameters":{"id":1928,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1927,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1929,"src":"296:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1926,"name":"address","nodeType":"ElementaryTypeName","src":"296:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"295:9:13"},"scope":1930,"src":"92:213:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1931,"src":"58:249:13","usedErrors":[]}],"src":"32:276:13"},"id":13},"contracts/interfaces/IDAOAgendaManager.sol":{"ast":{"absolutePath":"contracts/interfaces/IDAOAgendaManager.sol","exportedSymbols":{"IDAOAgendaManager":[2211],"LibAgenda":[2928]},"id":2212,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1932,"literals":["solidity","^","0.8",".17"],"nodeType":"PragmaDirective","src":"32:24:14"},{"absolutePath":"contracts/lib/Agenda.sol","file":"../lib/Agenda.sol","id":1934,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2212,"sourceUnit":2929,"src":"58:46:14","symbolAliases":[{"foreign":{"id":1933,"name":"LibAgenda","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2928,"src":"67:9:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IDAOAgendaManager","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":2211,"linearizedBaseContracts":[2211],"name":"IDAOAgendaManager","nameLocation":"184:17:14","nodeType":"ContractDefinition","nodes":[{"canonicalName":"IDAOAgendaManager.Ratio","id":1939,"members":[{"constant":false,"id":1936,"mutability":"mutable","name":"numerator","nameLocation":"240:9:14","nodeType":"VariableDeclaration","scope":1939,"src":"232:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1935,"name":"uint256","nodeType":"ElementaryTypeName","src":"232:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1938,"mutability":"mutable","name":"denominator","nameLocation":"267:11:14","nodeType":"VariableDeclaration","scope":1939,"src":"259:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1937,"name":"uint256","nodeType":"ElementaryTypeName","src":"259:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Ratio","nameLocation":"216:5:14","nodeType":"StructDefinition","scope":2211,"src":"209:76:14","visibility":"public"},{"functionSelector":"bddae40e","id":1944,"implemented":false,"kind":"function","modifiers":[],"name":"setCommittee","nameLocation":"300:12:14","nodeType":"FunctionDefinition","parameters":{"id":1942,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1941,"mutability":"mutable","name":"_committee","nameLocation":"321:10:14","nodeType":"VariableDeclaration","scope":1944,"src":"313:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1940,"name":"address","nodeType":"ElementaryTypeName","src":"313:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"312:20:14"},"returnParameters":{"id":1943,"nodeType":"ParameterList","parameters":[],"src":"341:0:14"},"scope":2211,"src":"291:51:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"b4f69b6a","id":1949,"implemented":false,"kind":"function","modifiers":[],"name":"setCreateAgendaFees","nameLocation":"356:19:14","nodeType":"FunctionDefinition","parameters":{"id":1947,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1946,"mutability":"mutable","name":"_createAgendaFees","nameLocation":"384:17:14","nodeType":"VariableDeclaration","scope":1949,"src":"376:25:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1945,"name":"uint256","nodeType":"ElementaryTypeName","src":"376:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"375:27:14"},"returnParameters":{"id":1948,"nodeType":"ParameterList","parameters":[],"src":"411:0:14"},"scope":2211,"src":"347:65:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"23d09fdf","id":1954,"implemented":false,"kind":"function","modifiers":[],"name":"setMinimumNoticePeriodSeconds","nameLocation":"426:29:14","nodeType":"FunctionDefinition","parameters":{"id":1952,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1951,"mutability":"mutable","name":"_minimumNoticePeriodSeconds","nameLocation":"464:27:14","nodeType":"VariableDeclaration","scope":1954,"src":"456:35:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1950,"name":"uint256","nodeType":"ElementaryTypeName","src":"456:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"455:37:14"},"returnParameters":{"id":1953,"nodeType":"ParameterList","parameters":[],"src":"501:0:14"},"scope":2211,"src":"417:85:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"c0bc5304","id":1959,"implemented":false,"kind":"function","modifiers":[],"name":"setMinimumVotingPeriodSeconds","nameLocation":"516:29:14","nodeType":"FunctionDefinition","parameters":{"id":1957,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1956,"mutability":"mutable","name":"_minimumVotingPeriodSeconds","nameLocation":"554:27:14","nodeType":"VariableDeclaration","scope":1959,"src":"546:35:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1955,"name":"uint256","nodeType":"ElementaryTypeName","src":"546:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"545:37:14"},"returnParameters":{"id":1958,"nodeType":"ParameterList","parameters":[],"src":"591:0:14"},"scope":2211,"src":"507:85:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"69b1227a","id":1964,"implemented":false,"kind":"function","modifiers":[],"name":"setExecutingPeriodSeconds","nameLocation":"606:25:14","nodeType":"FunctionDefinition","parameters":{"id":1962,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1961,"mutability":"mutable","name":"_executingPeriodSeconds","nameLocation":"640:23:14","nodeType":"VariableDeclaration","scope":1964,"src":"632:31:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1960,"name":"uint256","nodeType":"ElementaryTypeName","src":"632:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"631:33:14"},"returnParameters":{"id":1963,"nodeType":"ParameterList","parameters":[],"src":"673:0:14"},"scope":2211,"src":"597:77:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"25048db8","id":1981,"implemented":false,"kind":"function","modifiers":[],"name":"newAgenda","nameLocation":"688:9:14","nodeType":"FunctionDefinition","parameters":{"id":1977,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1967,"mutability":"mutable","name":"_targets","nameLocation":"724:8:14","nodeType":"VariableDeclaration","scope":1981,"src":"707:25:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1965,"name":"address","nodeType":"ElementaryTypeName","src":"707:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1966,"nodeType":"ArrayTypeName","src":"707:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":1969,"mutability":"mutable","name":"_noticePeriodSeconds","nameLocation":"750:20:14","nodeType":"VariableDeclaration","scope":1981,"src":"742:28:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1968,"name":"uint256","nodeType":"ElementaryTypeName","src":"742:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1971,"mutability":"mutable","name":"_votingPeriodSeconds","nameLocation":"788:20:14","nodeType":"VariableDeclaration","scope":1981,"src":"780:28:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1970,"name":"uint256","nodeType":"ElementaryTypeName","src":"780:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1973,"mutability":"mutable","name":"_atomicExecute","nameLocation":"823:14:14","nodeType":"VariableDeclaration","scope":1981,"src":"818:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1972,"name":"bool","nodeType":"ElementaryTypeName","src":"818:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1976,"mutability":"mutable","name":"_functionBytecodes","nameLocation":"864:18:14","nodeType":"VariableDeclaration","scope":1981,"src":"847:35:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":1974,"name":"bytes","nodeType":"ElementaryTypeName","src":"847:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":1975,"nodeType":"ArrayTypeName","src":"847:7:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"697:191:14"},"returnParameters":{"id":1980,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1979,"mutability":"mutable","name":"agendaID","nameLocation":"931:8:14","nodeType":"VariableDeclaration","scope":1981,"src":"923:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1978,"name":"uint256","nodeType":"ElementaryTypeName","src":"923:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"922:18:14"},"scope":2211,"src":"679:262:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"7e77eb23","id":1992,"implemented":false,"kind":"function","modifiers":[],"name":"castVote","nameLocation":"955:8:14","nodeType":"FunctionDefinition","parameters":{"id":1988,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1983,"mutability":"mutable","name":"_agendaID","nameLocation":"972:9:14","nodeType":"VariableDeclaration","scope":1992,"src":"964:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1982,"name":"uint256","nodeType":"ElementaryTypeName","src":"964:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1985,"mutability":"mutable","name":"voter","nameLocation":"991:5:14","nodeType":"VariableDeclaration","scope":1992,"src":"983:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1984,"name":"address","nodeType":"ElementaryTypeName","src":"983:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1987,"mutability":"mutable","name":"_vote","nameLocation":"1006:5:14","nodeType":"VariableDeclaration","scope":1992,"src":"998:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1986,"name":"uint256","nodeType":"ElementaryTypeName","src":"998:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"963:49:14"},"returnParameters":{"id":1991,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1990,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1992,"src":"1031:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1989,"name":"bool","nodeType":"ElementaryTypeName","src":"1031:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1030:6:14"},"scope":2211,"src":"946:91:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"37184a32","id":1997,"implemented":false,"kind":"function","modifiers":[],"name":"setExecutedAgenda","nameLocation":"1051:17:14","nodeType":"FunctionDefinition","parameters":{"id":1995,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1994,"mutability":"mutable","name":"_agendaID","nameLocation":"1077:9:14","nodeType":"VariableDeclaration","scope":1997,"src":"1069:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1993,"name":"uint256","nodeType":"ElementaryTypeName","src":"1069:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1068:19:14"},"returnParameters":{"id":1996,"nodeType":"ParameterList","parameters":[],"src":"1096:0:14"},"scope":2211,"src":"1042:55:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"56150a36","id":2005,"implemented":false,"kind":"function","modifiers":[],"name":"setResult","nameLocation":"1111:9:14","nodeType":"FunctionDefinition","parameters":{"id":2003,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1999,"mutability":"mutable","name":"_agendaID","nameLocation":"1129:9:14","nodeType":"VariableDeclaration","scope":2005,"src":"1121:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1998,"name":"uint256","nodeType":"ElementaryTypeName","src":"1121:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2002,"mutability":"mutable","name":"_result","nameLocation":"1163:7:14","nodeType":"VariableDeclaration","scope":2005,"src":"1140:30:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_AgendaResult_$2877","typeString":"enum LibAgenda.AgendaResult"},"typeName":{"id":2001,"nodeType":"UserDefinedTypeName","pathNode":{"id":2000,"name":"LibAgenda.AgendaResult","nameLocations":["1140:9:14","1150:12:14"],"nodeType":"IdentifierPath","referencedDeclaration":2877,"src":"1140:22:14"},"referencedDeclaration":2877,"src":"1140:22:14","typeDescriptions":{"typeIdentifier":"t_enum$_AgendaResult_$2877","typeString":"enum LibAgenda.AgendaResult"}},"visibility":"internal"}],"src":"1120:51:14"},"returnParameters":{"id":2004,"nodeType":"ParameterList","parameters":[],"src":"1180:0:14"},"scope":2211,"src":"1102:79:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"d896dd64","id":2013,"implemented":false,"kind":"function","modifiers":[],"name":"setStatus","nameLocation":"1195:9:14","nodeType":"FunctionDefinition","parameters":{"id":2011,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2007,"mutability":"mutable","name":"_agendaID","nameLocation":"1213:9:14","nodeType":"VariableDeclaration","scope":2013,"src":"1205:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2006,"name":"uint256","nodeType":"ElementaryTypeName","src":"1205:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2010,"mutability":"mutable","name":"_status","nameLocation":"1247:7:14","nodeType":"VariableDeclaration","scope":2013,"src":"1224:30:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_AgendaStatus_$2872","typeString":"enum LibAgenda.AgendaStatus"},"typeName":{"id":2009,"nodeType":"UserDefinedTypeName","pathNode":{"id":2008,"name":"LibAgenda.AgendaStatus","nameLocations":["1224:9:14","1234:12:14"],"nodeType":"IdentifierPath","referencedDeclaration":2872,"src":"1224:22:14"},"referencedDeclaration":2872,"src":"1224:22:14","typeDescriptions":{"typeIdentifier":"t_enum$_AgendaStatus_$2872","typeString":"enum LibAgenda.AgendaStatus"}},"visibility":"internal"}],"src":"1204:51:14"},"returnParameters":{"id":2012,"nodeType":"ParameterList","parameters":[],"src":"1264:0:14"},"scope":2211,"src":"1186:79:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"885b4696","id":2018,"implemented":false,"kind":"function","modifiers":[],"name":"endAgendaVoting","nameLocation":"1279:15:14","nodeType":"FunctionDefinition","parameters":{"id":2016,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2015,"mutability":"mutable","name":"_agendaID","nameLocation":"1303:9:14","nodeType":"VariableDeclaration","scope":2018,"src":"1295:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2014,"name":"uint256","nodeType":"ElementaryTypeName","src":"1295:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1294:19:14"},"returnParameters":{"id":2017,"nodeType":"ParameterList","parameters":[],"src":"1322:0:14"},"scope":2211,"src":"1270:53:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"a0cc81e4","id":2025,"implemented":false,"kind":"function","modifiers":[],"name":"setExecutedCount","nameLocation":"1337:16:14","nodeType":"FunctionDefinition","parameters":{"id":2023,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2020,"mutability":"mutable","name":"_agendaID","nameLocation":"1362:9:14","nodeType":"VariableDeclaration","scope":2025,"src":"1354:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2019,"name":"uint256","nodeType":"ElementaryTypeName","src":"1354:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2022,"mutability":"mutable","name":"_count","nameLocation":"1381:6:14","nodeType":"VariableDeclaration","scope":2025,"src":"1373:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2021,"name":"uint256","nodeType":"ElementaryTypeName","src":"1373:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1353:35:14"},"returnParameters":{"id":2024,"nodeType":"ParameterList","parameters":[],"src":"1397:0:14"},"scope":2211,"src":"1328:70:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"00b74c45","id":2034,"implemented":false,"kind":"function","modifiers":[],"name":"isVoter","nameLocation":"1443:7:14","nodeType":"FunctionDefinition","parameters":{"id":2030,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2027,"mutability":"mutable","name":"_agendaID","nameLocation":"1459:9:14","nodeType":"VariableDeclaration","scope":2034,"src":"1451:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2026,"name":"uint256","nodeType":"ElementaryTypeName","src":"1451:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2029,"mutability":"mutable","name":"_user","nameLocation":"1478:5:14","nodeType":"VariableDeclaration","scope":2034,"src":"1470:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2028,"name":"address","nodeType":"ElementaryTypeName","src":"1470:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1450:34:14"},"returnParameters":{"id":2033,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2032,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2034,"src":"1508:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2031,"name":"bool","nodeType":"ElementaryTypeName","src":"1508:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1507:6:14"},"scope":2211,"src":"1434:80:14","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"43859632","id":2043,"implemented":false,"kind":"function","modifiers":[],"name":"hasVoted","nameLocation":"1528:8:14","nodeType":"FunctionDefinition","parameters":{"id":2039,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2036,"mutability":"mutable","name":"_agendaID","nameLocation":"1545:9:14","nodeType":"VariableDeclaration","scope":2043,"src":"1537:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2035,"name":"uint256","nodeType":"ElementaryTypeName","src":"1537:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2038,"mutability":"mutable","name":"_user","nameLocation":"1564:5:14","nodeType":"VariableDeclaration","scope":2043,"src":"1556:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2037,"name":"address","nodeType":"ElementaryTypeName","src":"1556:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1536:34:14"},"returnParameters":{"id":2042,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2041,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2043,"src":"1594:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2040,"name":"bool","nodeType":"ElementaryTypeName","src":"1594:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1593:6:14"},"scope":2211,"src":"1519:81:14","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"cdeed605","id":2054,"implemented":false,"kind":"function","modifiers":[],"name":"getVoteStatus","nameLocation":"1614:13:14","nodeType":"FunctionDefinition","parameters":{"id":2048,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2045,"mutability":"mutable","name":"_agendaID","nameLocation":"1636:9:14","nodeType":"VariableDeclaration","scope":2054,"src":"1628:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2044,"name":"uint256","nodeType":"ElementaryTypeName","src":"1628:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2047,"mutability":"mutable","name":"_user","nameLocation":"1655:5:14","nodeType":"VariableDeclaration","scope":2054,"src":"1647:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2046,"name":"address","nodeType":"ElementaryTypeName","src":"1647:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1627:34:14"},"returnParameters":{"id":2053,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2050,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2054,"src":"1685:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2049,"name":"bool","nodeType":"ElementaryTypeName","src":"1685:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2052,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2054,"src":"1691:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2051,"name":"uint256","nodeType":"ElementaryTypeName","src":"1691:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1684:15:14"},"scope":2211,"src":"1605:95:14","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"de6bd386","id":2061,"implemented":false,"kind":"function","modifiers":[],"name":"getAgendaNoticeEndTimeSeconds","nameLocation":"1714:29:14","nodeType":"FunctionDefinition","parameters":{"id":2057,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2056,"mutability":"mutable","name":"_agendaID","nameLocation":"1752:9:14","nodeType":"VariableDeclaration","scope":2061,"src":"1744:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2055,"name":"uint256","nodeType":"ElementaryTypeName","src":"1744:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1743:19:14"},"returnParameters":{"id":2060,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2059,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2061,"src":"1786:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2058,"name":"uint256","nodeType":"ElementaryTypeName","src":"1786:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1785:9:14"},"scope":2211,"src":"1705:90:14","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"3da2371f","id":2068,"implemented":false,"kind":"function","modifiers":[],"name":"getAgendaVotingStartTimeSeconds","nameLocation":"1809:31:14","nodeType":"FunctionDefinition","parameters":{"id":2064,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2063,"mutability":"mutable","name":"_agendaID","nameLocation":"1849:9:14","nodeType":"VariableDeclaration","scope":2068,"src":"1841:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2062,"name":"uint256","nodeType":"ElementaryTypeName","src":"1841:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1840:19:14"},"returnParameters":{"id":2067,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2066,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2068,"src":"1883:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2065,"name":"uint256","nodeType":"ElementaryTypeName","src":"1883:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1882:9:14"},"scope":2211,"src":"1800:92:14","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"334bbf35","id":2075,"implemented":false,"kind":"function","modifiers":[],"name":"getAgendaVotingEndTimeSeconds","nameLocation":"1906:29:14","nodeType":"FunctionDefinition","parameters":{"id":2071,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2070,"mutability":"mutable","name":"_agendaID","nameLocation":"1944:9:14","nodeType":"VariableDeclaration","scope":2075,"src":"1936:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2069,"name":"uint256","nodeType":"ElementaryTypeName","src":"1936:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1935:19:14"},"returnParameters":{"id":2074,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2073,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2075,"src":"1978:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2072,"name":"uint256","nodeType":"ElementaryTypeName","src":"1978:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1977:9:14"},"scope":2211,"src":"1897:91:14","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"77f28d5b","id":2082,"implemented":false,"kind":"function","modifiers":[],"name":"canExecuteAgenda","nameLocation":"2003:16:14","nodeType":"FunctionDefinition","parameters":{"id":2078,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2077,"mutability":"mutable","name":"_agendaID","nameLocation":"2028:9:14","nodeType":"VariableDeclaration","scope":2082,"src":"2020:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2076,"name":"uint256","nodeType":"ElementaryTypeName","src":"2020:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2019:19:14"},"returnParameters":{"id":2081,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2080,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2082,"src":"2062:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2079,"name":"bool","nodeType":"ElementaryTypeName","src":"2062:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2061:6:14"},"scope":2211,"src":"1994:74:14","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"284d776e","id":2089,"implemented":false,"kind":"function","modifiers":[],"name":"getAgendaStatus","nameLocation":"2082:15:14","nodeType":"FunctionDefinition","parameters":{"id":2085,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2084,"mutability":"mutable","name":"_agendaID","nameLocation":"2106:9:14","nodeType":"VariableDeclaration","scope":2089,"src":"2098:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2083,"name":"uint256","nodeType":"ElementaryTypeName","src":"2098:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2097:19:14"},"returnParameters":{"id":2088,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2087,"mutability":"mutable","name":"status","nameLocation":"2148:6:14","nodeType":"VariableDeclaration","scope":2089,"src":"2140:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2086,"name":"uint256","nodeType":"ElementaryTypeName","src":"2140:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2139:16:14"},"scope":2211,"src":"2073:83:14","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"699cc358","id":2094,"implemented":false,"kind":"function","modifiers":[],"name":"totalAgendas","nameLocation":"2170:12:14","nodeType":"FunctionDefinition","parameters":{"id":2090,"nodeType":"ParameterList","parameters":[],"src":"2182:2:14"},"returnParameters":{"id":2093,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2092,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2094,"src":"2208:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2091,"name":"uint256","nodeType":"ElementaryTypeName","src":"2208:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2207:9:14"},"scope":2211,"src":"2161:56:14","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"6bcaab5e","id":2103,"implemented":false,"kind":"function","modifiers":[],"name":"getAgendaResult","nameLocation":"2231:15:14","nodeType":"FunctionDefinition","parameters":{"id":2097,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2096,"mutability":"mutable","name":"_agendaID","nameLocation":"2255:9:14","nodeType":"VariableDeclaration","scope":2103,"src":"2247:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2095,"name":"uint256","nodeType":"ElementaryTypeName","src":"2247:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2246:19:14"},"returnParameters":{"id":2102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2099,"mutability":"mutable","name":"result","nameLocation":"2297:6:14","nodeType":"VariableDeclaration","scope":2103,"src":"2289:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2098,"name":"uint256","nodeType":"ElementaryTypeName","src":"2289:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2101,"mutability":"mutable","name":"executed","nameLocation":"2310:8:14","nodeType":"VariableDeclaration","scope":2103,"src":"2305:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2100,"name":"bool","nodeType":"ElementaryTypeName","src":"2305:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2288:31:14"},"scope":2211,"src":"2222:98:14","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"73ba3745","id":2118,"implemented":false,"kind":"function","modifiers":[],"name":"getExecutionInfo","nameLocation":"2334:16:14","nodeType":"FunctionDefinition","parameters":{"id":2106,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2105,"mutability":"mutable","name":"_agendaID","nameLocation":"2359:9:14","nodeType":"VariableDeclaration","scope":2118,"src":"2351:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2104,"name":"uint256","nodeType":"ElementaryTypeName","src":"2351:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2350:19:14"},"returnParameters":{"id":2117,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2109,"mutability":"mutable","name":"target","nameLocation":"2446:6:14","nodeType":"VariableDeclaration","scope":2118,"src":"2429:23:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2107,"name":"address","nodeType":"ElementaryTypeName","src":"2429:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2108,"nodeType":"ArrayTypeName","src":"2429:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":2112,"mutability":"mutable","name":"functionBytecode","nameLocation":"2481:16:14","nodeType":"VariableDeclaration","scope":2118,"src":"2466:31:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":2110,"name":"bytes","nodeType":"ElementaryTypeName","src":"2466:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":2111,"nodeType":"ArrayTypeName","src":"2466:7:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":2114,"mutability":"mutable","name":"atomicExecute","nameLocation":"2516:13:14","nodeType":"VariableDeclaration","scope":2118,"src":"2511:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2113,"name":"bool","nodeType":"ElementaryTypeName","src":"2511:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2116,"mutability":"mutable","name":"executeStartFrom","nameLocation":"2551:16:14","nodeType":"VariableDeclaration","scope":2118,"src":"2543:24:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2115,"name":"uint256","nodeType":"ElementaryTypeName","src":"2543:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2415:162:14"},"scope":2211,"src":"2325:253:14","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"8425a46d","id":2125,"implemented":false,"kind":"function","modifiers":[],"name":"isVotableStatus","nameLocation":"2592:15:14","nodeType":"FunctionDefinition","parameters":{"id":2121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2120,"mutability":"mutable","name":"_agendaID","nameLocation":"2616:9:14","nodeType":"VariableDeclaration","scope":2125,"src":"2608:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2119,"name":"uint256","nodeType":"ElementaryTypeName","src":"2608:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2607:19:14"},"returnParameters":{"id":2124,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2123,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2125,"src":"2650:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2122,"name":"bool","nodeType":"ElementaryTypeName","src":"2650:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2649:6:14"},"scope":2211,"src":"2583:73:14","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"aee4a42a","id":2136,"implemented":false,"kind":"function","modifiers":[],"name":"getVotingCount","nameLocation":"2670:14:14","nodeType":"FunctionDefinition","parameters":{"id":2128,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2127,"mutability":"mutable","name":"_agendaID","nameLocation":"2693:9:14","nodeType":"VariableDeclaration","scope":2136,"src":"2685:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2126,"name":"uint256","nodeType":"ElementaryTypeName","src":"2685:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2684:19:14"},"returnParameters":{"id":2135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2130,"mutability":"mutable","name":"countingYes","nameLocation":"2772:11:14","nodeType":"VariableDeclaration","scope":2136,"src":"2764:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2129,"name":"uint256","nodeType":"ElementaryTypeName","src":"2764:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2132,"mutability":"mutable","name":"countingNo","nameLocation":"2805:10:14","nodeType":"VariableDeclaration","scope":2136,"src":"2797:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2131,"name":"uint256","nodeType":"ElementaryTypeName","src":"2797:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2134,"mutability":"mutable","name":"countingAbstain","nameLocation":"2837:15:14","nodeType":"VariableDeclaration","scope":2136,"src":"2829:23:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2133,"name":"uint256","nodeType":"ElementaryTypeName","src":"2829:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2750:112:14"},"scope":2211,"src":"2661:202:14","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"8e3f5f83","id":2151,"implemented":false,"kind":"function","modifiers":[],"name":"getAgendaTimestamps","nameLocation":"2877:19:14","nodeType":"FunctionDefinition","parameters":{"id":2139,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2138,"mutability":"mutable","name":"_agendaID","nameLocation":"2905:9:14","nodeType":"VariableDeclaration","scope":2151,"src":"2897:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2137,"name":"uint256","nodeType":"ElementaryTypeName","src":"2897:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2896:19:14"},"returnParameters":{"id":2150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2141,"mutability":"mutable","name":"createdTimestamp","nameLocation":"2984:16:14","nodeType":"VariableDeclaration","scope":2151,"src":"2976:24:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2140,"name":"uint256","nodeType":"ElementaryTypeName","src":"2976:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2143,"mutability":"mutable","name":"noticeEndTimestamp","nameLocation":"3022:18:14","nodeType":"VariableDeclaration","scope":2151,"src":"3014:26:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2142,"name":"uint256","nodeType":"ElementaryTypeName","src":"3014:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2145,"mutability":"mutable","name":"votingStartedTimestamp","nameLocation":"3062:22:14","nodeType":"VariableDeclaration","scope":2151,"src":"3054:30:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2144,"name":"uint256","nodeType":"ElementaryTypeName","src":"3054:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2147,"mutability":"mutable","name":"votingEndTimestamp","nameLocation":"3106:18:14","nodeType":"VariableDeclaration","scope":2151,"src":"3098:26:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2146,"name":"uint256","nodeType":"ElementaryTypeName","src":"3098:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2149,"mutability":"mutable","name":"executedTimestamp","nameLocation":"3146:17:14","nodeType":"VariableDeclaration","scope":2151,"src":"3138:25:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2148,"name":"uint256","nodeType":"ElementaryTypeName","src":"3138:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2962:211:14"},"scope":2211,"src":"2868:306:14","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"e3bc145f","id":2156,"implemented":false,"kind":"function","modifiers":[],"name":"numAgendas","nameLocation":"3188:10:14","nodeType":"FunctionDefinition","parameters":{"id":2152,"nodeType":"ParameterList","parameters":[],"src":"3198:2:14"},"returnParameters":{"id":2155,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2154,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2156,"src":"3224:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2153,"name":"uint256","nodeType":"ElementaryTypeName","src":"3224:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3223:9:14"},"scope":2211,"src":"3179:54:14","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"86b646f2","id":2164,"implemented":false,"kind":"function","modifiers":[],"name":"getVoters","nameLocation":"3247:9:14","nodeType":"FunctionDefinition","parameters":{"id":2159,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2158,"mutability":"mutable","name":"_agendaID","nameLocation":"3265:9:14","nodeType":"VariableDeclaration","scope":2164,"src":"3257:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2157,"name":"uint256","nodeType":"ElementaryTypeName","src":"3257:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3256:19:14"},"returnParameters":{"id":2163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2162,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2164,"src":"3299:16:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2160,"name":"address","nodeType":"ElementaryTypeName","src":"3299:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2161,"nodeType":"ArrayTypeName","src":"3299:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"3298:18:14"},"scope":2211,"src":"3238:79:14","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"5c622a0e","id":2172,"implemented":false,"kind":"function","modifiers":[],"name":"getStatus","nameLocation":"3332:9:14","nodeType":"FunctionDefinition","parameters":{"id":2167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2166,"mutability":"mutable","name":"_createAgendaFees","nameLocation":"3350:17:14","nodeType":"VariableDeclaration","scope":2172,"src":"3342:25:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2165,"name":"uint256","nodeType":"ElementaryTypeName","src":"3342:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3341:27:14"},"returnParameters":{"id":2171,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2170,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2172,"src":"3392:22:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_AgendaStatus_$2872","typeString":"enum LibAgenda.AgendaStatus"},"typeName":{"id":2169,"nodeType":"UserDefinedTypeName","pathNode":{"id":2168,"name":"LibAgenda.AgendaStatus","nameLocations":["3392:9:14","3402:12:14"],"nodeType":"IdentifierPath","referencedDeclaration":2872,"src":"3392:22:14"},"referencedDeclaration":2872,"src":"3392:22:14","typeDescriptions":{"typeIdentifier":"t_enum$_AgendaStatus_$2872","typeString":"enum LibAgenda.AgendaStatus"}},"visibility":"internal"}],"src":"3391:24:14"},"scope":2211,"src":"3323:93:14","stateMutability":"pure","virtual":false,"visibility":"external"},{"functionSelector":"2522a32f","id":2177,"implemented":false,"kind":"function","modifiers":[],"name":"createAgendaFees","nameLocation":"3512:16:14","nodeType":"FunctionDefinition","parameters":{"id":2173,"nodeType":"ParameterList","parameters":[],"src":"3528:2:14"},"returnParameters":{"id":2176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2175,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2177,"src":"3554:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2174,"name":"uint256","nodeType":"ElementaryTypeName","src":"3554:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3553:9:14"},"scope":2211,"src":"3503:60:14","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"0af5aa3c","id":2182,"implemented":false,"kind":"function","modifiers":[],"name":"minimumNoticePeriodSeconds","nameLocation":"3577:26:14","nodeType":"FunctionDefinition","parameters":{"id":2178,"nodeType":"ParameterList","parameters":[],"src":"3603:2:14"},"returnParameters":{"id":2181,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2180,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2182,"src":"3629:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2179,"name":"uint256","nodeType":"ElementaryTypeName","src":"3629:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3628:9:14"},"scope":2211,"src":"3568:70:14","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"e3c36156","id":2187,"implemented":false,"kind":"function","modifiers":[],"name":"minimumVotingPeriodSeconds","nameLocation":"3652:26:14","nodeType":"FunctionDefinition","parameters":{"id":2183,"nodeType":"ParameterList","parameters":[],"src":"3678:2:14"},"returnParameters":{"id":2186,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2185,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2187,"src":"3704:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2184,"name":"uint256","nodeType":"ElementaryTypeName","src":"3704:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3703:9:14"},"scope":2211,"src":"3643:70:14","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"e7015fef","id":2192,"implemented":false,"kind":"function","modifiers":[],"name":"executingPeriodSeconds","nameLocation":"3727:22:14","nodeType":"FunctionDefinition","parameters":{"id":2188,"nodeType":"ParameterList","parameters":[],"src":"3749:2:14"},"returnParameters":{"id":2191,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2190,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2192,"src":"3775:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2189,"name":"uint256","nodeType":"ElementaryTypeName","src":"3775:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3774:9:14"},"scope":2211,"src":"3718:66:14","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"3c4a819c","id":2200,"implemented":false,"kind":"function","modifiers":[],"name":"agendas","nameLocation":"3798:7:14","nodeType":"FunctionDefinition","parameters":{"id":2195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2194,"mutability":"mutable","name":"_index","nameLocation":"3814:6:14","nodeType":"VariableDeclaration","scope":2200,"src":"3806:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2193,"name":"uint256","nodeType":"ElementaryTypeName","src":"3806:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3805:16:14"},"returnParameters":{"id":2199,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2198,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2200,"src":"3845:23:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Agenda_$2916_memory_ptr","typeString":"struct LibAgenda.Agenda"},"typeName":{"id":2197,"nodeType":"UserDefinedTypeName","pathNode":{"id":2196,"name":"LibAgenda.Agenda","nameLocations":["3845:9:14","3855:6:14"],"nodeType":"IdentifierPath","referencedDeclaration":2916,"src":"3845:16:14"},"referencedDeclaration":2916,"src":"3845:16:14","typeDescriptions":{"typeIdentifier":"t_struct$_Agenda_$2916_storage_ptr","typeString":"struct LibAgenda.Agenda"}},"visibility":"internal"}],"src":"3844:25:14"},"scope":2211,"src":"3789:81:14","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"4a47f59b","id":2210,"implemented":false,"kind":"function","modifiers":[],"name":"voterInfos","nameLocation":"3884:10:14","nodeType":"FunctionDefinition","parameters":{"id":2205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2202,"mutability":"mutable","name":"_index1","nameLocation":"3903:7:14","nodeType":"VariableDeclaration","scope":2210,"src":"3895:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2201,"name":"uint256","nodeType":"ElementaryTypeName","src":"3895:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2204,"mutability":"mutable","name":"_index2","nameLocation":"3920:7:14","nodeType":"VariableDeclaration","scope":2210,"src":"3912:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2203,"name":"address","nodeType":"ElementaryTypeName","src":"3912:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3894:34:14"},"returnParameters":{"id":2209,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2208,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2210,"src":"3952:22:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Voter_$2884_memory_ptr","typeString":"struct LibAgenda.Voter"},"typeName":{"id":2207,"nodeType":"UserDefinedTypeName","pathNode":{"id":2206,"name":"LibAgenda.Voter","nameLocations":["3952:9:14","3962:5:14"],"nodeType":"IdentifierPath","referencedDeclaration":2884,"src":"3952:15:14"},"referencedDeclaration":2884,"src":"3952:15:14","typeDescriptions":{"typeIdentifier":"t_struct$_Voter_$2884_storage_ptr","typeString":"struct LibAgenda.Voter"}},"visibility":"internal"}],"src":"3951:24:14"},"scope":2211,"src":"3875:101:14","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2212,"src":"174:3804:14","usedErrors":[]}],"src":"32:3947:14"},"id":14},"contracts/interfaces/IDAOCommittee.sol":{"ast":{"absolutePath":"contracts/interfaces/IDAOCommittee.sol","exportedSymbols":{"IDAOCommittee":[2475],"IStorageStateCommittee":[2863]},"id":2476,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2213,"literals":["solidity","^","0.8",".17"],"nodeType":"PragmaDirective","src":"32:24:15"},{"id":2214,"literals":["abicoder","v2"],"nodeType":"PragmaDirective","src":"57:19:15"},{"absolutePath":"contracts/interfaces/IStorageStateCommittee.sol","file":"../interfaces/IStorageStateCommittee.sol","id":2216,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2476,"sourceUnit":2864,"src":"78:82:15","symbolAliases":[{"foreign":{"id":2215,"name":"IStorageStateCommittee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2863,"src":"87:22:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2217,"name":"IStorageStateCommittee","nameLocations":["189:22:15"],"nodeType":"IdentifierPath","referencedDeclaration":2863,"src":"189:22:15"},"id":2218,"nodeType":"InheritanceSpecifier","src":"189:22:15"}],"canonicalName":"IDAOCommittee","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":2475,"linearizedBaseContracts":[2475,2863],"name":"IDAOCommittee","nameLocation":"172:13:15","nodeType":"ContractDefinition","nodes":[{"functionSelector":"7657f20a","id":2223,"implemented":false,"kind":"function","modifiers":[],"name":"setSeigManager","nameLocation":"241:14:15","nodeType":"FunctionDefinition","parameters":{"id":2221,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2220,"mutability":"mutable","name":"_seigManager","nameLocation":"264:12:15","nodeType":"VariableDeclaration","scope":2223,"src":"256:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2219,"name":"address","nodeType":"ElementaryTypeName","src":"256:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"255:22:15"},"returnParameters":{"id":2222,"nodeType":"ParameterList","parameters":[],"src":"286:0:15"},"scope":2475,"src":"232:55:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"69154295","id":2231,"implemented":false,"kind":"function","modifiers":[],"name":"setCandidatesSeigManager","nameLocation":"301:24:15","nodeType":"FunctionDefinition","parameters":{"id":2229,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2226,"mutability":"mutable","name":"_candidateContracts","nameLocation":"345:19:15","nodeType":"VariableDeclaration","scope":2231,"src":"326:38:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2224,"name":"address","nodeType":"ElementaryTypeName","src":"326:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2225,"nodeType":"ArrayTypeName","src":"326:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":2228,"mutability":"mutable","name":"_seigManager","nameLocation":"374:12:15","nodeType":"VariableDeclaration","scope":2231,"src":"366:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2227,"name":"address","nodeType":"ElementaryTypeName","src":"366:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"325:62:15"},"returnParameters":{"id":2230,"nodeType":"ParameterList","parameters":[],"src":"396:0:15"},"scope":2475,"src":"292:105:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"5c43030f","id":2239,"implemented":false,"kind":"function","modifiers":[],"name":"setCandidatesCommittee","nameLocation":"411:22:15","nodeType":"FunctionDefinition","parameters":{"id":2237,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2234,"mutability":"mutable","name":"_candidateContracts","nameLocation":"453:19:15","nodeType":"VariableDeclaration","scope":2239,"src":"434:38:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2232,"name":"address","nodeType":"ElementaryTypeName","src":"434:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2233,"nodeType":"ArrayTypeName","src":"434:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":2236,"mutability":"mutable","name":"_committee","nameLocation":"482:10:15","nodeType":"VariableDeclaration","scope":2239,"src":"474:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2235,"name":"address","nodeType":"ElementaryTypeName","src":"474:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"433:60:15"},"returnParameters":{"id":2238,"nodeType":"ParameterList","parameters":[],"src":"502:0:15"},"scope":2475,"src":"402:101:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"2af60ff4","id":2244,"implemented":false,"kind":"function","modifiers":[],"name":"setLayer2Registry","nameLocation":"517:17:15","nodeType":"FunctionDefinition","parameters":{"id":2242,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2241,"mutability":"mutable","name":"_layer2Registry","nameLocation":"543:15:15","nodeType":"VariableDeclaration","scope":2244,"src":"535:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2240,"name":"address","nodeType":"ElementaryTypeName","src":"535:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"534:25:15"},"returnParameters":{"id":2243,"nodeType":"ParameterList","parameters":[],"src":"568:0:15"},"scope":2475,"src":"508:61:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"49c39f14","id":2249,"implemented":false,"kind":"function","modifiers":[],"name":"setAgendaManager","nameLocation":"583:16:15","nodeType":"FunctionDefinition","parameters":{"id":2247,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2246,"mutability":"mutable","name":"_agendaManager","nameLocation":"608:14:15","nodeType":"VariableDeclaration","scope":2249,"src":"600:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2245,"name":"address","nodeType":"ElementaryTypeName","src":"600:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"599:24:15"},"returnParameters":{"id":2248,"nodeType":"ParameterList","parameters":[],"src":"632:0:15"},"scope":2475,"src":"574:59:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"047f52f2","id":2254,"implemented":false,"kind":"function","modifiers":[],"name":"setCandidateFactory","nameLocation":"647:19:15","nodeType":"FunctionDefinition","parameters":{"id":2252,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2251,"mutability":"mutable","name":"_candidateFactory","nameLocation":"675:17:15","nodeType":"VariableDeclaration","scope":2254,"src":"667:25:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2250,"name":"address","nodeType":"ElementaryTypeName","src":"667:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"666:27:15"},"returnParameters":{"id":2253,"nodeType":"ParameterList","parameters":[],"src":"702:0:15"},"scope":2475,"src":"638:65:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"4d288fec","id":2259,"implemented":false,"kind":"function","modifiers":[],"name":"setTon","nameLocation":"717:6:15","nodeType":"FunctionDefinition","parameters":{"id":2257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2256,"mutability":"mutable","name":"_ton","nameLocation":"732:4:15","nodeType":"VariableDeclaration","scope":2259,"src":"724:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2255,"name":"address","nodeType":"ElementaryTypeName","src":"724:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"723:14:15"},"returnParameters":{"id":2258,"nodeType":"ParameterList","parameters":[],"src":"746:0:15"},"scope":2475,"src":"708:39:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"5ebe7622","id":2264,"implemented":false,"kind":"function","modifiers":[],"name":"setActivityRewardPerSecond","nameLocation":"761:26:15","nodeType":"FunctionDefinition","parameters":{"id":2262,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2261,"mutability":"mutable","name":"_value","nameLocation":"796:6:15","nodeType":"VariableDeclaration","scope":2264,"src":"788:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2260,"name":"uint256","nodeType":"ElementaryTypeName","src":"788:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"787:16:15"},"returnParameters":{"id":2263,"nodeType":"ParameterList","parameters":[],"src":"812:0:15"},"scope":2475,"src":"752:61:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"4b799db1","id":2269,"implemented":false,"kind":"function","modifiers":[],"name":"setDaoVault","nameLocation":"827:11:15","nodeType":"FunctionDefinition","parameters":{"id":2267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2266,"mutability":"mutable","name":"_daoVault","nameLocation":"847:9:15","nodeType":"VariableDeclaration","scope":2269,"src":"839:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2265,"name":"address","nodeType":"ElementaryTypeName","src":"839:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"838:19:15"},"returnParameters":{"id":2268,"nodeType":"ParameterList","parameters":[],"src":"866:0:15"},"scope":2475,"src":"818:49:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"6da8f3ce","id":2276,"implemented":false,"kind":"function","modifiers":[],"name":"increaseMaxMember","nameLocation":"882:17:15","nodeType":"FunctionDefinition","parameters":{"id":2274,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2271,"mutability":"mutable","name":"_newMaxMember","nameLocation":"908:13:15","nodeType":"VariableDeclaration","scope":2276,"src":"900:21:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2270,"name":"uint256","nodeType":"ElementaryTypeName","src":"900:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2273,"mutability":"mutable","name":"_quorum","nameLocation":"931:7:15","nodeType":"VariableDeclaration","scope":2276,"src":"923:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2272,"name":"uint256","nodeType":"ElementaryTypeName","src":"923:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"899:40:15"},"returnParameters":{"id":2275,"nodeType":"ParameterList","parameters":[],"src":"948:0:15"},"scope":2475,"src":"873:76:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"50e8f17d","id":2283,"implemented":false,"kind":"function","modifiers":[],"name":"decreaseMaxMember","nameLocation":"963:17:15","nodeType":"FunctionDefinition","parameters":{"id":2281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2278,"mutability":"mutable","name":"_reducingMemberIndex","nameLocation":"989:20:15","nodeType":"VariableDeclaration","scope":2283,"src":"981:28:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2277,"name":"uint256","nodeType":"ElementaryTypeName","src":"981:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2280,"mutability":"mutable","name":"_quorum","nameLocation":"1019:7:15","nodeType":"VariableDeclaration","scope":2283,"src":"1011:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2279,"name":"uint256","nodeType":"ElementaryTypeName","src":"1011:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"980:47:15"},"returnParameters":{"id":2282,"nodeType":"ParameterList","parameters":[],"src":"1036:0:15"},"scope":2475,"src":"954:83:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"5fba7a56","id":2288,"implemented":false,"kind":"function","modifiers":[],"name":"createCandidate","nameLocation":"1051:15:15","nodeType":"FunctionDefinition","parameters":{"id":2286,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2285,"mutability":"mutable","name":"_memo","nameLocation":"1083:5:15","nodeType":"VariableDeclaration","scope":2288,"src":"1067:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":2284,"name":"string","nodeType":"ElementaryTypeName","src":"1067:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1066:23:15"},"returnParameters":{"id":2287,"nodeType":"ParameterList","parameters":[],"src":"1098:0:15"},"scope":2475,"src":"1042:57:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"a1ea3525","id":2295,"implemented":false,"kind":"function","modifiers":[],"name":"registerLayer2Candidate","nameLocation":"1113:23:15","nodeType":"FunctionDefinition","parameters":{"id":2293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2290,"mutability":"mutable","name":"_layer2","nameLocation":"1145:7:15","nodeType":"VariableDeclaration","scope":2295,"src":"1137:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2289,"name":"address","nodeType":"ElementaryTypeName","src":"1137:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2292,"mutability":"mutable","name":"_memo","nameLocation":"1168:5:15","nodeType":"VariableDeclaration","scope":2295,"src":"1154:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2291,"name":"string","nodeType":"ElementaryTypeName","src":"1154:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1136:38:15"},"returnParameters":{"id":2294,"nodeType":"ParameterList","parameters":[],"src":"1183:0:15"},"scope":2475,"src":"1104:80:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"440b69ad","id":2304,"implemented":false,"kind":"function","modifiers":[],"name":"registerLayer2CandidateByOwner","nameLocation":"1198:30:15","nodeType":"FunctionDefinition","parameters":{"id":2302,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2297,"mutability":"mutable","name":"_operator","nameLocation":"1237:9:15","nodeType":"VariableDeclaration","scope":2304,"src":"1229:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2296,"name":"address","nodeType":"ElementaryTypeName","src":"1229:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2299,"mutability":"mutable","name":"_layer2","nameLocation":"1256:7:15","nodeType":"VariableDeclaration","scope":2304,"src":"1248:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2298,"name":"address","nodeType":"ElementaryTypeName","src":"1248:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2301,"mutability":"mutable","name":"_memo","nameLocation":"1279:5:15","nodeType":"VariableDeclaration","scope":2304,"src":"1265:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2300,"name":"string","nodeType":"ElementaryTypeName","src":"1265:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1228:57:15"},"returnParameters":{"id":2303,"nodeType":"ParameterList","parameters":[],"src":"1294:0:15"},"scope":2475,"src":"1189:106:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"11f19e04","id":2311,"implemented":false,"kind":"function","modifiers":[],"name":"changeMember","nameLocation":"1309:12:15","nodeType":"FunctionDefinition","parameters":{"id":2307,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2306,"mutability":"mutable","name":"_memberIndex","nameLocation":"1330:12:15","nodeType":"VariableDeclaration","scope":2311,"src":"1322:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2305,"name":"uint256","nodeType":"ElementaryTypeName","src":"1322:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1321:22:15"},"returnParameters":{"id":2310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2309,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2311,"src":"1362:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2308,"name":"bool","nodeType":"ElementaryTypeName","src":"1362:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1361:6:15"},"scope":2475,"src":"1300:68:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"c4ef9c00","id":2316,"implemented":false,"kind":"function","modifiers":[],"name":"retireMember","nameLocation":"1382:12:15","nodeType":"FunctionDefinition","parameters":{"id":2312,"nodeType":"ParameterList","parameters":[],"src":"1394:2:15"},"returnParameters":{"id":2315,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2314,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2316,"src":"1415:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2313,"name":"bool","nodeType":"ElementaryTypeName","src":"1415:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1414:6:15"},"scope":2475,"src":"1373:48:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"c7cac42c","id":2323,"implemented":false,"kind":"function","modifiers":[],"name":"setMemoOnCandidate","nameLocation":"1435:18:15","nodeType":"FunctionDefinition","parameters":{"id":2321,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2318,"mutability":"mutable","name":"_candidate","nameLocation":"1462:10:15","nodeType":"VariableDeclaration","scope":2323,"src":"1454:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2317,"name":"address","nodeType":"ElementaryTypeName","src":"1454:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2320,"mutability":"mutable","name":"_memo","nameLocation":"1490:5:15","nodeType":"VariableDeclaration","scope":2323,"src":"1474:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":2319,"name":"string","nodeType":"ElementaryTypeName","src":"1474:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1453:43:15"},"returnParameters":{"id":2322,"nodeType":"ParameterList","parameters":[],"src":"1505:0:15"},"scope":2475,"src":"1426:80:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"607cf734","id":2330,"implemented":false,"kind":"function","modifiers":[],"name":"setMemoOnCandidateContract","nameLocation":"1520:26:15","nodeType":"FunctionDefinition","parameters":{"id":2328,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2325,"mutability":"mutable","name":"_candidate","nameLocation":"1555:10:15","nodeType":"VariableDeclaration","scope":2330,"src":"1547:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2324,"name":"address","nodeType":"ElementaryTypeName","src":"1547:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2327,"mutability":"mutable","name":"_memo","nameLocation":"1583:5:15","nodeType":"VariableDeclaration","scope":2330,"src":"1567:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":2326,"name":"string","nodeType":"ElementaryTypeName","src":"1567:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1546:43:15"},"returnParameters":{"id":2329,"nodeType":"ParameterList","parameters":[],"src":"1598:0:15"},"scope":2475,"src":"1511:88:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"4273ca16","id":2343,"implemented":false,"kind":"function","modifiers":[],"name":"onApprove","nameLocation":"1614:9:15","nodeType":"FunctionDefinition","parameters":{"id":2339,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2332,"mutability":"mutable","name":"owner","nameLocation":"1641:5:15","nodeType":"VariableDeclaration","scope":2343,"src":"1633:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2331,"name":"address","nodeType":"ElementaryTypeName","src":"1633:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2334,"mutability":"mutable","name":"spender","nameLocation":"1664:7:15","nodeType":"VariableDeclaration","scope":2343,"src":"1656:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2333,"name":"address","nodeType":"ElementaryTypeName","src":"1656:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2336,"mutability":"mutable","name":"tonAmount","nameLocation":"1689:9:15","nodeType":"VariableDeclaration","scope":2343,"src":"1681:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2335,"name":"uint256","nodeType":"ElementaryTypeName","src":"1681:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2338,"mutability":"mutable","name":"data","nameLocation":"1723:4:15","nodeType":"VariableDeclaration","scope":2343,"src":"1708:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2337,"name":"bytes","nodeType":"ElementaryTypeName","src":"1708:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1623:110:15"},"returnParameters":{"id":2342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2341,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2343,"src":"1768:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2340,"name":"bool","nodeType":"ElementaryTypeName","src":"1768:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1767:6:15"},"scope":2475,"src":"1605:169:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"c1ba4e59","id":2348,"implemented":false,"kind":"function","modifiers":[],"name":"setQuorum","nameLocation":"1789:9:15","nodeType":"FunctionDefinition","parameters":{"id":2346,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2345,"mutability":"mutable","name":"_quorum","nameLocation":"1807:7:15","nodeType":"VariableDeclaration","scope":2348,"src":"1799:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2344,"name":"uint256","nodeType":"ElementaryTypeName","src":"1799:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1798:17:15"},"returnParameters":{"id":2347,"nodeType":"ParameterList","parameters":[],"src":"1824:0:15"},"scope":2475,"src":"1780:45:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"b4f69b6a","id":2353,"implemented":false,"kind":"function","modifiers":[],"name":"setCreateAgendaFees","nameLocation":"1839:19:15","nodeType":"FunctionDefinition","parameters":{"id":2351,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2350,"mutability":"mutable","name":"_fees","nameLocation":"1867:5:15","nodeType":"VariableDeclaration","scope":2353,"src":"1859:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2349,"name":"uint256","nodeType":"ElementaryTypeName","src":"1859:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1858:15:15"},"returnParameters":{"id":2352,"nodeType":"ParameterList","parameters":[],"src":"1882:0:15"},"scope":2475,"src":"1830:53:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"23d09fdf","id":2358,"implemented":false,"kind":"function","modifiers":[],"name":"setMinimumNoticePeriodSeconds","nameLocation":"1897:29:15","nodeType":"FunctionDefinition","parameters":{"id":2356,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2355,"mutability":"mutable","name":"_minimumNoticePeriod","nameLocation":"1935:20:15","nodeType":"VariableDeclaration","scope":2358,"src":"1927:28:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2354,"name":"uint256","nodeType":"ElementaryTypeName","src":"1927:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1926:30:15"},"returnParameters":{"id":2357,"nodeType":"ParameterList","parameters":[],"src":"1965:0:15"},"scope":2475,"src":"1888:78:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"c0bc5304","id":2363,"implemented":false,"kind":"function","modifiers":[],"name":"setMinimumVotingPeriodSeconds","nameLocation":"1980:29:15","nodeType":"FunctionDefinition","parameters":{"id":2361,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2360,"mutability":"mutable","name":"_minimumVotingPeriod","nameLocation":"2018:20:15","nodeType":"VariableDeclaration","scope":2363,"src":"2010:28:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2359,"name":"uint256","nodeType":"ElementaryTypeName","src":"2010:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2009:30:15"},"returnParameters":{"id":2362,"nodeType":"ParameterList","parameters":[],"src":"2048:0:15"},"scope":2475,"src":"1971:78:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"69b1227a","id":2368,"implemented":false,"kind":"function","modifiers":[],"name":"setExecutingPeriodSeconds","nameLocation":"2063:25:15","nodeType":"FunctionDefinition","parameters":{"id":2366,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2365,"mutability":"mutable","name":"_executingPeriodSeconds","nameLocation":"2097:23:15","nodeType":"VariableDeclaration","scope":2368,"src":"2089:31:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2364,"name":"uint256","nodeType":"ElementaryTypeName","src":"2089:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2088:33:15"},"returnParameters":{"id":2367,"nodeType":"ParameterList","parameters":[],"src":"2130:0:15"},"scope":2475,"src":"2054:77:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"24f99b1e","id":2377,"implemented":false,"kind":"function","modifiers":[],"name":"castVote","nameLocation":"2145:8:15","nodeType":"FunctionDefinition","parameters":{"id":2375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2370,"mutability":"mutable","name":"_AgendaID","nameLocation":"2162:9:15","nodeType":"VariableDeclaration","scope":2377,"src":"2154:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2369,"name":"uint256","nodeType":"ElementaryTypeName","src":"2154:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2372,"mutability":"mutable","name":"_vote","nameLocation":"2181:5:15","nodeType":"VariableDeclaration","scope":2377,"src":"2173:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2371,"name":"uint256","nodeType":"ElementaryTypeName","src":"2173:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2374,"mutability":"mutable","name":"_comment","nameLocation":"2204:8:15","nodeType":"VariableDeclaration","scope":2377,"src":"2188:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":2373,"name":"string","nodeType":"ElementaryTypeName","src":"2188:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2153:60:15"},"returnParameters":{"id":2376,"nodeType":"ParameterList","parameters":[],"src":"2222:0:15"},"scope":2475,"src":"2136:87:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"885b4696","id":2382,"implemented":false,"kind":"function","modifiers":[],"name":"endAgendaVoting","nameLocation":"2237:15:15","nodeType":"FunctionDefinition","parameters":{"id":2380,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2379,"mutability":"mutable","name":"_agendaID","nameLocation":"2261:9:15","nodeType":"VariableDeclaration","scope":2382,"src":"2253:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2378,"name":"uint256","nodeType":"ElementaryTypeName","src":"2253:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2252:19:15"},"returnParameters":{"id":2381,"nodeType":"ParameterList","parameters":[],"src":"2280:0:15"},"scope":2475,"src":"2228:53:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"216f486b","id":2387,"implemented":false,"kind":"function","modifiers":[],"name":"executeAgenda","nameLocation":"2295:13:15","nodeType":"FunctionDefinition","parameters":{"id":2385,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2384,"mutability":"mutable","name":"_AgendaID","nameLocation":"2317:9:15","nodeType":"VariableDeclaration","scope":2387,"src":"2309:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2383,"name":"uint256","nodeType":"ElementaryTypeName","src":"2309:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2308:19:15"},"returnParameters":{"id":2386,"nodeType":"ParameterList","parameters":[],"src":"2336:0:15"},"scope":2475,"src":"2286:51:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"805aca20","id":2396,"implemented":false,"kind":"function","modifiers":[],"name":"setAgendaStatus","nameLocation":"2351:15:15","nodeType":"FunctionDefinition","parameters":{"id":2394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2389,"mutability":"mutable","name":"_agendaID","nameLocation":"2375:9:15","nodeType":"VariableDeclaration","scope":2396,"src":"2367:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2388,"name":"uint256","nodeType":"ElementaryTypeName","src":"2367:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2391,"mutability":"mutable","name":"_status","nameLocation":"2394:7:15","nodeType":"VariableDeclaration","scope":2396,"src":"2386:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2390,"name":"uint256","nodeType":"ElementaryTypeName","src":"2386:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2393,"mutability":"mutable","name":"_result","nameLocation":"2411:7:15","nodeType":"VariableDeclaration","scope":2396,"src":"2403:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2392,"name":"uint256","nodeType":"ElementaryTypeName","src":"2403:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2366:53:15"},"returnParameters":{"id":2395,"nodeType":"ParameterList","parameters":[],"src":"2428:0:15"},"scope":2475,"src":"2342:87:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"89ea4300","id":2403,"implemented":false,"kind":"function","modifiers":[],"name":"updateSeigniorage","nameLocation":"2444:17:15","nodeType":"FunctionDefinition","parameters":{"id":2399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2398,"mutability":"mutable","name":"_candidate","nameLocation":"2470:10:15","nodeType":"VariableDeclaration","scope":2403,"src":"2462:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2397,"name":"address","nodeType":"ElementaryTypeName","src":"2462:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2461:20:15"},"returnParameters":{"id":2402,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2401,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2403,"src":"2500:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2400,"name":"bool","nodeType":"ElementaryTypeName","src":"2500:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2499:6:15"},"scope":2475,"src":"2435:71:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"57f0a867","id":2411,"implemented":false,"kind":"function","modifiers":[],"name":"updateSeigniorages","nameLocation":"2520:18:15","nodeType":"FunctionDefinition","parameters":{"id":2407,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2406,"mutability":"mutable","name":"_candidates","nameLocation":"2558:11:15","nodeType":"VariableDeclaration","scope":2411,"src":"2539:30:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2404,"name":"address","nodeType":"ElementaryTypeName","src":"2539:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2405,"nodeType":"ArrayTypeName","src":"2539:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"2538:32:15"},"returnParameters":{"id":2410,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2409,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2411,"src":"2589:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2408,"name":"bool","nodeType":"ElementaryTypeName","src":"2589:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2588:6:15"},"scope":2475,"src":"2511:84:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"6becff27","id":2416,"implemented":false,"kind":"function","modifiers":[],"name":"claimActivityReward","nameLocation":"2609:19:15","nodeType":"FunctionDefinition","parameters":{"id":2414,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2413,"mutability":"mutable","name":"_receiver","nameLocation":"2637:9:15","nodeType":"VariableDeclaration","scope":2416,"src":"2629:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2412,"name":"address","nodeType":"ElementaryTypeName","src":"2629:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2628:19:15"},"returnParameters":{"id":2415,"nodeType":"ParameterList","parameters":[],"src":"2656:0:15"},"scope":2475,"src":"2600:57:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"d51b9e93","id":2423,"implemented":false,"kind":"function","modifiers":[],"name":"isCandidate","nameLocation":"2672:11:15","nodeType":"FunctionDefinition","parameters":{"id":2419,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2418,"mutability":"mutable","name":"_candidate","nameLocation":"2692:10:15","nodeType":"VariableDeclaration","scope":2423,"src":"2684:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2417,"name":"address","nodeType":"ElementaryTypeName","src":"2684:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2683:20:15"},"returnParameters":{"id":2422,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2421,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2423,"src":"2727:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2420,"name":"bool","nodeType":"ElementaryTypeName","src":"2727:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2726:6:15"},"scope":2475,"src":"2663:70:15","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"ad6675dc","id":2430,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupplyOnCandidate","nameLocation":"2747:22:15","nodeType":"FunctionDefinition","parameters":{"id":2426,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2425,"mutability":"mutable","name":"_candidate","nameLocation":"2778:10:15","nodeType":"VariableDeclaration","scope":2430,"src":"2770:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2424,"name":"address","nodeType":"ElementaryTypeName","src":"2770:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2769:20:15"},"returnParameters":{"id":2429,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2428,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2430,"src":"2813:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2427,"name":"uint256","nodeType":"ElementaryTypeName","src":"2813:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2812:9:15"},"scope":2475,"src":"2738:84:15","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"d525f04f","id":2439,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOfOnCandidate","nameLocation":"2836:20:15","nodeType":"FunctionDefinition","parameters":{"id":2435,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2432,"mutability":"mutable","name":"_candidate","nameLocation":"2865:10:15","nodeType":"VariableDeclaration","scope":2439,"src":"2857:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2431,"name":"address","nodeType":"ElementaryTypeName","src":"2857:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2434,"mutability":"mutable","name":"_account","nameLocation":"2885:8:15","nodeType":"VariableDeclaration","scope":2439,"src":"2877:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2433,"name":"address","nodeType":"ElementaryTypeName","src":"2877:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2856:38:15"},"returnParameters":{"id":2438,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2437,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2439,"src":"2918:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2436,"name":"uint256","nodeType":"ElementaryTypeName","src":"2918:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2917:9:15"},"scope":2475,"src":"2827:100:15","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"78767d33","id":2446,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupplyOnCandidateContract","nameLocation":"2941:30:15","nodeType":"FunctionDefinition","parameters":{"id":2442,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2441,"mutability":"mutable","name":"_candidateContract","nameLocation":"2980:18:15","nodeType":"VariableDeclaration","scope":2446,"src":"2972:26:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2440,"name":"address","nodeType":"ElementaryTypeName","src":"2972:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2971:28:15"},"returnParameters":{"id":2445,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2444,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2446,"src":"3023:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2443,"name":"uint256","nodeType":"ElementaryTypeName","src":"3023:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3022:9:15"},"scope":2475,"src":"2932:100:15","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"16f7f982","id":2455,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOfOnCandidateContract","nameLocation":"3046:28:15","nodeType":"FunctionDefinition","parameters":{"id":2451,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2448,"mutability":"mutable","name":"_candidateContract","nameLocation":"3083:18:15","nodeType":"VariableDeclaration","scope":2455,"src":"3075:26:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2447,"name":"address","nodeType":"ElementaryTypeName","src":"3075:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2450,"mutability":"mutable","name":"_account","nameLocation":"3111:8:15","nodeType":"VariableDeclaration","scope":2455,"src":"3103:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2449,"name":"address","nodeType":"ElementaryTypeName","src":"3103:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3074:46:15"},"returnParameters":{"id":2454,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2453,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2455,"src":"3144:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2452,"name":"uint256","nodeType":"ElementaryTypeName","src":"3144:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3143:9:15"},"scope":2475,"src":"3037:116:15","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"773b7f65","id":2460,"implemented":false,"kind":"function","modifiers":[],"name":"candidatesLength","nameLocation":"3167:16:15","nodeType":"FunctionDefinition","parameters":{"id":2456,"nodeType":"ParameterList","parameters":[],"src":"3183:2:15"},"returnParameters":{"id":2459,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2458,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2460,"src":"3209:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2457,"name":"uint256","nodeType":"ElementaryTypeName","src":"3209:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3208:9:15"},"scope":2475,"src":"3158:60:15","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"561a1dab","id":2467,"implemented":false,"kind":"function","modifiers":[],"name":"isExistCandidate","nameLocation":"3232:16:15","nodeType":"FunctionDefinition","parameters":{"id":2463,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2462,"mutability":"mutable","name":"_candidate","nameLocation":"3257:10:15","nodeType":"VariableDeclaration","scope":2467,"src":"3249:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2461,"name":"address","nodeType":"ElementaryTypeName","src":"3249:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3248:20:15"},"returnParameters":{"id":2466,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2465,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2467,"src":"3292:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2464,"name":"bool","nodeType":"ElementaryTypeName","src":"3292:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3291:6:15"},"scope":2475,"src":"3223:75:15","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"9932e94c","id":2474,"implemented":false,"kind":"function","modifiers":[],"name":"getClaimableActivityReward","nameLocation":"3312:26:15","nodeType":"FunctionDefinition","parameters":{"id":2470,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2469,"mutability":"mutable","name":"_candidate","nameLocation":"3347:10:15","nodeType":"VariableDeclaration","scope":2474,"src":"3339:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2468,"name":"address","nodeType":"ElementaryTypeName","src":"3339:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3338:20:15"},"returnParameters":{"id":2473,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2472,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2474,"src":"3382:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2471,"name":"uint256","nodeType":"ElementaryTypeName","src":"3382:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3381:9:15"},"scope":2475,"src":"3303:88:15","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2476,"src":"162:3231:15","usedErrors":[]}],"src":"32:3363:15"},"id":15},"contracts/interfaces/IDAOVault.sol":{"ast":{"absolutePath":"contracts/interfaces/IDAOVault.sol","exportedSymbols":{"IDAOVault":[2534]},"id":2535,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2477,"literals":["solidity","^","0.8",".17"],"nodeType":"PragmaDirective","src":"32:24:16"},{"abstract":false,"baseContracts":[],"canonicalName":"IDAOVault","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":2534,"linearizedBaseContracts":[2534],"name":"IDAOVault","nameLocation":"68:9:16","nodeType":"ContractDefinition","nodes":[{"functionSelector":"230da4f2","id":2482,"implemented":false,"kind":"function","modifiers":[],"name":"setTON","nameLocation":"93:6:16","nodeType":"FunctionDefinition","parameters":{"id":2480,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2479,"mutability":"mutable","name":"_ton","nameLocation":"108:4:16","nodeType":"VariableDeclaration","scope":2482,"src":"100:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2478,"name":"address","nodeType":"ElementaryTypeName","src":"100:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"99:14:16"},"returnParameters":{"id":2481,"nodeType":"ParameterList","parameters":[],"src":"122:0:16"},"scope":2534,"src":"84:39:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"662d12b1","id":2487,"implemented":false,"kind":"function","modifiers":[],"name":"setWTON","nameLocation":"137:7:16","nodeType":"FunctionDefinition","parameters":{"id":2485,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2484,"mutability":"mutable","name":"_wton","nameLocation":"153:5:16","nodeType":"VariableDeclaration","scope":2487,"src":"145:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2483,"name":"address","nodeType":"ElementaryTypeName","src":"145:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"144:15:16"},"returnParameters":{"id":2486,"nodeType":"ParameterList","parameters":[],"src":"168:0:16"},"scope":2534,"src":"128:41:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"52cceeb6","id":2494,"implemented":false,"kind":"function","modifiers":[],"name":"approveTON","nameLocation":"183:10:16","nodeType":"FunctionDefinition","parameters":{"id":2492,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2489,"mutability":"mutable","name":"_to","nameLocation":"202:3:16","nodeType":"VariableDeclaration","scope":2494,"src":"194:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2488,"name":"address","nodeType":"ElementaryTypeName","src":"194:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2491,"mutability":"mutable","name":"_amount","nameLocation":"215:7:16","nodeType":"VariableDeclaration","scope":2494,"src":"207:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2490,"name":"uint256","nodeType":"ElementaryTypeName","src":"207:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"193:30:16"},"returnParameters":{"id":2493,"nodeType":"ParameterList","parameters":[],"src":"232:0:16"},"scope":2534,"src":"174:59:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"54e68c9a","id":2501,"implemented":false,"kind":"function","modifiers":[],"name":"approveWTON","nameLocation":"247:11:16","nodeType":"FunctionDefinition","parameters":{"id":2499,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2496,"mutability":"mutable","name":"_to","nameLocation":"267:3:16","nodeType":"VariableDeclaration","scope":2501,"src":"259:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2495,"name":"address","nodeType":"ElementaryTypeName","src":"259:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2498,"mutability":"mutable","name":"_amount","nameLocation":"280:7:16","nodeType":"VariableDeclaration","scope":2501,"src":"272:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2497,"name":"uint256","nodeType":"ElementaryTypeName","src":"272:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"258:30:16"},"returnParameters":{"id":2500,"nodeType":"ParameterList","parameters":[],"src":"297:0:16"},"scope":2534,"src":"238:60:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"a8e5e4aa","id":2510,"implemented":false,"kind":"function","modifiers":[],"name":"approveERC20","nameLocation":"312:12:16","nodeType":"FunctionDefinition","parameters":{"id":2508,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2503,"mutability":"mutable","name":"_token","nameLocation":"333:6:16","nodeType":"VariableDeclaration","scope":2510,"src":"325:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2502,"name":"address","nodeType":"ElementaryTypeName","src":"325:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2505,"mutability":"mutable","name":"_to","nameLocation":"349:3:16","nodeType":"VariableDeclaration","scope":2510,"src":"341:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2504,"name":"address","nodeType":"ElementaryTypeName","src":"341:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2507,"mutability":"mutable","name":"_amount","nameLocation":"362:7:16","nodeType":"VariableDeclaration","scope":2510,"src":"354:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2506,"name":"uint256","nodeType":"ElementaryTypeName","src":"354:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"324:46:16"},"returnParameters":{"id":2509,"nodeType":"ParameterList","parameters":[],"src":"379:0:16"},"scope":2534,"src":"303:77:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"ef0d5594","id":2517,"implemented":false,"kind":"function","modifiers":[],"name":"claimTON","nameLocation":"394:8:16","nodeType":"FunctionDefinition","parameters":{"id":2515,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2512,"mutability":"mutable","name":"_to","nameLocation":"411:3:16","nodeType":"VariableDeclaration","scope":2517,"src":"403:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2511,"name":"address","nodeType":"ElementaryTypeName","src":"403:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2514,"mutability":"mutable","name":"_amount","nameLocation":"424:7:16","nodeType":"VariableDeclaration","scope":2517,"src":"416:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2513,"name":"uint256","nodeType":"ElementaryTypeName","src":"416:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"402:30:16"},"returnParameters":{"id":2516,"nodeType":"ParameterList","parameters":[],"src":"441:0:16"},"scope":2534,"src":"385:57:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"f52bba70","id":2524,"implemented":false,"kind":"function","modifiers":[],"name":"claimWTON","nameLocation":"456:9:16","nodeType":"FunctionDefinition","parameters":{"id":2522,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2519,"mutability":"mutable","name":"_to","nameLocation":"474:3:16","nodeType":"VariableDeclaration","scope":2524,"src":"466:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2518,"name":"address","nodeType":"ElementaryTypeName","src":"466:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2521,"mutability":"mutable","name":"_amount","nameLocation":"487:7:16","nodeType":"VariableDeclaration","scope":2524,"src":"479:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2520,"name":"uint256","nodeType":"ElementaryTypeName","src":"479:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"465:30:16"},"returnParameters":{"id":2523,"nodeType":"ParameterList","parameters":[],"src":"504:0:16"},"scope":2534,"src":"447:58:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"f848091a","id":2533,"implemented":false,"kind":"function","modifiers":[],"name":"claimERC20","nameLocation":"519:10:16","nodeType":"FunctionDefinition","parameters":{"id":2531,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2526,"mutability":"mutable","name":"_token","nameLocation":"538:6:16","nodeType":"VariableDeclaration","scope":2533,"src":"530:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2525,"name":"address","nodeType":"ElementaryTypeName","src":"530:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2528,"mutability":"mutable","name":"_to","nameLocation":"554:3:16","nodeType":"VariableDeclaration","scope":2533,"src":"546:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2527,"name":"address","nodeType":"ElementaryTypeName","src":"546:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2530,"mutability":"mutable","name":"_amount","nameLocation":"567:7:16","nodeType":"VariableDeclaration","scope":2533,"src":"559:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2529,"name":"uint256","nodeType":"ElementaryTypeName","src":"559:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"529:46:16"},"returnParameters":{"id":2532,"nodeType":"ParameterList","parameters":[],"src":"584:0:16"},"scope":2534,"src":"510:75:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2535,"src":"58:529:16","usedErrors":[]}],"src":"32:556:16"},"id":16},"contracts/interfaces/ILayer2Registry.sol":{"ast":{"absolutePath":"contracts/interfaces/ILayer2Registry.sol","exportedSymbols":{"ILayer2Registry":[2588]},"id":2589,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2536,"literals":["solidity","^","0.8",".17"],"nodeType":"PragmaDirective","src":"32:24:17"},{"abstract":false,"baseContracts":[],"canonicalName":"ILayer2Registry","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":2588,"linearizedBaseContracts":[2588],"name":"ILayer2Registry","nameLocation":"68:15:17","nodeType":"ContractDefinition","nodes":[{"functionSelector":"61cdc5b8","id":2543,"implemented":false,"kind":"function","modifiers":[],"name":"layer2s","nameLocation":"99:7:17","nodeType":"FunctionDefinition","parameters":{"id":2539,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2538,"mutability":"mutable","name":"layer2","nameLocation":"115:6:17","nodeType":"VariableDeclaration","scope":2543,"src":"107:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2537,"name":"address","nodeType":"ElementaryTypeName","src":"107:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"106:16:17"},"returnParameters":{"id":2542,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2541,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2543,"src":"146:4:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2540,"name":"bool","nodeType":"ElementaryTypeName","src":"146:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"145:6:17"},"scope":2588,"src":"90:62:17","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"4420e486","id":2550,"implemented":false,"kind":"function","modifiers":[],"name":"register","nameLocation":"167:8:17","nodeType":"FunctionDefinition","parameters":{"id":2546,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2545,"mutability":"mutable","name":"layer2","nameLocation":"184:6:17","nodeType":"VariableDeclaration","scope":2550,"src":"176:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2544,"name":"address","nodeType":"ElementaryTypeName","src":"176:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"175:16:17"},"returnParameters":{"id":2549,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2548,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2550,"src":"210:4:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2547,"name":"bool","nodeType":"ElementaryTypeName","src":"210:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"209:6:17"},"scope":2588,"src":"158:58:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"0d42d497","id":2555,"implemented":false,"kind":"function","modifiers":[],"name":"numLayer2s","nameLocation":"230:10:17","nodeType":"FunctionDefinition","parameters":{"id":2551,"nodeType":"ParameterList","parameters":[],"src":"240:2:17"},"returnParameters":{"id":2554,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2553,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2555,"src":"266:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2552,"name":"uint256","nodeType":"ElementaryTypeName","src":"266:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"265:9:17"},"scope":2588,"src":"221:54:17","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"b7ffb179","id":2562,"implemented":false,"kind":"function","modifiers":[],"name":"layer2ByIndex","nameLocation":"289:13:17","nodeType":"FunctionDefinition","parameters":{"id":2558,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2557,"mutability":"mutable","name":"index","nameLocation":"311:5:17","nodeType":"VariableDeclaration","scope":2562,"src":"303:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2556,"name":"uint256","nodeType":"ElementaryTypeName","src":"303:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"302:15:17"},"returnParameters":{"id":2561,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2560,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2562,"src":"341:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2559,"name":"address","nodeType":"ElementaryTypeName","src":"341:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"340:9:17"},"scope":2588,"src":"280:70:17","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"85108604","id":2571,"implemented":false,"kind":"function","modifiers":[],"name":"deployCoinage","nameLocation":"365:13:17","nodeType":"FunctionDefinition","parameters":{"id":2567,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2564,"mutability":"mutable","name":"layer2","nameLocation":"387:6:17","nodeType":"VariableDeclaration","scope":2571,"src":"379:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2563,"name":"address","nodeType":"ElementaryTypeName","src":"379:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2566,"mutability":"mutable","name":"seigManager","nameLocation":"403:11:17","nodeType":"VariableDeclaration","scope":2571,"src":"395:19:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2565,"name":"address","nodeType":"ElementaryTypeName","src":"395:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"378:37:17"},"returnParameters":{"id":2570,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2569,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2571,"src":"434:4:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2568,"name":"bool","nodeType":"ElementaryTypeName","src":"434:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"433:6:17"},"scope":2588,"src":"356:84:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"bcb1a71e","id":2580,"implemented":false,"kind":"function","modifiers":[],"name":"registerAndDeployCoinage","nameLocation":"454:24:17","nodeType":"FunctionDefinition","parameters":{"id":2576,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2573,"mutability":"mutable","name":"layer2","nameLocation":"487:6:17","nodeType":"VariableDeclaration","scope":2580,"src":"479:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2572,"name":"address","nodeType":"ElementaryTypeName","src":"479:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2575,"mutability":"mutable","name":"seigManager","nameLocation":"503:11:17","nodeType":"VariableDeclaration","scope":2580,"src":"495:19:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2574,"name":"address","nodeType":"ElementaryTypeName","src":"495:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"478:37:17"},"returnParameters":{"id":2579,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2578,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2580,"src":"534:4:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2577,"name":"bool","nodeType":"ElementaryTypeName","src":"534:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"533:6:17"},"scope":2588,"src":"445:95:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"2ec2c246","id":2587,"implemented":false,"kind":"function","modifiers":[],"name":"unregister","nameLocation":"554:10:17","nodeType":"FunctionDefinition","parameters":{"id":2583,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2582,"mutability":"mutable","name":"layer2","nameLocation":"573:6:17","nodeType":"VariableDeclaration","scope":2587,"src":"565:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2581,"name":"address","nodeType":"ElementaryTypeName","src":"565:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"564:16:17"},"returnParameters":{"id":2586,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2585,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2587,"src":"599:4:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2584,"name":"bool","nodeType":"ElementaryTypeName","src":"599:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"598:6:17"},"scope":2588,"src":"545:60:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2589,"src":"58:549:17","usedErrors":[]}],"src":"32:576:17"},"id":17},"contracts/interfaces/ISeigManager.sol":{"ast":{"absolutePath":"contracts/interfaces/ISeigManager.sol","exportedSymbols":{"ISeigManager":[2752]},"id":2753,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2590,"literals":["solidity","^","0.8",".17"],"nodeType":"PragmaDirective","src":"32:24:18"},{"abstract":false,"baseContracts":[],"canonicalName":"ISeigManager","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":2752,"linearizedBaseContracts":[2752],"name":"ISeigManager","nameLocation":"68:12:18","nodeType":"ContractDefinition","nodes":[{"functionSelector":"7b103999","id":2595,"implemented":false,"kind":"function","modifiers":[],"name":"registry","nameLocation":"96:8:18","nodeType":"FunctionDefinition","parameters":{"id":2591,"nodeType":"ParameterList","parameters":[],"src":"104:2:18"},"returnParameters":{"id":2594,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2593,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2595,"src":"130:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2592,"name":"address","nodeType":"ElementaryTypeName","src":"130:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"129:9:18"},"scope":2752,"src":"87:52:18","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"6c7ac9d8","id":2600,"implemented":false,"kind":"function","modifiers":[],"name":"depositManager","nameLocation":"153:14:18","nodeType":"FunctionDefinition","parameters":{"id":2596,"nodeType":"ParameterList","parameters":[],"src":"167:2:18"},"returnParameters":{"id":2599,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2598,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2600,"src":"193:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2597,"name":"address","nodeType":"ElementaryTypeName","src":"193:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"192:9:18"},"scope":2752,"src":"144:58:18","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"cc48b947","id":2605,"implemented":false,"kind":"function","modifiers":[],"name":"ton","nameLocation":"216:3:18","nodeType":"FunctionDefinition","parameters":{"id":2601,"nodeType":"ParameterList","parameters":[],"src":"219:2:18"},"returnParameters":{"id":2604,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2603,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2605,"src":"245:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2602,"name":"address","nodeType":"ElementaryTypeName","src":"245:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"244:9:18"},"scope":2752,"src":"207:47:18","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"8d62d949","id":2610,"implemented":false,"kind":"function","modifiers":[],"name":"wton","nameLocation":"268:4:18","nodeType":"FunctionDefinition","parameters":{"id":2606,"nodeType":"ParameterList","parameters":[],"src":"272:2:18"},"returnParameters":{"id":2609,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2608,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2610,"src":"298:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2607,"name":"address","nodeType":"ElementaryTypeName","src":"298:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"297:9:18"},"scope":2752,"src":"259:48:18","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"3e832e1d","id":2615,"implemented":false,"kind":"function","modifiers":[],"name":"powerton","nameLocation":"321:8:18","nodeType":"FunctionDefinition","parameters":{"id":2611,"nodeType":"ParameterList","parameters":[],"src":"329:2:18"},"returnParameters":{"id":2614,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2613,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2615,"src":"355:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2612,"name":"address","nodeType":"ElementaryTypeName","src":"355:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"354:9:18"},"scope":2752,"src":"312:52:18","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"a16d6aa7","id":2620,"implemented":false,"kind":"function","modifiers":[],"name":"tot","nameLocation":"378:3:18","nodeType":"FunctionDefinition","parameters":{"id":2616,"nodeType":"ParameterList","parameters":[],"src":"381:2:18"},"returnParameters":{"id":2619,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2618,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2620,"src":"407:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2617,"name":"address","nodeType":"ElementaryTypeName","src":"407:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"406:9:18"},"scope":2752,"src":"369:47:18","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"4c063c19","id":2627,"implemented":false,"kind":"function","modifiers":[],"name":"coinages","nameLocation":"430:8:18","nodeType":"FunctionDefinition","parameters":{"id":2623,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2622,"mutability":"mutable","name":"layer2","nameLocation":"447:6:18","nodeType":"VariableDeclaration","scope":2627,"src":"439:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2621,"name":"address","nodeType":"ElementaryTypeName","src":"439:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"438:16:18"},"returnParameters":{"id":2626,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2625,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2627,"src":"478:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2624,"name":"address","nodeType":"ElementaryTypeName","src":"478:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"477:9:18"},"scope":2752,"src":"421:66:18","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"7b056c1b","id":2634,"implemented":false,"kind":"function","modifiers":[],"name":"commissionRates","nameLocation":"501:15:18","nodeType":"FunctionDefinition","parameters":{"id":2630,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2629,"mutability":"mutable","name":"layer2","nameLocation":"525:6:18","nodeType":"VariableDeclaration","scope":2634,"src":"517:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2628,"name":"address","nodeType":"ElementaryTypeName","src":"517:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"516:16:18"},"returnParameters":{"id":2633,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2632,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2634,"src":"556:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2631,"name":"uint256","nodeType":"ElementaryTypeName","src":"556:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"555:9:18"},"scope":2752,"src":"492:73:18","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"c59f1046","id":2641,"implemented":false,"kind":"function","modifiers":[],"name":"lastCommitBlock","nameLocation":"580:15:18","nodeType":"FunctionDefinition","parameters":{"id":2637,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2636,"mutability":"mutable","name":"layer2","nameLocation":"604:6:18","nodeType":"VariableDeclaration","scope":2641,"src":"596:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2635,"name":"address","nodeType":"ElementaryTypeName","src":"596:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"595:16:18"},"returnParameters":{"id":2640,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2639,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2641,"src":"635:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2638,"name":"uint256","nodeType":"ElementaryTypeName","src":"635:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"634:9:18"},"scope":2752,"src":"571:73:18","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"5f40a349","id":2646,"implemented":false,"kind":"function","modifiers":[],"name":"seigPerBlock","nameLocation":"658:12:18","nodeType":"FunctionDefinition","parameters":{"id":2642,"nodeType":"ParameterList","parameters":[],"src":"670:2:18"},"returnParameters":{"id":2645,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2644,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2646,"src":"696:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2643,"name":"uint256","nodeType":"ElementaryTypeName","src":"696:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"695:9:18"},"scope":2752,"src":"649:56:18","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"f35c89e8","id":2651,"implemented":false,"kind":"function","modifiers":[],"name":"lastSeigBlock","nameLocation":"719:13:18","nodeType":"FunctionDefinition","parameters":{"id":2647,"nodeType":"ParameterList","parameters":[],"src":"732:2:18"},"returnParameters":{"id":2650,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2649,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2651,"src":"758:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2648,"name":"uint256","nodeType":"ElementaryTypeName","src":"758:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"757:9:18"},"scope":2752,"src":"710:57:18","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"32053c99","id":2656,"implemented":false,"kind":"function","modifiers":[],"name":"pausedBlock","nameLocation":"781:11:18","nodeType":"FunctionDefinition","parameters":{"id":2652,"nodeType":"ParameterList","parameters":[],"src":"792:2:18"},"returnParameters":{"id":2655,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2654,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2656,"src":"818:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2653,"name":"uint256","nodeType":"ElementaryTypeName","src":"818:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"817:9:18"},"scope":2752,"src":"772:55:18","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"1cc47890","id":2661,"implemented":false,"kind":"function","modifiers":[],"name":"unpausedBlock","nameLocation":"841:13:18","nodeType":"FunctionDefinition","parameters":{"id":2657,"nodeType":"ParameterList","parameters":[],"src":"854:2:18"},"returnParameters":{"id":2660,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2659,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2661,"src":"880:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2658,"name":"uint256","nodeType":"ElementaryTypeName","src":"880:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"879:9:18"},"scope":2752,"src":"832:57:18","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"8bf91dc4","id":2666,"implemented":false,"kind":"function","modifiers":[],"name":"DEFAULT_FACTOR","nameLocation":"903:14:18","nodeType":"FunctionDefinition","parameters":{"id":2662,"nodeType":"ParameterList","parameters":[],"src":"917:2:18"},"returnParameters":{"id":2665,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2664,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2666,"src":"943:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2663,"name":"uint256","nodeType":"ElementaryTypeName","src":"943:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"942:9:18"},"scope":2752,"src":"894:58:18","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"833a774f","id":2673,"implemented":false,"kind":"function","modifiers":[],"name":"deployCoinage","nameLocation":"967:13:18","nodeType":"FunctionDefinition","parameters":{"id":2669,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2668,"mutability":"mutable","name":"layer2","nameLocation":"989:6:18","nodeType":"VariableDeclaration","scope":2673,"src":"981:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2667,"name":"address","nodeType":"ElementaryTypeName","src":"981:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"980:16:18"},"returnParameters":{"id":2672,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2671,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2673,"src":"1015:4:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2670,"name":"bool","nodeType":"ElementaryTypeName","src":"1015:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1014:6:18"},"scope":2752,"src":"958:63:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"4224ed66","id":2684,"implemented":false,"kind":"function","modifiers":[],"name":"setCommissionRate","nameLocation":"1035:17:18","nodeType":"FunctionDefinition","parameters":{"id":2680,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2675,"mutability":"mutable","name":"layer2","nameLocation":"1061:6:18","nodeType":"VariableDeclaration","scope":2684,"src":"1053:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2674,"name":"address","nodeType":"ElementaryTypeName","src":"1053:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2677,"mutability":"mutable","name":"commission","nameLocation":"1077:10:18","nodeType":"VariableDeclaration","scope":2684,"src":"1069:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2676,"name":"uint256","nodeType":"ElementaryTypeName","src":"1069:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2679,"mutability":"mutable","name":"isCommissionRateNegative","nameLocation":"1094:24:18","nodeType":"VariableDeclaration","scope":2684,"src":"1089:29:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2678,"name":"bool","nodeType":"ElementaryTypeName","src":"1089:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1052:67:18"},"returnParameters":{"id":2683,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2682,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2684,"src":"1138:4:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2681,"name":"bool","nodeType":"ElementaryTypeName","src":"1138:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1137:6:18"},"scope":2752,"src":"1026:118:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"fa9789c8","id":2693,"implemented":false,"kind":"function","modifiers":[],"name":"uncomittedStakeOf","nameLocation":"1159:17:18","nodeType":"FunctionDefinition","parameters":{"id":2689,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2686,"mutability":"mutable","name":"layer2","nameLocation":"1185:6:18","nodeType":"VariableDeclaration","scope":2693,"src":"1177:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2685,"name":"address","nodeType":"ElementaryTypeName","src":"1177:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2688,"mutability":"mutable","name":"account","nameLocation":"1201:7:18","nodeType":"VariableDeclaration","scope":2693,"src":"1193:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2687,"name":"address","nodeType":"ElementaryTypeName","src":"1193:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1176:33:18"},"returnParameters":{"id":2692,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2691,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2693,"src":"1233:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2690,"name":"uint256","nodeType":"ElementaryTypeName","src":"1233:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1232:9:18"},"scope":2752,"src":"1150:92:18","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"ce4cb876","id":2702,"implemented":false,"kind":"function","modifiers":[],"name":"stakeOf","nameLocation":"1256:7:18","nodeType":"FunctionDefinition","parameters":{"id":2698,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2695,"mutability":"mutable","name":"layer2","nameLocation":"1272:6:18","nodeType":"VariableDeclaration","scope":2702,"src":"1264:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2694,"name":"address","nodeType":"ElementaryTypeName","src":"1264:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2697,"mutability":"mutable","name":"account","nameLocation":"1288:7:18","nodeType":"VariableDeclaration","scope":2702,"src":"1280:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2696,"name":"address","nodeType":"ElementaryTypeName","src":"1280:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1263:33:18"},"returnParameters":{"id":2701,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2700,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2702,"src":"1320:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2699,"name":"uint256","nodeType":"ElementaryTypeName","src":"1320:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1319:9:18"},"scope":2752,"src":"1247:82:18","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"48c8577e","id":2713,"implemented":false,"kind":"function","modifiers":[],"name":"additionalTotBurnAmount","nameLocation":"1343:23:18","nodeType":"FunctionDefinition","parameters":{"id":2709,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2704,"mutability":"mutable","name":"layer2","nameLocation":"1375:6:18","nodeType":"VariableDeclaration","scope":2713,"src":"1367:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2703,"name":"address","nodeType":"ElementaryTypeName","src":"1367:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2706,"mutability":"mutable","name":"account","nameLocation":"1391:7:18","nodeType":"VariableDeclaration","scope":2713,"src":"1383:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2705,"name":"address","nodeType":"ElementaryTypeName","src":"1383:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2708,"mutability":"mutable","name":"amount","nameLocation":"1408:6:18","nodeType":"VariableDeclaration","scope":2713,"src":"1400:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2707,"name":"uint256","nodeType":"ElementaryTypeName","src":"1400:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1366:49:18"},"returnParameters":{"id":2712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2711,"mutability":"mutable","name":"totAmount","nameLocation":"1447:9:18","nodeType":"VariableDeclaration","scope":2713,"src":"1439:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2710,"name":"uint256","nodeType":"ElementaryTypeName","src":"1439:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1438:19:18"},"scope":2752,"src":"1334:124:18","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"4a393149","id":2724,"implemented":false,"kind":"function","modifiers":[],"name":"onTransfer","nameLocation":"1473:10:18","nodeType":"FunctionDefinition","parameters":{"id":2720,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2715,"mutability":"mutable","name":"sender","nameLocation":"1492:6:18","nodeType":"VariableDeclaration","scope":2724,"src":"1484:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2714,"name":"address","nodeType":"ElementaryTypeName","src":"1484:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2717,"mutability":"mutable","name":"recipient","nameLocation":"1508:9:18","nodeType":"VariableDeclaration","scope":2724,"src":"1500:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2716,"name":"address","nodeType":"ElementaryTypeName","src":"1500:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2719,"mutability":"mutable","name":"amount","nameLocation":"1527:6:18","nodeType":"VariableDeclaration","scope":2724,"src":"1519:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2718,"name":"uint256","nodeType":"ElementaryTypeName","src":"1519:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1483:51:18"},"returnParameters":{"id":2723,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2722,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2724,"src":"1553:4:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2721,"name":"bool","nodeType":"ElementaryTypeName","src":"1553:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1552:6:18"},"scope":2752,"src":"1464:95:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"764a7856","id":2729,"implemented":false,"kind":"function","modifiers":[],"name":"updateSeigniorage","nameLocation":"1573:17:18","nodeType":"FunctionDefinition","parameters":{"id":2725,"nodeType":"ParameterList","parameters":[],"src":"1590:2:18"},"returnParameters":{"id":2728,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2727,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2729,"src":"1611:4:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2726,"name":"bool","nodeType":"ElementaryTypeName","src":"1611:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1610:6:18"},"scope":2752,"src":"1564:53:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"412c6d50","id":2740,"implemented":false,"kind":"function","modifiers":[],"name":"onDeposit","nameLocation":"1631:9:18","nodeType":"FunctionDefinition","parameters":{"id":2736,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2731,"mutability":"mutable","name":"layer2","nameLocation":"1649:6:18","nodeType":"VariableDeclaration","scope":2740,"src":"1641:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2730,"name":"address","nodeType":"ElementaryTypeName","src":"1641:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2733,"mutability":"mutable","name":"account","nameLocation":"1665:7:18","nodeType":"VariableDeclaration","scope":2740,"src":"1657:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2732,"name":"address","nodeType":"ElementaryTypeName","src":"1657:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2735,"mutability":"mutable","name":"amount","nameLocation":"1682:6:18","nodeType":"VariableDeclaration","scope":2740,"src":"1674:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2734,"name":"uint256","nodeType":"ElementaryTypeName","src":"1674:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1640:49:18"},"returnParameters":{"id":2739,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2738,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2740,"src":"1708:4:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2737,"name":"bool","nodeType":"ElementaryTypeName","src":"1708:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1707:6:18"},"scope":2752,"src":"1622:92:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"f850ffaa","id":2751,"implemented":false,"kind":"function","modifiers":[],"name":"onWithdraw","nameLocation":"1728:10:18","nodeType":"FunctionDefinition","parameters":{"id":2747,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2742,"mutability":"mutable","name":"layer2","nameLocation":"1747:6:18","nodeType":"VariableDeclaration","scope":2751,"src":"1739:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2741,"name":"address","nodeType":"ElementaryTypeName","src":"1739:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2744,"mutability":"mutable","name":"account","nameLocation":"1763:7:18","nodeType":"VariableDeclaration","scope":2751,"src":"1755:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2743,"name":"address","nodeType":"ElementaryTypeName","src":"1755:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2746,"mutability":"mutable","name":"amount","nameLocation":"1780:6:18","nodeType":"VariableDeclaration","scope":2751,"src":"1772:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2745,"name":"uint256","nodeType":"ElementaryTypeName","src":"1772:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1738:49:18"},"returnParameters":{"id":2750,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2749,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2751,"src":"1806:4:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2748,"name":"bool","nodeType":"ElementaryTypeName","src":"1806:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1805:6:18"},"scope":2752,"src":"1719:93:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2753,"src":"58:1756:18","usedErrors":[]}],"src":"32:1783:18"},"id":18},"contracts/interfaces/IStorageStateCommittee.sol":{"ast":{"absolutePath":"contracts/interfaces/IStorageStateCommittee.sol","exportedSymbols":{"ICandidateFactory":[1930],"IDAOAgendaManager":[2211],"IDAOVault":[2534],"ILayer2Registry":[2588],"ISeigManager":[2752],"IStorageStateCommittee":[2863]},"id":2864,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2754,"literals":["solidity","^","0.8",".17"],"nodeType":"PragmaDirective","src":"32:24:19"},{"id":2755,"literals":["abicoder","v2"],"nodeType":"PragmaDirective","src":"57:19:19"},{"absolutePath":"contracts/interfaces/ICandidateFactory.sol","file":"../interfaces/ICandidateFactory.sol","id":2757,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2864,"sourceUnit":1931,"src":"78:72:19","symbolAliases":[{"foreign":{"id":2756,"name":"ICandidateFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1930,"src":"87:17:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/interfaces/ILayer2Registry.sol","file":"../interfaces/ILayer2Registry.sol","id":2759,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2864,"sourceUnit":2589,"src":"151:68:19","symbolAliases":[{"foreign":{"id":2758,"name":"ILayer2Registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2588,"src":"160:15:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/interfaces/ISeigManager.sol","file":"../interfaces/ISeigManager.sol","id":2761,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2864,"sourceUnit":2753,"src":"220:62:19","symbolAliases":[{"foreign":{"id":2760,"name":"ISeigManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2752,"src":"229:12:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/interfaces/IDAOAgendaManager.sol","file":"../interfaces/IDAOAgendaManager.sol","id":2763,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2864,"sourceUnit":2212,"src":"283:72:19","symbolAliases":[{"foreign":{"id":2762,"name":"IDAOAgendaManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2211,"src":"292:17:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/interfaces/IDAOVault.sol","file":"../interfaces/IDAOVault.sol","id":2765,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2864,"sourceUnit":2535,"src":"356:56:19","symbolAliases":[{"foreign":{"id":2764,"name":"IDAOVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2534,"src":"365:9:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IStorageStateCommittee","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":2863,"linearizedBaseContracts":[2863],"name":"IStorageStateCommittee","nameLocation":"424:22:19","nodeType":"ContractDefinition","nodes":[{"canonicalName":"IStorageStateCommittee.CandidateInfo","id":2776,"members":[{"constant":false,"id":2767,"mutability":"mutable","name":"candidateContract","nameLocation":"492:17:19","nodeType":"VariableDeclaration","scope":2776,"src":"484:25:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2766,"name":"address","nodeType":"ElementaryTypeName","src":"484:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2769,"mutability":"mutable","name":"indexMembers","nameLocation":"527:12:19","nodeType":"VariableDeclaration","scope":2776,"src":"519:20:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2768,"name":"uint256","nodeType":"ElementaryTypeName","src":"519:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2771,"mutability":"mutable","name":"memberJoinedTime","nameLocation":"557:16:19","nodeType":"VariableDeclaration","scope":2776,"src":"549:24:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":2770,"name":"uint128","nodeType":"ElementaryTypeName","src":"549:7:19","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":2773,"mutability":"mutable","name":"rewardPeriod","nameLocation":"591:12:19","nodeType":"VariableDeclaration","scope":2776,"src":"583:20:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":2772,"name":"uint128","nodeType":"ElementaryTypeName","src":"583:7:19","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":2775,"mutability":"mutable","name":"claimedTimestamp","nameLocation":"621:16:19","nodeType":"VariableDeclaration","scope":2776,"src":"613:24:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":2774,"name":"uint128","nodeType":"ElementaryTypeName","src":"613:7:19","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"name":"CandidateInfo","nameLocation":"460:13:19","nodeType":"StructDefinition","scope":2863,"src":"453:191:19","visibility":"public"},{"functionSelector":"cc48b947","id":2781,"implemented":false,"kind":"function","modifiers":[],"name":"ton","nameLocation":"659:3:19","nodeType":"FunctionDefinition","parameters":{"id":2777,"nodeType":"ParameterList","parameters":[],"src":"662:2:19"},"returnParameters":{"id":2780,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2779,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2781,"src":"683:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2778,"name":"address","nodeType":"ElementaryTypeName","src":"683:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"682:9:19"},"scope":2863,"src":"650:42:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"5903bd6c","id":2787,"implemented":false,"kind":"function","modifiers":[],"name":"daoVault","nameLocation":"706:8:19","nodeType":"FunctionDefinition","parameters":{"id":2782,"nodeType":"ParameterList","parameters":[],"src":"714:2:19"},"returnParameters":{"id":2786,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2785,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2787,"src":"735:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IDAOVault_$2534","typeString":"contract IDAOVault"},"typeName":{"id":2784,"nodeType":"UserDefinedTypeName","pathNode":{"id":2783,"name":"IDAOVault","nameLocations":["735:9:19"],"nodeType":"IdentifierPath","referencedDeclaration":2534,"src":"735:9:19"},"referencedDeclaration":2534,"src":"735:9:19","typeDescriptions":{"typeIdentifier":"t_contract$_IDAOVault_$2534","typeString":"contract IDAOVault"}},"visibility":"internal"}],"src":"734:11:19"},"scope":2863,"src":"697:49:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"27fd92fd","id":2793,"implemented":false,"kind":"function","modifiers":[],"name":"agendaManager","nameLocation":"760:13:19","nodeType":"FunctionDefinition","parameters":{"id":2788,"nodeType":"ParameterList","parameters":[],"src":"773:2:19"},"returnParameters":{"id":2792,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2791,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2793,"src":"794:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IDAOAgendaManager_$2211","typeString":"contract IDAOAgendaManager"},"typeName":{"id":2790,"nodeType":"UserDefinedTypeName","pathNode":{"id":2789,"name":"IDAOAgendaManager","nameLocations":["794:17:19"],"nodeType":"IdentifierPath","referencedDeclaration":2211,"src":"794:17:19"},"referencedDeclaration":2211,"src":"794:17:19","typeDescriptions":{"typeIdentifier":"t_contract$_IDAOAgendaManager_$2211","typeString":"contract IDAOAgendaManager"}},"visibility":"internal"}],"src":"793:19:19"},"scope":2863,"src":"751:62:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"b5dd1158","id":2799,"implemented":false,"kind":"function","modifiers":[],"name":"candidateFactory","nameLocation":"827:16:19","nodeType":"FunctionDefinition","parameters":{"id":2794,"nodeType":"ParameterList","parameters":[],"src":"843:2:19"},"returnParameters":{"id":2798,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2797,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2799,"src":"864:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ICandidateFactory_$1930","typeString":"contract ICandidateFactory"},"typeName":{"id":2796,"nodeType":"UserDefinedTypeName","pathNode":{"id":2795,"name":"ICandidateFactory","nameLocations":["864:17:19"],"nodeType":"IdentifierPath","referencedDeclaration":1930,"src":"864:17:19"},"referencedDeclaration":1930,"src":"864:17:19","typeDescriptions":{"typeIdentifier":"t_contract$_ICandidateFactory_$1930","typeString":"contract ICandidateFactory"}},"visibility":"internal"}],"src":"863:19:19"},"scope":2863,"src":"818:65:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"cf2a239c","id":2805,"implemented":false,"kind":"function","modifiers":[],"name":"layer2Registry","nameLocation":"897:14:19","nodeType":"FunctionDefinition","parameters":{"id":2800,"nodeType":"ParameterList","parameters":[],"src":"911:2:19"},"returnParameters":{"id":2804,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2803,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2805,"src":"932:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ILayer2Registry_$2588","typeString":"contract ILayer2Registry"},"typeName":{"id":2802,"nodeType":"UserDefinedTypeName","pathNode":{"id":2801,"name":"ILayer2Registry","nameLocations":["932:15:19"],"nodeType":"IdentifierPath","referencedDeclaration":2588,"src":"932:15:19"},"referencedDeclaration":2588,"src":"932:15:19","typeDescriptions":{"typeIdentifier":"t_contract$_ILayer2Registry_$2588","typeString":"contract ILayer2Registry"}},"visibility":"internal"}],"src":"931:17:19"},"scope":2863,"src":"888:61:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"6fb7f558","id":2811,"implemented":false,"kind":"function","modifiers":[],"name":"seigManager","nameLocation":"963:11:19","nodeType":"FunctionDefinition","parameters":{"id":2806,"nodeType":"ParameterList","parameters":[],"src":"974:2:19"},"returnParameters":{"id":2810,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2809,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2811,"src":"995:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ISeigManager_$2752","typeString":"contract ISeigManager"},"typeName":{"id":2808,"nodeType":"UserDefinedTypeName","pathNode":{"id":2807,"name":"ISeigManager","nameLocations":["995:12:19"],"nodeType":"IdentifierPath","referencedDeclaration":2752,"src":"995:12:19"},"referencedDeclaration":2752,"src":"995:12:19","typeDescriptions":{"typeIdentifier":"t_contract$_ISeigManager_$2752","typeString":"contract ISeigManager"}},"visibility":"internal"}],"src":"994:14:19"},"scope":2863,"src":"954:55:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"3477ee2e","id":2818,"implemented":false,"kind":"function","modifiers":[],"name":"candidates","nameLocation":"1023:10:19","nodeType":"FunctionDefinition","parameters":{"id":2814,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2813,"mutability":"mutable","name":"_index","nameLocation":"1042:6:19","nodeType":"VariableDeclaration","scope":2818,"src":"1034:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2812,"name":"uint256","nodeType":"ElementaryTypeName","src":"1034:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1033:16:19"},"returnParameters":{"id":2817,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2816,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2818,"src":"1068:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2815,"name":"address","nodeType":"ElementaryTypeName","src":"1068:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1067:9:19"},"scope":2863,"src":"1014:63:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"5daf08ca","id":2825,"implemented":false,"kind":"function","modifiers":[],"name":"members","nameLocation":"1091:7:19","nodeType":"FunctionDefinition","parameters":{"id":2821,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2820,"mutability":"mutable","name":"_index","nameLocation":"1107:6:19","nodeType":"VariableDeclaration","scope":2825,"src":"1099:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2819,"name":"uint256","nodeType":"ElementaryTypeName","src":"1099:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1098:16:19"},"returnParameters":{"id":2824,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2823,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2825,"src":"1133:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2822,"name":"address","nodeType":"ElementaryTypeName","src":"1133:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1132:9:19"},"scope":2863,"src":"1082:60:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"03e3c9ac","id":2830,"implemented":false,"kind":"function","modifiers":[],"name":"maxMember","nameLocation":"1156:9:19","nodeType":"FunctionDefinition","parameters":{"id":2826,"nodeType":"ParameterList","parameters":[],"src":"1165:2:19"},"returnParameters":{"id":2829,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2828,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2830,"src":"1186:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2827,"name":"uint256","nodeType":"ElementaryTypeName","src":"1186:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1185:9:19"},"scope":2863,"src":"1147:48:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"2e011c1e","id":2838,"implemented":false,"kind":"function","modifiers":[],"name":"candidateInfos","nameLocation":"1209:14:19","nodeType":"FunctionDefinition","parameters":{"id":2833,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2832,"mutability":"mutable","name":"_candidate","nameLocation":"1232:10:19","nodeType":"VariableDeclaration","scope":2838,"src":"1224:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2831,"name":"address","nodeType":"ElementaryTypeName","src":"1224:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1223:20:19"},"returnParameters":{"id":2837,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2836,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2838,"src":"1262:20:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_CandidateInfo_$2776_memory_ptr","typeString":"struct IStorageStateCommittee.CandidateInfo"},"typeName":{"id":2835,"nodeType":"UserDefinedTypeName","pathNode":{"id":2834,"name":"CandidateInfo","nameLocations":["1262:13:19"],"nodeType":"IdentifierPath","referencedDeclaration":2776,"src":"1262:13:19"},"referencedDeclaration":2776,"src":"1262:13:19","typeDescriptions":{"typeIdentifier":"t_struct$_CandidateInfo_$2776_storage_ptr","typeString":"struct IStorageStateCommittee.CandidateInfo"}},"visibility":"internal"}],"src":"1261:22:19"},"scope":2863,"src":"1200:84:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"1703a018","id":2843,"implemented":false,"kind":"function","modifiers":[],"name":"quorum","nameLocation":"1298:6:19","nodeType":"FunctionDefinition","parameters":{"id":2839,"nodeType":"ParameterList","parameters":[],"src":"1304:2:19"},"returnParameters":{"id":2842,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2841,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2843,"src":"1325:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2840,"name":"uint256","nodeType":"ElementaryTypeName","src":"1325:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1324:9:19"},"scope":2863,"src":"1289:45:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"7f331636","id":2848,"implemented":false,"kind":"function","modifiers":[],"name":"activityRewardPerSecond","nameLocation":"1348:23:19","nodeType":"FunctionDefinition","parameters":{"id":2844,"nodeType":"ParameterList","parameters":[],"src":"1371:2:19"},"returnParameters":{"id":2847,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2846,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2848,"src":"1392:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2845,"name":"uint256","nodeType":"ElementaryTypeName","src":"1392:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1391:9:19"},"scope":2863,"src":"1339:62:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"a230c524","id":2855,"implemented":false,"kind":"function","modifiers":[],"name":"isMember","nameLocation":"1416:8:19","nodeType":"FunctionDefinition","parameters":{"id":2851,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2850,"mutability":"mutable","name":"_candidate","nameLocation":"1433:10:19","nodeType":"VariableDeclaration","scope":2855,"src":"1425:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2849,"name":"address","nodeType":"ElementaryTypeName","src":"1425:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1424:20:19"},"returnParameters":{"id":2854,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2853,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2855,"src":"1463:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2852,"name":"bool","nodeType":"ElementaryTypeName","src":"1463:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1462:6:19"},"scope":2863,"src":"1407:62:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"651d08cd","id":2862,"implemented":false,"kind":"function","modifiers":[],"name":"candidateContract","nameLocation":"1483:17:19","nodeType":"FunctionDefinition","parameters":{"id":2858,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2857,"mutability":"mutable","name":"_candidate","nameLocation":"1509:10:19","nodeType":"VariableDeclaration","scope":2862,"src":"1501:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2856,"name":"address","nodeType":"ElementaryTypeName","src":"1501:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1500:20:19"},"returnParameters":{"id":2861,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2860,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2862,"src":"1539:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2859,"name":"address","nodeType":"ElementaryTypeName","src":"1539:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1538:9:19"},"scope":2863,"src":"1474:74:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2864,"src":"414:1136:19","usedErrors":[]}],"src":"32:1520:19"},"id":19},"contracts/lib/Agenda.sol":{"ast":{"absolutePath":"contracts/lib/Agenda.sol","exportedSymbols":{"LibAgenda":[2928]},"id":2929,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2865,"literals":["solidity","^","0.8",".17"],"nodeType":"PragmaDirective","src":"32:24:20"},{"abstract":false,"baseContracts":[],"canonicalName":"LibAgenda","contractDependencies":[],"contractKind":"library","fullyImplemented":true,"id":2928,"linearizedBaseContracts":[2928],"name":"LibAgenda","nameLocation":"66:9:20","nodeType":"ContractDefinition","nodes":[{"canonicalName":"LibAgenda.AgendaStatus","id":2872,"members":[{"id":2866,"name":"NONE","nameLocation":"137:4:20","nodeType":"EnumValue","src":"137:4:20"},{"id":2867,"name":"NOTICE","nameLocation":"143:6:20","nodeType":"EnumValue","src":"143:6:20"},{"id":2868,"name":"VOTING","nameLocation":"151:6:20","nodeType":"EnumValue","src":"151:6:20"},{"id":2869,"name":"WAITING_EXEC","nameLocation":"159:12:20","nodeType":"EnumValue","src":"159:12:20"},{"id":2870,"name":"EXECUTED","nameLocation":"173:8:20","nodeType":"EnumValue","src":"173:8:20"},{"id":2871,"name":"ENDED","nameLocation":"183:5:20","nodeType":"EnumValue","src":"183:5:20"}],"name":"AgendaStatus","nameLocation":"122:12:20","nodeType":"EnumDefinition","src":"117:73:20"},{"canonicalName":"LibAgenda.AgendaResult","id":2877,"members":[{"id":2873,"name":"PENDING","nameLocation":"215:7:20","nodeType":"EnumValue","src":"215:7:20"},{"id":2874,"name":"ACCEPT","nameLocation":"224:6:20","nodeType":"EnumValue","src":"224:6:20"},{"id":2875,"name":"REJECT","nameLocation":"232:6:20","nodeType":"EnumValue","src":"232:6:20"},{"id":2876,"name":"DISMISS","nameLocation":"240:7:20","nodeType":"EnumValue","src":"240:7:20"}],"name":"AgendaResult","nameLocation":"200:12:20","nodeType":"EnumDefinition","src":"195:54:20"},{"canonicalName":"LibAgenda.Voter","id":2884,"members":[{"constant":false,"id":2879,"mutability":"mutable","name":"isVoter","nameLocation":"313:7:20","nodeType":"VariableDeclaration","scope":2884,"src":"308:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2878,"name":"bool","nodeType":"ElementaryTypeName","src":"308:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2881,"mutability":"mutable","name":"hasVoted","nameLocation":"335:8:20","nodeType":"VariableDeclaration","scope":2884,"src":"330:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2880,"name":"bool","nodeType":"ElementaryTypeName","src":"330:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2883,"mutability":"mutable","name":"vote","nameLocation":"361:4:20","nodeType":"VariableDeclaration","scope":2884,"src":"353:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2882,"name":"uint256","nodeType":"ElementaryTypeName","src":"353:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Voter","nameLocation":"292:5:20","nodeType":"StructDefinition","scope":2928,"src":"285:87:20","visibility":"public"},{"canonicalName":"LibAgenda.Agenda","id":2916,"members":[{"constant":false,"id":2886,"mutability":"mutable","name":"createdTimestamp","nameLocation":"456:16:20","nodeType":"VariableDeclaration","scope":2916,"src":"448:24:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2885,"name":"uint256","nodeType":"ElementaryTypeName","src":"448:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2888,"mutability":"mutable","name":"noticeEndTimestamp","nameLocation":"490:18:20","nodeType":"VariableDeclaration","scope":2916,"src":"482:26:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2887,"name":"uint256","nodeType":"ElementaryTypeName","src":"482:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2890,"mutability":"mutable","name":"votingPeriodInSeconds","nameLocation":"526:21:20","nodeType":"VariableDeclaration","scope":2916,"src":"518:29:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2889,"name":"uint256","nodeType":"ElementaryTypeName","src":"518:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2892,"mutability":"mutable","name":"votingStartedTimestamp","nameLocation":"565:22:20","nodeType":"VariableDeclaration","scope":2916,"src":"557:30:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2891,"name":"uint256","nodeType":"ElementaryTypeName","src":"557:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2894,"mutability":"mutable","name":"votingEndTimestamp","nameLocation":"605:18:20","nodeType":"VariableDeclaration","scope":2916,"src":"597:26:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2893,"name":"uint256","nodeType":"ElementaryTypeName","src":"597:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2896,"mutability":"mutable","name":"executableLimitTimestamp","nameLocation":"641:24:20","nodeType":"VariableDeclaration","scope":2916,"src":"633:32:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2895,"name":"uint256","nodeType":"ElementaryTypeName","src":"633:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2898,"mutability":"mutable","name":"executedTimestamp","nameLocation":"683:17:20","nodeType":"VariableDeclaration","scope":2916,"src":"675:25:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2897,"name":"uint256","nodeType":"ElementaryTypeName","src":"675:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2900,"mutability":"mutable","name":"countingYes","nameLocation":"718:11:20","nodeType":"VariableDeclaration","scope":2916,"src":"710:19:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2899,"name":"uint256","nodeType":"ElementaryTypeName","src":"710:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2902,"mutability":"mutable","name":"countingNo","nameLocation":"747:10:20","nodeType":"VariableDeclaration","scope":2916,"src":"739:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2901,"name":"uint256","nodeType":"ElementaryTypeName","src":"739:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2904,"mutability":"mutable","name":"countingAbstain","nameLocation":"775:15:20","nodeType":"VariableDeclaration","scope":2916,"src":"767:23:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2903,"name":"uint256","nodeType":"ElementaryTypeName","src":"767:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2907,"mutability":"mutable","name":"status","nameLocation":"813:6:20","nodeType":"VariableDeclaration","scope":2916,"src":"800:19:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_AgendaStatus_$2872","typeString":"enum LibAgenda.AgendaStatus"},"typeName":{"id":2906,"nodeType":"UserDefinedTypeName","pathNode":{"id":2905,"name":"AgendaStatus","nameLocations":["800:12:20"],"nodeType":"IdentifierPath","referencedDeclaration":2872,"src":"800:12:20"},"referencedDeclaration":2872,"src":"800:12:20","typeDescriptions":{"typeIdentifier":"t_enum$_AgendaStatus_$2872","typeString":"enum LibAgenda.AgendaStatus"}},"visibility":"internal"},{"constant":false,"id":2910,"mutability":"mutable","name":"result","nameLocation":"842:6:20","nodeType":"VariableDeclaration","scope":2916,"src":"829:19:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_AgendaResult_$2877","typeString":"enum LibAgenda.AgendaResult"},"typeName":{"id":2909,"nodeType":"UserDefinedTypeName","pathNode":{"id":2908,"name":"AgendaResult","nameLocations":["829:12:20"],"nodeType":"IdentifierPath","referencedDeclaration":2877,"src":"829:12:20"},"referencedDeclaration":2877,"src":"829:12:20","typeDescriptions":{"typeIdentifier":"t_enum$_AgendaResult_$2877","typeString":"enum LibAgenda.AgendaResult"}},"visibility":"internal"},{"constant":false,"id":2913,"mutability":"mutable","name":"voters","nameLocation":"868:6:20","nodeType":"VariableDeclaration","scope":2916,"src":"858:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2911,"name":"address","nodeType":"ElementaryTypeName","src":"858:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2912,"nodeType":"ArrayTypeName","src":"858:9:20","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":2915,"mutability":"mutable","name":"executed","nameLocation":"889:8:20","nodeType":"VariableDeclaration","scope":2916,"src":"884:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2914,"name":"bool","nodeType":"ElementaryTypeName","src":"884:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"Agenda","nameLocation":"431:6:20","nodeType":"StructDefinition","scope":2928,"src":"424:480:20","visibility":"public"},{"canonicalName":"LibAgenda.AgendaExecutionInfo","id":2927,"members":[{"constant":false,"id":2919,"mutability":"mutable","name":"targets","nameLocation":"957:7:20","nodeType":"VariableDeclaration","scope":2927,"src":"947:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2917,"name":"address","nodeType":"ElementaryTypeName","src":"947:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2918,"nodeType":"ArrayTypeName","src":"947:9:20","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":2922,"mutability":"mutable","name":"functionBytecodes","nameLocation":"982:17:20","nodeType":"VariableDeclaration","scope":2927,"src":"974:25:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":2920,"name":"bytes","nodeType":"ElementaryTypeName","src":"974:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":2921,"nodeType":"ArrayTypeName","src":"974:7:20","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":2924,"mutability":"mutable","name":"atomicExecute","nameLocation":"1014:13:20","nodeType":"VariableDeclaration","scope":2927,"src":"1009:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2923,"name":"bool","nodeType":"ElementaryTypeName","src":"1009:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2926,"mutability":"mutable","name":"executeStartFrom","nameLocation":"1045:16:20","nodeType":"VariableDeclaration","scope":2927,"src":"1037:24:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2925,"name":"uint256","nodeType":"ElementaryTypeName","src":"1037:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"AgendaExecutionInfo","nameLocation":"917:19:20","nodeType":"StructDefinition","scope":2928,"src":"910:158:20","visibility":"public"}],"scope":2929,"src":"58:1164:20","usedErrors":[]}],"src":"32:1190:20"},"id":20},"contracts/test/DAOCommitteeProxy.sol":{"ast":{"absolutePath":"contracts/test/DAOCommitteeProxy.sol","exportedSymbols":{"AccessControl":[3496],"Context":[3591],"DAOCommitteeProxy":[3180],"ERC165":[3790],"ERC165A":[1582],"IAccessControl":[3569],"ICandidate":[1912],"ICandidateFactory":[1930],"IDAOAgendaManager":[2211],"IDAOVault":[2534],"IERC165":[4667],"ILayer2Registry":[2588],"ISeigManager":[2752],"IStorageStateCommittee":[2863],"Math":[4655],"StorageStateCommittee":[1817],"Strings":[3766]},"id":3181,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2930,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"32:23:21"},{"id":2931,"literals":["abicoder","v2"],"nodeType":"PragmaDirective","src":"56:19:21"},{"absolutePath":"contracts/dao/StorageStateCommittee.sol","file":"../dao/StorageStateCommittee.sol","id":2932,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3181,"sourceUnit":1818,"src":"77:42:21","symbolAliases":[],"unitAlias":""},{"absolutePath":"node_modules/@openzeppelin/contracts/access/AccessControl.sol","file":"../../node_modules/@openzeppelin/contracts/access/AccessControl.sol","id":2933,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3181,"sourceUnit":3497,"src":"194:77:21","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/AccessControl/ERC165A.sol","file":"../AccessControl/ERC165A.sol","id":2935,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3181,"sourceUnit":1583,"src":"272:55:21","symbolAliases":[{"foreign":{"id":2934,"name":"ERC165A","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1582,"src":"281:7:21","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2936,"name":"StorageStateCommittee","nameLocations":["359:21:21"],"nodeType":"IdentifierPath","referencedDeclaration":1817,"src":"359:21:21"},"id":2937,"nodeType":"InheritanceSpecifier","src":"359:21:21"},{"baseName":{"id":2938,"name":"AccessControl","nameLocations":["382:13:21"],"nodeType":"IdentifierPath","referencedDeclaration":3496,"src":"382:13:21"},"id":2939,"nodeType":"InheritanceSpecifier","src":"382:13:21"},{"baseName":{"id":2940,"name":"ERC165A","nameLocations":["397:7:21"],"nodeType":"IdentifierPath","referencedDeclaration":1582,"src":"397:7:21"},"id":2941,"nodeType":"InheritanceSpecifier","src":"397:7:21"}],"canonicalName":"DAOCommitteeProxy","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":3180,"linearizedBaseContracts":[3180,1582,3496,3790,4667,3569,3591,1817,2863],"name":"DAOCommitteeProxy","nameLocation":"338:17:21","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":2943,"mutability":"mutable","name":"_implementation","nameLocation":"428:15:21","nodeType":"VariableDeclaration","scope":3180,"src":"411:32:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2942,"name":"address","nodeType":"ElementaryTypeName","src":"411:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"functionSelector":"63a8fd89","id":2945,"mutability":"mutable","name":"pauseProxy","nameLocation":"461:10:21","nodeType":"VariableDeclaration","scope":3180,"src":"449:22:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2944,"name":"bool","nodeType":"ElementaryTypeName","src":"449:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"public"},{"anonymous":false,"eventSelector":"bc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b","id":2949,"name":"Upgraded","nameLocation":"484:8:21","nodeType":"EventDefinition","parameters":{"id":2948,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2947,"indexed":true,"mutability":"mutable","name":"implementation","nameLocation":"509:14:21","nodeType":"VariableDeclaration","scope":2949,"src":"493:30:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2946,"name":"address","nodeType":"ElementaryTypeName","src":"493:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"492:32:21"},"src":"478:47:21"},{"body":{"id":2961,"nodeType":"Block","src":"552:125:21","statements":[{"expression":{"arguments":[{"arguments":[{"id":2953,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3208,"src":"578:18:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":2954,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"598:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"602:6:21","memberName":"sender","nodeType":"MemberAccess","src":"598:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2952,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3260,"src":"570:7:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":2956,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"570:39:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"44414f436f6d6d697474656550726f78793a206d73672e73656e646572206973206e6f7420616e2061646d696e","id":2957,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"611:47:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_b035baf00c1e3ac88f8432354304909e029ddb0162e6075517efab161bb335ae","typeString":"literal_string \"DAOCommitteeProxy: msg.sender is not an admin\""},"value":"DAOCommitteeProxy: msg.sender is not an admin"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b035baf00c1e3ac88f8432354304909e029ddb0162e6075517efab161bb335ae","typeString":"literal_string \"DAOCommitteeProxy: msg.sender is not an admin\""}],"id":2951,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"562:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2958,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"562:97:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2959,"nodeType":"ExpressionStatement","src":"562:97:21"},{"id":2960,"nodeType":"PlaceholderStatement","src":"669:1:21"}]},"id":2962,"name":"onlyOwner","nameLocation":"540:9:21","nodeType":"ModifierDefinition","parameters":{"id":2950,"nodeType":"ParameterList","parameters":[],"src":"549:2:21"},"src":"531:146:21","virtual":false,"visibility":"internal"},{"body":{"id":3093,"nodeType":"Block","src":"954:925:21","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2999,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2980,"name":"_ton","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2964,"src":"985:4:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2983,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1001:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2982,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"993:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2981,"name":"address","nodeType":"ElementaryTypeName","src":"993:7:21","typeDescriptions":{}}},"id":2984,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"993:10:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"985:18:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2986,"name":"_impl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2966,"src":"1019:5:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2989,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1036:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2988,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1028:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2987,"name":"address","nodeType":"ElementaryTypeName","src":"1028:7:21","typeDescriptions":{}}},"id":2990,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1028:10:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1019:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"985:53:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2993,"name":"_seigManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2968,"src":"1054:12:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2996,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1078:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2995,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1070:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2994,"name":"address","nodeType":"ElementaryTypeName","src":"1070:7:21","typeDescriptions":{}}},"id":2997,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1070:10:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1054:26:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"985:95:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3000,"name":"_layer2Registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2970,"src":"1096:15:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":3003,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1123:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3002,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1115:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3001,"name":"address","nodeType":"ElementaryTypeName","src":"1115:7:21","typeDescriptions":{}}},"id":3004,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1115:10:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1096:29:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"985:140:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3012,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3007,"name":"_agendaManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2972,"src":"1141:14:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":3010,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1167:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3009,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1159:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3008,"name":"address","nodeType":"ElementaryTypeName","src":"1159:7:21","typeDescriptions":{}}},"id":3011,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1159:10:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1141:28:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"985:184:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3014,"name":"_candidateFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2974,"src":"1185:17:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":3017,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1214:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3016,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1206:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3015,"name":"address","nodeType":"ElementaryTypeName","src":"1206:7:21","typeDescriptions":{}}},"id":3018,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1206:10:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1185:31:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"985:231:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"44414f436f6d6d697474656550726f78793a20696e707574206973207a65726f","id":3021,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1230:34:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_da208ebbc28d2dfe7d6ba43fa968507881a99f2c248db7b455c564aa8d0fc19d","typeString":"literal_string \"DAOCommitteeProxy: input is zero\""},"value":"DAOCommitteeProxy: input is zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_da208ebbc28d2dfe7d6ba43fa968507881a99f2c248db7b455c564aa8d0fc19d","typeString":"literal_string \"DAOCommitteeProxy: input is zero\""}],"id":2979,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"964:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3022,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"964:310:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3023,"nodeType":"ExpressionStatement","src":"964:310:21"},{"expression":{"id":3026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3024,"name":"ton","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1630,"src":"1284:3:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3025,"name":"_ton","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2964,"src":"1290:4:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1284:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3027,"nodeType":"ExpressionStatement","src":"1284:10:21"},{"expression":{"id":3030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3028,"name":"_implementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2943,"src":"1304:15:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3029,"name":"_impl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2966,"src":"1322:5:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1304:23:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3031,"nodeType":"ExpressionStatement","src":"1304:23:21"},{"expression":{"id":3036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3032,"name":"seigManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1650,"src":"1337:11:21","typeDescriptions":{"typeIdentifier":"t_contract$_ISeigManager_$2752","typeString":"contract ISeigManager"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3034,"name":"_seigManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2968,"src":"1364:12:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3033,"name":"ISeigManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2752,"src":"1351:12:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ISeigManager_$2752_$","typeString":"type(contract ISeigManager)"}},"id":3035,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1351:26:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ISeigManager_$2752","typeString":"contract ISeigManager"}},"src":"1337:40:21","typeDescriptions":{"typeIdentifier":"t_contract$_ISeigManager_$2752","typeString":"contract ISeigManager"}},"id":3037,"nodeType":"ExpressionStatement","src":"1337:40:21"},{"expression":{"id":3042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3038,"name":"layer2Registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1646,"src":"1387:14:21","typeDescriptions":{"typeIdentifier":"t_contract$_ILayer2Registry_$2588","typeString":"contract ILayer2Registry"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3040,"name":"_layer2Registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2970,"src":"1420:15:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3039,"name":"ILayer2Registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2588,"src":"1404:15:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ILayer2Registry_$2588_$","typeString":"type(contract ILayer2Registry)"}},"id":3041,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1404:32:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ILayer2Registry_$2588","typeString":"contract ILayer2Registry"}},"src":"1387:49:21","typeDescriptions":{"typeIdentifier":"t_contract$_ILayer2Registry_$2588","typeString":"contract ILayer2Registry"}},"id":3043,"nodeType":"ExpressionStatement","src":"1387:49:21"},{"expression":{"id":3048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3044,"name":"agendaManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1638,"src":"1446:13:21","typeDescriptions":{"typeIdentifier":"t_contract$_IDAOAgendaManager_$2211","typeString":"contract IDAOAgendaManager"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3046,"name":"_agendaManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2972,"src":"1480:14:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3045,"name":"IDAOAgendaManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2211,"src":"1462:17:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IDAOAgendaManager_$2211_$","typeString":"type(contract IDAOAgendaManager)"}},"id":3047,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1462:33:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IDAOAgendaManager_$2211","typeString":"contract IDAOAgendaManager"}},"src":"1446:49:21","typeDescriptions":{"typeIdentifier":"t_contract$_IDAOAgendaManager_$2211","typeString":"contract IDAOAgendaManager"}},"id":3049,"nodeType":"ExpressionStatement","src":"1446:49:21"},{"expression":{"id":3054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3050,"name":"candidateFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1642,"src":"1505:16:21","typeDescriptions":{"typeIdentifier":"t_contract$_ICandidateFactory_$1930","typeString":"contract ICandidateFactory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3052,"name":"_candidateFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2974,"src":"1542:17:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3051,"name":"ICandidateFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1930,"src":"1524:17:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ICandidateFactory_$1930_$","typeString":"type(contract ICandidateFactory)"}},"id":3053,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1524:36:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ICandidateFactory_$1930","typeString":"contract ICandidateFactory"}},"src":"1505:55:21","typeDescriptions":{"typeIdentifier":"t_contract$_ICandidateFactory_$1930","typeString":"contract ICandidateFactory"}},"id":3055,"nodeType":"ExpressionStatement","src":"1505:55:21"},{"expression":{"id":3060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3056,"name":"daoVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1634,"src":"1570:8:21","typeDescriptions":{"typeIdentifier":"t_contract$_IDAOVault_$2534","typeString":"contract IDAOVault"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3058,"name":"_daoVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2976,"src":"1591:9:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3057,"name":"IDAOVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2534,"src":"1581:9:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IDAOVault_$2534_$","typeString":"type(contract IDAOVault)"}},"id":3059,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1581:20:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IDAOVault_$2534","typeString":"contract IDAOVault"}},"src":"1570:31:21","typeDescriptions":{"typeIdentifier":"t_contract$_IDAOVault_$2534","typeString":"contract IDAOVault"}},"id":3061,"nodeType":"ExpressionStatement","src":"1570:31:21"},{"expression":{"id":3064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3062,"name":"quorum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1669,"src":"1611:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"32","id":3063,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1620:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"1611:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3065,"nodeType":"ExpressionStatement","src":"1611:10:21"},{"expression":{"id":3068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3066,"name":"activityRewardPerSecond","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1672,"src":"1631:23:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"33313730393739313938333736343538","id":3067,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1657:16:21","typeDescriptions":{"typeIdentifier":"t_rational_3170979198376458_by_1","typeString":"int_const 3170979198376458"},"value":"3170979198376458"},"src":"1631:42:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3069,"nodeType":"ExpressionStatement","src":"1631:42:21"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"hexValue":"6f6e417070726f766528616464726573732c616464726573732c75696e743235362c627974657329","id":3074,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1720:42:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_4273ca16e32229270629d776700e1c07e4a1080fc9b26d21f6608efc2b31dc4d","typeString":"literal_string \"onApprove(address,address,uint256,bytes)\""},"value":"onApprove(address,address,uint256,bytes)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_4273ca16e32229270629d776700e1c07e4a1080fc9b26d21f6608efc2b31dc4d","typeString":"literal_string \"onApprove(address,address,uint256,bytes)\""}],"id":3073,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1710:9:21","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3075,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1710:53:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3072,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1703:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes4_$","typeString":"type(bytes4)"},"typeName":{"id":3071,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1703:6:21","typeDescriptions":{}}},"id":3076,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1703:61:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":3070,"name":"_registerInterface","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1581,"src":"1684:18:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes4_$returns$__$","typeString":"function (bytes4)"}},"id":3077,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1684:81:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3078,"nodeType":"ExpressionStatement","src":"1684:81:21"},{"expression":{"arguments":[{"id":3080,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3208,"src":"1786:18:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":3081,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1806:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1810:6:21","memberName":"sender","nodeType":"MemberAccess","src":"1806:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3079,"name":"_setupRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3404,"src":"1775:10:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":3083,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1775:42:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3084,"nodeType":"ExpressionStatement","src":"1775:42:21"},{"expression":{"arguments":[{"id":3086,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3208,"src":"1838:18:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"id":3089,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1866:4:21","typeDescriptions":{"typeIdentifier":"t_contract$_DAOCommitteeProxy_$3180","typeString":"contract DAOCommitteeProxy"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_DAOCommitteeProxy_$3180","typeString":"contract DAOCommitteeProxy"}],"id":3088,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1858:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3087,"name":"address","nodeType":"ElementaryTypeName","src":"1858:7:21","typeDescriptions":{}}},"id":3090,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1858:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3085,"name":"_setupRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3404,"src":"1827:10:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":3091,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1827:45:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3092,"nodeType":"ExpressionStatement","src":"1827:45:21"}]},"id":3094,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2977,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2964,"mutability":"mutable","name":"_ton","nameLocation":"717:4:21","nodeType":"VariableDeclaration","scope":3094,"src":"709:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2963,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2966,"mutability":"mutable","name":"_impl","nameLocation":"739:5:21","nodeType":"VariableDeclaration","scope":3094,"src":"731:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2965,"name":"address","nodeType":"ElementaryTypeName","src":"731:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2968,"mutability":"mutable","name":"_seigManager","nameLocation":"762:12:21","nodeType":"VariableDeclaration","scope":3094,"src":"754:20:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2967,"name":"address","nodeType":"ElementaryTypeName","src":"754:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2970,"mutability":"mutable","name":"_layer2Registry","nameLocation":"792:15:21","nodeType":"VariableDeclaration","scope":3094,"src":"784:23:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2969,"name":"address","nodeType":"ElementaryTypeName","src":"784:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2972,"mutability":"mutable","name":"_agendaManager","nameLocation":"825:14:21","nodeType":"VariableDeclaration","scope":3094,"src":"817:22:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2971,"name":"address","nodeType":"ElementaryTypeName","src":"817:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2974,"mutability":"mutable","name":"_candidateFactory","nameLocation":"857:17:21","nodeType":"VariableDeclaration","scope":3094,"src":"849:25:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2973,"name":"address","nodeType":"ElementaryTypeName","src":"849:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2976,"mutability":"mutable","name":"_daoVault","nameLocation":"934:9:21","nodeType":"VariableDeclaration","scope":3094,"src":"926:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2975,"name":"address","nodeType":"ElementaryTypeName","src":"926:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"699:250:21"},"returnParameters":{"id":2978,"nodeType":"ParameterList","parameters":[],"src":"954:0:21"},"scope":3180,"src":"688:1191:21","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3106,"nodeType":"Block","src":"2021:36:21","statements":[{"expression":{"id":3104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3102,"name":"pauseProxy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2945,"src":"2031:10:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3103,"name":"_pause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3097,"src":"2044:6:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2031:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3105,"nodeType":"ExpressionStatement","src":"2031:19:21"}]},"documentation":{"id":3095,"nodeType":"StructuredDocumentation","src":"1885:76:21","text":"@notice Set pause state\n @param _pause true:pause or false:resume"},"functionSelector":"7cb00d25","id":3107,"implemented":true,"kind":"function","modifiers":[{"id":3100,"kind":"modifierInvocation","modifierName":{"id":3099,"name":"onlyOwner","nameLocations":["2011:9:21"],"nodeType":"IdentifierPath","referencedDeclaration":2962,"src":"2011:9:21"},"nodeType":"ModifierInvocation","src":"2011:9:21"}],"name":"setProxyPause","nameLocation":"1975:13:21","nodeType":"FunctionDefinition","parameters":{"id":3098,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3097,"mutability":"mutable","name":"_pause","nameLocation":"1994:6:21","nodeType":"VariableDeclaration","scope":3107,"src":"1989:11:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3096,"name":"bool","nodeType":"ElementaryTypeName","src":"1989:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1988:13:21"},"returnParameters":{"id":3101,"nodeType":"ParameterList","parameters":[],"src":"2021:0:21"},"scope":3180,"src":"1966:91:21","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3140,"nodeType":"Block","src":"2215:255:21","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3116,"name":"_implementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2943,"src":"2233:15:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":3119,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2260:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3118,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2252:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3117,"name":"address","nodeType":"ElementaryTypeName","src":"2252:7:21","typeDescriptions":{}}},"id":3120,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2252:10:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2233:29:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"44414f436f6d6d697474656550726f78793a20696e707574206973207a65726f","id":3122,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2264:34:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_da208ebbc28d2dfe7d6ba43fa968507881a99f2c248db7b455c564aa8d0fc19d","typeString":"literal_string \"DAOCommitteeProxy: input is zero\""},"value":"DAOCommitteeProxy: input is zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_da208ebbc28d2dfe7d6ba43fa968507881a99f2c248db7b455c564aa8d0fc19d","typeString":"literal_string \"DAOCommitteeProxy: input is zero\""}],"id":3115,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2225:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2225:74:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3124,"nodeType":"ExpressionStatement","src":"2225:74:21"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3126,"name":"_implementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2943,"src":"2317:15:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3127,"name":"impl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3110,"src":"2336:4:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2317:23:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"44414f436f6d6d697474656550726f78793a2054686520696e70757420616464726573732069732073616d6520617320746865207374617465","id":3129,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2342:59:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_d70c025721ba15246df7bc3230e47788aa833a819e25e2da2bdcaefb69b47304","typeString":"literal_string \"DAOCommitteeProxy: The input address is same as the state\""},"value":"DAOCommitteeProxy: The input address is same as the state"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d70c025721ba15246df7bc3230e47788aa833a819e25e2da2bdcaefb69b47304","typeString":"literal_string \"DAOCommitteeProxy: The input address is same as the state\""}],"id":3125,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2309:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3130,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2309:93:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3131,"nodeType":"ExpressionStatement","src":"2309:93:21"},{"expression":{"id":3134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3132,"name":"_implementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2943,"src":"2412:15:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3133,"name":"impl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3110,"src":"2430:4:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2412:22:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3135,"nodeType":"ExpressionStatement","src":"2412:22:21"},{"eventCall":{"arguments":[{"id":3137,"name":"impl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3110,"src":"2458:4:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3136,"name":"Upgraded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2949,"src":"2449:8:21","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":3138,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2449:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3139,"nodeType":"EmitStatement","src":"2444:19:21"}]},"documentation":{"id":3108,"nodeType":"StructuredDocumentation","src":"2063:95:21","text":"@notice Set implementation contract\n @param impl New implementation contract address"},"functionSelector":"3659cfe6","id":3141,"implemented":true,"kind":"function","modifiers":[{"id":3113,"kind":"modifierInvocation","modifierName":{"id":3112,"name":"onlyOwner","nameLocations":["2205:9:21"],"nodeType":"IdentifierPath","referencedDeclaration":2962,"src":"2205:9:21"},"nodeType":"ModifierInvocation","src":"2205:9:21"}],"name":"upgradeTo","nameLocation":"2172:9:21","nodeType":"FunctionDefinition","parameters":{"id":3111,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3110,"mutability":"mutable","name":"impl","nameLocation":"2190:4:21","nodeType":"VariableDeclaration","scope":3141,"src":"2182:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3109,"name":"address","nodeType":"ElementaryTypeName","src":"2182:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2181:14:21"},"returnParameters":{"id":3114,"nodeType":"ParameterList","parameters":[],"src":"2215:0:21"},"scope":3180,"src":"2163:307:21","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3148,"nodeType":"Block","src":"2532:39:21","statements":[{"expression":{"id":3146,"name":"_implementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2943,"src":"2549:15:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3145,"id":3147,"nodeType":"Return","src":"2542:22:21"}]},"functionSelector":"5c60da1b","id":3149,"implemented":true,"kind":"function","modifiers":[],"name":"implementation","nameLocation":"2485:14:21","nodeType":"FunctionDefinition","parameters":{"id":3142,"nodeType":"ParameterList","parameters":[],"src":"2499:2:21"},"returnParameters":{"id":3145,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3144,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3149,"src":"2523:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3143,"name":"address","nodeType":"ElementaryTypeName","src":"2523:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2522:9:21"},"scope":3180,"src":"2476:95:21","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3155,"nodeType":"Block","src":"2597:28:21","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3152,"name":"_fallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3179,"src":"2607:9:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":3153,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2607:11:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3154,"nodeType":"ExpressionStatement","src":"2607:11:21"}]},"id":3156,"implemented":true,"kind":"fallback","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3150,"nodeType":"ParameterList","parameters":[],"src":"2585:2:21"},"returnParameters":{"id":3151,"nodeType":"ParameterList","parameters":[],"src":"2597:0:21"},"scope":3180,"src":"2577:48:21","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3178,"nodeType":"Block","src":"2661:919:21","statements":[{"assignments":[3160],"declarations":[{"constant":false,"id":3160,"mutability":"mutable","name":"_impl","nameLocation":"2679:5:21","nodeType":"VariableDeclaration","scope":3178,"src":"2671:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3159,"name":"address","nodeType":"ElementaryTypeName","src":"2671:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3163,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":3161,"name":"implementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3149,"src":"2687:14:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":3162,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2687:16:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2671:32:21"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3165,"name":"_impl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3160,"src":"2721:5:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":3168,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2738:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3167,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2730:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3166,"name":"address","nodeType":"ElementaryTypeName","src":"2730:7:21","typeDescriptions":{}}},"id":3169,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2730:10:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2721:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":3172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2744:11:21","subExpression":{"id":3171,"name":"pauseProxy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2945,"src":"2745:10:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2721:34:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"44414f436f6d6d697474656550726f78793a20696d706c206973207a65726f204f522070726f78792069732066616c7365","id":3174,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2757:51:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_fbb41bc2abbf038368153bc6dea571ef2f6b4d4922e432099d9f2115037f6794","typeString":"literal_string \"DAOCommitteeProxy: impl is zero OR proxy is false\""},"value":"DAOCommitteeProxy: impl is zero OR proxy is false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fbb41bc2abbf038368153bc6dea571ef2f6b4d4922e432099d9f2115037f6794","typeString":"literal_string \"DAOCommitteeProxy: impl is zero OR proxy is false\""}],"id":3164,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2713:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3175,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2713:96:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3176,"nodeType":"ExpressionStatement","src":"2713:96:21"},{"AST":{"nodeType":"YulBlock","src":"2829:745:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3082:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3085:1:21","type":"","value":"0"},{"arguments":[],"functionName":{"name":"calldatasize","nodeType":"YulIdentifier","src":"3088:12:21"},"nodeType":"YulFunctionCall","src":"3088:14:21"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"3069:12:21"},"nodeType":"YulFunctionCall","src":"3069:34:21"},"nodeType":"YulExpressionStatement","src":"3069:34:21"},{"nodeType":"YulVariableDeclaration","src":"3230:65:21","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"3257:3:21"},"nodeType":"YulFunctionCall","src":"3257:5:21"},{"name":"_impl","nodeType":"YulIdentifier","src":"3264:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"3271:1:21","type":"","value":"0"},{"arguments":[],"functionName":{"name":"calldatasize","nodeType":"YulIdentifier","src":"3274:12:21"},"nodeType":"YulFunctionCall","src":"3274:14:21"},{"kind":"number","nodeType":"YulLiteral","src":"3290:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3293:1:21","type":"","value":"0"}],"functionName":{"name":"delegatecall","nodeType":"YulIdentifier","src":"3244:12:21"},"nodeType":"YulFunctionCall","src":"3244:51:21"},"variables":[{"name":"result","nodeType":"YulTypedName","src":"3234:6:21","type":""}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3363:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3366:1:21","type":"","value":"0"},{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"3369:14:21"},"nodeType":"YulFunctionCall","src":"3369:16:21"}],"functionName":{"name":"returndatacopy","nodeType":"YulIdentifier","src":"3348:14:21"},"nodeType":"YulFunctionCall","src":"3348:38:21"},"nodeType":"YulExpressionStatement","src":"3348:38:21"},{"cases":[{"body":{"nodeType":"YulBlock","src":"3481:31:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3490:1:21","type":"","value":"0"},{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"3493:14:21"},"nodeType":"YulFunctionCall","src":"3493:16:21"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3483:6:21"},"nodeType":"YulFunctionCall","src":"3483:27:21"},"nodeType":"YulExpressionStatement","src":"3483:27:21"}]},"nodeType":"YulCase","src":"3474:38:21","value":{"kind":"number","nodeType":"YulLiteral","src":"3479:1:21","type":"","value":"0"}},{"body":{"nodeType":"YulBlock","src":"3533:31:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3542:1:21","type":"","value":"0"},{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"3545:14:21"},"nodeType":"YulFunctionCall","src":"3545:16:21"}],"functionName":{"name":"return","nodeType":"YulIdentifier","src":"3535:6:21"},"nodeType":"YulFunctionCall","src":"3535:27:21"},"nodeType":"YulExpressionStatement","src":"3535:27:21"}]},"nodeType":"YulCase","src":"3525:39:21","value":"default"}],"expression":{"name":"result","nodeType":"YulIdentifier","src":"3407:6:21"},"nodeType":"YulSwitch","src":"3400:164:21"}]},"evmVersion":"paris","externalReferences":[{"declaration":3160,"isOffset":false,"isSlot":false,"src":"3264:5:21","valueSize":1}],"id":3177,"nodeType":"InlineAssembly","src":"2820:754:21"}]},"id":3179,"implemented":true,"kind":"function","modifiers":[],"name":"_fallback","nameLocation":"2640:9:21","nodeType":"FunctionDefinition","parameters":{"id":3157,"nodeType":"ParameterList","parameters":[],"src":"2649:2:21"},"returnParameters":{"id":3158,"nodeType":"ParameterList","parameters":[],"src":"2661:0:21"},"scope":3180,"src":"2631:949:21","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":3181,"src":"329:3253:21","usedErrors":[]}],"src":"32:3551:21"},"id":21},"node_modules/@openzeppelin/contracts/access/AccessControl.sol":{"ast":{"absolutePath":"node_modules/@openzeppelin/contracts/access/AccessControl.sol","exportedSymbols":{"AccessControl":[3496],"Context":[3591],"ERC165":[3790],"IAccessControl":[3569],"IERC165":[4667],"Math":[4655],"Strings":[3766]},"id":3497,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3182,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"108:23:22"},{"absolutePath":"node_modules/@openzeppelin/contracts/access/IAccessControl.sol","file":"./IAccessControl.sol","id":3183,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3497,"sourceUnit":3570,"src":"133:30:22","symbolAliases":[],"unitAlias":""},{"absolutePath":"node_modules/@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":3184,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3497,"sourceUnit":3592,"src":"164:30:22","symbolAliases":[],"unitAlias":""},{"absolutePath":"node_modules/@openzeppelin/contracts/utils/Strings.sol","file":"../utils/Strings.sol","id":3185,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3497,"sourceUnit":3767,"src":"195:30:22","symbolAliases":[],"unitAlias":""},{"absolutePath":"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../utils/introspection/ERC165.sol","id":3186,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3497,"sourceUnit":3791,"src":"226:43:22","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":3188,"name":"Context","nameLocations":["1841:7:22"],"nodeType":"IdentifierPath","referencedDeclaration":3591,"src":"1841:7:22"},"id":3189,"nodeType":"InheritanceSpecifier","src":"1841:7:22"},{"baseName":{"id":3190,"name":"IAccessControl","nameLocations":["1850:14:22"],"nodeType":"IdentifierPath","referencedDeclaration":3569,"src":"1850:14:22"},"id":3191,"nodeType":"InheritanceSpecifier","src":"1850:14:22"},{"baseName":{"id":3192,"name":"ERC165","nameLocations":["1866:6:22"],"nodeType":"IdentifierPath","referencedDeclaration":3790,"src":"1866:6:22"},"id":3193,"nodeType":"InheritanceSpecifier","src":"1866:6:22"}],"canonicalName":"AccessControl","contractDependencies":[],"contractKind":"contract","documentation":{"id":3187,"nodeType":"StructuredDocumentation","src":"271:1534:22","text":" @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it."},"fullyImplemented":true,"id":3496,"linearizedBaseContracts":[3496,3790,4667,3569,3591],"name":"AccessControl","nameLocation":"1824:13:22","nodeType":"ContractDefinition","nodes":[{"canonicalName":"AccessControl.RoleData","id":3200,"members":[{"constant":false,"id":3197,"mutability":"mutable","name":"members","nameLocation":"1930:7:22","nodeType":"VariableDeclaration","scope":3200,"src":"1905:32:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":3196,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":3194,"name":"address","nodeType":"ElementaryTypeName","src":"1913:7:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1905:24:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":3195,"name":"bool","nodeType":"ElementaryTypeName","src":"1924:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"internal"},{"constant":false,"id":3199,"mutability":"mutable","name":"adminRole","nameLocation":"1955:9:22","nodeType":"VariableDeclaration","scope":3200,"src":"1947:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3198,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1947:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"RoleData","nameLocation":"1886:8:22","nodeType":"StructDefinition","scope":3496,"src":"1879:92:22","visibility":"public"},{"constant":false,"id":3205,"mutability":"mutable","name":"_roles","nameLocation":"2014:6:22","nodeType":"VariableDeclaration","scope":3496,"src":"1977:43:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$3200_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData)"},"typeName":{"id":3204,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":3201,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1985:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"1977:28:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$3200_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":3203,"nodeType":"UserDefinedTypeName","pathNode":{"id":3202,"name":"RoleData","nameLocations":["1996:8:22"],"nodeType":"IdentifierPath","referencedDeclaration":3200,"src":"1996:8:22"},"referencedDeclaration":3200,"src":"1996:8:22","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$3200_storage_ptr","typeString":"struct AccessControl.RoleData"}}},"visibility":"private"},{"constant":true,"functionSelector":"a217fddf","id":3208,"mutability":"constant","name":"DEFAULT_ADMIN_ROLE","nameLocation":"2051:18:22","nodeType":"VariableDeclaration","scope":3496,"src":"2027:49:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3206,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2027:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"30783030","id":3207,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2072:4:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"public"},{"body":{"id":3218,"nodeType":"Block","src":"2495:44:22","statements":[{"expression":{"arguments":[{"id":3214,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3211,"src":"2516:4:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3213,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[3273,3312],"referencedDeclaration":3273,"src":"2505:10:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$__$","typeString":"function (bytes32) view"}},"id":3215,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2505:16:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3216,"nodeType":"ExpressionStatement","src":"2505:16:22"},{"id":3217,"nodeType":"PlaceholderStatement","src":"2531:1:22"}]},"documentation":{"id":3209,"nodeType":"StructuredDocumentation","src":"2083:375:22","text":" @dev Modifier that checks that an account has a specific role. Reverts\n with a standardized message including the required role.\n The format of the revert reason is given by the following regular expression:\n  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n _Available since v4.1._"},"id":3219,"name":"onlyRole","nameLocation":"2472:8:22","nodeType":"ModifierDefinition","parameters":{"id":3212,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3211,"mutability":"mutable","name":"role","nameLocation":"2489:4:22","nodeType":"VariableDeclaration","scope":3219,"src":"2481:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3210,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2481:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2480:14:22"},"src":"2463:76:22","virtual":false,"visibility":"internal"},{"baseFunctions":[3789],"body":{"id":3240,"nodeType":"Block","src":"2697:111:22","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":3233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3228,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3222,"src":"2714:11:22","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":3230,"name":"IAccessControl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3569,"src":"2734:14:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAccessControl_$3569_$","typeString":"type(contract IAccessControl)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IAccessControl_$3569_$","typeString":"type(contract IAccessControl)"}],"id":3229,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2729:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3231,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2729:20:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IAccessControl_$3569","typeString":"type(contract IAccessControl)"}},"id":3232,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2750:11:22","memberName":"interfaceId","nodeType":"MemberAccess","src":"2729:32:22","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"2714:47:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":3236,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3222,"src":"2789:11:22","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":3234,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2765:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AccessControl_$3496_$","typeString":"type(contract super AccessControl)"}},"id":3235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2771:17:22","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":3789,"src":"2765:23:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":3237,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2765:36:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2714:87:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3227,"id":3239,"nodeType":"Return","src":"2707:94:22"}]},"documentation":{"id":3220,"nodeType":"StructuredDocumentation","src":"2545:56:22","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":3241,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"2615:17:22","nodeType":"FunctionDefinition","overrides":{"id":3224,"nodeType":"OverrideSpecifier","overrides":[],"src":"2673:8:22"},"parameters":{"id":3223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3222,"mutability":"mutable","name":"interfaceId","nameLocation":"2640:11:22","nodeType":"VariableDeclaration","scope":3241,"src":"2633:18:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3221,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2633:6:22","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2632:20:22"},"returnParameters":{"id":3227,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3226,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3241,"src":"2691:4:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3225,"name":"bool","nodeType":"ElementaryTypeName","src":"2691:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2690:6:22"},"scope":3496,"src":"2606:202:22","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[3536],"body":{"id":3259,"nodeType":"Block","src":"2987:53:22","statements":[{"expression":{"baseExpression":{"expression":{"baseExpression":{"id":3252,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3205,"src":"3004:6:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$3200_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":3254,"indexExpression":{"id":3253,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3244,"src":"3011:4:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3004:12:22","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$3200_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":3255,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3017:7:22","memberName":"members","nodeType":"MemberAccess","referencedDeclaration":3197,"src":"3004:20:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":3257,"indexExpression":{"id":3256,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3246,"src":"3025:7:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3004:29:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3251,"id":3258,"nodeType":"Return","src":"2997:36:22"}]},"documentation":{"id":3242,"nodeType":"StructuredDocumentation","src":"2814:76:22","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","id":3260,"implemented":true,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"2904:7:22","nodeType":"FunctionDefinition","overrides":{"id":3248,"nodeType":"OverrideSpecifier","overrides":[],"src":"2963:8:22"},"parameters":{"id":3247,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3244,"mutability":"mutable","name":"role","nameLocation":"2920:4:22","nodeType":"VariableDeclaration","scope":3260,"src":"2912:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3243,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2912:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3246,"mutability":"mutable","name":"account","nameLocation":"2934:7:22","nodeType":"VariableDeclaration","scope":3260,"src":"2926:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3245,"name":"address","nodeType":"ElementaryTypeName","src":"2926:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2911:31:22"},"returnParameters":{"id":3251,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3250,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3260,"src":"2981:4:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3249,"name":"bool","nodeType":"ElementaryTypeName","src":"2981:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2980:6:22"},"scope":3496,"src":"2895:145:22","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":3272,"nodeType":"Block","src":"3390:47:22","statements":[{"expression":{"arguments":[{"id":3267,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3263,"src":"3411:4:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":3268,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3581,"src":"3417:10:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":3269,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3417:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3266,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[3273,3312],"referencedDeclaration":3312,"src":"3400:10:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address) view"}},"id":3270,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3400:30:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3271,"nodeType":"ExpressionStatement","src":"3400:30:22"}]},"documentation":{"id":3261,"nodeType":"StructuredDocumentation","src":"3046:283:22","text":" @dev Revert with a standard message if `_msgSender()` is missing `role`.\n Overriding this function changes the behavior of the {onlyRole} modifier.\n Format of the revert message is described in {_checkRole}.\n _Available since v4.6._"},"id":3273,"implemented":true,"kind":"function","modifiers":[],"name":"_checkRole","nameLocation":"3343:10:22","nodeType":"FunctionDefinition","parameters":{"id":3264,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3263,"mutability":"mutable","name":"role","nameLocation":"3362:4:22","nodeType":"VariableDeclaration","scope":3273,"src":"3354:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3262,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3354:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3353:14:22"},"returnParameters":{"id":3265,"nodeType":"ParameterList","parameters":[],"src":"3390:0:22"},"scope":3496,"src":"3334:103:22","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":3311,"nodeType":"Block","src":"3791:406:22","statements":[{"condition":{"id":3285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3805:23:22","subExpression":{"arguments":[{"id":3282,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3276,"src":"3814:4:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3283,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3278,"src":"3820:7:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3281,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3260,"src":"3806:7:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":3284,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3806:22:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3310,"nodeType":"IfStatement","src":"3801:390:22","trueBody":{"id":3309,"nodeType":"Block","src":"3830:361:22","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"hexValue":"416363657373436f6e74726f6c3a206163636f756e7420","id":3291,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3938:25:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874","typeString":"literal_string \"AccessControl: account \""},"value":"AccessControl: account "},{"arguments":[{"id":3294,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3278,"src":"4009:7:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3292,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3766,"src":"3989:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$3766_$","typeString":"type(library Strings)"}},"id":3293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3997:11:22","memberName":"toHexString","nodeType":"MemberAccess","referencedDeclaration":3765,"src":"3989:19:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$","typeString":"function (address) pure returns (string memory)"}},"id":3295,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3989:28:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"206973206d697373696e6720726f6c6520","id":3296,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4043:19:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69","typeString":"literal_string \" is missing role \""},"value":" is missing role "},{"arguments":[{"arguments":[{"id":3301,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3276,"src":"4116:4:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3300,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4108:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3299,"name":"uint256","nodeType":"ElementaryTypeName","src":"4108:7:22","typeDescriptions":{}}},"id":3302,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4108:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"3332","id":3303,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4123:2:22","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"}],"expression":{"id":3297,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3766,"src":"4088:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$3766_$","typeString":"type(library Strings)"}},"id":3298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4096:11:22","memberName":"toHexString","nodeType":"MemberAccess","referencedDeclaration":3745,"src":"4088:19:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":3304,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4088:38:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874","typeString":"literal_string \"AccessControl: account \""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69","typeString":"literal_string \" is missing role \""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":3289,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3896:3:22","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3290,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3900:12:22","memberName":"encodePacked","nodeType":"MemberAccess","src":"3896:16:22","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3305,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3896:252:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3288,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3868:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":3287,"name":"string","nodeType":"ElementaryTypeName","src":"3868:6:22","typeDescriptions":{}}},"id":3306,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3868:298:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3286,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"3844:6:22","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":3307,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3844:336:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3308,"nodeType":"ExpressionStatement","src":"3844:336:22"}]}}]},"documentation":{"id":3274,"nodeType":"StructuredDocumentation","src":"3443:270:22","text":" @dev Revert with a standard message if `account` is missing `role`.\n The format of the revert reason is given by the following regular expression:\n  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/"},"id":3312,"implemented":true,"kind":"function","modifiers":[],"name":"_checkRole","nameLocation":"3727:10:22","nodeType":"FunctionDefinition","parameters":{"id":3279,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3276,"mutability":"mutable","name":"role","nameLocation":"3746:4:22","nodeType":"VariableDeclaration","scope":3312,"src":"3738:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3275,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3738:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3278,"mutability":"mutable","name":"account","nameLocation":"3760:7:22","nodeType":"VariableDeclaration","scope":3312,"src":"3752:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3277,"name":"address","nodeType":"ElementaryTypeName","src":"3752:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3737:31:22"},"returnParameters":{"id":3280,"nodeType":"ParameterList","parameters":[],"src":"3791:0:22"},"scope":3496,"src":"3718:479:22","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[3544],"body":{"id":3326,"nodeType":"Block","src":"4461:46:22","statements":[{"expression":{"expression":{"baseExpression":{"id":3321,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3205,"src":"4478:6:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$3200_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":3323,"indexExpression":{"id":3322,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3315,"src":"4485:4:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4478:12:22","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$3200_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":3324,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4491:9:22","memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":3199,"src":"4478:22:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3320,"id":3325,"nodeType":"Return","src":"4471:29:22"}]},"documentation":{"id":3313,"nodeType":"StructuredDocumentation","src":"4203:170:22","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."},"functionSelector":"248a9ca3","id":3327,"implemented":true,"kind":"function","modifiers":[],"name":"getRoleAdmin","nameLocation":"4387:12:22","nodeType":"FunctionDefinition","overrides":{"id":3317,"nodeType":"OverrideSpecifier","overrides":[],"src":"4434:8:22"},"parameters":{"id":3316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3315,"mutability":"mutable","name":"role","nameLocation":"4408:4:22","nodeType":"VariableDeclaration","scope":3327,"src":"4400:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3314,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4400:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4399:14:22"},"returnParameters":{"id":3320,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3319,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3327,"src":"4452:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3318,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4452:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4451:9:22"},"scope":3496,"src":"4378:129:22","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[3552],"body":{"id":3346,"nodeType":"Block","src":"4906:42:22","statements":[{"expression":{"arguments":[{"id":3342,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3330,"src":"4927:4:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3343,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3332,"src":"4933:7:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3341,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3464,"src":"4916:10:22","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":3344,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4916:25:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3345,"nodeType":"ExpressionStatement","src":"4916:25:22"}]},"documentation":{"id":3328,"nodeType":"StructuredDocumentation","src":"4513:285:22","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."},"functionSelector":"2f2ff15d","id":3347,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":3337,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3330,"src":"4899:4:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3336,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3327,"src":"4886:12:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":3338,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4886:18:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":3339,"kind":"modifierInvocation","modifierName":{"id":3335,"name":"onlyRole","nameLocations":["4877:8:22"],"nodeType":"IdentifierPath","referencedDeclaration":3219,"src":"4877:8:22"},"nodeType":"ModifierInvocation","src":"4877:28:22"}],"name":"grantRole","nameLocation":"4812:9:22","nodeType":"FunctionDefinition","overrides":{"id":3334,"nodeType":"OverrideSpecifier","overrides":[],"src":"4868:8:22"},"parameters":{"id":3333,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3330,"mutability":"mutable","name":"role","nameLocation":"4830:4:22","nodeType":"VariableDeclaration","scope":3347,"src":"4822:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3329,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4822:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3332,"mutability":"mutable","name":"account","nameLocation":"4844:7:22","nodeType":"VariableDeclaration","scope":3347,"src":"4836:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3331,"name":"address","nodeType":"ElementaryTypeName","src":"4836:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4821:31:22"},"returnParameters":{"id":3340,"nodeType":"ParameterList","parameters":[],"src":"4906:0:22"},"scope":3496,"src":"4803:145:22","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[3560],"body":{"id":3366,"nodeType":"Block","src":"5332:43:22","statements":[{"expression":{"arguments":[{"id":3362,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3350,"src":"5354:4:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3363,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3352,"src":"5360:7:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3361,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3495,"src":"5342:11:22","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":3364,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5342:26:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3365,"nodeType":"ExpressionStatement","src":"5342:26:22"}]},"documentation":{"id":3348,"nodeType":"StructuredDocumentation","src":"4954:269:22","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."},"functionSelector":"d547741f","id":3367,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":3357,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3350,"src":"5325:4:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3356,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3327,"src":"5312:12:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":3358,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5312:18:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":3359,"kind":"modifierInvocation","modifierName":{"id":3355,"name":"onlyRole","nameLocations":["5303:8:22"],"nodeType":"IdentifierPath","referencedDeclaration":3219,"src":"5303:8:22"},"nodeType":"ModifierInvocation","src":"5303:28:22"}],"name":"revokeRole","nameLocation":"5237:10:22","nodeType":"FunctionDefinition","overrides":{"id":3354,"nodeType":"OverrideSpecifier","overrides":[],"src":"5294:8:22"},"parameters":{"id":3353,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3350,"mutability":"mutable","name":"role","nameLocation":"5256:4:22","nodeType":"VariableDeclaration","scope":3367,"src":"5248:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3349,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5248:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3352,"mutability":"mutable","name":"account","nameLocation":"5270:7:22","nodeType":"VariableDeclaration","scope":3367,"src":"5262:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3351,"name":"address","nodeType":"ElementaryTypeName","src":"5262:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5247:31:22"},"returnParameters":{"id":3360,"nodeType":"ParameterList","parameters":[],"src":"5332:0:22"},"scope":3496,"src":"5228:147:22","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[3568],"body":{"id":3389,"nodeType":"Block","src":"5989:137:22","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3377,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3372,"src":"6007:7:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":3378,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3581,"src":"6018:10:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":3379,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6018:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6007:23:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c66","id":3381,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6032:49:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b","typeString":"literal_string \"AccessControl: can only renounce roles for self\""},"value":"AccessControl: can only renounce roles for self"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b","typeString":"literal_string \"AccessControl: can only renounce roles for self\""}],"id":3376,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5999:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3382,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5999:83:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3383,"nodeType":"ExpressionStatement","src":"5999:83:22"},{"expression":{"arguments":[{"id":3385,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3370,"src":"6105:4:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3386,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3372,"src":"6111:7:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3384,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3495,"src":"6093:11:22","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":3387,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6093:26:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3388,"nodeType":"ExpressionStatement","src":"6093:26:22"}]},"documentation":{"id":3368,"nodeType":"StructuredDocumentation","src":"5381:526:22","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `account`.\n May emit a {RoleRevoked} event."},"functionSelector":"36568abe","id":3390,"implemented":true,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"5921:12:22","nodeType":"FunctionDefinition","overrides":{"id":3374,"nodeType":"OverrideSpecifier","overrides":[],"src":"5980:8:22"},"parameters":{"id":3373,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3370,"mutability":"mutable","name":"role","nameLocation":"5942:4:22","nodeType":"VariableDeclaration","scope":3390,"src":"5934:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3369,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5934:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3372,"mutability":"mutable","name":"account","nameLocation":"5956:7:22","nodeType":"VariableDeclaration","scope":3390,"src":"5948:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3371,"name":"address","nodeType":"ElementaryTypeName","src":"5948:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5933:31:22"},"returnParameters":{"id":3375,"nodeType":"ParameterList","parameters":[],"src":"5989:0:22"},"scope":3496,"src":"5912:214:22","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":3403,"nodeType":"Block","src":"6879:42:22","statements":[{"expression":{"arguments":[{"id":3399,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3393,"src":"6900:4:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3400,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3395,"src":"6906:7:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3398,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3464,"src":"6889:10:22","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":3401,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6889:25:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3402,"nodeType":"ExpressionStatement","src":"6889:25:22"}]},"documentation":{"id":3391,"nodeType":"StructuredDocumentation","src":"6132:674:22","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event. Note that unlike {grantRole}, this function doesn't perform any\n checks on the calling account.\n May emit a {RoleGranted} event.\n [WARNING]\n ====\n This function should only be called from the constructor when setting\n up the initial roles for the system.\n Using this function in any other way is effectively circumventing the admin\n system imposed by {AccessControl}.\n ====\n NOTE: This function is deprecated in favor of {_grantRole}."},"id":3404,"implemented":true,"kind":"function","modifiers":[],"name":"_setupRole","nameLocation":"6820:10:22","nodeType":"FunctionDefinition","parameters":{"id":3396,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3393,"mutability":"mutable","name":"role","nameLocation":"6839:4:22","nodeType":"VariableDeclaration","scope":3404,"src":"6831:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3392,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6831:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3395,"mutability":"mutable","name":"account","nameLocation":"6853:7:22","nodeType":"VariableDeclaration","scope":3404,"src":"6845:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3394,"name":"address","nodeType":"ElementaryTypeName","src":"6845:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6830:31:22"},"returnParameters":{"id":3397,"nodeType":"ParameterList","parameters":[],"src":"6879:0:22"},"scope":3496,"src":"6811:110:22","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":3431,"nodeType":"Block","src":"7119:174:22","statements":[{"assignments":[3413],"declarations":[{"constant":false,"id":3413,"mutability":"mutable","name":"previousAdminRole","nameLocation":"7137:17:22","nodeType":"VariableDeclaration","scope":3431,"src":"7129:25:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3412,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7129:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3417,"initialValue":{"arguments":[{"id":3415,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3407,"src":"7170:4:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3414,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3327,"src":"7157:12:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":3416,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7157:18:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"7129:46:22"},{"expression":{"id":3423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":3418,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3205,"src":"7185:6:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$3200_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":3420,"indexExpression":{"id":3419,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3407,"src":"7192:4:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7185:12:22","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$3200_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":3421,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7198:9:22","memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":3199,"src":"7185:22:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3422,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3409,"src":"7210:9:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"7185:34:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3424,"nodeType":"ExpressionStatement","src":"7185:34:22"},{"eventCall":{"arguments":[{"id":3426,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3407,"src":"7251:4:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3427,"name":"previousAdminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3413,"src":"7257:17:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3428,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3409,"src":"7276:9:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3425,"name":"RoleAdminChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3508,"src":"7234:16:22","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (bytes32,bytes32,bytes32)"}},"id":3429,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7234:52:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3430,"nodeType":"EmitStatement","src":"7229:57:22"}]},"documentation":{"id":3405,"nodeType":"StructuredDocumentation","src":"6927:114:22","text":" @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."},"id":3432,"implemented":true,"kind":"function","modifiers":[],"name":"_setRoleAdmin","nameLocation":"7055:13:22","nodeType":"FunctionDefinition","parameters":{"id":3410,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3407,"mutability":"mutable","name":"role","nameLocation":"7077:4:22","nodeType":"VariableDeclaration","scope":3432,"src":"7069:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3406,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7069:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3409,"mutability":"mutable","name":"adminRole","nameLocation":"7091:9:22","nodeType":"VariableDeclaration","scope":3432,"src":"7083:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3408,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7083:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7068:33:22"},"returnParameters":{"id":3411,"nodeType":"ParameterList","parameters":[],"src":"7119:0:22"},"scope":3496,"src":"7046:247:22","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":3463,"nodeType":"Block","src":"7529:165:22","statements":[{"condition":{"id":3444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7543:23:22","subExpression":{"arguments":[{"id":3441,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3435,"src":"7552:4:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3442,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3437,"src":"7558:7:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3440,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3260,"src":"7544:7:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":3443,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7544:22:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3462,"nodeType":"IfStatement","src":"7539:149:22","trueBody":{"id":3461,"nodeType":"Block","src":"7568:120:22","statements":[{"expression":{"id":3452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"id":3445,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3205,"src":"7582:6:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$3200_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":3447,"indexExpression":{"id":3446,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3435,"src":"7589:4:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7582:12:22","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$3200_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":3448,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7595:7:22","memberName":"members","nodeType":"MemberAccess","referencedDeclaration":3197,"src":"7582:20:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":3450,"indexExpression":{"id":3449,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3437,"src":"7603:7:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7582:29:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":3451,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7614:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"7582:36:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3453,"nodeType":"ExpressionStatement","src":"7582:36:22"},{"eventCall":{"arguments":[{"id":3455,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3435,"src":"7649:4:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3456,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3437,"src":"7655:7:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":3457,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3581,"src":"7664:10:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":3458,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7664:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3454,"name":"RoleGranted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3517,"src":"7637:11:22","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":3459,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7637:40:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3460,"nodeType":"EmitStatement","src":"7632:45:22"}]}}]},"documentation":{"id":3433,"nodeType":"StructuredDocumentation","src":"7299:157:22","text":" @dev Grants `role` to `account`.\n Internal function without access restriction.\n May emit a {RoleGranted} event."},"id":3464,"implemented":true,"kind":"function","modifiers":[],"name":"_grantRole","nameLocation":"7470:10:22","nodeType":"FunctionDefinition","parameters":{"id":3438,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3435,"mutability":"mutable","name":"role","nameLocation":"7489:4:22","nodeType":"VariableDeclaration","scope":3464,"src":"7481:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3434,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7481:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3437,"mutability":"mutable","name":"account","nameLocation":"7503:7:22","nodeType":"VariableDeclaration","scope":3464,"src":"7495:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3436,"name":"address","nodeType":"ElementaryTypeName","src":"7495:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7480:31:22"},"returnParameters":{"id":3439,"nodeType":"ParameterList","parameters":[],"src":"7529:0:22"},"scope":3496,"src":"7461:233:22","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":3494,"nodeType":"Block","src":"7934:165:22","statements":[{"condition":{"arguments":[{"id":3473,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3467,"src":"7956:4:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3474,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3469,"src":"7962:7:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3472,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3260,"src":"7948:7:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":3475,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7948:22:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3493,"nodeType":"IfStatement","src":"7944:149:22","trueBody":{"id":3492,"nodeType":"Block","src":"7972:121:22","statements":[{"expression":{"id":3483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"id":3476,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3205,"src":"7986:6:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$3200_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":3478,"indexExpression":{"id":3477,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3467,"src":"7993:4:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7986:12:22","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$3200_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":3479,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7999:7:22","memberName":"members","nodeType":"MemberAccess","referencedDeclaration":3197,"src":"7986:20:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":3481,"indexExpression":{"id":3480,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3469,"src":"8007:7:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7986:29:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":3482,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8018:5:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"7986:37:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3484,"nodeType":"ExpressionStatement","src":"7986:37:22"},{"eventCall":{"arguments":[{"id":3486,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3467,"src":"8054:4:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3487,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3469,"src":"8060:7:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":3488,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3581,"src":"8069:10:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":3489,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8069:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3485,"name":"RoleRevoked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3526,"src":"8042:11:22","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":3490,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8042:40:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3491,"nodeType":"EmitStatement","src":"8037:45:22"}]}}]},"documentation":{"id":3465,"nodeType":"StructuredDocumentation","src":"7700:160:22","text":" @dev Revokes `role` from `account`.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."},"id":3495,"implemented":true,"kind":"function","modifiers":[],"name":"_revokeRole","nameLocation":"7874:11:22","nodeType":"FunctionDefinition","parameters":{"id":3470,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3467,"mutability":"mutable","name":"role","nameLocation":"7894:4:22","nodeType":"VariableDeclaration","scope":3495,"src":"7886:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3466,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7886:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3469,"mutability":"mutable","name":"account","nameLocation":"7908:7:22","nodeType":"VariableDeclaration","scope":3495,"src":"7900:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3468,"name":"address","nodeType":"ElementaryTypeName","src":"7900:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7885:31:22"},"returnParameters":{"id":3471,"nodeType":"ParameterList","parameters":[],"src":"7934:0:22"},"scope":3496,"src":"7865:234:22","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":3497,"src":"1806:6295:22","usedErrors":[]}],"src":"108:7994:22"},"id":22},"node_modules/@openzeppelin/contracts/access/IAccessControl.sol":{"ast":{"absolutePath":"node_modules/@openzeppelin/contracts/access/IAccessControl.sol","exportedSymbols":{"IAccessControl":[3569]},"id":3570,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3498,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"94:23:23"},{"abstract":false,"baseContracts":[],"canonicalName":"IAccessControl","contractDependencies":[],"contractKind":"interface","documentation":{"id":3499,"nodeType":"StructuredDocumentation","src":"119:89:23","text":" @dev External interface of AccessControl declared to support ERC165 detection."},"fullyImplemented":false,"id":3569,"linearizedBaseContracts":[3569],"name":"IAccessControl","nameLocation":"219:14:23","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":3500,"nodeType":"StructuredDocumentation","src":"240:292:23","text":" @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this.\n _Available since v3.1._"},"eventSelector":"bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff","id":3508,"name":"RoleAdminChanged","nameLocation":"543:16:23","nodeType":"EventDefinition","parameters":{"id":3507,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3502,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"576:4:23","nodeType":"VariableDeclaration","scope":3508,"src":"560:20:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3501,"name":"bytes32","nodeType":"ElementaryTypeName","src":"560:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3504,"indexed":true,"mutability":"mutable","name":"previousAdminRole","nameLocation":"598:17:23","nodeType":"VariableDeclaration","scope":3508,"src":"582:33:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3503,"name":"bytes32","nodeType":"ElementaryTypeName","src":"582:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3506,"indexed":true,"mutability":"mutable","name":"newAdminRole","nameLocation":"633:12:23","nodeType":"VariableDeclaration","scope":3508,"src":"617:28:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3505,"name":"bytes32","nodeType":"ElementaryTypeName","src":"617:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"559:87:23"},"src":"537:110:23"},{"anonymous":false,"documentation":{"id":3509,"nodeType":"StructuredDocumentation","src":"653:212:23","text":" @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call, an admin role\n bearer except when using {AccessControl-_setupRole}."},"eventSelector":"2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d","id":3517,"name":"RoleGranted","nameLocation":"876:11:23","nodeType":"EventDefinition","parameters":{"id":3516,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3511,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"904:4:23","nodeType":"VariableDeclaration","scope":3517,"src":"888:20:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3510,"name":"bytes32","nodeType":"ElementaryTypeName","src":"888:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3513,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"926:7:23","nodeType":"VariableDeclaration","scope":3517,"src":"910:23:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3512,"name":"address","nodeType":"ElementaryTypeName","src":"910:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3515,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"951:6:23","nodeType":"VariableDeclaration","scope":3517,"src":"935:22:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3514,"name":"address","nodeType":"ElementaryTypeName","src":"935:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"887:71:23"},"src":"870:89:23"},{"anonymous":false,"documentation":{"id":3518,"nodeType":"StructuredDocumentation","src":"965:275:23","text":" @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"},"eventSelector":"f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b","id":3526,"name":"RoleRevoked","nameLocation":"1251:11:23","nodeType":"EventDefinition","parameters":{"id":3525,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3520,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"1279:4:23","nodeType":"VariableDeclaration","scope":3526,"src":"1263:20:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3519,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1263:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3522,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1301:7:23","nodeType":"VariableDeclaration","scope":3526,"src":"1285:23:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3521,"name":"address","nodeType":"ElementaryTypeName","src":"1285:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3524,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1326:6:23","nodeType":"VariableDeclaration","scope":3526,"src":"1310:22:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3523,"name":"address","nodeType":"ElementaryTypeName","src":"1310:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1262:71:23"},"src":"1245:89:23"},{"documentation":{"id":3527,"nodeType":"StructuredDocumentation","src":"1340:76:23","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","id":3536,"implemented":false,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"1430:7:23","nodeType":"FunctionDefinition","parameters":{"id":3532,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3529,"mutability":"mutable","name":"role","nameLocation":"1446:4:23","nodeType":"VariableDeclaration","scope":3536,"src":"1438:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3528,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1438:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3531,"mutability":"mutable","name":"account","nameLocation":"1460:7:23","nodeType":"VariableDeclaration","scope":3536,"src":"1452:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3530,"name":"address","nodeType":"ElementaryTypeName","src":"1452:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1437:31:23"},"returnParameters":{"id":3535,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3534,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3536,"src":"1492:4:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3533,"name":"bool","nodeType":"ElementaryTypeName","src":"1492:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1491:6:23"},"scope":3569,"src":"1421:77:23","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3537,"nodeType":"StructuredDocumentation","src":"1504:184:23","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."},"functionSelector":"248a9ca3","id":3544,"implemented":false,"kind":"function","modifiers":[],"name":"getRoleAdmin","nameLocation":"1702:12:23","nodeType":"FunctionDefinition","parameters":{"id":3540,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3539,"mutability":"mutable","name":"role","nameLocation":"1723:4:23","nodeType":"VariableDeclaration","scope":3544,"src":"1715:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3538,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1715:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1714:14:23"},"returnParameters":{"id":3543,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3542,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3544,"src":"1752:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3541,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1752:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1751:9:23"},"scope":3569,"src":"1693:68:23","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3545,"nodeType":"StructuredDocumentation","src":"1767:239:23","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"2f2ff15d","id":3552,"implemented":false,"kind":"function","modifiers":[],"name":"grantRole","nameLocation":"2020:9:23","nodeType":"FunctionDefinition","parameters":{"id":3550,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3547,"mutability":"mutable","name":"role","nameLocation":"2038:4:23","nodeType":"VariableDeclaration","scope":3552,"src":"2030:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3546,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2030:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3549,"mutability":"mutable","name":"account","nameLocation":"2052:7:23","nodeType":"VariableDeclaration","scope":3552,"src":"2044:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3548,"name":"address","nodeType":"ElementaryTypeName","src":"2044:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2029:31:23"},"returnParameters":{"id":3551,"nodeType":"ParameterList","parameters":[],"src":"2069:0:23"},"scope":3569,"src":"2011:59:23","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3553,"nodeType":"StructuredDocumentation","src":"2076:223:23","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"d547741f","id":3560,"implemented":false,"kind":"function","modifiers":[],"name":"revokeRole","nameLocation":"2313:10:23","nodeType":"FunctionDefinition","parameters":{"id":3558,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3555,"mutability":"mutable","name":"role","nameLocation":"2332:4:23","nodeType":"VariableDeclaration","scope":3560,"src":"2324:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3554,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2324:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3557,"mutability":"mutable","name":"account","nameLocation":"2346:7:23","nodeType":"VariableDeclaration","scope":3560,"src":"2338:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3556,"name":"address","nodeType":"ElementaryTypeName","src":"2338:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2323:31:23"},"returnParameters":{"id":3559,"nodeType":"ParameterList","parameters":[],"src":"2363:0:23"},"scope":3569,"src":"2304:60:23","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3561,"nodeType":"StructuredDocumentation","src":"2370:480:23","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `account`."},"functionSelector":"36568abe","id":3568,"implemented":false,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"2864:12:23","nodeType":"FunctionDefinition","parameters":{"id":3566,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3563,"mutability":"mutable","name":"role","nameLocation":"2885:4:23","nodeType":"VariableDeclaration","scope":3568,"src":"2877:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3562,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2877:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3565,"mutability":"mutable","name":"account","nameLocation":"2899:7:23","nodeType":"VariableDeclaration","scope":3568,"src":"2891:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3564,"name":"address","nodeType":"ElementaryTypeName","src":"2891:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2876:31:23"},"returnParameters":{"id":3567,"nodeType":"ParameterList","parameters":[],"src":"2916:0:23"},"scope":3569,"src":"2855:62:23","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":3570,"src":"209:2710:23","usedErrors":[]}],"src":"94:2826:23"},"id":23},"node_modules/@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"node_modules/@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[3591]},"id":3592,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3571,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"86:23:24"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":3572,"nodeType":"StructuredDocumentation","src":"111:496:24","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":3591,"linearizedBaseContracts":[3591],"name":"Context","nameLocation":"626:7:24","nodeType":"ContractDefinition","nodes":[{"body":{"id":3580,"nodeType":"Block","src":"702:34:24","statements":[{"expression":{"expression":{"id":3577,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"719:3:24","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"723:6:24","memberName":"sender","nodeType":"MemberAccess","src":"719:10:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3576,"id":3579,"nodeType":"Return","src":"712:17:24"}]},"id":3581,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"649:10:24","nodeType":"FunctionDefinition","parameters":{"id":3573,"nodeType":"ParameterList","parameters":[],"src":"659:2:24"},"returnParameters":{"id":3576,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3575,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3581,"src":"693:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3574,"name":"address","nodeType":"ElementaryTypeName","src":"693:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"692:9:24"},"scope":3591,"src":"640:96:24","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":3589,"nodeType":"Block","src":"809:32:24","statements":[{"expression":{"expression":{"id":3586,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"826:3:24","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"830:4:24","memberName":"data","nodeType":"MemberAccess","src":"826:8:24","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":3585,"id":3588,"nodeType":"Return","src":"819:15:24"}]},"id":3590,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"751:8:24","nodeType":"FunctionDefinition","parameters":{"id":3582,"nodeType":"ParameterList","parameters":[],"src":"759:2:24"},"returnParameters":{"id":3585,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3584,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3590,"src":"793:14:24","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3583,"name":"bytes","nodeType":"ElementaryTypeName","src":"793:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"792:16:24"},"scope":3591,"src":"742:99:24","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":3592,"src":"608:235:24","usedErrors":[]}],"src":"86:758:24"},"id":24},"node_modules/@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"node_modules/@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[4655],"Strings":[3766]},"id":3767,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3593,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"101:23:25"},{"absolutePath":"node_modules/@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":3594,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3767,"sourceUnit":4656,"src":"126:25:25","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":3595,"nodeType":"StructuredDocumentation","src":"153:34:25","text":" @dev String operations."},"fullyImplemented":true,"id":3766,"linearizedBaseContracts":[3766],"name":"Strings","nameLocation":"196:7:25","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":3598,"mutability":"constant","name":"_SYMBOLS","nameLocation":"235:8:25","nodeType":"VariableDeclaration","scope":3766,"src":"210:54:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":3596,"name":"bytes16","nodeType":"ElementaryTypeName","src":"210:7:25","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":3597,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"246:18:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":3601,"mutability":"constant","name":"_ADDRESS_LENGTH","nameLocation":"293:15:25","nodeType":"VariableDeclaration","scope":3766,"src":"270:43:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3599,"name":"uint8","nodeType":"ElementaryTypeName","src":"270:5:25","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":3600,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"311:2:25","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"body":{"id":3648,"nodeType":"Block","src":"486:625:25","statements":[{"id":3647,"nodeType":"UncheckedBlock","src":"496:609:25","statements":[{"assignments":[3610],"declarations":[{"constant":false,"id":3610,"mutability":"mutable","name":"length","nameLocation":"528:6:25","nodeType":"VariableDeclaration","scope":3647,"src":"520:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3609,"name":"uint256","nodeType":"ElementaryTypeName","src":"520:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3617,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3613,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3604,"src":"548:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3611,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4655,"src":"537:4:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4655_$","typeString":"type(library Math)"}},"id":3612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"542:5:25","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":4492,"src":"537:10:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3614,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"537:17:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3615,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"557:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"537:21:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"520:38:25"},{"assignments":[3619],"declarations":[{"constant":false,"id":3619,"mutability":"mutable","name":"buffer","nameLocation":"586:6:25","nodeType":"VariableDeclaration","scope":3647,"src":"572:20:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3618,"name":"string","nodeType":"ElementaryTypeName","src":"572:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":3624,"initialValue":{"arguments":[{"id":3622,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3610,"src":"606:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3621,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"595:10:25","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":3620,"name":"string","nodeType":"ElementaryTypeName","src":"599:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":3623,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"595:18:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"572:41:25"},{"assignments":[3626],"declarations":[{"constant":false,"id":3626,"mutability":"mutable","name":"ptr","nameLocation":"635:3:25","nodeType":"VariableDeclaration","scope":3647,"src":"627:11:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3625,"name":"uint256","nodeType":"ElementaryTypeName","src":"627:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3627,"nodeType":"VariableDeclarationStatement","src":"627:11:25"},{"AST":{"nodeType":"YulBlock","src":"708:67:25","statements":[{"nodeType":"YulAssignment","src":"726:35:25","value":{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"737:6:25"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"749:2:25","type":"","value":"32"},{"name":"length","nodeType":"YulIdentifier","src":"753:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"745:3:25"},"nodeType":"YulFunctionCall","src":"745:15:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"733:3:25"},"nodeType":"YulFunctionCall","src":"733:28:25"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"726:3:25"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":3619,"isOffset":false,"isSlot":false,"src":"737:6:25","valueSize":1},{"declaration":3610,"isOffset":false,"isSlot":false,"src":"753:6:25","valueSize":1},{"declaration":3626,"isOffset":false,"isSlot":false,"src":"726:3:25","valueSize":1}],"id":3628,"nodeType":"InlineAssembly","src":"699:76:25"},{"body":{"id":3643,"nodeType":"Block","src":"801:267:25","statements":[{"expression":{"id":3631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"819:5:25","subExpression":{"id":3630,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3626,"src":"819:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3632,"nodeType":"ExpressionStatement","src":"819:5:25"},{"AST":{"nodeType":"YulBlock","src":"902:84:25","statements":[{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"932:3:25"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"946:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"953:2:25","type":"","value":"10"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"942:3:25"},"nodeType":"YulFunctionCall","src":"942:14:25"},{"name":"_SYMBOLS","nodeType":"YulIdentifier","src":"958:8:25"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"937:4:25"},"nodeType":"YulFunctionCall","src":"937:30:25"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"924:7:25"},"nodeType":"YulFunctionCall","src":"924:44:25"},"nodeType":"YulExpressionStatement","src":"924:44:25"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":3598,"isOffset":false,"isSlot":false,"src":"958:8:25","valueSize":1},{"declaration":3626,"isOffset":false,"isSlot":false,"src":"932:3:25","valueSize":1},{"declaration":3604,"isOffset":false,"isSlot":false,"src":"946:5:25","valueSize":1}],"id":3633,"nodeType":"InlineAssembly","src":"893:93:25"},{"expression":{"id":3636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3634,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3604,"src":"1003:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":3635,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1012:2:25","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1003:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3637,"nodeType":"ExpressionStatement","src":"1003:11:25"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3638,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3604,"src":"1036:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3639,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1045:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1036:10:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3642,"nodeType":"IfStatement","src":"1032:21:25","trueBody":{"id":3641,"nodeType":"Break","src":"1048:5:25"}}]},"condition":{"hexValue":"74727565","id":3629,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"795:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":3644,"nodeType":"WhileStatement","src":"788:280:25"},{"expression":{"id":3645,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3619,"src":"1088:6:25","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3608,"id":3646,"nodeType":"Return","src":"1081:13:25"}]}]},"documentation":{"id":3602,"nodeType":"StructuredDocumentation","src":"320:90:25","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":3649,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"424:8:25","nodeType":"FunctionDefinition","parameters":{"id":3605,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3604,"mutability":"mutable","name":"value","nameLocation":"441:5:25","nodeType":"VariableDeclaration","scope":3649,"src":"433:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3603,"name":"uint256","nodeType":"ElementaryTypeName","src":"433:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"432:15:25"},"returnParameters":{"id":3608,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3607,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3649,"src":"471:13:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3606,"name":"string","nodeType":"ElementaryTypeName","src":"471:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"470:15:25"},"scope":3766,"src":"415:696:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3668,"nodeType":"Block","src":"1290:100:25","statements":[{"id":3667,"nodeType":"UncheckedBlock","src":"1300:84:25","statements":[{"expression":{"arguments":[{"id":3658,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3652,"src":"1343:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3661,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3652,"src":"1362:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3659,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4655,"src":"1350:4:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4655_$","typeString":"type(library Math)"}},"id":3660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1355:6:25","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":4615,"src":"1350:11:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3662,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1350:18:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3663,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1371:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1350:22:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3657,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[3669,3745,3765],"referencedDeclaration":3745,"src":"1331:11:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":3665,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1331:42:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3656,"id":3666,"nodeType":"Return","src":"1324:49:25"}]}]},"documentation":{"id":3650,"nodeType":"StructuredDocumentation","src":"1117:94:25","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":3669,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1225:11:25","nodeType":"FunctionDefinition","parameters":{"id":3653,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3652,"mutability":"mutable","name":"value","nameLocation":"1245:5:25","nodeType":"VariableDeclaration","scope":3669,"src":"1237:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3651,"name":"uint256","nodeType":"ElementaryTypeName","src":"1237:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1236:15:25"},"returnParameters":{"id":3656,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3655,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3669,"src":"1275:13:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3654,"name":"string","nodeType":"ElementaryTypeName","src":"1275:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1274:15:25"},"scope":3766,"src":"1216:174:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3744,"nodeType":"Block","src":"1603:347:25","statements":[{"assignments":[3680],"declarations":[{"constant":false,"id":3680,"mutability":"mutable","name":"buffer","nameLocation":"1626:6:25","nodeType":"VariableDeclaration","scope":3744,"src":"1613:19:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3679,"name":"bytes","nodeType":"ElementaryTypeName","src":"1613:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3689,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3683,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1645:1:25","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3684,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3674,"src":"1649:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1645:10:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":3686,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1658:1:25","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"1645:14:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3682,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1635:9:25","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":3681,"name":"bytes","nodeType":"ElementaryTypeName","src":"1639:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":3688,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1635:25:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1613:47:25"},{"expression":{"id":3694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3690,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3680,"src":"1670:6:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3692,"indexExpression":{"hexValue":"30","id":3691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1677:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1670:9:25","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":3693,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1682:3:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"1670:15:25","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3695,"nodeType":"ExpressionStatement","src":"1670:15:25"},{"expression":{"id":3700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3696,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3680,"src":"1695:6:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3698,"indexExpression":{"hexValue":"31","id":3697,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1702:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1695:9:25","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":3699,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1707:3:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"1695:15:25","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3701,"nodeType":"ExpressionStatement","src":"1695:15:25"},{"body":{"id":3730,"nodeType":"Block","src":"1765:83:25","statements":[{"expression":{"id":3724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3716,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3680,"src":"1779:6:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3718,"indexExpression":{"id":3717,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3703,"src":"1786:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1779:9:25","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":3719,"name":"_SYMBOLS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3598,"src":"1791:8:25","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":3723,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3720,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3672,"src":"1800:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":3721,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1808:3:25","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"1800:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1791:21:25","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"1779:33:25","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3725,"nodeType":"ExpressionStatement","src":"1779:33:25"},{"expression":{"id":3728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3726,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3672,"src":"1826:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":3727,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1836:1:25","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"1826:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3729,"nodeType":"ExpressionStatement","src":"1826:11:25"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3710,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3703,"src":"1753:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":3711,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1757:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1753:5:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3731,"initializationExpression":{"assignments":[3703],"declarations":[{"constant":false,"id":3703,"mutability":"mutable","name":"i","nameLocation":"1733:1:25","nodeType":"VariableDeclaration","scope":3731,"src":"1725:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3702,"name":"uint256","nodeType":"ElementaryTypeName","src":"1725:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3709,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3704,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1737:1:25","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3705,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3674,"src":"1741:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1737:10:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3707,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1750:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1737:14:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1725:26:25"},"loopExpression":{"expression":{"id":3714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"1760:3:25","subExpression":{"id":3713,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3703,"src":"1762:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3715,"nodeType":"ExpressionStatement","src":"1760:3:25"},"nodeType":"ForStatement","src":"1720:128:25"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3733,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3672,"src":"1865:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3734,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1874:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1865:10:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"537472696e67733a20686578206c656e67746820696e73756666696369656e74","id":3736,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1877:34:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""},"value":"Strings: hex length insufficient"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""}],"id":3732,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1857:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3737,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1857:55:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3738,"nodeType":"ExpressionStatement","src":"1857:55:25"},{"expression":{"arguments":[{"id":3741,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3680,"src":"1936:6:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3740,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1929:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":3739,"name":"string","nodeType":"ElementaryTypeName","src":"1929:6:25","typeDescriptions":{}}},"id":3742,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1929:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3678,"id":3743,"nodeType":"Return","src":"1922:21:25"}]},"documentation":{"id":3670,"nodeType":"StructuredDocumentation","src":"1396:112:25","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":3745,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1522:11:25","nodeType":"FunctionDefinition","parameters":{"id":3675,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3672,"mutability":"mutable","name":"value","nameLocation":"1542:5:25","nodeType":"VariableDeclaration","scope":3745,"src":"1534:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3671,"name":"uint256","nodeType":"ElementaryTypeName","src":"1534:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3674,"mutability":"mutable","name":"length","nameLocation":"1557:6:25","nodeType":"VariableDeclaration","scope":3745,"src":"1549:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3673,"name":"uint256","nodeType":"ElementaryTypeName","src":"1549:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1533:31:25"},"returnParameters":{"id":3678,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3677,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3745,"src":"1588:13:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3676,"name":"string","nodeType":"ElementaryTypeName","src":"1588:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1587:15:25"},"scope":3766,"src":"1513:437:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3764,"nodeType":"Block","src":"2175:76:25","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":3758,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3748,"src":"2220:4:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3757,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2212:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":3756,"name":"uint160","nodeType":"ElementaryTypeName","src":"2212:7:25","typeDescriptions":{}}},"id":3759,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2212:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":3755,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2204:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3754,"name":"uint256","nodeType":"ElementaryTypeName","src":"2204:7:25","typeDescriptions":{}}},"id":3760,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2204:22:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3761,"name":"_ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3601,"src":"2228:15:25","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":3753,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[3669,3745,3765],"referencedDeclaration":3745,"src":"2192:11:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":3762,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2192:52:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3752,"id":3763,"nodeType":"Return","src":"2185:59:25"}]},"documentation":{"id":3746,"nodeType":"StructuredDocumentation","src":"1956:141:25","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."},"id":3765,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2111:11:25","nodeType":"FunctionDefinition","parameters":{"id":3749,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3748,"mutability":"mutable","name":"addr","nameLocation":"2131:4:25","nodeType":"VariableDeclaration","scope":3765,"src":"2123:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3747,"name":"address","nodeType":"ElementaryTypeName","src":"2123:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2122:14:25"},"returnParameters":{"id":3752,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3751,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3765,"src":"2160:13:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3750,"name":"string","nodeType":"ElementaryTypeName","src":"2160:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2159:15:25"},"scope":3766,"src":"2102:149:25","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3767,"src":"188:2065:25","usedErrors":[]}],"src":"101:2153:25"},"id":25},"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ast":{"absolutePath":"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol","exportedSymbols":{"ERC165":[3790],"IERC165":[4667]},"id":3791,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3768,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"99:23:26"},{"absolutePath":"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"./IERC165.sol","id":3769,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3791,"sourceUnit":4668,"src":"124:23:26","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":3771,"name":"IERC165","nameLocations":["754:7:26"],"nodeType":"IdentifierPath","referencedDeclaration":4667,"src":"754:7:26"},"id":3772,"nodeType":"InheritanceSpecifier","src":"754:7:26"}],"canonicalName":"ERC165","contractDependencies":[],"contractKind":"contract","documentation":{"id":3770,"nodeType":"StructuredDocumentation","src":"149:576:26","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."},"fullyImplemented":true,"id":3790,"linearizedBaseContracts":[3790,4667],"name":"ERC165","nameLocation":"744:6:26","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[4666],"body":{"id":3788,"nodeType":"Block","src":"920:64:26","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":3786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3781,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3775,"src":"937:11:26","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":3783,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4667,"src":"957:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$4667_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$4667_$","typeString":"type(contract IERC165)"}],"id":3782,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"952:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3784,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"952:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$4667","typeString":"type(contract IERC165)"}},"id":3785,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"966:11:26","memberName":"interfaceId","nodeType":"MemberAccess","src":"952:25:26","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"937:40:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3780,"id":3787,"nodeType":"Return","src":"930:47:26"}]},"documentation":{"id":3773,"nodeType":"StructuredDocumentation","src":"768:56:26","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":3789,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"838:17:26","nodeType":"FunctionDefinition","overrides":{"id":3777,"nodeType":"OverrideSpecifier","overrides":[],"src":"896:8:26"},"parameters":{"id":3776,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3775,"mutability":"mutable","name":"interfaceId","nameLocation":"863:11:26","nodeType":"VariableDeclaration","scope":3789,"src":"856:18:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3774,"name":"bytes4","nodeType":"ElementaryTypeName","src":"856:6:26","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"855:20:26"},"returnParameters":{"id":3780,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3779,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3789,"src":"914:4:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3778,"name":"bool","nodeType":"ElementaryTypeName","src":"914:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"913:6:26"},"scope":3790,"src":"829:155:26","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":3791,"src":"726:260:26","usedErrors":[]}],"src":"99:888:26"},"id":26},"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[4667]},"id":4668,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4657,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"100:23:27"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":4658,"nodeType":"StructuredDocumentation","src":"125:279:27","text":" @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":4667,"linearizedBaseContracts":[4667],"name":"IERC165","nameLocation":"415:7:27","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":4659,"nodeType":"StructuredDocumentation","src":"429:340:27","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":4666,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"783:17:27","nodeType":"FunctionDefinition","parameters":{"id":4662,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4661,"mutability":"mutable","name":"interfaceId","nameLocation":"808:11:27","nodeType":"VariableDeclaration","scope":4666,"src":"801:18:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":4660,"name":"bytes4","nodeType":"ElementaryTypeName","src":"801:6:27","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"800:20:27"},"returnParameters":{"id":4665,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4664,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4666,"src":"844:4:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4663,"name":"bool","nodeType":"ElementaryTypeName","src":"844:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"843:6:27"},"scope":4667,"src":"774:76:27","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":4668,"src":"405:447:27","usedErrors":[]}],"src":"100:753:27"},"id":27},"node_modules/@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"node_modules/@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[4655]},"id":4656,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3792,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"103:23:28"},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":3793,"nodeType":"StructuredDocumentation","src":"128:73:28","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":4655,"linearizedBaseContracts":[4655],"name":"Math","nameLocation":"210:4:28","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":3797,"members":[{"id":3794,"name":"Down","nameLocation":"245:4:28","nodeType":"EnumValue","src":"245:4:28"},{"id":3795,"name":"Up","nameLocation":"287:2:28","nodeType":"EnumValue","src":"287:2:28"},{"id":3796,"name":"Zero","nameLocation":"318:4:28","nodeType":"EnumValue","src":"318:4:28"}],"name":"Rounding","nameLocation":"226:8:28","nodeType":"EnumDefinition","src":"221:122:28"},{"body":{"id":3814,"nodeType":"Block","src":"480:37:28","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3807,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3800,"src":"497:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3808,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3802,"src":"501:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"497:5:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":3811,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3802,"src":"509:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"497:13:28","trueExpression":{"id":3810,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3800,"src":"505:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3806,"id":3813,"nodeType":"Return","src":"490:20:28"}]},"documentation":{"id":3798,"nodeType":"StructuredDocumentation","src":"349:59:28","text":" @dev Returns the largest of two numbers."},"id":3815,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"422:3:28","nodeType":"FunctionDefinition","parameters":{"id":3803,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3800,"mutability":"mutable","name":"a","nameLocation":"434:1:28","nodeType":"VariableDeclaration","scope":3815,"src":"426:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3799,"name":"uint256","nodeType":"ElementaryTypeName","src":"426:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3802,"mutability":"mutable","name":"b","nameLocation":"445:1:28","nodeType":"VariableDeclaration","scope":3815,"src":"437:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3801,"name":"uint256","nodeType":"ElementaryTypeName","src":"437:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"425:22:28"},"returnParameters":{"id":3806,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3805,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3815,"src":"471:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3804,"name":"uint256","nodeType":"ElementaryTypeName","src":"471:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"470:9:28"},"scope":4655,"src":"413:104:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3832,"nodeType":"Block","src":"655:37:28","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3825,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3818,"src":"672:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3826,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3820,"src":"676:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"672:5:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":3829,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3820,"src":"684:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"672:13:28","trueExpression":{"id":3828,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3818,"src":"680:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3824,"id":3831,"nodeType":"Return","src":"665:20:28"}]},"documentation":{"id":3816,"nodeType":"StructuredDocumentation","src":"523:60:28","text":" @dev Returns the smallest of two numbers."},"id":3833,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"597:3:28","nodeType":"FunctionDefinition","parameters":{"id":3821,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3818,"mutability":"mutable","name":"a","nameLocation":"609:1:28","nodeType":"VariableDeclaration","scope":3833,"src":"601:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3817,"name":"uint256","nodeType":"ElementaryTypeName","src":"601:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3820,"mutability":"mutable","name":"b","nameLocation":"620:1:28","nodeType":"VariableDeclaration","scope":3833,"src":"612:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3819,"name":"uint256","nodeType":"ElementaryTypeName","src":"612:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"600:22:28"},"returnParameters":{"id":3824,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3823,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3833,"src":"646:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3822,"name":"uint256","nodeType":"ElementaryTypeName","src":"646:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"645:9:28"},"scope":4655,"src":"588:104:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3855,"nodeType":"Block","src":"876:82:28","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3843,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3836,"src":"931:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":3844,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3838,"src":"935:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"931:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3846,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"930:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3852,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3847,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3836,"src":"941:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3848,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3838,"src":"945:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"941:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3850,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"940:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":3851,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"950:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"940:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"930:21:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3842,"id":3854,"nodeType":"Return","src":"923:28:28"}]},"documentation":{"id":3834,"nodeType":"StructuredDocumentation","src":"698:102:28","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":3856,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"814:7:28","nodeType":"FunctionDefinition","parameters":{"id":3839,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3836,"mutability":"mutable","name":"a","nameLocation":"830:1:28","nodeType":"VariableDeclaration","scope":3856,"src":"822:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3835,"name":"uint256","nodeType":"ElementaryTypeName","src":"822:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3838,"mutability":"mutable","name":"b","nameLocation":"841:1:28","nodeType":"VariableDeclaration","scope":3856,"src":"833:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3837,"name":"uint256","nodeType":"ElementaryTypeName","src":"833:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"821:22:28"},"returnParameters":{"id":3842,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3841,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3856,"src":"867:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3840,"name":"uint256","nodeType":"ElementaryTypeName","src":"867:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"866:9:28"},"scope":4655,"src":"805:153:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3880,"nodeType":"Block","src":"1228:123:28","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3866,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3859,"src":"1316:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3867,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1321:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1316:6:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3870,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3859,"src":"1330:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3871,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1334:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1330:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3873,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1329:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3874,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3861,"src":"1339:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1329:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3876,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1343:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1329:15:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1316:28:28","trueExpression":{"hexValue":"30","id":3869,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1325:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3865,"id":3879,"nodeType":"Return","src":"1309:35:28"}]},"documentation":{"id":3857,"nodeType":"StructuredDocumentation","src":"964:188:28","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."},"id":3881,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"1166:7:28","nodeType":"FunctionDefinition","parameters":{"id":3862,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3859,"mutability":"mutable","name":"a","nameLocation":"1182:1:28","nodeType":"VariableDeclaration","scope":3881,"src":"1174:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3858,"name":"uint256","nodeType":"ElementaryTypeName","src":"1174:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3861,"mutability":"mutable","name":"b","nameLocation":"1193:1:28","nodeType":"VariableDeclaration","scope":3881,"src":"1185:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3860,"name":"uint256","nodeType":"ElementaryTypeName","src":"1185:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1173:22:28"},"returnParameters":{"id":3865,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3864,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3881,"src":"1219:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3863,"name":"uint256","nodeType":"ElementaryTypeName","src":"1219:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1218:9:28"},"scope":4655,"src":"1157:194:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4002,"nodeType":"Block","src":"1795:3797:28","statements":[{"id":4001,"nodeType":"UncheckedBlock","src":"1805:3781:28","statements":[{"assignments":[3894],"declarations":[{"constant":false,"id":3894,"mutability":"mutable","name":"prod0","nameLocation":"2134:5:28","nodeType":"VariableDeclaration","scope":4001,"src":"2126:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3893,"name":"uint256","nodeType":"ElementaryTypeName","src":"2126:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3895,"nodeType":"VariableDeclarationStatement","src":"2126:13:28"},{"assignments":[3897],"declarations":[{"constant":false,"id":3897,"mutability":"mutable","name":"prod1","nameLocation":"2206:5:28","nodeType":"VariableDeclaration","scope":4001,"src":"2198:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3896,"name":"uint256","nodeType":"ElementaryTypeName","src":"2198:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3898,"nodeType":"VariableDeclarationStatement","src":"2198:13:28"},{"AST":{"nodeType":"YulBlock","src":"2278:157:28","statements":[{"nodeType":"YulVariableDeclaration","src":"2296:30:28","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2313:1:28"},{"name":"y","nodeType":"YulIdentifier","src":"2316:1:28"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2323:1:28","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2319:3:28"},"nodeType":"YulFunctionCall","src":"2319:6:28"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"2306:6:28"},"nodeType":"YulFunctionCall","src":"2306:20:28"},"variables":[{"name":"mm","nodeType":"YulTypedName","src":"2300:2:28","type":""}]},{"nodeType":"YulAssignment","src":"2343:18:28","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2356:1:28"},{"name":"y","nodeType":"YulIdentifier","src":"2359:1:28"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2352:3:28"},"nodeType":"YulFunctionCall","src":"2352:9:28"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"2343:5:28"}]},{"nodeType":"YulAssignment","src":"2378:43:28","value":{"arguments":[{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2395:2:28"},{"name":"prod0","nodeType":"YulIdentifier","src":"2399:5:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2391:3:28"},"nodeType":"YulFunctionCall","src":"2391:14:28"},{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2410:2:28"},{"name":"prod0","nodeType":"YulIdentifier","src":"2414:5:28"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2407:2:28"},"nodeType":"YulFunctionCall","src":"2407:13:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2387:3:28"},"nodeType":"YulFunctionCall","src":"2387:34:28"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"2378:5:28"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3894,"isOffset":false,"isSlot":false,"src":"2343:5:28","valueSize":1},{"declaration":3894,"isOffset":false,"isSlot":false,"src":"2399:5:28","valueSize":1},{"declaration":3894,"isOffset":false,"isSlot":false,"src":"2414:5:28","valueSize":1},{"declaration":3897,"isOffset":false,"isSlot":false,"src":"2378:5:28","valueSize":1},{"declaration":3884,"isOffset":false,"isSlot":false,"src":"2313:1:28","valueSize":1},{"declaration":3884,"isOffset":false,"isSlot":false,"src":"2356:1:28","valueSize":1},{"declaration":3886,"isOffset":false,"isSlot":false,"src":"2316:1:28","valueSize":1},{"declaration":3886,"isOffset":false,"isSlot":false,"src":"2359:1:28","valueSize":1}],"id":3899,"nodeType":"InlineAssembly","src":"2269:166:28"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3900,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3897,"src":"2516:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3901,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2525:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2516:10:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3908,"nodeType":"IfStatement","src":"2512:75:28","trueBody":{"id":3907,"nodeType":"Block","src":"2528:59:28","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3905,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3903,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3894,"src":"2553:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3904,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3888,"src":"2561:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2553:19:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3892,"id":3906,"nodeType":"Return","src":"2546:26:28"}]}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3910,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3888,"src":"2697:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3911,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3897,"src":"2711:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2697:19:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":3909,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2689:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":3913,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2689:28:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3914,"nodeType":"ExpressionStatement","src":"2689:28:28"},{"assignments":[3916],"declarations":[{"constant":false,"id":3916,"mutability":"mutable","name":"remainder","nameLocation":"2981:9:28","nodeType":"VariableDeclaration","scope":4001,"src":"2973:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3915,"name":"uint256","nodeType":"ElementaryTypeName","src":"2973:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3917,"nodeType":"VariableDeclarationStatement","src":"2973:17:28"},{"AST":{"nodeType":"YulBlock","src":"3013:291:28","statements":[{"nodeType":"YulAssignment","src":"3082:38:28","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3102:1:28"},{"name":"y","nodeType":"YulIdentifier","src":"3105:1:28"},{"name":"denominator","nodeType":"YulIdentifier","src":"3108:11:28"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"3095:6:28"},"nodeType":"YulFunctionCall","src":"3095:25:28"},"variableNames":[{"name":"remainder","nodeType":"YulIdentifier","src":"3082:9:28"}]},{"nodeType":"YulAssignment","src":"3202:41:28","value":{"arguments":[{"name":"prod1","nodeType":"YulIdentifier","src":"3215:5:28"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"3225:9:28"},{"name":"prod0","nodeType":"YulIdentifier","src":"3236:5:28"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3222:2:28"},"nodeType":"YulFunctionCall","src":"3222:20:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3211:3:28"},"nodeType":"YulFunctionCall","src":"3211:32:28"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"3202:5:28"}]},{"nodeType":"YulAssignment","src":"3260:30:28","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"3273:5:28"},{"name":"remainder","nodeType":"YulIdentifier","src":"3280:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3269:3:28"},"nodeType":"YulFunctionCall","src":"3269:21:28"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"3260:5:28"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3888,"isOffset":false,"isSlot":false,"src":"3108:11:28","valueSize":1},{"declaration":3894,"isOffset":false,"isSlot":false,"src":"3236:5:28","valueSize":1},{"declaration":3894,"isOffset":false,"isSlot":false,"src":"3260:5:28","valueSize":1},{"declaration":3894,"isOffset":false,"isSlot":false,"src":"3273:5:28","valueSize":1},{"declaration":3897,"isOffset":false,"isSlot":false,"src":"3202:5:28","valueSize":1},{"declaration":3897,"isOffset":false,"isSlot":false,"src":"3215:5:28","valueSize":1},{"declaration":3916,"isOffset":false,"isSlot":false,"src":"3082:9:28","valueSize":1},{"declaration":3916,"isOffset":false,"isSlot":false,"src":"3225:9:28","valueSize":1},{"declaration":3916,"isOffset":false,"isSlot":false,"src":"3280:9:28","valueSize":1},{"declaration":3884,"isOffset":false,"isSlot":false,"src":"3102:1:28","valueSize":1},{"declaration":3886,"isOffset":false,"isSlot":false,"src":"3105:1:28","valueSize":1}],"id":3918,"nodeType":"InlineAssembly","src":"3004:300:28"},{"assignments":[3920],"declarations":[{"constant":false,"id":3920,"mutability":"mutable","name":"twos","nameLocation":"3619:4:28","nodeType":"VariableDeclaration","scope":4001,"src":"3611:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3919,"name":"uint256","nodeType":"ElementaryTypeName","src":"3611:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3928,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3921,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3888,"src":"3626:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"~","prefix":true,"src":"3641:12:28","subExpression":{"id":3922,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3888,"src":"3642:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3924,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3656:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3641:16:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3926,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3640:18:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3626:32:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3611:47:28"},{"AST":{"nodeType":"YulBlock","src":"3681:362:28","statements":[{"nodeType":"YulAssignment","src":"3746:37:28","value":{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"3765:11:28"},{"name":"twos","nodeType":"YulIdentifier","src":"3778:4:28"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3761:3:28"},"nodeType":"YulFunctionCall","src":"3761:22:28"},"variableNames":[{"name":"denominator","nodeType":"YulIdentifier","src":"3746:11:28"}]},{"nodeType":"YulAssignment","src":"3850:25:28","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"3863:5:28"},{"name":"twos","nodeType":"YulIdentifier","src":"3870:4:28"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3859:3:28"},"nodeType":"YulFunctionCall","src":"3859:16:28"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"3850:5:28"}]},{"nodeType":"YulAssignment","src":"3990:39:28","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4010:1:28","type":"","value":"0"},{"name":"twos","nodeType":"YulIdentifier","src":"4013:4:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4006:3:28"},"nodeType":"YulFunctionCall","src":"4006:12:28"},{"name":"twos","nodeType":"YulIdentifier","src":"4020:4:28"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4002:3:28"},"nodeType":"YulFunctionCall","src":"4002:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"4027:1:28","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3998:3:28"},"nodeType":"YulFunctionCall","src":"3998:31:28"},"variableNames":[{"name":"twos","nodeType":"YulIdentifier","src":"3990:4:28"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3888,"isOffset":false,"isSlot":false,"src":"3746:11:28","valueSize":1},{"declaration":3888,"isOffset":false,"isSlot":false,"src":"3765:11:28","valueSize":1},{"declaration":3894,"isOffset":false,"isSlot":false,"src":"3850:5:28","valueSize":1},{"declaration":3894,"isOffset":false,"isSlot":false,"src":"3863:5:28","valueSize":1},{"declaration":3920,"isOffset":false,"isSlot":false,"src":"3778:4:28","valueSize":1},{"declaration":3920,"isOffset":false,"isSlot":false,"src":"3870:4:28","valueSize":1},{"declaration":3920,"isOffset":false,"isSlot":false,"src":"3990:4:28","valueSize":1},{"declaration":3920,"isOffset":false,"isSlot":false,"src":"4013:4:28","valueSize":1},{"declaration":3920,"isOffset":false,"isSlot":false,"src":"4020:4:28","valueSize":1}],"id":3929,"nodeType":"InlineAssembly","src":"3672:371:28"},{"expression":{"id":3934,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3930,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3894,"src":"4109:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3931,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3897,"src":"4118:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3932,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3920,"src":"4126:4:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4118:12:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4109:21:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3935,"nodeType":"ExpressionStatement","src":"4109:21:28"},{"assignments":[3937],"declarations":[{"constant":false,"id":3937,"mutability":"mutable","name":"inverse","nameLocation":"4456:7:28","nodeType":"VariableDeclaration","scope":4001,"src":"4448:15:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3936,"name":"uint256","nodeType":"ElementaryTypeName","src":"4448:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3944,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":3938,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4467:1:28","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3939,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3888,"src":"4471:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4467:15:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3941,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4466:17:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":3942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4486:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"4466:21:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4448:39:28"},{"expression":{"id":3951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3945,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3937,"src":"4704:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3946,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4715:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3947,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3888,"src":"4719:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3948,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3937,"src":"4733:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4719:21:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4715:25:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4704:36:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3952,"nodeType":"ExpressionStatement","src":"4704:36:28"},{"expression":{"id":3959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3953,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3937,"src":"4773:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3954,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4784:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3955,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3888,"src":"4788:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3956,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3937,"src":"4802:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4788:21:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4784:25:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4773:36:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3960,"nodeType":"ExpressionStatement","src":"4773:36:28"},{"expression":{"id":3967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3961,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3937,"src":"4843:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3962,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4854:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3963,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3888,"src":"4858:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3964,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3937,"src":"4872:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4858:21:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4854:25:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4843:36:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3968,"nodeType":"ExpressionStatement","src":"4843:36:28"},{"expression":{"id":3975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3969,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3937,"src":"4913:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3974,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3970,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4924:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3971,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3888,"src":"4928:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3972,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3937,"src":"4942:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4928:21:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4924:25:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4913:36:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3976,"nodeType":"ExpressionStatement","src":"4913:36:28"},{"expression":{"id":3983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3977,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3937,"src":"4983:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3982,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3978,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4994:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3979,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3888,"src":"4998:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3980,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3937,"src":"5012:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4998:21:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4994:25:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4983:36:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3984,"nodeType":"ExpressionStatement","src":"4983:36:28"},{"expression":{"id":3991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3985,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3937,"src":"5054:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3986,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5065:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3987,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3888,"src":"5069:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3988,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3937,"src":"5083:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5069:21:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5065:25:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5054:36:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3992,"nodeType":"ExpressionStatement","src":"5054:36:28"},{"expression":{"id":3997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3993,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3891,"src":"5524:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3994,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3894,"src":"5533:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3995,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3937,"src":"5541:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5533:15:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5524:24:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3998,"nodeType":"ExpressionStatement","src":"5524:24:28"},{"expression":{"id":3999,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3891,"src":"5569:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3892,"id":4000,"nodeType":"Return","src":"5562:13:28"}]}]},"documentation":{"id":3882,"nodeType":"StructuredDocumentation","src":"1357:305:28","text":" @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."},"id":4003,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"1676:6:28","nodeType":"FunctionDefinition","parameters":{"id":3889,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3884,"mutability":"mutable","name":"x","nameLocation":"1700:1:28","nodeType":"VariableDeclaration","scope":4003,"src":"1692:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3883,"name":"uint256","nodeType":"ElementaryTypeName","src":"1692:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3886,"mutability":"mutable","name":"y","nameLocation":"1719:1:28","nodeType":"VariableDeclaration","scope":4003,"src":"1711:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3885,"name":"uint256","nodeType":"ElementaryTypeName","src":"1711:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3888,"mutability":"mutable","name":"denominator","nameLocation":"1738:11:28","nodeType":"VariableDeclaration","scope":4003,"src":"1730:19:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3887,"name":"uint256","nodeType":"ElementaryTypeName","src":"1730:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1682:73:28"},"returnParameters":{"id":3892,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3891,"mutability":"mutable","name":"result","nameLocation":"1787:6:28","nodeType":"VariableDeclaration","scope":4003,"src":"1779:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3890,"name":"uint256","nodeType":"ElementaryTypeName","src":"1779:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1778:16:28"},"scope":4655,"src":"1667:3925:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4046,"nodeType":"Block","src":"5872:189:28","statements":[{"assignments":[4019],"declarations":[{"constant":false,"id":4019,"mutability":"mutable","name":"result","nameLocation":"5890:6:28","nodeType":"VariableDeclaration","scope":4046,"src":"5882:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4018,"name":"uint256","nodeType":"ElementaryTypeName","src":"5882:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4025,"initialValue":{"arguments":[{"id":4021,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4006,"src":"5906:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4022,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4008,"src":"5909:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4023,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4010,"src":"5912:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4020,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[4003,4047],"referencedDeclaration":4003,"src":"5899:6:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":4024,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5899:25:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5882:42:28"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$3797","typeString":"enum Math.Rounding"},"id":4029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4026,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4013,"src":"5938:8:28","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3797","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4027,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3797,"src":"5950:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$3797_$","typeString":"type(enum Math.Rounding)"}},"id":4028,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5959:2:28","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":3795,"src":"5950:11:28","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3797","typeString":"enum Math.Rounding"}},"src":"5938:23:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4031,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4006,"src":"5972:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4032,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4008,"src":"5975:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4033,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4010,"src":"5978:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4030,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"5965:6:28","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":4034,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5965:25:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4035,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5993:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5965:29:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5938:56:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4043,"nodeType":"IfStatement","src":"5934:98:28","trueBody":{"id":4042,"nodeType":"Block","src":"5996:36:28","statements":[{"expression":{"id":4040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4038,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4019,"src":"6010:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":4039,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6020:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6010:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4041,"nodeType":"ExpressionStatement","src":"6010:11:28"}]}},{"expression":{"id":4044,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4019,"src":"6048:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4017,"id":4045,"nodeType":"Return","src":"6041:13:28"}]},"documentation":{"id":4004,"nodeType":"StructuredDocumentation","src":"5598:121:28","text":" @notice Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":4047,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"5733:6:28","nodeType":"FunctionDefinition","parameters":{"id":4014,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4006,"mutability":"mutable","name":"x","nameLocation":"5757:1:28","nodeType":"VariableDeclaration","scope":4047,"src":"5749:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4005,"name":"uint256","nodeType":"ElementaryTypeName","src":"5749:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4008,"mutability":"mutable","name":"y","nameLocation":"5776:1:28","nodeType":"VariableDeclaration","scope":4047,"src":"5768:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4007,"name":"uint256","nodeType":"ElementaryTypeName","src":"5768:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4010,"mutability":"mutable","name":"denominator","nameLocation":"5795:11:28","nodeType":"VariableDeclaration","scope":4047,"src":"5787:19:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4009,"name":"uint256","nodeType":"ElementaryTypeName","src":"5787:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4013,"mutability":"mutable","name":"rounding","nameLocation":"5825:8:28","nodeType":"VariableDeclaration","scope":4047,"src":"5816:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3797","typeString":"enum Math.Rounding"},"typeName":{"id":4012,"nodeType":"UserDefinedTypeName","pathNode":{"id":4011,"name":"Rounding","nameLocations":["5816:8:28"],"nodeType":"IdentifierPath","referencedDeclaration":3797,"src":"5816:8:28"},"referencedDeclaration":3797,"src":"5816:8:28","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3797","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"5739:100:28"},"returnParameters":{"id":4017,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4016,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4047,"src":"5863:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4015,"name":"uint256","nodeType":"ElementaryTypeName","src":"5863:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5862:9:28"},"scope":4655,"src":"5724:337:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4158,"nodeType":"Block","src":"6337:1585:28","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4055,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4050,"src":"6351:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4056,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6356:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6351:6:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4061,"nodeType":"IfStatement","src":"6347:45:28","trueBody":{"id":4060,"nodeType":"Block","src":"6359:33:28","statements":[{"expression":{"hexValue":"30","id":4058,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6380:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":4054,"id":4059,"nodeType":"Return","src":"6373:8:28"}]}},{"assignments":[4063],"declarations":[{"constant":false,"id":4063,"mutability":"mutable","name":"result","nameLocation":"7079:6:28","nodeType":"VariableDeclaration","scope":4158,"src":"7071:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4062,"name":"uint256","nodeType":"ElementaryTypeName","src":"7071:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4072,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4064,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7088:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4066,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4050,"src":"7099:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4065,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[4327,4363],"referencedDeclaration":4327,"src":"7094:4:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4067,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7094:7:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4068,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7105:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7094:12:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4070,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7093:14:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7088:19:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7071:36:28"},{"id":4157,"nodeType":"UncheckedBlock","src":"7508:408:28","statements":[{"expression":{"id":4082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4073,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4063,"src":"7532:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4074,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4063,"src":"7542:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4075,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4050,"src":"7551:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4076,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4063,"src":"7555:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7551:10:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7542:19:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4079,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7541:21:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4080,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7566:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7541:26:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7532:35:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4083,"nodeType":"ExpressionStatement","src":"7532:35:28"},{"expression":{"id":4093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4084,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4063,"src":"7581:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4085,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4063,"src":"7591:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4088,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4086,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4050,"src":"7600:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4087,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4063,"src":"7604:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7600:10:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7591:19:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4090,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7590:21:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4091,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7615:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7590:26:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7581:35:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4094,"nodeType":"ExpressionStatement","src":"7581:35:28"},{"expression":{"id":4104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4095,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4063,"src":"7630:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4096,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4063,"src":"7640:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4097,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4050,"src":"7649:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4098,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4063,"src":"7653:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7649:10:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7640:19:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4101,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7639:21:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4102,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7664:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7639:26:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7630:35:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4105,"nodeType":"ExpressionStatement","src":"7630:35:28"},{"expression":{"id":4115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4106,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4063,"src":"7679:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4107,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4063,"src":"7689:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4108,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4050,"src":"7698:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4109,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4063,"src":"7702:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7698:10:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7689:19:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4112,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7688:21:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4113,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7713:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7688:26:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7679:35:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4116,"nodeType":"ExpressionStatement","src":"7679:35:28"},{"expression":{"id":4126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4117,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4063,"src":"7728:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4118,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4063,"src":"7738:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4119,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4050,"src":"7747:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4120,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4063,"src":"7751:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7747:10:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7738:19:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4123,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7737:21:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4124,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7762:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7737:26:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7728:35:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4127,"nodeType":"ExpressionStatement","src":"7728:35:28"},{"expression":{"id":4137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4128,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4063,"src":"7777:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4129,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4063,"src":"7787:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4130,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4050,"src":"7796:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4131,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4063,"src":"7800:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7796:10:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7787:19:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4134,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7786:21:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4135,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7811:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7786:26:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7777:35:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4138,"nodeType":"ExpressionStatement","src":"7777:35:28"},{"expression":{"id":4148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4139,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4063,"src":"7826:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4140,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4063,"src":"7836:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4141,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4050,"src":"7845:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4142,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4063,"src":"7849:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7845:10:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7836:19:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4145,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7835:21:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4146,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7860:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7835:26:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7826:35:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4149,"nodeType":"ExpressionStatement","src":"7826:35:28"},{"expression":{"arguments":[{"id":4151,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4063,"src":"7886:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4152,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4050,"src":"7894:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4153,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4063,"src":"7898:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7894:10:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4150,"name":"min","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3833,"src":"7882:3:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4155,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7882:23:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4054,"id":4156,"nodeType":"Return","src":"7875:30:28"}]}]},"documentation":{"id":4048,"nodeType":"StructuredDocumentation","src":"6067:208:28","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."},"id":4159,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"6289:4:28","nodeType":"FunctionDefinition","parameters":{"id":4051,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4050,"mutability":"mutable","name":"a","nameLocation":"6302:1:28","nodeType":"VariableDeclaration","scope":4159,"src":"6294:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4049,"name":"uint256","nodeType":"ElementaryTypeName","src":"6294:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6293:11:28"},"returnParameters":{"id":4054,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4053,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4159,"src":"6328:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4052,"name":"uint256","nodeType":"ElementaryTypeName","src":"6328:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6327:9:28"},"scope":4655,"src":"6280:1642:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4194,"nodeType":"Block","src":"8098:161:28","statements":[{"id":4193,"nodeType":"UncheckedBlock","src":"8108:145:28","statements":[{"assignments":[4171],"declarations":[{"constant":false,"id":4171,"mutability":"mutable","name":"result","nameLocation":"8140:6:28","nodeType":"VariableDeclaration","scope":4193,"src":"8132:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4170,"name":"uint256","nodeType":"ElementaryTypeName","src":"8132:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4175,"initialValue":{"arguments":[{"id":4173,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4162,"src":"8154:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4172,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[4159,4195],"referencedDeclaration":4159,"src":"8149:4:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4174,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8149:7:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8132:24:28"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4176,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4171,"src":"8177:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$3797","typeString":"enum Math.Rounding"},"id":4180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4177,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4165,"src":"8187:8:28","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3797","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4178,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3797,"src":"8199:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$3797_$","typeString":"type(enum Math.Rounding)"}},"id":4179,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8208:2:28","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":3795,"src":"8199:11:28","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3797","typeString":"enum Math.Rounding"}},"src":"8187:23:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4181,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4171,"src":"8214:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4182,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4171,"src":"8223:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8214:15:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4184,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4162,"src":"8232:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8214:19:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8187:46:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":4188,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8240:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":4189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8187:54:28","trueExpression":{"hexValue":"31","id":4187,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8236:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":4190,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8186:56:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"8177:65:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4169,"id":4192,"nodeType":"Return","src":"8170:72:28"}]}]},"documentation":{"id":4160,"nodeType":"StructuredDocumentation","src":"7928:89:28","text":" @notice Calculates sqrt(a), following the selected rounding direction."},"id":4195,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"8031:4:28","nodeType":"FunctionDefinition","parameters":{"id":4166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4162,"mutability":"mutable","name":"a","nameLocation":"8044:1:28","nodeType":"VariableDeclaration","scope":4195,"src":"8036:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4161,"name":"uint256","nodeType":"ElementaryTypeName","src":"8036:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4165,"mutability":"mutable","name":"rounding","nameLocation":"8056:8:28","nodeType":"VariableDeclaration","scope":4195,"src":"8047:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3797","typeString":"enum Math.Rounding"},"typeName":{"id":4164,"nodeType":"UserDefinedTypeName","pathNode":{"id":4163,"name":"Rounding","nameLocations":["8047:8:28"],"nodeType":"IdentifierPath","referencedDeclaration":3797,"src":"8047:8:28"},"referencedDeclaration":3797,"src":"8047:8:28","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3797","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"8035:30:28"},"returnParameters":{"id":4169,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4168,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4195,"src":"8089:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4167,"name":"uint256","nodeType":"ElementaryTypeName","src":"8089:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8088:9:28"},"scope":4655,"src":"8022:237:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4326,"nodeType":"Block","src":"8444:922:28","statements":[{"assignments":[4204],"declarations":[{"constant":false,"id":4204,"mutability":"mutable","name":"result","nameLocation":"8462:6:28","nodeType":"VariableDeclaration","scope":4326,"src":"8454:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4203,"name":"uint256","nodeType":"ElementaryTypeName","src":"8454:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4206,"initialValue":{"hexValue":"30","id":4205,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8471:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8454:18:28"},{"id":4323,"nodeType":"UncheckedBlock","src":"8482:855:28","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4207,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4198,"src":"8510:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":4208,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8519:3:28","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8510:12:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4210,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8525:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8510:16:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4221,"nodeType":"IfStatement","src":"8506:99:28","trueBody":{"id":4220,"nodeType":"Block","src":"8528:77:28","statements":[{"expression":{"id":4214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4212,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4198,"src":"8546:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":4213,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8556:3:28","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8546:13:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4215,"nodeType":"ExpressionStatement","src":"8546:13:28"},{"expression":{"id":4218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4216,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4204,"src":"8577:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"313238","id":4217,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8587:3:28","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8577:13:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4219,"nodeType":"ExpressionStatement","src":"8577:13:28"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4222,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4198,"src":"8622:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":4223,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8631:2:28","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8622:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4225,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8636:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8622:15:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4236,"nodeType":"IfStatement","src":"8618:96:28","trueBody":{"id":4235,"nodeType":"Block","src":"8639:75:28","statements":[{"expression":{"id":4229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4227,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4198,"src":"8657:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":4228,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8667:2:28","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8657:12:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4230,"nodeType":"ExpressionStatement","src":"8657:12:28"},{"expression":{"id":4233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4231,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4204,"src":"8687:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":4232,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8697:2:28","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8687:12:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4234,"nodeType":"ExpressionStatement","src":"8687:12:28"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4237,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4198,"src":"8731:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":4238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8740:2:28","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"8731:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4240,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8745:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8731:15:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4251,"nodeType":"IfStatement","src":"8727:96:28","trueBody":{"id":4250,"nodeType":"Block","src":"8748:75:28","statements":[{"expression":{"id":4244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4242,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4198,"src":"8766:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":4243,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8776:2:28","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"8766:12:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4245,"nodeType":"ExpressionStatement","src":"8766:12:28"},{"expression":{"id":4248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4246,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4204,"src":"8796:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":4247,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8806:2:28","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"8796:12:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4249,"nodeType":"ExpressionStatement","src":"8796:12:28"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4252,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4198,"src":"8840:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":4253,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8849:2:28","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"8840:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4255,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8854:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8840:15:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4266,"nodeType":"IfStatement","src":"8836:96:28","trueBody":{"id":4265,"nodeType":"Block","src":"8857:75:28","statements":[{"expression":{"id":4259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4257,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4198,"src":"8875:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":4258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8885:2:28","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"8875:12:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4260,"nodeType":"ExpressionStatement","src":"8875:12:28"},{"expression":{"id":4263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4261,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4204,"src":"8905:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":4262,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8915:2:28","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"8905:12:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4264,"nodeType":"ExpressionStatement","src":"8905:12:28"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4267,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4198,"src":"8949:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":4268,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8958:1:28","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"8949:10:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4270,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8962:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8949:14:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4281,"nodeType":"IfStatement","src":"8945:93:28","trueBody":{"id":4280,"nodeType":"Block","src":"8965:73:28","statements":[{"expression":{"id":4274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4272,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4198,"src":"8983:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":4273,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8993:1:28","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"8983:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4275,"nodeType":"ExpressionStatement","src":"8983:11:28"},{"expression":{"id":4278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4276,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4204,"src":"9012:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":4277,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9022:1:28","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9012:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4279,"nodeType":"ExpressionStatement","src":"9012:11:28"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4282,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4198,"src":"9055:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"34","id":4283,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9064:1:28","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9055:10:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4285,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9068:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9055:14:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4296,"nodeType":"IfStatement","src":"9051:93:28","trueBody":{"id":4295,"nodeType":"Block","src":"9071:73:28","statements":[{"expression":{"id":4289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4287,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4198,"src":"9089:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":4288,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9099:1:28","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9089:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4290,"nodeType":"ExpressionStatement","src":"9089:11:28"},{"expression":{"id":4293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4291,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4204,"src":"9118:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":4292,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9128:1:28","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9118:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4294,"nodeType":"ExpressionStatement","src":"9118:11:28"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4297,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4198,"src":"9161:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"32","id":4298,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9170:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9161:10:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4300,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9174:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9161:14:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4311,"nodeType":"IfStatement","src":"9157:93:28","trueBody":{"id":4310,"nodeType":"Block","src":"9177:73:28","statements":[{"expression":{"id":4304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4302,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4198,"src":"9195:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"32","id":4303,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9205:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9195:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4305,"nodeType":"ExpressionStatement","src":"9195:11:28"},{"expression":{"id":4308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4306,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4204,"src":"9224:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":4307,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9234:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9224:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4309,"nodeType":"ExpressionStatement","src":"9224:11:28"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4312,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4198,"src":"9267:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4313,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9276:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9267:10:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4315,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9280:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9267:14:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4322,"nodeType":"IfStatement","src":"9263:64:28","trueBody":{"id":4321,"nodeType":"Block","src":"9283:44:28","statements":[{"expression":{"id":4319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4317,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4204,"src":"9301:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":4318,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9311:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9301:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4320,"nodeType":"ExpressionStatement","src":"9301:11:28"}]}}]},{"expression":{"id":4324,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4204,"src":"9353:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4202,"id":4325,"nodeType":"Return","src":"9346:13:28"}]},"documentation":{"id":4196,"nodeType":"StructuredDocumentation","src":"8265:113:28","text":" @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."},"id":4327,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"8392:4:28","nodeType":"FunctionDefinition","parameters":{"id":4199,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4198,"mutability":"mutable","name":"value","nameLocation":"8405:5:28","nodeType":"VariableDeclaration","scope":4327,"src":"8397:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4197,"name":"uint256","nodeType":"ElementaryTypeName","src":"8397:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8396:15:28"},"returnParameters":{"id":4202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4201,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4327,"src":"8435:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4200,"name":"uint256","nodeType":"ElementaryTypeName","src":"8435:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8434:9:28"},"scope":4655,"src":"8383:983:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4362,"nodeType":"Block","src":"9599:165:28","statements":[{"id":4361,"nodeType":"UncheckedBlock","src":"9609:149:28","statements":[{"assignments":[4339],"declarations":[{"constant":false,"id":4339,"mutability":"mutable","name":"result","nameLocation":"9641:6:28","nodeType":"VariableDeclaration","scope":4361,"src":"9633:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4338,"name":"uint256","nodeType":"ElementaryTypeName","src":"9633:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4343,"initialValue":{"arguments":[{"id":4341,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4330,"src":"9655:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4340,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[4327,4363],"referencedDeclaration":4327,"src":"9650:4:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4342,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9650:11:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9633:28:28"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4344,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4339,"src":"9682:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$3797","typeString":"enum Math.Rounding"},"id":4348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4345,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4333,"src":"9692:8:28","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3797","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4346,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3797,"src":"9704:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$3797_$","typeString":"type(enum Math.Rounding)"}},"id":4347,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9713:2:28","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":3795,"src":"9704:11:28","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3797","typeString":"enum Math.Rounding"}},"src":"9692:23:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4349,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9719:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":4350,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4339,"src":"9724:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9719:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4352,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4330,"src":"9733:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9719:19:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9692:46:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":4356,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9745:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":4357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9692:54:28","trueExpression":{"hexValue":"31","id":4355,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9741:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":4358,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9691:56:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"9682:65:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4337,"id":4360,"nodeType":"Return","src":"9675:72:28"}]}]},"documentation":{"id":4328,"nodeType":"StructuredDocumentation","src":"9372:142:28","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":4363,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"9528:4:28","nodeType":"FunctionDefinition","parameters":{"id":4334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4330,"mutability":"mutable","name":"value","nameLocation":"9541:5:28","nodeType":"VariableDeclaration","scope":4363,"src":"9533:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4329,"name":"uint256","nodeType":"ElementaryTypeName","src":"9533:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4333,"mutability":"mutable","name":"rounding","nameLocation":"9557:8:28","nodeType":"VariableDeclaration","scope":4363,"src":"9548:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3797","typeString":"enum Math.Rounding"},"typeName":{"id":4332,"nodeType":"UserDefinedTypeName","pathNode":{"id":4331,"name":"Rounding","nameLocations":["9548:8:28"],"nodeType":"IdentifierPath","referencedDeclaration":3797,"src":"9548:8:28"},"referencedDeclaration":3797,"src":"9548:8:28","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3797","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"9532:34:28"},"returnParameters":{"id":4337,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4336,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4363,"src":"9590:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4335,"name":"uint256","nodeType":"ElementaryTypeName","src":"9590:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9589:9:28"},"scope":4655,"src":"9519:245:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4491,"nodeType":"Block","src":"9951:828:28","statements":[{"assignments":[4372],"declarations":[{"constant":false,"id":4372,"mutability":"mutable","name":"result","nameLocation":"9969:6:28","nodeType":"VariableDeclaration","scope":4491,"src":"9961:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4371,"name":"uint256","nodeType":"ElementaryTypeName","src":"9961:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4374,"initialValue":{"hexValue":"30","id":4373,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9978:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"9961:18:28"},{"id":4488,"nodeType":"UncheckedBlock","src":"9989:761:28","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4375,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4366,"src":"10017:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":4378,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4376,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10026:2:28","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":4377,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10030:2:28","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10026:6:28","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10017:15:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4391,"nodeType":"IfStatement","src":"10013:99:28","trueBody":{"id":4390,"nodeType":"Block","src":"10034:78:28","statements":[{"expression":{"id":4384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4380,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4366,"src":"10052:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":4383,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4381,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10061:2:28","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":4382,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10065:2:28","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10061:6:28","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10052:15:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4385,"nodeType":"ExpressionStatement","src":"10052:15:28"},{"expression":{"id":4388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4386,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4372,"src":"10085:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":4387,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10095:2:28","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10085:12:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4389,"nodeType":"ExpressionStatement","src":"10085:12:28"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4392,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4366,"src":"10129:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":4395,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4393,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10138:2:28","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":4394,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10142:2:28","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10138:6:28","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10129:15:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4408,"nodeType":"IfStatement","src":"10125:99:28","trueBody":{"id":4407,"nodeType":"Block","src":"10146:78:28","statements":[{"expression":{"id":4401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4397,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4366,"src":"10164:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":4400,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4398,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10173:2:28","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":4399,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10177:2:28","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10173:6:28","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10164:15:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4402,"nodeType":"ExpressionStatement","src":"10164:15:28"},{"expression":{"id":4405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4403,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4372,"src":"10197:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":4404,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10207:2:28","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10197:12:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4406,"nodeType":"ExpressionStatement","src":"10197:12:28"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4409,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4366,"src":"10241:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":4412,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4410,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10250:2:28","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":4411,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10254:2:28","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10250:6:28","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10241:15:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4425,"nodeType":"IfStatement","src":"10237:99:28","trueBody":{"id":4424,"nodeType":"Block","src":"10258:78:28","statements":[{"expression":{"id":4418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4414,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4366,"src":"10276:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":4417,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4415,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10285:2:28","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":4416,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10289:2:28","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10285:6:28","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10276:15:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4419,"nodeType":"ExpressionStatement","src":"10276:15:28"},{"expression":{"id":4422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4420,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4372,"src":"10309:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":4421,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10319:2:28","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10309:12:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4423,"nodeType":"ExpressionStatement","src":"10309:12:28"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4426,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4366,"src":"10353:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":4429,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4427,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10362:2:28","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":4428,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10366:1:28","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10362:5:28","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10353:14:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4442,"nodeType":"IfStatement","src":"10349:96:28","trueBody":{"id":4441,"nodeType":"Block","src":"10369:76:28","statements":[{"expression":{"id":4435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4431,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4366,"src":"10387:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":4434,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4432,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10396:2:28","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":4433,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10400:1:28","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10396:5:28","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10387:14:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4436,"nodeType":"ExpressionStatement","src":"10387:14:28"},{"expression":{"id":4439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4437,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4372,"src":"10419:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":4438,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10429:1:28","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10419:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4440,"nodeType":"ExpressionStatement","src":"10419:11:28"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4443,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4366,"src":"10462:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":4446,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4444,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10471:2:28","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":4445,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10475:1:28","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10471:5:28","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10462:14:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4459,"nodeType":"IfStatement","src":"10458:96:28","trueBody":{"id":4458,"nodeType":"Block","src":"10478:76:28","statements":[{"expression":{"id":4452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4448,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4366,"src":"10496:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":4451,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4449,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10505:2:28","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":4450,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10509:1:28","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10505:5:28","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10496:14:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4453,"nodeType":"ExpressionStatement","src":"10496:14:28"},{"expression":{"id":4456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4454,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4372,"src":"10528:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":4455,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10538:1:28","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10528:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4457,"nodeType":"ExpressionStatement","src":"10528:11:28"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4460,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4366,"src":"10571:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":4463,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4461,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10580:2:28","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":4462,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10584:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10580:5:28","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10571:14:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4476,"nodeType":"IfStatement","src":"10567:96:28","trueBody":{"id":4475,"nodeType":"Block","src":"10587:76:28","statements":[{"expression":{"id":4469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4465,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4366,"src":"10605:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":4468,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4466,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10614:2:28","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":4467,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10618:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10614:5:28","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10605:14:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4470,"nodeType":"ExpressionStatement","src":"10605:14:28"},{"expression":{"id":4473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4471,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4372,"src":"10637:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":4472,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10647:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10637:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4474,"nodeType":"ExpressionStatement","src":"10637:11:28"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4477,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4366,"src":"10680:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":4480,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4478,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10689:2:28","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":4479,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10693:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10689:5:28","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"10680:14:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4487,"nodeType":"IfStatement","src":"10676:64:28","trueBody":{"id":4486,"nodeType":"Block","src":"10696:44:28","statements":[{"expression":{"id":4484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4482,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4372,"src":"10714:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":4483,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10724:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10714:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4485,"nodeType":"ExpressionStatement","src":"10714:11:28"}]}}]},{"expression":{"id":4489,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4372,"src":"10766:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4370,"id":4490,"nodeType":"Return","src":"10759:13:28"}]},"documentation":{"id":4364,"nodeType":"StructuredDocumentation","src":"9770:114:28","text":" @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."},"id":4492,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"9898:5:28","nodeType":"FunctionDefinition","parameters":{"id":4367,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4366,"mutability":"mutable","name":"value","nameLocation":"9912:5:28","nodeType":"VariableDeclaration","scope":4492,"src":"9904:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4365,"name":"uint256","nodeType":"ElementaryTypeName","src":"9904:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9903:15:28"},"returnParameters":{"id":4370,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4369,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4492,"src":"9942:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4368,"name":"uint256","nodeType":"ElementaryTypeName","src":"9942:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9941:9:28"},"scope":4655,"src":"9889:890:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4527,"nodeType":"Block","src":"11014:165:28","statements":[{"id":4526,"nodeType":"UncheckedBlock","src":"11024:149:28","statements":[{"assignments":[4504],"declarations":[{"constant":false,"id":4504,"mutability":"mutable","name":"result","nameLocation":"11056:6:28","nodeType":"VariableDeclaration","scope":4526,"src":"11048:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4503,"name":"uint256","nodeType":"ElementaryTypeName","src":"11048:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4508,"initialValue":{"arguments":[{"id":4506,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4495,"src":"11071:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4505,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[4492,4528],"referencedDeclaration":4492,"src":"11065:5:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4507,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11065:12:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11048:29:28"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4509,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4504,"src":"11098:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$3797","typeString":"enum Math.Rounding"},"id":4513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4510,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4498,"src":"11108:8:28","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3797","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4511,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3797,"src":"11120:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$3797_$","typeString":"type(enum Math.Rounding)"}},"id":4512,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11129:2:28","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":3795,"src":"11120:11:28","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3797","typeString":"enum Math.Rounding"}},"src":"11108:23:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4514,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11135:2:28","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":4515,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4504,"src":"11139:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11135:10:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4517,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4495,"src":"11148:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11135:18:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11108:45:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":4521,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11160:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":4522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"11108:53:28","trueExpression":{"hexValue":"31","id":4520,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11156:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":4523,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11107:55:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11098:64:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4502,"id":4525,"nodeType":"Return","src":"11091:71:28"}]}]},"documentation":{"id":4493,"nodeType":"StructuredDocumentation","src":"10785:143:28","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":4528,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"10942:5:28","nodeType":"FunctionDefinition","parameters":{"id":4499,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4495,"mutability":"mutable","name":"value","nameLocation":"10956:5:28","nodeType":"VariableDeclaration","scope":4528,"src":"10948:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4494,"name":"uint256","nodeType":"ElementaryTypeName","src":"10948:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4498,"mutability":"mutable","name":"rounding","nameLocation":"10972:8:28","nodeType":"VariableDeclaration","scope":4528,"src":"10963:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3797","typeString":"enum Math.Rounding"},"typeName":{"id":4497,"nodeType":"UserDefinedTypeName","pathNode":{"id":4496,"name":"Rounding","nameLocations":["10963:8:28"],"nodeType":"IdentifierPath","referencedDeclaration":3797,"src":"10963:8:28"},"referencedDeclaration":3797,"src":"10963:8:28","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3797","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"10947:34:28"},"returnParameters":{"id":4502,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4501,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4528,"src":"11005:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4500,"name":"uint256","nodeType":"ElementaryTypeName","src":"11005:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11004:9:28"},"scope":4655,"src":"10933:246:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4614,"nodeType":"Block","src":"11493:600:28","statements":[{"assignments":[4537],"declarations":[{"constant":false,"id":4537,"mutability":"mutable","name":"result","nameLocation":"11511:6:28","nodeType":"VariableDeclaration","scope":4614,"src":"11503:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4536,"name":"uint256","nodeType":"ElementaryTypeName","src":"11503:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4539,"initialValue":{"hexValue":"30","id":4538,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11520:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11503:18:28"},{"id":4611,"nodeType":"UncheckedBlock","src":"11531:533:28","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4540,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4531,"src":"11559:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":4541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11568:3:28","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11559:12:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4543,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11574:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11559:16:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4554,"nodeType":"IfStatement","src":"11555:98:28","trueBody":{"id":4553,"nodeType":"Block","src":"11577:76:28","statements":[{"expression":{"id":4547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4545,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4531,"src":"11595:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":4546,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11605:3:28","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11595:13:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4548,"nodeType":"ExpressionStatement","src":"11595:13:28"},{"expression":{"id":4551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4549,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4537,"src":"11626:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":4550,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11636:2:28","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11626:12:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4552,"nodeType":"ExpressionStatement","src":"11626:12:28"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4555,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4531,"src":"11670:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":4556,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11679:2:28","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11670:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11684:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11670:15:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4569,"nodeType":"IfStatement","src":"11666:95:28","trueBody":{"id":4568,"nodeType":"Block","src":"11687:74:28","statements":[{"expression":{"id":4562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4560,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4531,"src":"11705:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":4561,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11715:2:28","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11705:12:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4563,"nodeType":"ExpressionStatement","src":"11705:12:28"},{"expression":{"id":4566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4564,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4537,"src":"11735:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":4565,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11745:1:28","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"11735:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4567,"nodeType":"ExpressionStatement","src":"11735:11:28"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4570,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4531,"src":"11778:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":4571,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11787:2:28","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11778:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4573,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11792:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11778:15:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4584,"nodeType":"IfStatement","src":"11774:95:28","trueBody":{"id":4583,"nodeType":"Block","src":"11795:74:28","statements":[{"expression":{"id":4577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4575,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4531,"src":"11813:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":4576,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11823:2:28","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11813:12:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4578,"nodeType":"ExpressionStatement","src":"11813:12:28"},{"expression":{"id":4581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4579,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4537,"src":"11843:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":4580,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11853:1:28","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"11843:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4582,"nodeType":"ExpressionStatement","src":"11843:11:28"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4585,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4531,"src":"11886:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":4586,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11895:2:28","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11886:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4588,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11900:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11886:15:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4599,"nodeType":"IfStatement","src":"11882:95:28","trueBody":{"id":4598,"nodeType":"Block","src":"11903:74:28","statements":[{"expression":{"id":4592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4590,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4531,"src":"11921:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":4591,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11931:2:28","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11921:12:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4593,"nodeType":"ExpressionStatement","src":"11921:12:28"},{"expression":{"id":4596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4594,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4537,"src":"11951:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":4595,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11961:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"11951:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4597,"nodeType":"ExpressionStatement","src":"11951:11:28"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4600,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4531,"src":"11994:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":4601,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12003:1:28","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"11994:10:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4603,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12007:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11994:14:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4610,"nodeType":"IfStatement","src":"11990:64:28","trueBody":{"id":4609,"nodeType":"Block","src":"12010:44:28","statements":[{"expression":{"id":4607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4605,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4537,"src":"12028:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":4606,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12038:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12028:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4608,"nodeType":"ExpressionStatement","src":"12028:11:28"}]}}]},{"expression":{"id":4612,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4537,"src":"12080:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4535,"id":4613,"nodeType":"Return","src":"12073:13:28"}]},"documentation":{"id":4529,"nodeType":"StructuredDocumentation","src":"11185:240:28","text":" @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":4615,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"11439:6:28","nodeType":"FunctionDefinition","parameters":{"id":4532,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4531,"mutability":"mutable","name":"value","nameLocation":"11454:5:28","nodeType":"VariableDeclaration","scope":4615,"src":"11446:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4530,"name":"uint256","nodeType":"ElementaryTypeName","src":"11446:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11445:15:28"},"returnParameters":{"id":4535,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4534,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4615,"src":"11484:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4533,"name":"uint256","nodeType":"ElementaryTypeName","src":"11484:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11483:9:28"},"scope":4655,"src":"11430:663:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4653,"nodeType":"Block","src":"12329:173:28","statements":[{"id":4652,"nodeType":"UncheckedBlock","src":"12339:157:28","statements":[{"assignments":[4627],"declarations":[{"constant":false,"id":4627,"mutability":"mutable","name":"result","nameLocation":"12371:6:28","nodeType":"VariableDeclaration","scope":4652,"src":"12363:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4626,"name":"uint256","nodeType":"ElementaryTypeName","src":"12363:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4631,"initialValue":{"arguments":[{"id":4629,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4618,"src":"12387:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4628,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[4615,4654],"referencedDeclaration":4615,"src":"12380:6:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4630,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12380:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12363:30:28"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4632,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4627,"src":"12414:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$3797","typeString":"enum Math.Rounding"},"id":4636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4633,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4621,"src":"12424:8:28","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3797","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4634,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3797,"src":"12436:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$3797_$","typeString":"type(enum Math.Rounding)"}},"id":4635,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12445:2:28","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":3795,"src":"12436:11:28","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3797","typeString":"enum Math.Rounding"}},"src":"12424:23:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4637,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12451:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4638,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4627,"src":"12457:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"38","id":4639,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12466:1:28","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12457:10:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4641,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12456:12:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12451:17:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4643,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4618,"src":"12471:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12451:25:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12424:52:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":4647,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12483:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":4648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"12424:60:28","trueExpression":{"hexValue":"31","id":4646,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12479:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":4649,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12423:62:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12414:71:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4625,"id":4651,"nodeType":"Return","src":"12407:78:28"}]}]},"documentation":{"id":4616,"nodeType":"StructuredDocumentation","src":"12099:143:28","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":4654,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"12256:6:28","nodeType":"FunctionDefinition","parameters":{"id":4622,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4618,"mutability":"mutable","name":"value","nameLocation":"12271:5:28","nodeType":"VariableDeclaration","scope":4654,"src":"12263:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4617,"name":"uint256","nodeType":"ElementaryTypeName","src":"12263:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4621,"mutability":"mutable","name":"rounding","nameLocation":"12287:8:28","nodeType":"VariableDeclaration","scope":4654,"src":"12278:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3797","typeString":"enum Math.Rounding"},"typeName":{"id":4620,"nodeType":"UserDefinedTypeName","pathNode":{"id":4619,"name":"Rounding","nameLocations":["12278:8:28"],"nodeType":"IdentifierPath","referencedDeclaration":3797,"src":"12278:8:28"},"referencedDeclaration":3797,"src":"12278:8:28","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3797","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"12262:34:28"},"returnParameters":{"id":4625,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4624,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4654,"src":"12320:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4623,"name":"uint256","nodeType":"ElementaryTypeName","src":"12320:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12319:9:28"},"scope":4655,"src":"12247:255:28","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4656,"src":"202:12302:28","usedErrors":[]}],"src":"103:12402:28"},"id":28}},"contracts":{"@openzeppelin/contracts/access/AccessControl.sol":{"AccessControl":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ``` bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ``` function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it.","events":{"RoleAdminChanged(bytes32,bytes32,bytes32)":{"details":"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._"},"RoleGranted(bytes32,address,address)":{"details":"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."},"RoleRevoked(bytes32,address,address)":{"details":"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"}},"kind":"dev","methods":{"getRoleAdmin(bytes32)":{"details":"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."},"grantRole(bytes32,address)":{"details":"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."},"hasRole(bytes32,address)":{"details":"Returns `true` if `account` has been granted `role`."},"renounceRole(bytes32,address)":{"details":"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event."},"revokeRole(bytes32,address)":{"details":"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."},"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ``` bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ``` function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it.\",\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (access/AccessControl.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IAccessControl.sol\\\";\\nimport \\\"../utils/Context.sol\\\";\\nimport \\\"../utils/Strings.sol\\\";\\nimport \\\"../utils/introspection/ERC165.sol\\\";\\n\\n/**\\n * @dev Contract module that allows children to implement role-based access\\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\\n * members except through off-chain means by accessing the contract event logs. Some\\n * applications may benefit from on-chain enumerability, for those cases see\\n * {AccessControlEnumerable}.\\n *\\n * Roles are referred to by their `bytes32` identifier. These should be exposed\\n * in the external API and be unique. The best way to achieve this is by\\n * using `public constant` hash digests:\\n *\\n * ```\\n * bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\");\\n * ```\\n *\\n * Roles can be used to represent a set of permissions. To restrict access to a\\n * function call, use {hasRole}:\\n *\\n * ```\\n * function foo() public {\\n *     require(hasRole(MY_ROLE, msg.sender));\\n *     ...\\n * }\\n * ```\\n *\\n * Roles can be granted and revoked dynamically via the {grantRole} and\\n * {revokeRole} functions. Each role has an associated admin role, and only\\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\\n *\\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\\n * that only accounts with this role will be able to grant or revoke other\\n * roles. More complex role relationships can be created by using\\n * {_setRoleAdmin}.\\n *\\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\\n * grant and revoke this role. Extra precautions should be taken to secure\\n * accounts that have been granted it.\\n */\\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\\n    struct RoleData {\\n        mapping(address => bool) members;\\n        bytes32 adminRole;\\n    }\\n\\n    mapping(bytes32 => RoleData) private _roles;\\n\\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\\n\\n    /**\\n     * @dev Modifier that checks that an account has a specific role. Reverts\\n     * with a standardized message including the required role.\\n     *\\n     * The format of the revert reason is given by the following regular expression:\\n     *\\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\\n     *\\n     * _Available since v4.1._\\n     */\\n    modifier onlyRole(bytes32 role) {\\n        _checkRole(role);\\n        _;\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev Returns `true` if `account` has been granted `role`.\\n     */\\n    function hasRole(bytes32 role, address account) public view virtual override returns (bool) {\\n        return _roles[role].members[account];\\n    }\\n\\n    /**\\n     * @dev Revert with a standard message if `_msgSender()` is missing `role`.\\n     * Overriding this function changes the behavior of the {onlyRole} modifier.\\n     *\\n     * Format of the revert message is described in {_checkRole}.\\n     *\\n     * _Available since v4.6._\\n     */\\n    function _checkRole(bytes32 role) internal view virtual {\\n        _checkRole(role, _msgSender());\\n    }\\n\\n    /**\\n     * @dev Revert with a standard message if `account` is missing `role`.\\n     *\\n     * The format of the revert reason is given by the following regular expression:\\n     *\\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\\n     */\\n    function _checkRole(bytes32 role, address account) internal view virtual {\\n        if (!hasRole(role, account)) {\\n            revert(\\n                string(\\n                    abi.encodePacked(\\n                        \\\"AccessControl: account \\\",\\n                        Strings.toHexString(account),\\n                        \\\" is missing role \\\",\\n                        Strings.toHexString(uint256(role), 32)\\n                    )\\n                )\\n            );\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\\n     * {revokeRole}.\\n     *\\n     * To change a role's admin, use {_setRoleAdmin}.\\n     */\\n    function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {\\n        return _roles[role].adminRole;\\n    }\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     *\\n     * May emit a {RoleGranted} event.\\n     */\\n    function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\\n        _grantRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Revokes `role` from `account`.\\n     *\\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     *\\n     * May emit a {RoleRevoked} event.\\n     */\\n    function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\\n        _revokeRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Revokes `role` from the calling account.\\n     *\\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\\n     * purpose is to provide a mechanism for accounts to lose their privileges\\n     * if they are compromised (such as when a trusted device is misplaced).\\n     *\\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must be `account`.\\n     *\\n     * May emit a {RoleRevoked} event.\\n     */\\n    function renounceRole(bytes32 role, address account) public virtual override {\\n        require(account == _msgSender(), \\\"AccessControl: can only renounce roles for self\\\");\\n\\n        _revokeRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event. Note that unlike {grantRole}, this function doesn't perform any\\n     * checks on the calling account.\\n     *\\n     * May emit a {RoleGranted} event.\\n     *\\n     * [WARNING]\\n     * ====\\n     * This function should only be called from the constructor when setting\\n     * up the initial roles for the system.\\n     *\\n     * Using this function in any other way is effectively circumventing the admin\\n     * system imposed by {AccessControl}.\\n     * ====\\n     *\\n     * NOTE: This function is deprecated in favor of {_grantRole}.\\n     */\\n    function _setupRole(bytes32 role, address account) internal virtual {\\n        _grantRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Sets `adminRole` as ``role``'s admin role.\\n     *\\n     * Emits a {RoleAdminChanged} event.\\n     */\\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\\n        bytes32 previousAdminRole = getRoleAdmin(role);\\n        _roles[role].adminRole = adminRole;\\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\\n    }\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * Internal function without access restriction.\\n     *\\n     * May emit a {RoleGranted} event.\\n     */\\n    function _grantRole(bytes32 role, address account) internal virtual {\\n        if (!hasRole(role, account)) {\\n            _roles[role].members[account] = true;\\n            emit RoleGranted(role, account, _msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Revokes `role` from `account`.\\n     *\\n     * Internal function without access restriction.\\n     *\\n     * May emit a {RoleRevoked} event.\\n     */\\n    function _revokeRole(bytes32 role, address account) internal virtual {\\n        if (hasRole(role, account)) {\\n            _roles[role].members[account] = false;\\n            emit RoleRevoked(role, account, _msgSender());\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x67e3daf189111d6d5b0464ed09cf9f0605a22c4b965a7fcecd707101faff008a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/IAccessControl.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev External interface of AccessControl declared to support ERC165 detection.\\n */\\ninterface IAccessControl {\\n    /**\\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\\n     *\\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\\n     * {RoleAdminChanged} not being emitted signaling this.\\n     *\\n     * _Available since v3.1._\\n     */\\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\\n\\n    /**\\n     * @dev Emitted when `account` is granted `role`.\\n     *\\n     * `sender` is the account that originated the contract call, an admin role\\n     * bearer except when using {AccessControl-_setupRole}.\\n     */\\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\\n\\n    /**\\n     * @dev Emitted when `account` is revoked `role`.\\n     *\\n     * `sender` is the account that originated the contract call:\\n     *   - if using `revokeRole`, it is the admin role bearer\\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\\n     */\\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\\n\\n    /**\\n     * @dev Returns `true` if `account` has been granted `role`.\\n     */\\n    function hasRole(bytes32 role, address account) external view returns (bool);\\n\\n    /**\\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\\n     * {revokeRole}.\\n     *\\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\\n     */\\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function grantRole(bytes32 role, address account) external;\\n\\n    /**\\n     * @dev Revokes `role` from `account`.\\n     *\\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function revokeRole(bytes32 role, address account) external;\\n\\n    /**\\n     * @dev Revokes `role` from the calling account.\\n     *\\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\\n     * purpose is to provide a mechanism for accounts to lose their privileges\\n     * if they are compromised (such as when a trusted device is misplaced).\\n     *\\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must be `account`.\\n     */\\n    function renounceRole(bytes32 role, address account) external;\\n}\\n\",\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./math/Math.sol\\\";\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _SYMBOLS = \\\"0123456789abcdef\\\";\\n    uint8 private constant _ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            uint256 length = Math.log10(value) + 1;\\n            string memory buffer = new string(length);\\n            uint256 ptr;\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                ptr := add(buffer, add(32, length))\\n            }\\n            while (true) {\\n                ptr--;\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\\n                }\\n                value /= 10;\\n                if (value == 0) break;\\n            }\\n            return buffer;\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            return toHexString(value, Math.log256(value) + 1);\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\n    }\\n}\\n\",\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    enum Rounding {\\n        Down, // Toward negative infinity\\n        Up, // Toward infinity\\n        Zero // Toward zero\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\\n     * with further edits by Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator\\n    ) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod0 := mul(x, y)\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            require(denominator > prod1);\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n            // See https://cs.stackexchange.com/q/138556/92363.\\n\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 twos = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator,\\n        Rounding rounding\\n    ) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10**64) {\\n                value /= 10**64;\\n                result += 64;\\n            }\\n            if (value >= 10**32) {\\n                value /= 10**32;\\n                result += 32;\\n            }\\n            if (value >= 10**16) {\\n                value /= 10**16;\\n                result += 16;\\n            }\\n            if (value >= 10**8) {\\n                value /= 10**8;\\n                result += 8;\\n            }\\n            if (value >= 10**4) {\\n                value /= 10**4;\\n                result += 4;\\n            }\\n            if (value >= 10**2) {\\n                value /= 10**2;\\n                result += 2;\\n            }\\n            if (value >= 10**1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (rounding == Rounding.Up && 10**result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (rounding == Rounding.Up && 1 << (result * 8) < value ? 1 : 0);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":24,"contract":"@openzeppelin/contracts/access/AccessControl.sol:AccessControl","label":"_roles","offset":0,"slot":"0","type":"t_mapping(t_bytes32,t_struct(RoleData)19_storage)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_bytes32,t_struct(RoleData)19_storage)":{"encoding":"mapping","key":"t_bytes32","label":"mapping(bytes32 => struct AccessControl.RoleData)","numberOfBytes":"32","value":"t_struct(RoleData)19_storage"},"t_struct(RoleData)19_storage":{"encoding":"inplace","label":"struct AccessControl.RoleData","members":[{"astId":16,"contract":"@openzeppelin/contracts/access/AccessControl.sol:AccessControl","label":"members","offset":0,"slot":"0","type":"t_mapping(t_address,t_bool)"},{"astId":18,"contract":"@openzeppelin/contracts/access/AccessControl.sol:AccessControl","label":"adminRole","offset":0,"slot":"1","type":"t_bytes32"}],"numberOfBytes":"64"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/access/IAccessControl.sol":{"IAccessControl":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"External interface of AccessControl declared to support ERC165 detection.","events":{"RoleAdminChanged(bytes32,bytes32,bytes32)":{"details":"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._"},"RoleGranted(bytes32,address,address)":{"details":"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."},"RoleRevoked(bytes32,address,address)":{"details":"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"}},"kind":"dev","methods":{"getRoleAdmin(bytes32)":{"details":"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}."},"grantRole(bytes32,address)":{"details":"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."},"hasRole(bytes32,address)":{"details":"Returns `true` if `account` has been granted `role`."},"renounceRole(bytes32,address)":{"details":"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."},"revokeRole(bytes32,address)":{"details":"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC165 detection.\",\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/IAccessControl.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev External interface of AccessControl declared to support ERC165 detection.\\n */\\ninterface IAccessControl {\\n    /**\\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\\n     *\\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\\n     * {RoleAdminChanged} not being emitted signaling this.\\n     *\\n     * _Available since v3.1._\\n     */\\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\\n\\n    /**\\n     * @dev Emitted when `account` is granted `role`.\\n     *\\n     * `sender` is the account that originated the contract call, an admin role\\n     * bearer except when using {AccessControl-_setupRole}.\\n     */\\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\\n\\n    /**\\n     * @dev Emitted when `account` is revoked `role`.\\n     *\\n     * `sender` is the account that originated the contract call:\\n     *   - if using `revokeRole`, it is the admin role bearer\\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\\n     */\\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\\n\\n    /**\\n     * @dev Returns `true` if `account` has been granted `role`.\\n     */\\n    function hasRole(bytes32 role, address account) external view returns (bool);\\n\\n    /**\\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\\n     * {revokeRole}.\\n     *\\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\\n     */\\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function grantRole(bytes32 role, address account) external;\\n\\n    /**\\n     * @dev Revokes `role` from `account`.\\n     *\\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function revokeRole(bytes32 role, address account) external;\\n\\n    /**\\n     * @dev Revokes `role` from the calling account.\\n     *\\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\\n     * purpose is to provide a mechanism for accounts to lose their privileges\\n     * if they are compromised (such as when a trusted device is misplaced).\\n     *\\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must be `account`.\\n     */\\n    function renounceRole(bytes32 role, address account) external;\\n}\\n\",\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"devdoc":{"details":"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[],"devdoc":{"details":"String operations.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122015156796ea65a8a9c36b12168af22eaaa0d7ab5fe3454e0f24a904abaa39cc2964736f6c63430008120033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ISZERO ISZERO PUSH8 0x96EA65A8A9C36B12 AND DUP11 CALLCODE 0x2E 0xAA LOG0 0xD7 0xAB 0x5F 0xE3 GASLIMIT 0x4E 0xF 0x24 0xA9 DIV 0xAB 0xAA CODECOPY 0xCC 0x29 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ","sourceMap":"188:2065:3:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;188:2065:3;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122015156796ea65a8a9c36b12168af22eaaa0d7ab5fe3454e0f24a904abaa39cc2964736f6c63430008120033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ISZERO ISZERO PUSH8 0x96EA65A8A9C36B12 AND DUP11 CALLCODE 0x2E 0xAA LOG0 0xD7 0xAB 0x5F 0xE3 GASLIMIT 0x4E 0xF 0x24 0xA9 DIV 0xAB 0xAA CODECOPY 0xCC 0x29 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ","sourceMap":"188:2065:3:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"},"internal":{"toHexString(address)":"infinite","toHexString(uint256)":"infinite","toHexString(uint256,uint256)":"infinite","toString(uint256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./math/Math.sol\\\";\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _SYMBOLS = \\\"0123456789abcdef\\\";\\n    uint8 private constant _ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            uint256 length = Math.log10(value) + 1;\\n            string memory buffer = new string(length);\\n            uint256 ptr;\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                ptr := add(buffer, add(32, length))\\n            }\\n            while (true) {\\n                ptr--;\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\\n                }\\n                value /= 10;\\n                if (value == 0) break;\\n            }\\n            return buffer;\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            return toHexString(value, Math.log256(value) + 1);\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\n    }\\n}\\n\",\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    enum Rounding {\\n        Down, // Toward negative infinity\\n        Up, // Toward infinity\\n        Zero // Toward zero\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\\n     * with further edits by Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator\\n    ) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod0 := mul(x, y)\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            require(denominator > prod1);\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n            // See https://cs.stackexchange.com/q/138556/92363.\\n\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 twos = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator,\\n        Rounding rounding\\n    ) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10**64) {\\n                value /= 10**64;\\n                result += 64;\\n            }\\n            if (value >= 10**32) {\\n                value /= 10**32;\\n                result += 32;\\n            }\\n            if (value >= 10**16) {\\n                value /= 10**16;\\n                result += 16;\\n            }\\n            if (value >= 10**8) {\\n                value /= 10**8;\\n                result += 8;\\n            }\\n            if (value >= 10**4) {\\n                value /= 10**4;\\n                result += 4;\\n            }\\n            if (value >= 10**2) {\\n                value /= 10**2;\\n                result += 2;\\n            }\\n            if (value >= 10**1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (rounding == Rounding.Up && 10**result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (rounding == Rounding.Up && 1 << (result * 8) < value ? 1 : 0);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.","kind":"dev","methods":{"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.","kind":"dev","methods":{"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"devdoc":{"details":"Standard math utilities missing in the Solidity language.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e137a803e1db9cbe9a0c37d2ddfeeed46a362ac1c3c34fad9230346eab8b7a2a64736f6c63430008120033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE1 CALLDATACOPY 0xA8 SUB 0xE1 0xDB SWAP13 0xBE SWAP11 0xC CALLDATACOPY 0xD2 0xDD INVALID 0xEE 0xD4 PUSH11 0x362AC1C3C34FAD9230346E 0xAB DUP12 PUSH27 0x2A64736F6C63430008120033000000000000000000000000000000 ","sourceMap":"202:12302:6:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;202:12302:6;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e137a803e1db9cbe9a0c37d2ddfeeed46a362ac1c3c34fad9230346eab8b7a2a64736f6c63430008120033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE1 CALLDATACOPY 0xA8 SUB 0xE1 0xDB SWAP13 0xBE SWAP11 0xC CALLDATACOPY 0xD2 0xDD INVALID 0xEE 0xD4 PUSH11 0x362AC1C3C34FAD9230346E 0xAB DUP12 PUSH27 0x2A64736F6C63430008120033000000000000000000000000000000 ","sourceMap":"202:12302:6:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"},"internal":{"average(uint256,uint256)":"infinite","ceilDiv(uint256,uint256)":"infinite","log10(uint256)":"infinite","log10(uint256,enum Math.Rounding)":"infinite","log2(uint256)":"infinite","log2(uint256,enum Math.Rounding)":"infinite","log256(uint256)":"infinite","log256(uint256,enum Math.Rounding)":"infinite","max(uint256,uint256)":"infinite","min(uint256,uint256)":"infinite","mulDiv(uint256,uint256,uint256)":"infinite","mulDiv(uint256,uint256,uint256,enum Math.Rounding)":"infinite","sqrt(uint256)":"infinite","sqrt(uint256,enum Math.Rounding)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    enum Rounding {\\n        Down, // Toward negative infinity\\n        Up, // Toward infinity\\n        Zero // Toward zero\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\\n     * with further edits by Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator\\n    ) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod0 := mul(x, y)\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            require(denominator > prod1);\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n            // See https://cs.stackexchange.com/q/138556/92363.\\n\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 twos = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator,\\n        Rounding rounding\\n    ) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10**64) {\\n                value /= 10**64;\\n                result += 64;\\n            }\\n            if (value >= 10**32) {\\n                value /= 10**32;\\n                result += 32;\\n            }\\n            if (value >= 10**16) {\\n                value /= 10**16;\\n                result += 16;\\n            }\\n            if (value >= 10**8) {\\n                value /= 10**8;\\n                result += 8;\\n            }\\n            if (value >= 10**4) {\\n                value /= 10**4;\\n                result += 4;\\n            }\\n            if (value >= 10**2) {\\n                value /= 10**2;\\n                result += 2;\\n            }\\n            if (value >= 10**1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (rounding == Rounding.Up && 10**result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (rounding == Rounding.Up && 1 << (result * 8) < value ? 1 : 0);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/AccessControl/ERC165.sol":{"ERC165":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Implementation of the {IERC165} interface. Contracts may inherit from this and call {_registerInterface} to declare their support of an interface.","kind":"dev","methods":{"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}. Time complexity O(1), guaranteed to always use less than 30 000 gas."}},"stateVariables":{"_supportedInterfaces":{"details":"Mapping of interface ids to whether or not it's supported."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_1508":{"entryPoint":null,"id":1508,"parameterSlots":0,"returnSlots":0},"@_registerInterface_1541":{"entryPoint":38,"id":1541,"parameterSlots":1,"returnSlots":0},"abi_encode_tuple_t_stringliteral_282912c0dfceceb28d77d0333f496b83948f9ba5b3154358a8b140b849289dee__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:368:29","statements":[{"nodeType":"YulBlock","src":"6:3:29","statements":[]},{"body":{"nodeType":"YulBlock","src":"188:178:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"205:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"216:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"198:6:29"},"nodeType":"YulFunctionCall","src":"198:21:29"},"nodeType":"YulExpressionStatement","src":"198:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"239:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"250:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"235:3:29"},"nodeType":"YulFunctionCall","src":"235:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"255:2:29","type":"","value":"28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"228:6:29"},"nodeType":"YulFunctionCall","src":"228:30:29"},"nodeType":"YulExpressionStatement","src":"228:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"278:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"289:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"274:3:29"},"nodeType":"YulFunctionCall","src":"274:18:29"},{"hexValue":"4552433136353a20696e76616c696420696e74657266616365206964","kind":"string","nodeType":"YulLiteral","src":"294:30:29","type":"","value":"ERC165: invalid interface id"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"267:6:29"},"nodeType":"YulFunctionCall","src":"267:58:29"},"nodeType":"YulExpressionStatement","src":"267:58:29"},{"nodeType":"YulAssignment","src":"334:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"346:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"357:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"342:3:29"},"nodeType":"YulFunctionCall","src":"342:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"334:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_282912c0dfceceb28d77d0333f496b83948f9ba5b3154358a8b140b849289dee__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"165:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"179:4:29","type":""}],"src":"14:352:29"}]},"contents":"{\n    { }\n    function abi_encode_tuple_t_stringliteral_282912c0dfceceb28d77d0333f496b83948f9ba5b3154358a8b140b849289dee__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"ERC165: invalid interface id\")\n        tail := add(headStart, 96)\n    }\n}","id":29,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"608060405234801561001057600080fd5b506100216301ffc9a760e01b610026565b6100a9565b6001600160e01b031980821690036100845760405162461bcd60e51b815260206004820152601c60248201527f4552433136353a20696e76616c696420696e7465726661636520696400000000604482015260640160405180910390fd5b6001600160e01b0319166000908152602081905260409020805460ff19166001179055565b60d0806100b76000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c806301ffc9a714602d575b600080fd5b60576038366004606b565b6001600160e01b03191660009081526020819052604090205460ff1690565b604051901515815260200160405180910390f35b600060208284031215607c57600080fd5b81356001600160e01b031981168114609357600080fd5b939250505056fea2646970667358221220cbf8482e28ad585f57b5bfca3a8089676eaac01df93f8791881d2504fd9b2d4764736f6c63430008120033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x21 PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH2 0x26 JUMP JUMPDEST PUSH2 0xA9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP1 DUP3 AND SWAP1 SUB PUSH2 0x84 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433136353A20696E76616C696420696E7465726661636520696400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0xD0 DUP1 PUSH2 0xB7 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x28 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1FFC9A7 EQ PUSH1 0x2D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x57 PUSH1 0x38 CALLDATASIZE PUSH1 0x4 PUSH1 0x6B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH1 0x7C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH1 0x93 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCB 0xF8 BASEFEE 0x2E 0x28 0xAD PC 0x5F JUMPI 0xB5 0xBF 0xCA GASPRICE DUP1 DUP10 PUSH8 0x6EAAC01DF93F8791 DUP9 SAR 0x25 DIV REVERT SWAP12 0x2D SELFBALANCE PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ","sourceMap":"222:1403:7:-:0;;;548:208;;;;;;;;;-1:-1:-1;709:40:7;-1:-1:-1;;;709:18:7;:40::i;:::-;222:1403;;1433:190;-1:-1:-1;;;;;;1508:25:7;;;;;1500:66;;;;-1:-1:-1;;;1500:66:7;;216:2:29;1500:66:7;;;198:21:29;255:2;235:18;;;228:30;294;274:18;;;267:58;342:18;;1500:66:7;;;;;;;;-1:-1:-1;;;;;;1576:33:7;:20;:33;;;;;;;;;;:40;;-1:-1:-1;;1576:40:7;1612:4;1576:40;;;1433:190::o;14:352:29:-;222:1403:7;;;;;;"},"deployedBytecode":{"functionDebugData":{"@supportsInterface_1521":{"entryPoint":null,"id":1521,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_bytes4":{"entryPoint":107,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:494:29","statements":[{"nodeType":"YulBlock","src":"6:3:29","statements":[]},{"body":{"nodeType":"YulBlock","src":"83:217:29","statements":[{"body":{"nodeType":"YulBlock","src":"129:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"138:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"141:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"131:6:29"},"nodeType":"YulFunctionCall","src":"131:12:29"},"nodeType":"YulExpressionStatement","src":"131:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"104:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"113:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"100:3:29"},"nodeType":"YulFunctionCall","src":"100:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"125:2:29","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"96:3:29"},"nodeType":"YulFunctionCall","src":"96:32:29"},"nodeType":"YulIf","src":"93:52:29"},{"nodeType":"YulVariableDeclaration","src":"154:36:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"180:9:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"167:12:29"},"nodeType":"YulFunctionCall","src":"167:23:29"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"158:5:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"254:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"263:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"266:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"256:6:29"},"nodeType":"YulFunctionCall","src":"256:12:29"},"nodeType":"YulExpressionStatement","src":"256:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"212:5:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"223:5:29"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"234:3:29","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"239:10:29","type":"","value":"0xffffffff"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"230:3:29"},"nodeType":"YulFunctionCall","src":"230:20:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"219:3:29"},"nodeType":"YulFunctionCall","src":"219:32:29"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"209:2:29"},"nodeType":"YulFunctionCall","src":"209:43:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"202:6:29"},"nodeType":"YulFunctionCall","src":"202:51:29"},"nodeType":"YulIf","src":"199:71:29"},{"nodeType":"YulAssignment","src":"279:15:29","value":{"name":"value","nodeType":"YulIdentifier","src":"289:5:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"279:6:29"}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"49:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"60:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"72:6:29","type":""}],"src":"14:286:29"},{"body":{"nodeType":"YulBlock","src":"400:92:29","statements":[{"nodeType":"YulAssignment","src":"410:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"422:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"433:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"418:3:29"},"nodeType":"YulFunctionCall","src":"418:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"410:4:29"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"452:9:29"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"477:6:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"470:6:29"},"nodeType":"YulFunctionCall","src":"470:14:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"463:6:29"},"nodeType":"YulFunctionCall","src":"463:22:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"445:6:29"},"nodeType":"YulFunctionCall","src":"445:41:29"},"nodeType":"YulExpressionStatement","src":"445:41:29"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"369:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"380:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"391:4:29","type":""}],"src":"305:187:29"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n}","id":29,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"6080604052348015600f57600080fd5b506004361060285760003560e01c806301ffc9a714602d575b600080fd5b60576038366004606b565b6001600160e01b03191660009081526020819052604090205460ff1690565b604051901515815260200160405180910390f35b600060208284031215607c57600080fd5b81356001600160e01b031981168114609357600080fd5b939250505056fea2646970667358221220cbf8482e28ad585f57b5bfca3a8089676eaac01df93f8791881d2504fd9b2d4764736f6c63430008120033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x28 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1FFC9A7 EQ PUSH1 0x2D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x57 PUSH1 0x38 CALLDATASIZE PUSH1 0x4 PUSH1 0x6B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH1 0x7C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH1 0x93 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCB 0xF8 BASEFEE 0x2E 0x28 0xAD PC 0x5F JUMPI 0xB5 0xBF 0xCA GASPRICE DUP1 DUP10 PUSH8 0x6EAAC01DF93F8791 DUP9 SAR 0x25 DIV REVERT SWAP12 0x2D SELFBALANCE PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ","sourceMap":"222:1403:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;906:133;;;;;;:::i;:::-;-1:-1:-1;;;;;;999:33:7;976:4;999:33;;;;;;;;;;;;;;906:133;;;;470:14:29;;463:22;445:41;;433:2;418:18;906:133:7;;;;;;;14:286:29;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:29;;209:43;;199:71;;266:1;263;256:12;199:71;289:5;14:286;-1:-1:-1;;;14:286:29:o"},"gasEstimates":{"creation":{"codeDepositCost":"41600","executionCost":"24499","totalCost":"66099"},"external":{"supportsInterface(bytes4)":"2489"},"internal":{"_registerInterface(bytes4)":"infinite"}},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts may inherit from this and call {_registerInterface} to declare their support of an interface.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}. Time complexity O(1), guaranteed to always use less than 30 000 gas.\"}},\"stateVariables\":{\"_supportedInterfaces\":{\"details\":\"Mapping of interface ids to whether or not it's supported.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/AccessControl/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"contracts/AccessControl/ERC165.sol\":{\"content\":\"pragma solidity ^0.8.4;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts may inherit from this and call {_registerInterface} to declare\\n * their support of an interface.\\n */\\ncontract ERC165 is IERC165 {\\n    /*\\n     * bytes4(keccak256('supportsInterface(bytes4)')) == 0x01ffc9a7\\n     */\\n    bytes4 private constant _INTERFACE_ID_ERC165 = 0x01ffc9a7;\\n\\n    /**\\n     * @dev Mapping of interface ids to whether or not it's supported.\\n     */\\n    mapping(bytes4 => bool) private _supportedInterfaces;\\n\\n    constructor () {\\n        // Derived contracts need only register support for their own interfaces,\\n        // we register support for ERC165 itself here\\n        _registerInterface(_INTERFACE_ID_ERC165);\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     *\\n     * Time complexity O(1), guaranteed to always use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool) {\\n        return _supportedInterfaces[interfaceId];\\n    }\\n\\n    /**\\n     * @dev Registers the contract as an implementer of the interface defined by\\n     * `interfaceId`. Support of the actual ERC165 interface is automatic and\\n     * registering its interface id is not required.\\n     *\\n     * See {IERC165-supportsInterface}.\\n     *\\n     * Requirements:\\n     *\\n     * - `interfaceId` cannot be the ERC165 invalid interface (`0xffffffff`).\\n     */\\n    function _registerInterface(bytes4 interfaceId) internal {\\n        require(interfaceId != 0xffffffff, \\\"ERC165: invalid interface id\\\");\\n        _supportedInterfaces[interfaceId] = true;\\n    }\\n}\\n\",\"keccak256\":\"0x14be494c0ae55cfaa108697b96c56a1df154e5bc7044efaa9d917f60ba323cce\"},\"contracts/AccessControl/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.4;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\",\"keccak256\":\"0x4c25eee9d54bc4769357b94be03e43fe898bf57c1ffac4c5989abb8fe34da49f\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":1500,"contract":"contracts/AccessControl/ERC165.sol:ERC165","label":"_supportedInterfaces","offset":0,"slot":"0","type":"t_mapping(t_bytes4,t_bool)"}],"types":{"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_bytes4":{"encoding":"inplace","label":"bytes4","numberOfBytes":"4"},"t_mapping(t_bytes4,t_bool)":{"encoding":"mapping","key":"t_bytes4","label":"mapping(bytes4 => bool)","numberOfBytes":"32","value":"t_bool"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/AccessControl/ERC165A.sol":{"ERC165A":{"abi":[],"devdoc":{"details":"Implementation of the {IERC165} interface. Contracts may inherit from this and call {_registerInterface} to declare their support of an interface.","kind":"dev","methods":{},"stateVariables":{"_supportedInterfaces":{"details":"Mapping of interface ids to whether or not it's supported."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts may inherit from this and call {_registerInterface} to declare their support of an interface.\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_supportedInterfaces\":{\"details\":\"Mapping of interface ids to whether or not it's supported.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/AccessControl/ERC165A.sol\":\"ERC165A\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"contracts/AccessControl/ERC165A.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.4;\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts may inherit from this and call {_registerInterface} to declare\\n * their support of an interface.\\n */\\nabstract contract ERC165A {\\n    /*\\n     * bytes4(keccak256('supportsInterface(bytes4)')) == 0x01ffc9a7\\n     */\\n    bytes4 private constant _INTERFACE_ID_ERC165 = 0x01ffc9a7;\\n\\n    /**\\n     * @dev Mapping of interface ids to whether or not it's supported.\\n     */\\n    mapping(bytes4 => bool) private _supportedInterfaces;\\n\\n    constructor () internal {\\n        // Derived contracts need only register support for their own interfaces,\\n        // we register support for ERC165 itself here\\n        _registerInterface(_INTERFACE_ID_ERC165);\\n    }\\n\\n    // /**\\n    //  * @dev See {IERC165-supportsInterface}.\\n    //  *\\n    //  * Time complexity O(1), guaranteed to always use less than 30 000 gas.\\n    //  */\\n    // function supportsInterface(bytes4 interfaceId) public view override returns (bool) {\\n    //     return _supportedInterfaces[interfaceId];\\n    // }\\n\\n    /**\\n     * @dev Registers the contract as an implementer of the interface defined by\\n     * `interfaceId`. Support of the actual ERC165 interface is automatic and\\n     * registering its interface id is not required.\\n     *\\n     * See {IERC165-supportsInterface}.\\n     *\\n     * Requirements:\\n     *\\n     * - `interfaceId` cannot be the ERC165 invalid interface (`0xffffffff`).\\n     */\\n    function _registerInterface(bytes4 interfaceId) internal virtual {\\n        require(interfaceId != 0xffffffff, \\\"ERC165: invalid interface id\\\");\\n        _supportedInterfaces[interfaceId] = true;\\n    }\\n}\",\"keccak256\":\"0x42ac6a7c9cc571496eaed210a7452ae8955ba963702bfec60340ad04c62abb49\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":1553,"contract":"contracts/AccessControl/ERC165A.sol:ERC165A","label":"_supportedInterfaces","offset":0,"slot":"0","type":"t_mapping(t_bytes4,t_bool)"}],"types":{"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_bytes4":{"encoding":"inplace","label":"bytes4","numberOfBytes":"4"},"t_mapping(t_bytes4,t_bool)":{"encoding":"mapping","key":"t_bytes4","label":"mapping(bytes4 => bool)","numberOfBytes":"32","value":"t_bool"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/AccessControl/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.","kind":"dev","methods":{"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/AccessControl/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"contracts/AccessControl/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.4;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\",\"keccak256\":\"0x4c25eee9d54bc4769357b94be03e43fe898bf57c1ffac4c5989abb8fe34da49f\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/dao/StorageStateCommittee.sol":{"StorageStateCommittee":{"abi":[{"inputs":[],"name":"activityRewardPerSecond","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"agendaManager","outputs":[{"internalType":"contract IDAOAgendaManager","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_candidate","type":"address"}],"name":"candidateContract","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"candidateFactory","outputs":[{"internalType":"contract ICandidateFactory","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_candidate","type":"address"}],"name":"candidateInfos","outputs":[{"components":[{"internalType":"address","name":"candidateContract","type":"address"},{"internalType":"uint256","name":"indexMembers","type":"uint256"},{"internalType":"uint128","name":"memberJoinedTime","type":"uint128"},{"internalType":"uint128","name":"rewardPeriod","type":"uint128"},{"internalType":"uint128","name":"claimedTimestamp","type":"uint128"}],"internalType":"struct IStorageStateCommittee.CandidateInfo","name":"","type":"tuple"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"candidates","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"daoVault","outputs":[{"internalType":"contract IDAOVault","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_candidate","type":"address"}],"name":"isMember","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"layer2Registry","outputs":[{"internalType":"contract ILayer2Registry","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"maxMember","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"members","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"quorum","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"seigManager","outputs":[{"internalType":"contract ISeigManager","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"ton","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"608060405234801561001057600080fd5b506103ca806100206000396000f3fe608060405234801561001057600080fd5b50600436106100ca5760003560e01c8063651d08cd1161007c578063651d08cd146102495780636fb7f558146102755780637f33163614610288578063a230c52414610291578063b5dd1158146102d8578063cc48b947146102eb578063cf2a239c146102fe57600080fd5b806303e3c9ac146100cf5780631703a018146100eb57806327fd92fd146100f45780632e011c1e1461011f5780633477ee2e146102105780635903bd6c146102235780635daf08ca14610236575b600080fd5b6100d860085481565b6040519081526020015b60405180910390f35b6100d8600a5481565b600254610107906001600160a01b031681565b6040516001600160a01b0390911681526020016100e2565b6101bb61012d36600461034b565b6040805160a0808201835260008083526020808401829052838501829052606080850183905260809485018390526001600160a01b0396871683526009825291859020855193840186528054909616835260018601549083015260028501546001600160801b0380821695840195909552600160801b90048416908201526003909301549091169082015290565b6040805182516001600160a01b0316815260208084015190820152828201516001600160801b03908116928201929092526060808401518316908201526080928301519091169181019190915260a0016100e2565b61010761021e36600461037b565b610311565b600154610107906001600160a01b031681565b61010761024436600461037b565b61033b565b61010761025736600461034b565b6001600160a01b039081166000908152600960205260409020541690565b600554610107906001600160a01b031681565b6100d8600b5481565b6102c861029f36600461034b565b6001600160a01b03166000908152600960205260409020600201546001600160801b0316151590565b60405190151581526020016100e2565b600354610107906001600160a01b031681565b600054610107906001600160a01b031681565b600454610107906001600160a01b031681565b6006818154811061032157600080fd5b6000918252602090912001546001600160a01b0316905081565b6007818154811061032157600080fd5b60006020828403121561035d57600080fd5b81356001600160a01b038116811461037457600080fd5b9392505050565b60006020828403121561038d57600080fd5b503591905056fea26469706673582212204cb9d683ec440874ee2220cbb091ae178b022337c624f473c2ef07504017fdd964736f6c63430008120033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3CA DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x651D08CD GT PUSH2 0x7C JUMPI DUP1 PUSH4 0x651D08CD EQ PUSH2 0x249 JUMPI DUP1 PUSH4 0x6FB7F558 EQ PUSH2 0x275 JUMPI DUP1 PUSH4 0x7F331636 EQ PUSH2 0x288 JUMPI DUP1 PUSH4 0xA230C524 EQ PUSH2 0x291 JUMPI DUP1 PUSH4 0xB5DD1158 EQ PUSH2 0x2D8 JUMPI DUP1 PUSH4 0xCC48B947 EQ PUSH2 0x2EB JUMPI DUP1 PUSH4 0xCF2A239C EQ PUSH2 0x2FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3E3C9AC EQ PUSH2 0xCF JUMPI DUP1 PUSH4 0x1703A018 EQ PUSH2 0xEB JUMPI DUP1 PUSH4 0x27FD92FD EQ PUSH2 0xF4 JUMPI DUP1 PUSH4 0x2E011C1E EQ PUSH2 0x11F JUMPI DUP1 PUSH4 0x3477EE2E EQ PUSH2 0x210 JUMPI DUP1 PUSH4 0x5903BD6C EQ PUSH2 0x223 JUMPI DUP1 PUSH4 0x5DAF08CA EQ PUSH2 0x236 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD8 PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD8 PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x107 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE2 JUMP JUMPDEST PUSH2 0x1BB PUSH2 0x12D CALLDATASIZE PUSH1 0x4 PUSH2 0x34B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP1 DUP3 ADD DUP4 MSTORE PUSH1 0x0 DUP1 DUP4 MSTORE PUSH1 0x20 DUP1 DUP5 ADD DUP3 SWAP1 MSTORE DUP4 DUP6 ADD DUP3 SWAP1 MSTORE PUSH1 0x60 DUP1 DUP6 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 SWAP5 DUP6 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP7 DUP8 AND DUP4 MSTORE PUSH1 0x9 DUP3 MSTORE SWAP2 DUP6 SWAP1 KECCAK256 DUP6 MLOAD SWAP4 DUP5 ADD DUP7 MSTORE DUP1 SLOAD SWAP1 SWAP7 AND DUP4 MSTORE PUSH1 0x1 DUP7 ADD SLOAD SWAP1 DUP4 ADD MSTORE PUSH1 0x2 DUP6 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP1 DUP3 AND SWAP6 DUP5 ADD SWAP6 SWAP1 SWAP6 MSTORE PUSH1 0x1 PUSH1 0x80 SHL SWAP1 DIV DUP5 AND SWAP1 DUP3 ADD MSTORE PUSH1 0x3 SWAP1 SWAP4 ADD SLOAD SWAP1 SWAP2 AND SWAP1 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP1 DUP5 ADD MLOAD SWAP1 DUP3 ADD MSTORE DUP3 DUP3 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 DUP2 AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP1 DUP5 ADD MLOAD DUP4 AND SWAP1 DUP3 ADD MSTORE PUSH1 0x80 SWAP3 DUP4 ADD MLOAD SWAP1 SWAP2 AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xA0 ADD PUSH2 0xE2 JUMP JUMPDEST PUSH2 0x107 PUSH2 0x21E CALLDATASIZE PUSH1 0x4 PUSH2 0x37B JUMP JUMPDEST PUSH2 0x311 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x107 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x107 PUSH2 0x244 CALLDATASIZE PUSH1 0x4 PUSH2 0x37B JUMP JUMPDEST PUSH2 0x33B JUMP JUMPDEST PUSH2 0x107 PUSH2 0x257 CALLDATASIZE PUSH1 0x4 PUSH2 0x34B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND SWAP1 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x107 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0xD8 PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2C8 PUSH2 0x29F CALLDATASIZE PUSH1 0x4 PUSH2 0x34B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE2 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x107 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x107 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x107 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x6 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x321 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x7 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x321 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x35D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x374 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x38D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4C 0xB9 0xD6 DUP4 0xEC PREVRANDAO ADDMOD PUSH21 0xEE2220CBB091AE178B022337C624F473C2EF075040 OR REVERT 0xD9 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ","sourceMap":"556:2336:11:-:0;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@activityRewardPerSecond_1672":{"entryPoint":null,"id":1672,"parameterSlots":0,"returnSlots":0},"@agendaManager_1638":{"entryPoint":null,"id":1638,"parameterSlots":0,"returnSlots":0},"@candidateContract_1802":{"entryPoint":null,"id":1802,"parameterSlots":1,"returnSlots":1},"@candidateFactory_1642":{"entryPoint":null,"id":1642,"parameterSlots":0,"returnSlots":0},"@candidateInfos_1816":{"entryPoint":null,"id":1816,"parameterSlots":1,"returnSlots":1},"@candidates_1654":{"entryPoint":785,"id":1654,"parameterSlots":0,"returnSlots":0},"@daoVault_1634":{"entryPoint":null,"id":1634,"parameterSlots":0,"returnSlots":0},"@isMember_1788":{"entryPoint":null,"id":1788,"parameterSlots":1,"returnSlots":1},"@layer2Registry_1646":{"entryPoint":null,"id":1646,"parameterSlots":0,"returnSlots":0},"@maxMember_1661":{"entryPoint":null,"id":1661,"parameterSlots":0,"returnSlots":0},"@members_1658":{"entryPoint":827,"id":1658,"parameterSlots":0,"returnSlots":0},"@quorum_1669":{"entryPoint":null,"id":1669,"parameterSlots":0,"returnSlots":0},"@seigManager_1650":{"entryPoint":null,"id":1650,"parameterSlots":0,"returnSlots":0},"@ton_1630":{"entryPoint":null,"id":1630,"parameterSlots":0,"returnSlots":0},"abi_decode_tuple_t_address":{"entryPoint":843,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":891,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_ICandidateFactory_$1930__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_IDAOAgendaManager_$2211__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_IDAOVault_$2534__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_ILayer2Registry_$2588__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_ISeigManager_$2752__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_struct$_CandidateInfo_$2776_memory_ptr__to_t_struct$_CandidateInfo_$2776_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:2860:29","statements":[{"nodeType":"YulBlock","src":"6:3:29","statements":[]},{"body":{"nodeType":"YulBlock","src":"115:76:29","statements":[{"nodeType":"YulAssignment","src":"125:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"137:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"148:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"133:3:29"},"nodeType":"YulFunctionCall","src":"133:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"125:4:29"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"167:9:29"},{"name":"value0","nodeType":"YulIdentifier","src":"178:6:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"160:6:29"},"nodeType":"YulFunctionCall","src":"160:25:29"},"nodeType":"YulExpressionStatement","src":"160:25:29"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"84:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"95:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"106:4:29","type":""}],"src":"14:177:29"},{"body":{"nodeType":"YulBlock","src":"323:102:29","statements":[{"nodeType":"YulAssignment","src":"333:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"345:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"356:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"341:3:29"},"nodeType":"YulFunctionCall","src":"341:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"333:4:29"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"375:9:29"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"390:6:29"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"406:3:29","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"411:1:29","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"402:3:29"},"nodeType":"YulFunctionCall","src":"402:11:29"},{"kind":"number","nodeType":"YulLiteral","src":"415:1:29","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"398:3:29"},"nodeType":"YulFunctionCall","src":"398:19:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"386:3:29"},"nodeType":"YulFunctionCall","src":"386:32:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"368:6:29"},"nodeType":"YulFunctionCall","src":"368:51:29"},"nodeType":"YulExpressionStatement","src":"368:51:29"}]},"name":"abi_encode_tuple_t_contract$_IDAOAgendaManager_$2211__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"292:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"303:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"314:4:29","type":""}],"src":"196:229:29"},{"body":{"nodeType":"YulBlock","src":"500:216:29","statements":[{"body":{"nodeType":"YulBlock","src":"546:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"555:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"558:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"548:6:29"},"nodeType":"YulFunctionCall","src":"548:12:29"},"nodeType":"YulExpressionStatement","src":"548:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"521:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"530:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"517:3:29"},"nodeType":"YulFunctionCall","src":"517:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"542:2:29","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"513:3:29"},"nodeType":"YulFunctionCall","src":"513:32:29"},"nodeType":"YulIf","src":"510:52:29"},{"nodeType":"YulVariableDeclaration","src":"571:36:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"597:9:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"584:12:29"},"nodeType":"YulFunctionCall","src":"584:23:29"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"575:5:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"670:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"679:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"682:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"672:6:29"},"nodeType":"YulFunctionCall","src":"672:12:29"},"nodeType":"YulExpressionStatement","src":"672:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"629:5:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"640:5:29"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"655:3:29","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"660:1:29","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"651:3:29"},"nodeType":"YulFunctionCall","src":"651:11:29"},{"kind":"number","nodeType":"YulLiteral","src":"664:1:29","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"647:3:29"},"nodeType":"YulFunctionCall","src":"647:19:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"636:3:29"},"nodeType":"YulFunctionCall","src":"636:31:29"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"626:2:29"},"nodeType":"YulFunctionCall","src":"626:42:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"619:6:29"},"nodeType":"YulFunctionCall","src":"619:50:29"},"nodeType":"YulIf","src":"616:70:29"},{"nodeType":"YulAssignment","src":"695:15:29","value":{"name":"value","nodeType":"YulIdentifier","src":"705:5:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"695:6:29"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"466:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"477:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"489:6:29","type":""}],"src":"430:286:29"},{"body":{"nodeType":"YulBlock","src":"884:468:29","statements":[{"nodeType":"YulAssignment","src":"894:27:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"906:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"917:3:29","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"902:3:29"},"nodeType":"YulFunctionCall","src":"902:19:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"894:4:29"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"937:9:29"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"958:6:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"952:5:29"},"nodeType":"YulFunctionCall","src":"952:13:29"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"975:3:29","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"980:1:29","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"971:3:29"},"nodeType":"YulFunctionCall","src":"971:11:29"},{"kind":"number","nodeType":"YulLiteral","src":"984:1:29","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"967:3:29"},"nodeType":"YulFunctionCall","src":"967:19:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"948:3:29"},"nodeType":"YulFunctionCall","src":"948:39:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"930:6:29"},"nodeType":"YulFunctionCall","src":"930:58:29"},"nodeType":"YulExpressionStatement","src":"930:58:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1008:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"1019:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1004:3:29"},"nodeType":"YulFunctionCall","src":"1004:20:29"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1036:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"1044:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1032:3:29"},"nodeType":"YulFunctionCall","src":"1032:17:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1026:5:29"},"nodeType":"YulFunctionCall","src":"1026:24:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"997:6:29"},"nodeType":"YulFunctionCall","src":"997:54:29"},"nodeType":"YulExpressionStatement","src":"997:54:29"},{"nodeType":"YulVariableDeclaration","src":"1060:44:29","value":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1090:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"1098:4:29","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1086:3:29"},"nodeType":"YulFunctionCall","src":"1086:17:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1080:5:29"},"nodeType":"YulFunctionCall","src":"1080:24:29"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"1064:12:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1113:29:29","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1131:3:29","type":"","value":"128"},{"kind":"number","nodeType":"YulLiteral","src":"1136:1:29","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1127:3:29"},"nodeType":"YulFunctionCall","src":"1127:11:29"},{"kind":"number","nodeType":"YulLiteral","src":"1140:1:29","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1123:3:29"},"nodeType":"YulFunctionCall","src":"1123:19:29"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1117:2:29","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1162:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"1173:4:29","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1158:3:29"},"nodeType":"YulFunctionCall","src":"1158:20:29"},{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"1184:12:29"},{"name":"_1","nodeType":"YulIdentifier","src":"1198:2:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1180:3:29"},"nodeType":"YulFunctionCall","src":"1180:21:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1151:6:29"},"nodeType":"YulFunctionCall","src":"1151:51:29"},"nodeType":"YulExpressionStatement","src":"1151:51:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1222:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"1233:4:29","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1218:3:29"},"nodeType":"YulFunctionCall","src":"1218:20:29"},{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1254:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"1262:4:29","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1250:3:29"},"nodeType":"YulFunctionCall","src":"1250:17:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1244:5:29"},"nodeType":"YulFunctionCall","src":"1244:24:29"},{"name":"_1","nodeType":"YulIdentifier","src":"1270:2:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1240:3:29"},"nodeType":"YulFunctionCall","src":"1240:33:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1211:6:29"},"nodeType":"YulFunctionCall","src":"1211:63:29"},"nodeType":"YulExpressionStatement","src":"1211:63:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1294:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"1305:4:29","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1290:3:29"},"nodeType":"YulFunctionCall","src":"1290:20:29"},{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1326:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"1334:4:29","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1322:3:29"},"nodeType":"YulFunctionCall","src":"1322:17:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1316:5:29"},"nodeType":"YulFunctionCall","src":"1316:24:29"},{"name":"_1","nodeType":"YulIdentifier","src":"1342:2:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1312:3:29"},"nodeType":"YulFunctionCall","src":"1312:33:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1283:6:29"},"nodeType":"YulFunctionCall","src":"1283:63:29"},"nodeType":"YulExpressionStatement","src":"1283:63:29"}]},"name":"abi_encode_tuple_t_struct$_CandidateInfo_$2776_memory_ptr__to_t_struct$_CandidateInfo_$2776_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"853:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"864:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"875:4:29","type":""}],"src":"721:631:29"},{"body":{"nodeType":"YulBlock","src":"1427:110:29","statements":[{"body":{"nodeType":"YulBlock","src":"1473:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1482:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1485:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1475:6:29"},"nodeType":"YulFunctionCall","src":"1475:12:29"},"nodeType":"YulExpressionStatement","src":"1475:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1448:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"1457:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1444:3:29"},"nodeType":"YulFunctionCall","src":"1444:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"1469:2:29","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1440:3:29"},"nodeType":"YulFunctionCall","src":"1440:32:29"},"nodeType":"YulIf","src":"1437:52:29"},{"nodeType":"YulAssignment","src":"1498:33:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1521:9:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1508:12:29"},"nodeType":"YulFunctionCall","src":"1508:23:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1498:6:29"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1393:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1404:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1416:6:29","type":""}],"src":"1357:180:29"},{"body":{"nodeType":"YulBlock","src":"1643:102:29","statements":[{"nodeType":"YulAssignment","src":"1653:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1665:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"1676:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1661:3:29"},"nodeType":"YulFunctionCall","src":"1661:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1653:4:29"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1695:9:29"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1710:6:29"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1726:3:29","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"1731:1:29","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1722:3:29"},"nodeType":"YulFunctionCall","src":"1722:11:29"},{"kind":"number","nodeType":"YulLiteral","src":"1735:1:29","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1718:3:29"},"nodeType":"YulFunctionCall","src":"1718:19:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1706:3:29"},"nodeType":"YulFunctionCall","src":"1706:32:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1688:6:29"},"nodeType":"YulFunctionCall","src":"1688:51:29"},"nodeType":"YulExpressionStatement","src":"1688:51:29"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1612:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1623:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1634:4:29","type":""}],"src":"1542:203:29"},{"body":{"nodeType":"YulBlock","src":"1869:102:29","statements":[{"nodeType":"YulAssignment","src":"1879:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1891:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"1902:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1887:3:29"},"nodeType":"YulFunctionCall","src":"1887:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1879:4:29"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1921:9:29"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1936:6:29"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1952:3:29","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"1957:1:29","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1948:3:29"},"nodeType":"YulFunctionCall","src":"1948:11:29"},{"kind":"number","nodeType":"YulLiteral","src":"1961:1:29","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1944:3:29"},"nodeType":"YulFunctionCall","src":"1944:19:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1932:3:29"},"nodeType":"YulFunctionCall","src":"1932:32:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1914:6:29"},"nodeType":"YulFunctionCall","src":"1914:51:29"},"nodeType":"YulExpressionStatement","src":"1914:51:29"}]},"name":"abi_encode_tuple_t_contract$_IDAOVault_$2534__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1838:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1849:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1860:4:29","type":""}],"src":"1750:221:29"},{"body":{"nodeType":"YulBlock","src":"2098:102:29","statements":[{"nodeType":"YulAssignment","src":"2108:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2120:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"2131:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2116:3:29"},"nodeType":"YulFunctionCall","src":"2116:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2108:4:29"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2150:9:29"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2165:6:29"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2181:3:29","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"2186:1:29","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2177:3:29"},"nodeType":"YulFunctionCall","src":"2177:11:29"},{"kind":"number","nodeType":"YulLiteral","src":"2190:1:29","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2173:3:29"},"nodeType":"YulFunctionCall","src":"2173:19:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2161:3:29"},"nodeType":"YulFunctionCall","src":"2161:32:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2143:6:29"},"nodeType":"YulFunctionCall","src":"2143:51:29"},"nodeType":"YulExpressionStatement","src":"2143:51:29"}]},"name":"abi_encode_tuple_t_contract$_ISeigManager_$2752__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2067:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2078:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2089:4:29","type":""}],"src":"1976:224:29"},{"body":{"nodeType":"YulBlock","src":"2300:92:29","statements":[{"nodeType":"YulAssignment","src":"2310:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2322:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"2333:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2318:3:29"},"nodeType":"YulFunctionCall","src":"2318:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2310:4:29"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2352:9:29"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2377:6:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2370:6:29"},"nodeType":"YulFunctionCall","src":"2370:14:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2363:6:29"},"nodeType":"YulFunctionCall","src":"2363:22:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2345:6:29"},"nodeType":"YulFunctionCall","src":"2345:41:29"},"nodeType":"YulExpressionStatement","src":"2345:41:29"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2269:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2280:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2291:4:29","type":""}],"src":"2205:187:29"},{"body":{"nodeType":"YulBlock","src":"2524:102:29","statements":[{"nodeType":"YulAssignment","src":"2534:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2546:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"2557:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2542:3:29"},"nodeType":"YulFunctionCall","src":"2542:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2534:4:29"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2576:9:29"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2591:6:29"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2607:3:29","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"2612:1:29","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2603:3:29"},"nodeType":"YulFunctionCall","src":"2603:11:29"},{"kind":"number","nodeType":"YulLiteral","src":"2616:1:29","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2599:3:29"},"nodeType":"YulFunctionCall","src":"2599:19:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2587:3:29"},"nodeType":"YulFunctionCall","src":"2587:32:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2569:6:29"},"nodeType":"YulFunctionCall","src":"2569:51:29"},"nodeType":"YulExpressionStatement","src":"2569:51:29"}]},"name":"abi_encode_tuple_t_contract$_ICandidateFactory_$1930__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2493:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2504:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2515:4:29","type":""}],"src":"2397:229:29"},{"body":{"nodeType":"YulBlock","src":"2756:102:29","statements":[{"nodeType":"YulAssignment","src":"2766:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2778:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"2789:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2774:3:29"},"nodeType":"YulFunctionCall","src":"2774:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2766:4:29"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2808:9:29"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2823:6:29"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2839:3:29","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"2844:1:29","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2835:3:29"},"nodeType":"YulFunctionCall","src":"2835:11:29"},{"kind":"number","nodeType":"YulLiteral","src":"2848:1:29","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2831:3:29"},"nodeType":"YulFunctionCall","src":"2831:19:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2819:3:29"},"nodeType":"YulFunctionCall","src":"2819:32:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2801:6:29"},"nodeType":"YulFunctionCall","src":"2801:51:29"},"nodeType":"YulExpressionStatement","src":"2801:51:29"}]},"name":"abi_encode_tuple_t_contract$_ILayer2Registry_$2588__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2725:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2736:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2747:4:29","type":""}],"src":"2631:227:29"}]},"contents":"{\n    { }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_contract$_IDAOAgendaManager_$2211__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_struct$_CandidateInfo_$2776_memory_ptr__to_t_struct$_CandidateInfo_$2776_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, and(mload(value0), sub(shl(160, 1), 1)))\n        mstore(add(headStart, 0x20), mload(add(value0, 0x20)))\n        let memberValue0 := mload(add(value0, 0x40))\n        let _1 := sub(shl(128, 1), 1)\n        mstore(add(headStart, 0x40), and(memberValue0, _1))\n        mstore(add(headStart, 0x60), and(mload(add(value0, 0x60)), _1))\n        mstore(add(headStart, 0x80), and(mload(add(value0, 0x80)), _1))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_contract$_IDAOVault_$2534__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_contract$_ISeigManager_$2752__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_contract$_ICandidateFactory_$1930__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_contract$_ILayer2Registry_$2588__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n}","id":29,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100ca5760003560e01c8063651d08cd1161007c578063651d08cd146102495780636fb7f558146102755780637f33163614610288578063a230c52414610291578063b5dd1158146102d8578063cc48b947146102eb578063cf2a239c146102fe57600080fd5b806303e3c9ac146100cf5780631703a018146100eb57806327fd92fd146100f45780632e011c1e1461011f5780633477ee2e146102105780635903bd6c146102235780635daf08ca14610236575b600080fd5b6100d860085481565b6040519081526020015b60405180910390f35b6100d8600a5481565b600254610107906001600160a01b031681565b6040516001600160a01b0390911681526020016100e2565b6101bb61012d36600461034b565b6040805160a0808201835260008083526020808401829052838501829052606080850183905260809485018390526001600160a01b0396871683526009825291859020855193840186528054909616835260018601549083015260028501546001600160801b0380821695840195909552600160801b90048416908201526003909301549091169082015290565b6040805182516001600160a01b0316815260208084015190820152828201516001600160801b03908116928201929092526060808401518316908201526080928301519091169181019190915260a0016100e2565b61010761021e36600461037b565b610311565b600154610107906001600160a01b031681565b61010761024436600461037b565b61033b565b61010761025736600461034b565b6001600160a01b039081166000908152600960205260409020541690565b600554610107906001600160a01b031681565b6100d8600b5481565b6102c861029f36600461034b565b6001600160a01b03166000908152600960205260409020600201546001600160801b0316151590565b60405190151581526020016100e2565b600354610107906001600160a01b031681565b600054610107906001600160a01b031681565b600454610107906001600160a01b031681565b6006818154811061032157600080fd5b6000918252602090912001546001600160a01b0316905081565b6007818154811061032157600080fd5b60006020828403121561035d57600080fd5b81356001600160a01b038116811461037457600080fd5b9392505050565b60006020828403121561038d57600080fd5b503591905056fea26469706673582212204cb9d683ec440874ee2220cbb091ae178b022337c624f473c2ef07504017fdd964736f6c63430008120033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x651D08CD GT PUSH2 0x7C JUMPI DUP1 PUSH4 0x651D08CD EQ PUSH2 0x249 JUMPI DUP1 PUSH4 0x6FB7F558 EQ PUSH2 0x275 JUMPI DUP1 PUSH4 0x7F331636 EQ PUSH2 0x288 JUMPI DUP1 PUSH4 0xA230C524 EQ PUSH2 0x291 JUMPI DUP1 PUSH4 0xB5DD1158 EQ PUSH2 0x2D8 JUMPI DUP1 PUSH4 0xCC48B947 EQ PUSH2 0x2EB JUMPI DUP1 PUSH4 0xCF2A239C EQ PUSH2 0x2FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3E3C9AC EQ PUSH2 0xCF JUMPI DUP1 PUSH4 0x1703A018 EQ PUSH2 0xEB JUMPI DUP1 PUSH4 0x27FD92FD EQ PUSH2 0xF4 JUMPI DUP1 PUSH4 0x2E011C1E EQ PUSH2 0x11F JUMPI DUP1 PUSH4 0x3477EE2E EQ PUSH2 0x210 JUMPI DUP1 PUSH4 0x5903BD6C EQ PUSH2 0x223 JUMPI DUP1 PUSH4 0x5DAF08CA EQ PUSH2 0x236 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD8 PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD8 PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x107 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE2 JUMP JUMPDEST PUSH2 0x1BB PUSH2 0x12D CALLDATASIZE PUSH1 0x4 PUSH2 0x34B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP1 DUP3 ADD DUP4 MSTORE PUSH1 0x0 DUP1 DUP4 MSTORE PUSH1 0x20 DUP1 DUP5 ADD DUP3 SWAP1 MSTORE DUP4 DUP6 ADD DUP3 SWAP1 MSTORE PUSH1 0x60 DUP1 DUP6 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 SWAP5 DUP6 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP7 DUP8 AND DUP4 MSTORE PUSH1 0x9 DUP3 MSTORE SWAP2 DUP6 SWAP1 KECCAK256 DUP6 MLOAD SWAP4 DUP5 ADD DUP7 MSTORE DUP1 SLOAD SWAP1 SWAP7 AND DUP4 MSTORE PUSH1 0x1 DUP7 ADD SLOAD SWAP1 DUP4 ADD MSTORE PUSH1 0x2 DUP6 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP1 DUP3 AND SWAP6 DUP5 ADD SWAP6 SWAP1 SWAP6 MSTORE PUSH1 0x1 PUSH1 0x80 SHL SWAP1 DIV DUP5 AND SWAP1 DUP3 ADD MSTORE PUSH1 0x3 SWAP1 SWAP4 ADD SLOAD SWAP1 SWAP2 AND SWAP1 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP1 DUP5 ADD MLOAD SWAP1 DUP3 ADD MSTORE DUP3 DUP3 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 DUP2 AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP1 DUP5 ADD MLOAD DUP4 AND SWAP1 DUP3 ADD MSTORE PUSH1 0x80 SWAP3 DUP4 ADD MLOAD SWAP1 SWAP2 AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xA0 ADD PUSH2 0xE2 JUMP JUMPDEST PUSH2 0x107 PUSH2 0x21E CALLDATASIZE PUSH1 0x4 PUSH2 0x37B JUMP JUMPDEST PUSH2 0x311 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x107 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x107 PUSH2 0x244 CALLDATASIZE PUSH1 0x4 PUSH2 0x37B JUMP JUMPDEST PUSH2 0x33B JUMP JUMPDEST PUSH2 0x107 PUSH2 0x257 CALLDATASIZE PUSH1 0x4 PUSH2 0x34B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND SWAP1 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x107 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0xD8 PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2C8 PUSH2 0x29F CALLDATASIZE PUSH1 0x4 PUSH2 0x34B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE2 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x107 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x107 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x107 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x6 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x321 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x7 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x321 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x35D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x374 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x38D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4C 0xB9 0xD6 DUP4 0xEC PREVRANDAO ADDMOD PUSH21 0xEE2220CBB091AE178B022337C624F473C2EF075040 OR REVERT 0xD9 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ","sourceMap":"556:2336:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1118:33;;;;;;;;;160:25:29;;;148:2;133:18;1118:33:11;;;;;;;;1268:30;;;;;;829:47;;;;;-1:-1:-1;;;;;829:47:11;;;;;;-1:-1:-1;;;;;386:32:29;;;368:51;;356:2;341:18;829:47:11;196:229:29;2638:144:11;;;;;;:::i;:::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2748:27:11;;;;;:15;:27;;;;;;2741:34;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2741:34:11;;;;;;;;;;-1:-1:-1;;;2741:34:11;;;;;;;;;;;;;;;;;;;;;2638:144;;;;;952:13:29;;-1:-1:-1;;;;;948:39:29;930:58;;1044:4;1032:17;;;1026:24;1004:20;;;997:54;1086:17;;;1080:24;-1:-1:-1;;;;;1180:21:29;;;1158:20;;;1151:51;;;;1262:4;1250:17;;;1244:24;1240:33;;1218:20;;;1211:63;1131:3;1322:17;;;1316:24;1312:33;;;1290:20;;;1283:63;;;;917:3;902:19;2638:144:11;721:631:29;1037:36:11;;;;;;:::i;:::-;;:::i;789:34::-;;;;;-1:-1:-1;;;;;789:34:11;;;1079:33;;;;;;:::i;:::-;;:::i;2477:155::-;;;;;;:::i;:::-;-1:-1:-1;;;;;2580:27:11;;;2554:7;2580:27;;;:15;:27;;;;;:45;;;2477:155;990:40;;;;;-1:-1:-1;;;;;990:40:11;;;1305:47;;;;;;2325:146;;;;;;:::i;:::-;-1:-1:-1;;;;;2416:27:11;2393:4;2416:27;;;:15;:27;;;;;:44;;;-1:-1:-1;;;;;2416:44:11;:48;;;2325:146;;;;2370:14:29;;2363:22;2345:41;;2333:2;2318:18;2325:146:11;2205:187:29;882:50:11;;;;;-1:-1:-1;;;;;882:50:11;;;756:27;;;;;-1:-1:-1;;;;;756:27:11;;;938:46;;;;;-1:-1:-1;;;;;938:46:11;;;1037:36;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1037:36:11;;-1:-1:-1;1037:36:11;:::o;1079:33::-;;;;;;;;;;;;430:286:29;489:6;542:2;530:9;521:7;517:23;513:32;510:52;;;558:1;555;548:12;510:52;584:23;;-1:-1:-1;;;;;636:31:29;;626:42;;616:70;;682:1;679;672:12;616:70;705:5;430:286;-1:-1:-1;;;430:286:29:o;1357:180::-;1416:6;1469:2;1457:9;1448:7;1444:23;1440:32;1437:52;;;1485:1;1482;1475:12;1437:52;-1:-1:-1;1508:23:29;;1357:180;-1:-1:-1;1357:180:29:o"},"gasEstimates":{"creation":{"codeDepositCost":"194000","executionCost":"238","totalCost":"194238"},"external":{"activityRewardPerSecond()":"2328","agendaManager()":"2382","candidateContract(address)":"2532","candidateFactory()":"2425","candidateInfos(address)":"9402","candidates(uint256)":"4703","daoVault()":"2448","isMember(address)":"2604","layer2Registry()":"2469","maxMember()":"2285","members(uint256)":"4747","quorum()":"2307","seigManager()":"2359","ton()":"2447"}},"methodIdentifiers":{"activityRewardPerSecond()":"7f331636","agendaManager()":"27fd92fd","candidateContract(address)":"651d08cd","candidateFactory()":"b5dd1158","candidateInfos(address)":"2e011c1e","candidates(uint256)":"3477ee2e","daoVault()":"5903bd6c","isMember(address)":"a230c524","layer2Registry()":"cf2a239c","maxMember()":"03e3c9ac","members(uint256)":"5daf08ca","quorum()":"1703a018","seigManager()":"6fb7f558","ton()":"cc48b947"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"activityRewardPerSecond\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"agendaManager\",\"outputs\":[{\"internalType\":\"contract IDAOAgendaManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_candidate\",\"type\":\"address\"}],\"name\":\"candidateContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"candidateFactory\",\"outputs\":[{\"internalType\":\"contract ICandidateFactory\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_candidate\",\"type\":\"address\"}],\"name\":\"candidateInfos\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"candidateContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"indexMembers\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"memberJoinedTime\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"rewardPeriod\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"claimedTimestamp\",\"type\":\"uint128\"}],\"internalType\":\"struct IStorageStateCommittee.CandidateInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"candidates\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"daoVault\",\"outputs\":[{\"internalType\":\"contract IDAOVault\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_candidate\",\"type\":\"address\"}],\"name\":\"isMember\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"layer2Registry\",\"outputs\":[{\"internalType\":\"contract ILayer2Registry\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxMember\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"members\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"quorum\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"seigManager\",\"outputs\":[{\"internalType\":\"contract ISeigManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ton\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/dao/StorageStateCommittee.sol\":\"StorageStateCommittee\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"contracts/dao/StorageStateCommittee.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.17;\\npragma abicoder v2;\\n\\nimport { IStorageStateCommittee } from \\\"../interfaces/IStorageStateCommittee.sol\\\";\\nimport { ICandidateFactory } from \\\"../interfaces/ICandidateFactory.sol\\\";\\nimport { ILayer2Registry } from \\\"../interfaces/ILayer2Registry.sol\\\";\\nimport { ISeigManager } from \\\"../interfaces/ISeigManager.sol\\\";\\nimport { IDAOAgendaManager } from \\\"../interfaces/IDAOAgendaManager.sol\\\";\\nimport { IDAOVault } from \\\"../interfaces/IDAOVault.sol\\\";\\nimport { ICandidate } from \\\"../interfaces/ICandidate.sol\\\";\\n\\ncontract StorageStateCommittee is IStorageStateCommittee {\\n    enum AgendaStatus { NONE, NOTICE, VOTING, EXEC, ENDED, PENDING, RISK }\\n    enum AgendaResult { UNDEFINED, ACCEPT, REJECT, DISMISS }\\n\\n    address public override ton;\\n    IDAOVault public override daoVault;\\n    IDAOAgendaManager public override agendaManager;\\n    ICandidateFactory public override candidateFactory;\\n    ILayer2Registry public override layer2Registry;\\n    ISeigManager public override seigManager;\\n\\n    address[] public override candidates;\\n    address[] public override members;\\n    uint256 public override maxMember;\\n\\n    // candidate EOA => candidate information\\n    mapping(address => CandidateInfo) internal _candidateInfos;\\n    uint256 public override quorum;\\n\\n    uint256 public override activityRewardPerSecond;\\n\\n    modifier validAgendaManager() {\\n        require(address(agendaManager) != address(0), \\\"StorageStateCommittee: AgendaManager is zero\\\");\\n        _;\\n    }\\n    \\n    modifier validCommitteeL2Factory() {\\n        require(address(candidateFactory) != address(0), \\\"StorageStateCommittee: invalid CommitteeL2Factory\\\");\\n        _;\\n    }\\n\\n    modifier validLayer2Registry() {\\n        require(address(layer2Registry) != address(0), \\\"StorageStateCommittee: invalid Layer2Registry\\\");\\n        _;\\n    }\\n\\n    modifier validSeigManager() {\\n        require(address(seigManager) != address(0), \\\"StorageStateCommittee: invalid SeigManagere\\\");\\n        _;\\n    }\\n\\n    modifier onlyMember() {\\n        require(isMember(msg.sender), \\\"StorageStateCommittee: not a member\\\");\\n        _;\\n    }\\n\\n    modifier onlyMemberContract() {\\n        address candidate = ICandidate(msg.sender).candidate();\\n        require(isMember(candidate), \\\"StorageStateCommittee: not a member\\\");\\n        _;\\n    }\\n    \\n    function isMember(address _candidate) public view override returns (bool) {\\n        return _candidateInfos[_candidate].memberJoinedTime > 0;\\n    }\\n\\n    function candidateContract(address _candidate) public view override returns (address) {\\n        return _candidateInfos[_candidate].candidateContract;\\n    }\\n\\n    function candidateInfos(address _candidate) external override returns (CandidateInfo memory) {\\n        return _candidateInfos[_candidate];\\n    }\\n\\n    /*function getCandidate() public view returns (address) {\\n        ILayer2(_candidateContract).\\n    }*/\\n}\\n\",\"keccak256\":\"0x01e5edcae801f932991d2222a704f82cf9afea49892a0f2987ac14e5cc57ff77\",\"license\":\"MIT\"},\"contracts/interfaces/ICandidate.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.17;\\n\\nimport { IDAOCommittee } from \\\"../interfaces/IDAOCommittee.sol\\\";\\nimport { ISeigManager } from \\\"../interfaces/ISeigManager.sol\\\";\\n\\ninterface ICandidate {\\n    function setSeigManager(address _seigMan) external;\\n    function setCommittee(address _committee) external;\\n    function updateSeigniorage() external returns (bool);\\n    function changeMember(uint256 _memberIndex) external returns (bool);\\n    function retireMember() external returns (bool);\\n    function castVote(uint256 _agendaID, uint256 _vote, string calldata _comment) external;\\n    function isCandidateContract() external view returns (bool);\\n    function totalStaked() external view returns (uint256 totalsupply);\\n    function stakedOf(address _account) external view returns (uint256 amount);\\n    function setMemo(string calldata _memo) external;\\n    function claimActivityReward() external;\\n\\n    // getter\\n    function candidate() external view returns (address);\\n    function isLayer2Candidate() external view returns (bool);\\n    function memo() external view returns (string memory);\\n    function committee() external view returns (IDAOCommittee);\\n    function seigManager() external view returns (ISeigManager);\\n}\\n\",\"keccak256\":\"0x3449e0328ee19655438006715afb08b81edd12f6db96b2e3d25d0cb308bd3875\",\"license\":\"MIT\"},\"contracts/interfaces/ICandidateFactory.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.17;\\n\\ninterface ICandidateFactory {\\n    function deploy(\\n        address _candidate,\\n        bool _isLayer2Candidate,\\n        string memory _name,\\n        address _committee,\\n        address _seigManager\\n    )\\n        external\\n        returns (address);\\n}\\n\",\"keccak256\":\"0xd335ad2ecb2294d4495a79c8e771d4b4bfd60174c32a20c06dfab80fbc241f0e\",\"license\":\"MIT\"},\"contracts/interfaces/IDAOAgendaManager.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.17;\\n\\nimport { LibAgenda } from \\\"../lib/Agenda.sol\\\";\\n// import { IDAOCommittee } from \\\"../interfaces/IDAOCommittee.sol\\\";\\n\\ninterface IDAOAgendaManager  {\\n    struct Ratio {\\n        uint256 numerator;\\n        uint256 denominator;\\n    }\\n\\n    function setCommittee(address _committee) external;\\n    function setCreateAgendaFees(uint256 _createAgendaFees) external;\\n    function setMinimumNoticePeriodSeconds(uint256 _minimumNoticePeriodSeconds) external;\\n    function setMinimumVotingPeriodSeconds(uint256 _minimumVotingPeriodSeconds) external;\\n    function setExecutingPeriodSeconds(uint256 _executingPeriodSeconds) external;\\n    function newAgenda(\\n        address[] memory _targets,\\n        uint256 _noticePeriodSeconds,\\n        uint256 _votingPeriodSeconds,\\n        bool _atomicExecute,\\n        bytes[] calldata _functionBytecodes\\n    )\\n        external\\n        returns (uint256 agendaID);\\n    function castVote(uint256 _agendaID, address voter, uint256 _vote) external returns (bool);\\n    function setExecutedAgenda(uint256 _agendaID) external;\\n    function setResult(uint256 _agendaID, LibAgenda.AgendaResult _result) external;\\n    function setStatus(uint256 _agendaID, LibAgenda.AgendaStatus _status) external;\\n    function endAgendaVoting(uint256 _agendaID) external;\\n    function setExecutedCount(uint256 _agendaID, uint256 _count) external;\\n     \\n    // -- view functions\\n    function isVoter(uint256 _agendaID, address _user) external view returns (bool);\\n    function hasVoted(uint256 _agendaID, address _user) external view returns (bool);\\n    function getVoteStatus(uint256 _agendaID, address _user) external view returns (bool, uint256);\\n    function getAgendaNoticeEndTimeSeconds(uint256 _agendaID) external view returns (uint256);\\n    function getAgendaVotingStartTimeSeconds(uint256 _agendaID) external view returns (uint256);\\n    function getAgendaVotingEndTimeSeconds(uint256 _agendaID) external view returns (uint256) ;\\n\\n    function canExecuteAgenda(uint256 _agendaID) external view returns (bool);\\n    function getAgendaStatus(uint256 _agendaID) external view returns (uint256 status);\\n    function totalAgendas() external view returns (uint256);\\n    function getAgendaResult(uint256 _agendaID) external view returns (uint256 result, bool executed);\\n    function getExecutionInfo(uint256 _agendaID)\\n        external\\n        view\\n        returns(\\n            address[] memory target,\\n            bytes[] memory functionBytecode,\\n            bool atomicExecute,\\n            uint256 executeStartFrom\\n        );\\n    function isVotableStatus(uint256 _agendaID) external view returns (bool);\\n    function getVotingCount(uint256 _agendaID)\\n        external\\n        view\\n        returns (\\n            uint256 countingYes,\\n            uint256 countingNo,\\n            uint256 countingAbstain\\n        );\\n    function getAgendaTimestamps(uint256 _agendaID)\\n        external\\n        view\\n        returns (\\n            uint256 createdTimestamp,\\n            uint256 noticeEndTimestamp,\\n            uint256 votingStartedTimestamp,\\n            uint256 votingEndTimestamp,\\n            uint256 executedTimestamp\\n        );\\n    function numAgendas() external view returns (uint256);\\n    function getVoters(uint256 _agendaID) external view returns (address[] memory);\\n\\n    function getStatus(uint256 _createAgendaFees) external pure returns (LibAgenda.AgendaStatus);\\n\\n    // getter\\n    // function committee() external view returns (IDAOCommittee);\\n    function createAgendaFees() external view returns (uint256);\\n    function minimumNoticePeriodSeconds() external view returns (uint256);\\n    function minimumVotingPeriodSeconds() external view returns (uint256);\\n    function executingPeriodSeconds() external view returns (uint256);\\n    function agendas(uint256 _index) external view returns (LibAgenda.Agenda memory);\\n    function voterInfos(uint256 _index1, address _index2) external view returns (LibAgenda.Voter memory);\\n}\\n\",\"keccak256\":\"0x6bacc8cf4e3511def801a867bd3a932f001f615ac28482b77f109e4d8571b287\",\"license\":\"MIT\"},\"contracts/interfaces/IDAOCommittee.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.17;\\npragma abicoder v2;\\n\\nimport { IStorageStateCommittee } from \\\"../interfaces/IStorageStateCommittee.sol\\\";\\n\\ninterface IDAOCommittee is IStorageStateCommittee {\\n    //--owner\\n    function setSeigManager(address _seigManager) external;\\n    function setCandidatesSeigManager(address[] calldata _candidateContracts, address _seigManager) external;\\n    function setCandidatesCommittee(address[] calldata _candidateContracts, address _committee) external;\\n    function setLayer2Registry(address _layer2Registry) external;\\n    function setAgendaManager(address _agendaManager) external;\\n    function setCandidateFactory(address _candidateFactory) external;\\n    function setTon(address _ton) external;\\n    function setActivityRewardPerSecond(uint256 _value) external;\\n    function setDaoVault(address _daoVault) external;\\n\\n    function increaseMaxMember(uint256 _newMaxMember, uint256 _quorum) external;\\n    function decreaseMaxMember(uint256 _reducingMemberIndex, uint256 _quorum) external;\\n    function createCandidate(string calldata _memo) external;\\n    function registerLayer2Candidate(address _layer2, string memory _memo) external;\\n    function registerLayer2CandidateByOwner(address _operator, address _layer2, string memory _memo) external;\\n    function changeMember(uint256 _memberIndex) external returns (bool);\\n    function retireMember() external returns (bool);\\n    function setMemoOnCandidate(address _candidate, string calldata _memo) external;\\n    function setMemoOnCandidateContract(address _candidate, string calldata _memo) external;\\n\\n    function onApprove(\\n        address owner,\\n        address spender,\\n        uint256 tonAmount,\\n        bytes calldata data\\n    )\\n        external\\n        returns (bool);\\n\\n    function setQuorum(uint256 _quorum) external;\\n    function setCreateAgendaFees(uint256 _fees) external;\\n    function setMinimumNoticePeriodSeconds(uint256 _minimumNoticePeriod) external;\\n    function setMinimumVotingPeriodSeconds(uint256 _minimumVotingPeriod) external;\\n    function setExecutingPeriodSeconds(uint256 _executingPeriodSeconds) external;\\n    function castVote(uint256 _AgendaID, uint256 _vote, string calldata _comment) external;\\n    function endAgendaVoting(uint256 _agendaID) external;\\n    function executeAgenda(uint256 _AgendaID) external;\\n    function setAgendaStatus(uint256 _agendaID, uint256 _status, uint256 _result) external;\\n\\n    function updateSeigniorage(address _candidate) external returns (bool);\\n    function updateSeigniorages(address[] calldata _candidates) external returns (bool);\\n    function claimActivityReward(address _receiver) external;\\n\\n    function isCandidate(address _candidate) external view returns (bool);\\n    function totalSupplyOnCandidate(address _candidate) external view returns (uint256);\\n    function balanceOfOnCandidate(address _candidate, address _account) external view returns (uint256);\\n    function totalSupplyOnCandidateContract(address _candidateContract) external view returns (uint256);\\n    function balanceOfOnCandidateContract(address _candidateContract, address _account) external view returns (uint256);\\n    function candidatesLength() external view returns (uint256);\\n    function isExistCandidate(address _candidate) external view returns (bool);\\n    function getClaimableActivityReward(address _candidate) external view returns (uint256);\\n}\\n\\n\",\"keccak256\":\"0x4389582fde637eed1831de216748a8163bfdffefcbf1d3c1a2d118f42f0a2fa3\",\"license\":\"MIT\"},\"contracts/interfaces/IDAOVault.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.17;\\n\\ninterface IDAOVault {\\n    function setTON(address _ton) external;\\n    function setWTON(address _wton) external;\\n    function approveTON(address _to, uint256 _amount) external;\\n    function approveWTON(address _to, uint256 _amount) external;\\n    function approveERC20(address _token, address _to, uint256 _amount) external;\\n    function claimTON(address _to, uint256 _amount) external;\\n    function claimWTON(address _to, uint256 _amount) external;\\n    function claimERC20(address _token, address _to, uint256 _amount) external;\\n}\\n\",\"keccak256\":\"0xcd8cea85e6f7672761cdeeb0fc2c7781a6f94919a08a6221c2ab1a4a5bde33cc\",\"license\":\"MIT\"},\"contracts/interfaces/ILayer2Registry.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.17;\\n\\ninterface ILayer2Registry {\\n    function layer2s(address layer2) external view returns (bool);\\n\\n    function register(address layer2) external returns (bool);\\n    function numLayer2s() external view returns (uint256);\\n    function layer2ByIndex(uint256 index) external view returns (address);\\n\\n    function deployCoinage(address layer2, address seigManager) external returns (bool);\\n    function registerAndDeployCoinage(address layer2, address seigManager) external returns (bool);\\n    function unregister(address layer2) external returns (bool);\\n}\\n\",\"keccak256\":\"0x7f69cf374891d446d3cdc65fb61a6d20ef7744cafad2acfb103912e9855393dd\",\"license\":\"MIT\"},\"contracts/interfaces/ISeigManager.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.17;\\n\\ninterface ISeigManager {\\n    function registry() external view returns (address);\\n    function depositManager() external view returns (address);\\n    function ton() external view returns (address);\\n    function wton() external view returns (address);\\n    function powerton() external view returns (address);\\n    function tot() external view returns (address);\\n    function coinages(address layer2) external view returns (address);\\n    function commissionRates(address layer2) external view returns (uint256);\\n\\n    function lastCommitBlock(address layer2) external view returns (uint256);\\n    function seigPerBlock() external view returns (uint256);\\n    function lastSeigBlock() external view returns (uint256);\\n    function pausedBlock() external view returns (uint256);\\n    function unpausedBlock() external view returns (uint256);\\n    function DEFAULT_FACTOR() external view returns (uint256);\\n\\n    function deployCoinage(address layer2) external returns (bool);\\n    function setCommissionRate(address layer2, uint256 commission, bool isCommissionRateNegative) external returns (bool);\\n\\n    function uncomittedStakeOf(address layer2, address account) external view returns (uint256);\\n    function stakeOf(address layer2, address account) external view returns (uint256);\\n    function additionalTotBurnAmount(address layer2, address account, uint256 amount) external view returns (uint256 totAmount);\\n\\n    function onTransfer(address sender, address recipient, uint256 amount) external returns (bool);\\n    function updateSeigniorage() external returns (bool);\\n    function onDeposit(address layer2, address account, uint256 amount) external returns (bool);\\n    function onWithdraw(address layer2, address account, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x72e8f6061d0585ba47b52244d7a368bb0c60a20462ac37fb14dea24218d4b10e\",\"license\":\"MIT\"},\"contracts/interfaces/IStorageStateCommittee.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.17;\\npragma abicoder v2;\\n\\nimport { ICandidateFactory } from \\\"../interfaces/ICandidateFactory.sol\\\";\\nimport { ILayer2Registry } from \\\"../interfaces/ILayer2Registry.sol\\\";\\nimport { ISeigManager } from \\\"../interfaces/ISeigManager.sol\\\";\\nimport { IDAOAgendaManager } from \\\"../interfaces/IDAOAgendaManager.sol\\\";\\nimport { IDAOVault } from \\\"../interfaces/IDAOVault.sol\\\";\\n\\ninterface IStorageStateCommittee {\\n    struct CandidateInfo {\\n        address candidateContract;\\n        uint256 indexMembers;\\n        uint128 memberJoinedTime;\\n        uint128 rewardPeriod;\\n        uint128 claimedTimestamp;\\n    }\\n\\n    function ton() external returns (address);\\n    function daoVault() external returns (IDAOVault);\\n    function agendaManager() external returns (IDAOAgendaManager);\\n    function candidateFactory() external returns (ICandidateFactory);\\n    function layer2Registry() external returns (ILayer2Registry);\\n    function seigManager() external returns (ISeigManager);\\n    function candidates(uint256 _index) external returns (address);\\n    function members(uint256 _index) external returns (address);\\n    function maxMember() external returns (uint256);\\n    function candidateInfos(address _candidate) external returns (CandidateInfo memory);\\n    function quorum() external returns (uint256);\\n    function activityRewardPerSecond() external returns (uint256);\\n\\n    function isMember(address _candidate) external returns (bool);\\n    function candidateContract(address _candidate) external returns (address);\\n}\\n\\n\",\"keccak256\":\"0x23a301acc48ede3c82b00b97714c2f123b47de278e75dd55374596b77312eedf\",\"license\":\"MIT\"},\"contracts/lib/Agenda.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.17;\\n\\nlibrary LibAgenda {\\n    //using LibAgenda for Agenda;\\n\\n    enum AgendaStatus { NONE, NOTICE, VOTING, WAITING_EXEC, EXECUTED, ENDED }\\n    enum AgendaResult { PENDING, ACCEPT, REJECT, DISMISS }\\n\\n    //votor : based operator \\n    struct Voter {\\n        bool isVoter;\\n        bool hasVoted;\\n        uint256 vote;\\n    }\\n\\n    // counting abstainVotes yesVotes noVotes\\n    struct Agenda {\\n        uint256 createdTimestamp;\\n        uint256 noticeEndTimestamp;\\n        uint256 votingPeriodInSeconds;\\n        uint256 votingStartedTimestamp;\\n        uint256 votingEndTimestamp;\\n        uint256 executableLimitTimestamp;\\n        uint256 executedTimestamp;\\n        uint256 countingYes;\\n        uint256 countingNo;\\n        uint256 countingAbstain;\\n        AgendaStatus status;\\n        AgendaResult result;\\n        address[] voters;\\n        bool executed;\\n    }\\n\\n    struct AgendaExecutionInfo {\\n        address[] targets;\\n        bytes[] functionBytecodes;\\n        bool atomicExecute;\\n        uint256 executeStartFrom;\\n    }\\n\\n    /*function getAgenda(Agenda[] storage agendas, uint256 index) public view returns (Agenda storage agenda) {\\n        return agendas[index];\\n    }*/\\n}\",\"keccak256\":\"0xec5e22ccc75c38403b0ab74466033a19de5f2745bd5e18f2d64b42af22a116a1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":1630,"contract":"contracts/dao/StorageStateCommittee.sol:StorageStateCommittee","label":"ton","offset":0,"slot":"0","type":"t_address"},{"astId":1634,"contract":"contracts/dao/StorageStateCommittee.sol:StorageStateCommittee","label":"daoVault","offset":0,"slot":"1","type":"t_contract(IDAOVault)2534"},{"astId":1638,"contract":"contracts/dao/StorageStateCommittee.sol:StorageStateCommittee","label":"agendaManager","offset":0,"slot":"2","type":"t_contract(IDAOAgendaManager)2211"},{"astId":1642,"contract":"contracts/dao/StorageStateCommittee.sol:StorageStateCommittee","label":"candidateFactory","offset":0,"slot":"3","type":"t_contract(ICandidateFactory)1930"},{"astId":1646,"contract":"contracts/dao/StorageStateCommittee.sol:StorageStateCommittee","label":"layer2Registry","offset":0,"slot":"4","type":"t_contract(ILayer2Registry)2588"},{"astId":1650,"contract":"contracts/dao/StorageStateCommittee.sol:StorageStateCommittee","label":"seigManager","offset":0,"slot":"5","type":"t_contract(ISeigManager)2752"},{"astId":1654,"contract":"contracts/dao/StorageStateCommittee.sol:StorageStateCommittee","label":"candidates","offset":0,"slot":"6","type":"t_array(t_address)dyn_storage"},{"astId":1658,"contract":"contracts/dao/StorageStateCommittee.sol:StorageStateCommittee","label":"members","offset":0,"slot":"7","type":"t_array(t_address)dyn_storage"},{"astId":1661,"contract":"contracts/dao/StorageStateCommittee.sol:StorageStateCommittee","label":"maxMember","offset":0,"slot":"8","type":"t_uint256"},{"astId":1666,"contract":"contracts/dao/StorageStateCommittee.sol:StorageStateCommittee","label":"_candidateInfos","offset":0,"slot":"9","type":"t_mapping(t_address,t_struct(CandidateInfo)2776_storage)"},{"astId":1669,"contract":"contracts/dao/StorageStateCommittee.sol:StorageStateCommittee","label":"quorum","offset":0,"slot":"10","type":"t_uint256"},{"astId":1672,"contract":"contracts/dao/StorageStateCommittee.sol:StorageStateCommittee","label":"activityRewardPerSecond","offset":0,"slot":"11","type":"t_uint256"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_address)dyn_storage":{"base":"t_address","encoding":"dynamic_array","label":"address[]","numberOfBytes":"32"},"t_contract(ICandidateFactory)1930":{"encoding":"inplace","label":"contract ICandidateFactory","numberOfBytes":"20"},"t_contract(IDAOAgendaManager)2211":{"encoding":"inplace","label":"contract IDAOAgendaManager","numberOfBytes":"20"},"t_contract(IDAOVault)2534":{"encoding":"inplace","label":"contract IDAOVault","numberOfBytes":"20"},"t_contract(ILayer2Registry)2588":{"encoding":"inplace","label":"contract ILayer2Registry","numberOfBytes":"20"},"t_contract(ISeigManager)2752":{"encoding":"inplace","label":"contract ISeigManager","numberOfBytes":"20"},"t_mapping(t_address,t_struct(CandidateInfo)2776_storage)":{"encoding":"mapping","key":"t_address","label":"mapping(address => struct IStorageStateCommittee.CandidateInfo)","numberOfBytes":"32","value":"t_struct(CandidateInfo)2776_storage"},"t_struct(CandidateInfo)2776_storage":{"encoding":"inplace","label":"struct IStorageStateCommittee.CandidateInfo","members":[{"astId":2767,"contract":"contracts/dao/StorageStateCommittee.sol:StorageStateCommittee","label":"candidateContract","offset":0,"slot":"0","type":"t_address"},{"astId":2769,"contract":"contracts/dao/StorageStateCommittee.sol:StorageStateCommittee","label":"indexMembers","offset":0,"slot":"1","type":"t_uint256"},{"astId":2771,"contract":"contracts/dao/StorageStateCommittee.sol:StorageStateCommittee","label":"memberJoinedTime","offset":0,"slot":"2","type":"t_uint128"},{"astId":2773,"contract":"contracts/dao/StorageStateCommittee.sol:StorageStateCommittee","label":"rewardPeriod","offset":16,"slot":"2","type":"t_uint128"},{"astId":2775,"contract":"contracts/dao/StorageStateCommittee.sol:StorageStateCommittee","label":"claimedTimestamp","offset":0,"slot":"3","type":"t_uint128"}],"numberOfBytes":"128"},"t_uint128":{"encoding":"inplace","label":"uint128","numberOfBytes":"16"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/interfaces/ICandidate.sol":{"ICandidate":{"abi":[{"inputs":[],"name":"candidate","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_agendaID","type":"uint256"},{"internalType":"uint256","name":"_vote","type":"uint256"},{"internalType":"string","name":"_comment","type":"string"}],"name":"castVote","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_memberIndex","type":"uint256"}],"name":"changeMember","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"claimActivityReward","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"committee","outputs":[{"internalType":"contract IDAOCommittee","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"isCandidateContract","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"isLayer2Candidate","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"memo","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"retireMember","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"seigManager","outputs":[{"internalType":"contract ISeigManager","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_committee","type":"address"}],"name":"setCommittee","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"_memo","type":"string"}],"name":"setMemo","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_seigMan","type":"address"}],"name":"setSeigManager","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_account","type":"address"}],"name":"stakedOf","outputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalStaked","outputs":[{"internalType":"uint256","name":"totalsupply","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"updateSeigniorage","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"candidate()":"6c8381f8","castVote(uint256,uint256,string)":"24f99b1e","changeMember(uint256)":"11f19e04","claimActivityReward()":"8bf7a3ab","committee()":"d864e740","isCandidateContract()":"77ff21c4","isLayer2Candidate()":"9b638268","memo()":"58c3b870","retireMember()":"c4ef9c00","seigManager()":"6fb7f558","setCommittee(address)":"bddae40e","setMemo(string)":"25d60861","setSeigManager(address)":"7657f20a","stakedOf(address)":"af500ba3","totalStaked()":"817b1cd2","updateSeigniorage()":"764a7856"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"candidate\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_agendaID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_vote\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_comment\",\"type\":\"string\"}],\"name\":\"castVote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_memberIndex\",\"type\":\"uint256\"}],\"name\":\"changeMember\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimActivityReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"committee\",\"outputs\":[{\"internalType\":\"contract IDAOCommittee\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isCandidateContract\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isLayer2Candidate\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"memo\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"retireMember\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"seigManager\",\"outputs\":[{\"internalType\":\"contract ISeigManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_committee\",\"type\":\"address\"}],\"name\":\"setCommittee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_memo\",\"type\":\"string\"}],\"name\":\"setMemo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_seigMan\",\"type\":\"address\"}],\"name\":\"setSeigManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"stakedOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalStaked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalsupply\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"updateSeigniorage\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/ICandidate.sol\":\"ICandidate\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"contracts/interfaces/ICandidate.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.17;\\n\\nimport { IDAOCommittee } from \\\"../interfaces/IDAOCommittee.sol\\\";\\nimport { ISeigManager } from \\\"../interfaces/ISeigManager.sol\\\";\\n\\ninterface ICandidate {\\n    function setSeigManager(address _seigMan) external;\\n    function setCommittee(address _committee) external;\\n    function updateSeigniorage() external returns (bool);\\n    function changeMember(uint256 _memberIndex) external returns (bool);\\n    function retireMember() external returns (bool);\\n    function castVote(uint256 _agendaID, uint256 _vote, string calldata _comment) external;\\n    function isCandidateContract() external view returns (bool);\\n    function totalStaked() external view returns (uint256 totalsupply);\\n    function stakedOf(address _account) external view returns (uint256 amount);\\n    function setMemo(string calldata _memo) external;\\n    function claimActivityReward() external;\\n\\n    // getter\\n    function candidate() external view returns (address);\\n    function isLayer2Candidate() external view returns (bool);\\n    function memo() external view returns (string memory);\\n    function committee() external view returns (IDAOCommittee);\\n    function seigManager() external view returns (ISeigManager);\\n}\\n\",\"keccak256\":\"0x3449e0328ee19655438006715afb08b81edd12f6db96b2e3d25d0cb308bd3875\",\"license\":\"MIT\"},\"contracts/interfaces/ICandidateFactory.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.17;\\n\\ninterface ICandidateFactory {\\n    function deploy(\\n        address _candidate,\\n        bool _isLayer2Candidate,\\n        string memory _name,\\n        address _committee,\\n        address _seigManager\\n    )\\n        external\\n        returns (address);\\n}\\n\",\"keccak256\":\"0xd335ad2ecb2294d4495a79c8e771d4b4bfd60174c32a20c06dfab80fbc241f0e\",\"license\":\"MIT\"},\"contracts/interfaces/IDAOAgendaManager.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.17;\\n\\nimport { LibAgenda } from \\\"../lib/Agenda.sol\\\";\\n// import { IDAOCommittee } from \\\"../interfaces/IDAOCommittee.sol\\\";\\n\\ninterface IDAOAgendaManager  {\\n    struct Ratio {\\n        uint256 numerator;\\n        uint256 denominator;\\n    }\\n\\n    function setCommittee(address _committee) external;\\n    function setCreateAgendaFees(uint256 _createAgendaFees) external;\\n    function setMinimumNoticePeriodSeconds(uint256 _minimumNoticePeriodSeconds) external;\\n    function setMinimumVotingPeriodSeconds(uint256 _minimumVotingPeriodSeconds) external;\\n    function setExecutingPeriodSeconds(uint256 _executingPeriodSeconds) external;\\n    function newAgenda(\\n        address[] memory _targets,\\n        uint256 _noticePeriodSeconds,\\n        uint256 _votingPeriodSeconds,\\n        bool _atomicExecute,\\n        bytes[] calldata _functionBytecodes\\n    )\\n        external\\n        returns (uint256 agendaID);\\n    function castVote(uint256 _agendaID, address voter, uint256 _vote) external returns (bool);\\n    function setExecutedAgenda(uint256 _agendaID) external;\\n    function setResult(uint256 _agendaID, LibAgenda.AgendaResult _result) external;\\n    function setStatus(uint256 _agendaID, LibAgenda.AgendaStatus _status) external;\\n    function endAgendaVoting(uint256 _agendaID) external;\\n    function setExecutedCount(uint256 _agendaID, uint256 _count) external;\\n     \\n    // -- view functions\\n    function isVoter(uint256 _agendaID, address _user) external view returns (bool);\\n    function hasVoted(uint256 _agendaID, address _user) external view returns (bool);\\n    function getVoteStatus(uint256 _agendaID, address _user) external view returns (bool, uint256);\\n    function getAgendaNoticeEndTimeSeconds(uint256 _agendaID) external view returns (uint256);\\n    function getAgendaVotingStartTimeSeconds(uint256 _agendaID) external view returns (uint256);\\n    function getAgendaVotingEndTimeSeconds(uint256 _agendaID) external view returns (uint256) ;\\n\\n    function canExecuteAgenda(uint256 _agendaID) external view returns (bool);\\n    function getAgendaStatus(uint256 _agendaID) external view returns (uint256 status);\\n    function totalAgendas() external view returns (uint256);\\n    function getAgendaResult(uint256 _agendaID) external view returns (uint256 result, bool executed);\\n    function getExecutionInfo(uint256 _agendaID)\\n        external\\n        view\\n        returns(\\n            address[] memory target,\\n            bytes[] memory functionBytecode,\\n            bool atomicExecute,\\n            uint256 executeStartFrom\\n        );\\n    function isVotableStatus(uint256 _agendaID) external view returns (bool);\\n    function getVotingCount(uint256 _agendaID)\\n        external\\n        view\\n        returns (\\n            uint256 countingYes,\\n            uint256 countingNo,\\n            uint256 countingAbstain\\n        );\\n    function getAgendaTimestamps(uint256 _agendaID)\\n        external\\n        view\\n        returns (\\n            uint256 createdTimestamp,\\n            uint256 noticeEndTimestamp,\\n            uint256 votingStartedTimestamp,\\n            uint256 votingEndTimestamp,\\n            uint256 executedTimestamp\\n        );\\n    function numAgendas() external view returns (uint256);\\n    function getVoters(uint256 _agendaID) external view returns (address[] memory);\\n\\n    function getStatus(uint256 _createAgendaFees) external pure returns (LibAgenda.AgendaStatus);\\n\\n    // getter\\n    // function committee() external view returns (IDAOCommittee);\\n    function createAgendaFees() external view returns (uint256);\\n    function minimumNoticePeriodSeconds() external view returns (uint256);\\n    function minimumVotingPeriodSeconds() external view returns (uint256);\\n    function executingPeriodSeconds() external view returns (uint256);\\n    function agendas(uint256 _index) external view returns (LibAgenda.Agenda memory);\\n    function voterInfos(uint256 _index1, address _index2) external view returns (LibAgenda.Voter memory);\\n}\\n\",\"keccak256\":\"0x6bacc8cf4e3511def801a867bd3a932f001f615ac28482b77f109e4d8571b287\",\"license\":\"MIT\"},\"contracts/interfaces/IDAOCommittee.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.17;\\npragma abicoder v2;\\n\\nimport { IStorageStateCommittee } from \\\"../interfaces/IStorageStateCommittee.sol\\\";\\n\\ninterface IDAOCommittee is IStorageStateCommittee {\\n    //--owner\\n    function setSeigManager(address _seigManager) external;\\n    function setCandidatesSeigManager(address[] calldata _candidateContracts, address _seigManager) external;\\n    function setCandidatesCommittee(address[] calldata _candidateContracts, address _committee) external;\\n    function setLayer2Registry(address _layer2Registry) external;\\n    function setAgendaManager(address _agendaManager) external;\\n    function setCandidateFactory(address _candidateFactory) external;\\n    function setTon(address _ton) external;\\n    function setActivityRewardPerSecond(uint256 _value) external;\\n    function setDaoVault(address _daoVault) external;\\n\\n    function increaseMaxMember(uint256 _newMaxMember, uint256 _quorum) external;\\n    function decreaseMaxMember(uint256 _reducingMemberIndex, uint256 _quorum) external;\\n    function createCandidate(string calldata _memo) external;\\n    function registerLayer2Candidate(address _layer2, string memory _memo) external;\\n    function registerLayer2CandidateByOwner(address _operator, address _layer2, string memory _memo) external;\\n    function changeMember(uint256 _memberIndex) external returns (bool);\\n    function retireMember() external returns (bool);\\n    function setMemoOnCandidate(address _candidate, string calldata _memo) external;\\n    function setMemoOnCandidateContract(address _candidate, string calldata _memo) external;\\n\\n    function onApprove(\\n        address owner,\\n        address spender,\\n        uint256 tonAmount,\\n        bytes calldata data\\n    )\\n        external\\n        returns (bool);\\n\\n    function setQuorum(uint256 _quorum) external;\\n    function setCreateAgendaFees(uint256 _fees) external;\\n    function setMinimumNoticePeriodSeconds(uint256 _minimumNoticePeriod) external;\\n    function setMinimumVotingPeriodSeconds(uint256 _minimumVotingPeriod) external;\\n    function setExecutingPeriodSeconds(uint256 _executingPeriodSeconds) external;\\n    function castVote(uint256 _AgendaID, uint256 _vote, string calldata _comment) external;\\n    function endAgendaVoting(uint256 _agendaID) external;\\n    function executeAgenda(uint256 _AgendaID) external;\\n    function setAgendaStatus(uint256 _agendaID, uint256 _status, uint256 _result) external;\\n\\n    function updateSeigniorage(address _candidate) external returns (bool);\\n    function updateSeigniorages(address[] calldata _candidates) external returns (bool);\\n    function claimActivityReward(address _receiver) external;\\n\\n    function isCandidate(address _candidate) external view returns (bool);\\n    function totalSupplyOnCandidate(address _candidate) external view returns (uint256);\\n    function balanceOfOnCandidate(address _candidate, address _account) external view returns (uint256);\\n    function totalSupplyOnCandidateContract(address _candidateContract) external view returns (uint256);\\n    function balanceOfOnCandidateContract(address _candidateContract, address _account) external view returns (uint256);\\n    function candidatesLength() external view returns (uint256);\\n    function isExistCandidate(address _candidate) external view returns (bool);\\n    function getClaimableActivityReward(address _candidate) external view returns (uint256);\\n}\\n\\n\",\"keccak256\":\"0x4389582fde637eed1831de216748a8163bfdffefcbf1d3c1a2d118f42f0a2fa3\",\"license\":\"MIT\"},\"contracts/interfaces/IDAOVault.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.17;\\n\\ninterface IDAOVault {\\n    function setTON(address _ton) external;\\n    function setWTON(address _wton) external;\\n    function approveTON(address _to, uint256 _amount) external;\\n    function approveWTON(address _to, uint256 _amount) external;\\n    function approveERC20(address _token, address _to, uint256 _amount) external;\\n    function claimTON(address _to, uint256 _amount) external;\\n    function claimWTON(address _to, uint256 _amount) external;\\n    function claimERC20(address _token, address _to, uint256 _amount) external;\\n}\\n\",\"keccak256\":\"0xcd8cea85e6f7672761cdeeb0fc2c7781a6f94919a08a6221c2ab1a4a5bde33cc\",\"license\":\"MIT\"},\"contracts/interfaces/ILayer2Registry.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.17;\\n\\ninterface ILayer2Registry {\\n    function layer2s(address layer2) external view returns (bool);\\n\\n    function register(address layer2) external returns (bool);\\n    function numLayer2s() external view returns (uint256);\\n    function layer2ByIndex(uint256 index) external view returns (address);\\n\\n    function deployCoinage(address layer2, address seigManager) external returns (bool);\\n    function registerAndDeployCoinage(address layer2, address seigManager) external returns (bool);\\n    function unregister(address layer2) external returns (bool);\\n}\\n\",\"keccak256\":\"0x7f69cf374891d446d3cdc65fb61a6d20ef7744cafad2acfb103912e9855393dd\",\"license\":\"MIT\"},\"contracts/interfaces/ISeigManager.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.17;\\n\\ninterface ISeigManager {\\n    function registry() external view returns (address);\\n    function depositManager() external view returns (address);\\n    function ton() external view returns (address);\\n    function wton() external view returns (address);\\n    function powerton() external view returns (address);\\n    function tot() external view returns (address);\\n    function coinages(address layer2) external view returns (address);\\n    function commissionRates(address layer2) external view returns (uint256);\\n\\n    function lastCommitBlock(address layer2) external view returns (uint256);\\n    function seigPerBlock() external view returns (uint256);\\n    function lastSeigBlock() external view returns (uint256);\\n    function pausedBlock() external view returns (uint256);\\n    function unpausedBlock() external view returns (uint256);\\n    function DEFAULT_FACTOR() external view returns (uint256);\\n\\n    function deployCoinage(address layer2) external returns (bool);\\n    function setCommissionRate(address layer2, uint256 commission, bool isCommissionRateNegative) external returns (bool);\\n\\n    function uncomittedStakeOf(address layer2, address account) external view returns (uint256);\\n    function stakeOf(address layer2, address account) external view returns (uint256);\\n    function additionalTotBurnAmount(address layer2, address account, uint256 amount) external view returns (uint256 totAmount);\\n\\n    function onTransfer(address sender, address recipient, uint256 amount) external returns (bool);\\n    function updateSeigniorage() external returns (bool);\\n    function onDeposit(address layer2, address account, uint256 amount) external returns (bool);\\n    function onWithdraw(address layer2, address account, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x72e8f6061d0585ba47b52244d7a368bb0c60a20462ac37fb14dea24218d4b10e\",\"license\":\"MIT\"},\"contracts/interfaces/IStorageStateCommittee.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.17;\\npragma abicoder v2;\\n\\nimport { ICandidateFactory } from \\\"../interfaces/ICandidateFactory.sol\\\";\\nimport { ILayer2Registry } from \\\"../interfaces/ILayer2Registry.sol\\\";\\nimport { ISeigManager } from \\\"../interfaces/ISeigManager.sol\\\";\\nimport { IDAOAgendaManager } from \\\"../interfaces/IDAOAgendaManager.sol\\\";\\nimport { IDAOVault } from \\\"../interfaces/IDAOVault.sol\\\";\\n\\ninterface IStorageStateCommittee {\\n    struct CandidateInfo {\\n        address candidateContract;\\n        uint256 indexMembers;\\n        uint128 memberJoinedTime;\\n        uint128 rewardPeriod;\\n        uint128 claimedTimestamp;\\n    }\\n\\n    function ton() external returns (address);\\n    function daoVault() external returns (IDAOVault);\\n    function agendaManager() external returns (IDAOAgendaManager);\\n    function candidateFactory() external returns (ICandidateFactory);\\n    function layer2Registry() external returns (ILayer2Registry);\\n    function seigManager() external returns (ISeigManager);\\n    function candidates(uint256 _index) external returns (address);\\n    function members(uint256 _index) external returns (address);\\n    function maxMember() external returns (uint256);\\n    function candidateInfos(address _candidate) external returns (CandidateInfo memory);\\n    function quorum() external returns (uint256);\\n    function activityRewardPerSecond() external returns (uint256);\\n\\n    function isMember(address _candidate) external returns (bool);\\n    function candidateContract(address _candidate) external returns (address);\\n}\\n\\n\",\"keccak256\":\"0x23a301acc48ede3c82b00b97714c2f123b47de278e75dd55374596b77312eedf\",\"license\":\"MIT\"},\"contracts/lib/Agenda.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.17;\\n\\nlibrary LibAgenda {\\n    //using LibAgenda for Agenda;\\n\\n    enum AgendaStatus { NONE, NOTICE, VOTING, WAITING_EXEC, EXECUTED, ENDED }\\n    enum AgendaResult { PENDING, ACCEPT, REJECT, DISMISS }\\n\\n    //votor : based operator \\n    struct Voter {\\n        bool isVoter;\\n        bool hasVoted;\\n        uint256 vote;\\n    }\\n\\n    // counting abstainVotes yesVotes noVotes\\n    struct Agenda {\\n        uint256 createdTimestamp;\\n        uint256 noticeEndTimestamp;\\n        uint256 votingPeriodInSeconds;\\n        uint256 votingStartedTimestamp;\\n        uint256 votingEndTimestamp;\\n        uint256 executableLimitTimestamp;\\n        uint256 executedTimestamp;\\n        uint256 countingYes;\\n        uint256 countingNo;\\n        uint256 countingAbstain;\\n        AgendaStatus status;\\n        AgendaResult result;\\n        address[] voters;\\n        bool executed;\\n    }\\n\\n    struct AgendaExecutionInfo {\\n        address[] targets;\\n        bytes[] functionBytecodes;\\n        bool atomicExecute;\\n        uint256 executeStartFrom;\\n    }\\n\\n    /*function getAgenda(Agenda[] storage agendas, uint256 index) public view returns (Agenda storage agenda) {\\n        return agendas[index];\\n    }*/\\n}\",\"keccak256\":\"0xec5e22ccc75c38403b0ab74466033a19de5f2745bd5e18f2d64b42af22a116a1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/interfaces/ICandidateFactory.sol":{"ICandidateFactory":{"abi":[{"inputs":[{"internalType":"address","name":"_candidate","type":"address"},{"internalType":"bool","name":"_isLayer2Candidate","type":"bool"},{"internalType":"string","name":"_name","type":"string"},{"internalType":"address","name":"_committee","type":"address"},{"internalType":"address","name":"_seigManager","type":"address"}],"name":"deploy","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"deploy(address,bool,string,address,address)":"e64a31f6"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_candidate\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_isLayer2Candidate\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_committee\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_seigManager\",\"type\":\"address\"}],\"name\":\"deploy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/ICandidateFactory.sol\":\"ICandidateFactory\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"contracts/interfaces/ICandidateFactory.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.17;\\n\\ninterface ICandidateFactory {\\n    function deploy(\\n        address _candidate,\\n        bool _isLayer2Candidate,\\n        string memory _name,\\n        address _committee,\\n        address _seigManager\\n    )\\n        external\\n        returns (address);\\n}\\n\",\"keccak256\":\"0xd335ad2ecb2294d4495a79c8e771d4b4bfd60174c32a20c06dfab80fbc241f0e\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/interfaces/IDAOAgendaManager.sol":{"IDAOAgendaManager":{"abi":[{"inputs":[{"internalType":"uint256","name":"_index","type":"uint256"}],"name":"agendas","outputs":[{"components":[{"internalType":"uint256","name":"createdTimestamp","type":"uint256"},{"internalType":"uint256","name":"noticeEndTimestamp","type":"uint256"},{"internalType":"uint256","name":"votingPeriodInSeconds","type":"uint256"},{"internalType":"uint256","name":"votingStartedTimestamp","type":"uint256"},{"internalType":"uint256","name":"votingEndTimestamp","type":"uint256"},{"internalType":"uint256","name":"executableLimitTimestamp","type":"uint256"},{"internalType":"uint256","name":"executedTimestamp","type":"uint256"},{"internalType":"uint256","name":"countingYes","type":"uint256"},{"internalType":"uint256","name":"countingNo","type":"uint256"},{"internalType":"uint256","name":"countingAbstain","type":"uint256"},{"internalType":"enum LibAgenda.AgendaStatus","name":"status","type":"uint8"},{"internalType":"enum LibAgenda.AgendaResult","name":"result","type":"uint8"},{"internalType":"address[]","name":"voters","type":"address[]"},{"internalType":"bool","name":"executed","type":"bool"}],"internalType":"struct LibAgenda.Agenda","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_agendaID","type":"uint256"}],"name":"canExecuteAgenda","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_agendaID","type":"uint256"},{"internalType":"address","name":"voter","type":"address"},{"internalType":"uint256","name":"_vote","type":"uint256"}],"name":"castVote","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"createAgendaFees","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_agendaID","type":"uint256"}],"name":"endAgendaVoting","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"executingPeriodSeconds","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_agendaID","type":"uint256"}],"name":"getAgendaNoticeEndTimeSeconds","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_agendaID","type":"uint256"}],"name":"getAgendaResult","outputs":[{"internalType":"uint256","name":"result","type":"uint256"},{"internalType":"bool","name":"executed","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_agendaID","type":"uint256"}],"name":"getAgendaStatus","outputs":[{"internalType":"uint256","name":"status","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_agendaID","type":"uint256"}],"name":"getAgendaTimestamps","outputs":[{"internalType":"uint256","name":"createdTimestamp","type":"uint256"},{"internalType":"uint256","name":"noticeEndTimestamp","type":"uint256"},{"internalType":"uint256","name":"votingStartedTimestamp","type":"uint256"},{"internalType":"uint256","name":"votingEndTimestamp","type":"uint256"},{"internalType":"uint256","name":"executedTimestamp","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_agendaID","type":"uint256"}],"name":"getAgendaVotingEndTimeSeconds","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_agendaID","type":"uint256"}],"name":"getAgendaVotingStartTimeSeconds","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_agendaID","type":"uint256"}],"name":"getExecutionInfo","outputs":[{"internalType":"address[]","name":"target","type":"address[]"},{"internalType":"bytes[]","name":"functionBytecode","type":"bytes[]"},{"internalType":"bool","name":"atomicExecute","type":"bool"},{"internalType":"uint256","name":"executeStartFrom","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_createAgendaFees","type":"uint256"}],"name":"getStatus","outputs":[{"internalType":"enum LibAgenda.AgendaStatus","name":"","type":"uint8"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"uint256","name":"_agendaID","type":"uint256"},{"internalType":"address","name":"_user","type":"address"}],"name":"getVoteStatus","outputs":[{"internalType":"bool","name":"","type":"bool"},{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_agendaID","type":"uint256"}],"name":"getVoters","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_agendaID","type":"uint256"}],"name":"getVotingCount","outputs":[{"internalType":"uint256","name":"countingYes","type":"uint256"},{"internalType":"uint256","name":"countingNo","type":"uint256"},{"internalType":"uint256","name":"countingAbstain","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_agendaID","type":"uint256"},{"internalType":"address","name":"_user","type":"address"}],"name":"hasVoted","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_agendaID","type":"uint256"}],"name":"isVotableStatus","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_agendaID","type":"uint256"},{"internalType":"address","name":"_user","type":"address"}],"name":"isVoter","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"minimumNoticePeriodSeconds","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"minimumVotingPeriodSeconds","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"_targets","type":"address[]"},{"internalType":"uint256","name":"_noticePeriodSeconds","type":"uint256"},{"internalType":"uint256","name":"_votingPeriodSeconds","type":"uint256"},{"internalType":"bool","name":"_atomicExecute","type":"bool"},{"internalType":"bytes[]","name":"_functionBytecodes","type":"bytes[]"}],"name":"newAgenda","outputs":[{"internalType":"uint256","name":"agendaID","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"numAgendas","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_committee","type":"address"}],"name":"setCommittee","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_createAgendaFees","type":"uint256"}],"name":"setCreateAgendaFees","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_agendaID","type":"uint256"}],"name":"setExecutedAgenda","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_agendaID","type":"uint256"},{"internalType":"uint256","name":"_count","type":"uint256"}],"name":"setExecutedCount","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_executingPeriodSeconds","type":"uint256"}],"name":"setExecutingPeriodSeconds","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_minimumNoticePeriodSeconds","type":"uint256"}],"name":"setMinimumNoticePeriodSeconds","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_minimumVotingPeriodSeconds","type":"uint256"}],"name":"setMinimumVotingPeriodSeconds","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_agendaID","type":"uint256"},{"internalType":"enum LibAgenda.AgendaResult","name":"_result","type":"uint8"}],"name":"setResult","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_agendaID","type":"uint256"},{"internalType":"enum LibAgenda.AgendaStatus","name":"_status","type":"uint8"}],"name":"setStatus","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"totalAgendas","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_index1","type":"uint256"},{"internalType":"address","name":"_index2","type":"address"}],"name":"voterInfos","outputs":[{"components":[{"internalType":"bool","name":"isVoter","type":"bool"},{"internalType":"bool","name":"hasVoted","type":"bool"},{"internalType":"uint256","name":"vote","type":"uint256"}],"internalType":"struct LibAgenda.Voter","name":"","type":"tuple"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"agendas(uint256)":"3c4a819c","canExecuteAgenda(uint256)":"77f28d5b","castVote(uint256,address,uint256)":"7e77eb23","createAgendaFees()":"2522a32f","endAgendaVoting(uint256)":"885b4696","executingPeriodSeconds()":"e7015fef","getAgendaNoticeEndTimeSeconds(uint256)":"de6bd386","getAgendaResult(uint256)":"6bcaab5e","getAgendaStatus(uint256)":"284d776e","getAgendaTimestamps(uint256)":"8e3f5f83","getAgendaVotingEndTimeSeconds(uint256)":"334bbf35","getAgendaVotingStartTimeSeconds(uint256)":"3da2371f","getExecutionInfo(uint256)":"73ba3745","getStatus(uint256)":"5c622a0e","getVoteStatus(uint256,address)":"cdeed605","getVoters(uint256)":"86b646f2","getVotingCount(uint256)":"aee4a42a","hasVoted(uint256,address)":"43859632","isVotableStatus(uint256)":"8425a46d","isVoter(uint256,address)":"00b74c45","minimumNoticePeriodSeconds()":"0af5aa3c","minimumVotingPeriodSeconds()":"e3c36156","newAgenda(address[],uint256,uint256,bool,bytes[])":"25048db8","numAgendas()":"e3bc145f","setCommittee(address)":"bddae40e","setCreateAgendaFees(uint256)":"b4f69b6a","setExecutedAgenda(uint256)":"37184a32","setExecutedCount(uint256,uint256)":"a0cc81e4","setExecutingPeriodSeconds(uint256)":"69b1227a","setMinimumNoticePeriodSeconds(uint256)":"23d09fdf","setMinimumVotingPeriodSeconds(uint256)":"c0bc5304","setResult(uint256,uint8)":"56150a36","setStatus(uint256,uint8)":"d896dd64","totalAgendas()":"699cc358","voterInfos(uint256,address)":"4a47f59b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"agendas\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"createdTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"noticeEndTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"votingPeriodInSeconds\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"votingStartedTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"votingEndTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"executableLimitTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"executedTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"countingYes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"countingNo\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"countingAbstain\",\"type\":\"uint256\"},{\"internalType\":\"enum LibAgenda.AgendaStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"enum LibAgenda.AgendaResult\",\"name\":\"result\",\"type\":\"uint8\"},{\"internalType\":\"address[]\",\"name\":\"voters\",\"type\":\"address[]\"},{\"internalType\":\"bool\",\"name\":\"executed\",\"type\":\"bool\"}],\"internalType\":\"struct LibAgenda.Agenda\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_agendaID\",\"type\":\"uint256\"}],\"name\":\"canExecuteAgenda\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_agendaID\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_vote\",\"type\":\"uint256\"}],\"name\":\"castVote\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"createAgendaFees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_agendaID\",\"type\":\"uint256\"}],\"name\":\"endAgendaVoting\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"executingPeriodSeconds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_agendaID\",\"type\":\"uint256\"}],\"name\":\"getAgendaNoticeEndTimeSeconds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_agendaID\",\"type\":\"uint256\"}],\"name\":\"getAgendaResult\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"result\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"executed\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_agendaID\",\"type\":\"uint256\"}],\"name\":\"getAgendaStatus\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"status\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_agendaID\",\"type\":\"uint256\"}],\"name\":\"getAgendaTimestamps\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"createdTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"noticeEndTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"votingStartedTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"votingEndTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"executedTimestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_agendaID\",\"type\":\"uint256\"}],\"name\":\"getAgendaVotingEndTimeSeconds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_agendaID\",\"type\":\"uint256\"}],\"name\":\"getAgendaVotingStartTimeSeconds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_agendaID\",\"type\":\"uint256\"}],\"name\":\"getExecutionInfo\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"target\",\"type\":\"address[]\"},{\"internalType\":\"bytes[]\",\"name\":\"functionBytecode\",\"type\":\"bytes[]\"},{\"internalType\":\"bool\",\"name\":\"atomicExecute\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"executeStartFrom\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_createAgendaFees\",\"type\":\"uint256\"}],\"name\":\"getStatus\",\"outputs\":[{\"internalType\":\"enum LibAgenda.AgendaStatus\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_agendaID\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getVoteStatus\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_agendaID\",\"type\":\"uint256\"}],\"name\":\"getVoters\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_agendaID\",\"type\":\"uint256\"}],\"name\":\"getVotingCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"countingYes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"countingNo\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"countingAbstain\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_agendaID\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"hasVoted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_agendaID\",\"type\":\"uint256\"}],\"name\":\"isVotableStatus\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_agendaID\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"isVoter\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minimumNoticePeriodSeconds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minimumVotingPeriodSeconds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_targets\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"_noticePeriodSeconds\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_votingPeriodSeconds\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_atomicExecute\",\"type\":\"bool\"},{\"internalType\":\"bytes[]\",\"name\":\"_functionBytecodes\",\"type\":\"bytes[]\"}],\"name\":\"newAgenda\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"agendaID\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"numAgendas\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_committee\",\"type\":\"address\"}],\"name\":\"setCommittee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_createAgendaFees\",\"type\":\"uint256\"}],\"name\":\"setCreateAgendaFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_agendaID\",\"type\":\"uint256\"}],\"name\":\"setExecutedAgenda\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_agendaID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_count\",\"type\":\"uint256\"}],\"name\":\"setExecutedCount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_executingPeriodSeconds\",\"type\":\"uint256\"}],\"name\":\"setExecutingPeriodSeconds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_minimumNoticePeriodSeconds\",\"type\":\"uint256\"}],\"name\":\"setMinimumNoticePeriodSeconds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_minimumVotingPeriodSeconds\",\"type\":\"uint256\"}],\"name\":\"setMinimumVotingPeriodSeconds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_agendaID\",\"type\":\"uint256\"},{\"internalType\":\"enum LibAgenda.AgendaResult\",\"name\":\"_result\",\"type\":\"uint8\"}],\"name\":\"setResult\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_agendaID\",\"type\":\"uint256\"},{\"internalType\":\"enum LibAgenda.AgendaStatus\",\"name\":\"_status\",\"type\":\"uint8\"}],\"name\":\"setStatus\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAgendas\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index1\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_index2\",\"type\":\"address\"}],\"name\":\"voterInfos\",\"outputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"isVoter\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"hasVoted\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"vote\",\"type\":\"uint256\"}],\"internalType\":\"struct LibAgenda.Voter\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IDAOAgendaManager.sol\":\"IDAOAgendaManager\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IDAOAgendaManager.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.17;\\n\\nimport { LibAgenda } from \\\"../lib/Agenda.sol\\\";\\n// import { IDAOCommittee } from \\\"../interfaces/IDAOCommittee.sol\\\";\\n\\ninterface IDAOAgendaManager  {\\n    struct Ratio {\\n        uint256 numerator;\\n        uint256 denominator;\\n    }\\n\\n    function setCommittee(address _committee) external;\\n    function setCreateAgendaFees(uint256 _createAgendaFees) external;\\n    function setMinimumNoticePeriodSeconds(uint256 _minimumNoticePeriodSeconds) external;\\n    function setMinimumVotingPeriodSeconds(uint256 _minimumVotingPeriodSeconds) external;\\n    function setExecutingPeriodSeconds(uint256 _executingPeriodSeconds) external;\\n    function newAgenda(\\n        address[] memory _targets,\\n        uint256 _noticePeriodSeconds,\\n        uint256 _votingPeriodSeconds,\\n        bool _atomicExecute,\\n        bytes[] calldata _functionBytecodes\\n    )\\n        external\\n        returns (uint256 agendaID);\\n    function castVote(uint256 _agendaID, address voter, uint256 _vote) external returns (bool);\\n    function setExecutedAgenda(uint256 _agendaID) external;\\n    function setResult(uint256 _agendaID, LibAgenda.AgendaResult _result) external;\\n    function setStatus(uint256 _agendaID, LibAgenda.AgendaStatus _status) external;\\n    function endAgendaVoting(uint256 _agendaID) external;\\n    function setExecutedCount(uint256 _agendaID, uint256 _count) external;\\n     \\n    // -- view functions\\n    function isVoter(uint256 _agendaID, address _user) external view returns (bool);\\n    function hasVoted(uint256 _agendaID, address _user) external view returns (bool);\\n    function getVoteStatus(uint256 _agendaID, address _user) external view returns (bool, uint256);\\n    function getAgendaNoticeEndTimeSeconds(uint256 _agendaID) external view returns (uint256);\\n    function getAgendaVotingStartTimeSeconds(uint256 _agendaID) external view returns (uint256);\\n    function getAgendaVotingEndTimeSeconds(uint256 _agendaID) external view returns (uint256) ;\\n\\n    function canExecuteAgenda(uint256 _agendaID) external view returns (bool);\\n    function getAgendaStatus(uint256 _agendaID) external view returns (uint256 status);\\n    function totalAgendas() external view returns (uint256);\\n    function getAgendaResult(uint256 _agendaID) external view returns (uint256 result, bool executed);\\n    function getExecutionInfo(uint256 _agendaID)\\n        external\\n        view\\n        returns(\\n            address[] memory target,\\n            bytes[] memory functionBytecode,\\n            bool atomicExecute,\\n            uint256 executeStartFrom\\n        );\\n    function isVotableStatus(uint256 _agendaID) external view returns (bool);\\n    function getVotingCount(uint256 _agendaID)\\n        external\\n        view\\n        returns (\\n            uint256 countingYes,\\n            uint256 countingNo,\\n            uint256 countingAbstain\\n        );\\n    function getAgendaTimestamps(uint256 _agendaID)\\n        external\\n        view\\n        returns (\\n            uint256 createdTimestamp,\\n            uint256 noticeEndTimestamp,\\n            uint256 votingStartedTimestamp,\\n            uint256 votingEndTimestamp,\\n            uint256 executedTimestamp\\n        );\\n    function numAgendas() external view returns (uint256);\\n    function getVoters(uint256 _agendaID) external view returns (address[] memory);\\n\\n    function getStatus(uint256 _createAgendaFees) external pure returns (LibAgenda.AgendaStatus);\\n\\n    // getter\\n    // function committee() external view returns (IDAOCommittee);\\n    function createAgendaFees() external view returns (uint256);\\n    function minimumNoticePeriodSeconds() external view returns (uint256);\\n    function minimumVotingPeriodSeconds() external view returns (uint256);\\n    function executingPeriodSeconds() external view returns (uint256);\\n    function agendas(uint256 _index) external view returns (LibAgenda.Agenda memory);\\n    function voterInfos(uint256 _index1, address _index2) external view returns (LibAgenda.Voter memory);\\n}\\n\",\"keccak256\":\"0x6bacc8cf4e3511def801a867bd3a932f001f615ac28482b77f109e4d8571b287\",\"license\":\"MIT\"},\"contracts/lib/Agenda.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.17;\\n\\nlibrary LibAgenda {\\n    //using LibAgenda for Agenda;\\n\\n    enum AgendaStatus { NONE, NOTICE, VOTING, WAITING_EXEC, EXECUTED, ENDED }\\n    enum AgendaResult { PENDING, ACCEPT, REJECT, DISMISS }\\n\\n    //votor : based operator \\n    struct Voter {\\n        bool isVoter;\\n        bool hasVoted;\\n        uint256 vote;\\n    }\\n\\n    // counting abstainVotes yesVotes noVotes\\n    struct Agenda {\\n        uint256 createdTimestamp;\\n        uint256 noticeEndTimestamp;\\n        uint256 votingPeriodInSeconds;\\n        uint256 votingStartedTimestamp;\\n        uint256 votingEndTimestamp;\\n        uint256 executableLimitTimestamp;\\n        uint256 executedTimestamp;\\n        uint256 countingYes;\\n        uint256 countingNo;\\n        uint256 countingAbstain;\\n        AgendaStatus status;\\n        AgendaResult result;\\n        address[] voters;\\n        bool executed;\\n    }\\n\\n    struct AgendaExecutionInfo {\\n        address[] targets;\\n        bytes[] functionBytecodes;\\n        bool atomicExecute;\\n        uint256 executeStartFrom;\\n    }\\n\\n    /*function getAgenda(Agenda[] storage agendas, uint256 index) public view returns (Agenda storage agenda) {\\n        return agendas[index];\\n    }*/\\n}\",\"keccak256\":\"0xec5e22ccc75c38403b0ab74466033a19de5f2745bd5e18f2d64b42af22a116a1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/interfaces/IDAOCommittee.sol":{"IDAOCommittee":{"abi":[{"inputs":[],"name":"activityRewardPerSecond","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"agendaManager","outputs":[{"internalType":"contract IDAOAgendaManager","name":"","type":"address"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_candidate","type":"address"},{"internalType":"address","name":"_account","type":"address"}],"name":"balanceOfOnCandidate","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_candidateContract","type":"address"},{"internalType":"address","name":"_account","type":"address"}],"name":"balanceOfOnCandidateContract","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_candidate","type":"address"}],"name":"candidateContract","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"candidateFactory","outputs":[{"internalType":"contract ICandidateFactory","name":"","type":"address"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_candidate","type":"address"}],"name":"candidateInfos","outputs":[{"components":[{"internalType":"address","name":"candidateContract","type":"address"},{"internalType":"uint256","name":"indexMembers","type":"uint256"},{"internalType":"uint128","name":"memberJoinedTime","type":"uint128"},{"internalType":"uint128","name":"rewardPeriod","type":"uint128"},{"internalType":"uint128","name":"claimedTimestamp","type":"uint128"}],"internalType":"struct IStorageStateCommittee.CandidateInfo","name":"","type":"tuple"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_index","type":"uint256"}],"name":"candidates","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"candidatesLength","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_AgendaID","type":"uint256"},{"internalType":"uint256","name":"_vote","type":"uint256"},{"internalType":"string","name":"_comment","type":"string"}],"name":"castVote","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_memberIndex","type":"uint256"}],"name":"changeMember","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_receiver","type":"address"}],"name":"claimActivityReward","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"_memo","type":"string"}],"name":"createCandidate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"daoVault","outputs":[{"internalType":"contract IDAOVault","name":"","type":"address"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_reducingMemberIndex","type":"uint256"},{"internalType":"uint256","name":"_quorum","type":"uint256"}],"name":"decreaseMaxMember","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_agendaID","type":"uint256"}],"name":"endAgendaVoting","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_AgendaID","type":"uint256"}],"name":"executeAgenda","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_candidate","type":"address"}],"name":"getClaimableActivityReward","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_newMaxMember","type":"uint256"},{"internalType":"uint256","name":"_quorum","type":"uint256"}],"name":"increaseMaxMember","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_candidate","type":"address"}],"name":"isCandidate","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_candidate","type":"address"}],"name":"isExistCandidate","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_candidate","type":"address"}],"name":"isMember","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"layer2Registry","outputs":[{"internalType":"contract ILayer2Registry","name":"","type":"address"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"maxMember","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_index","type":"uint256"}],"name":"members","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"tonAmount","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onApprove","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"quorum","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_layer2","type":"address"},{"internalType":"string","name":"_memo","type":"string"}],"name":"registerLayer2Candidate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_operator","type":"address"},{"internalType":"address","name":"_layer2","type":"address"},{"internalType":"string","name":"_memo","type":"string"}],"name":"registerLayer2CandidateByOwner","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"retireMember","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"seigManager","outputs":[{"internalType":"contract ISeigManager","name":"","type":"address"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_value","type":"uint256"}],"name":"setActivityRewardPerSecond","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_agendaManager","type":"address"}],"name":"setAgendaManager","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_agendaID","type":"uint256"},{"internalType":"uint256","name":"_status","type":"uint256"},{"internalType":"uint256","name":"_result","type":"uint256"}],"name":"setAgendaStatus","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_candidateFactory","type":"address"}],"name":"setCandidateFactory","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address[]","name":"_candidateContracts","type":"address[]"},{"internalType":"address","name":"_committee","type":"address"}],"name":"setCandidatesCommittee","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address[]","name":"_candidateContracts","type":"address[]"},{"internalType":"address","name":"_seigManager","type":"address"}],"name":"setCandidatesSeigManager","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_fees","type":"uint256"}],"name":"setCreateAgendaFees","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_daoVault","type":"address"}],"name":"setDaoVault","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_executingPeriodSeconds","type":"uint256"}],"name":"setExecutingPeriodSeconds","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_layer2Registry","type":"address"}],"name":"setLayer2Registry","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_candidate","type":"address"},{"internalType":"string","name":"_memo","type":"string"}],"name":"setMemoOnCandidate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_candidate","type":"address"},{"internalType":"string","name":"_memo","type":"string"}],"name":"setMemoOnCandidateContract","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_minimumNoticePeriod","type":"uint256"}],"name":"setMinimumNoticePeriodSeconds","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_minimumVotingPeriod","type":"uint256"}],"name":"setMinimumVotingPeriodSeconds","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_quorum","type":"uint256"}],"name":"setQuorum","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_seigManager","type":"address"}],"name":"setSeigManager","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_ton","type":"address"}],"name":"setTon","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"ton","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_candidate","type":"address"}],"name":"totalSupplyOnCandidate","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_candidateContract","type":"address"}],"name":"totalSupplyOnCandidateContract","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_candidate","type":"address"}],"name":"updateSeigniorage","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address[]","name":"_candidates","type":"address[]"}],"name":"updateSeigniorages","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"activityRewardPerSecond()":"7f331636","agendaManager()":"27fd92fd","balanceOfOnCandidate(address,address)":"d525f04f","balanceOfOnCandidateContract(address,address)":"16f7f982","candidateContract(address)":"651d08cd","candidateFactory()":"b5dd1158","candidateInfos(address)":"2e011c1e","candidates(uint256)":"3477ee2e","candidatesLength()":"773b7f65","castVote(uint256,uint256,string)":"24f99b1e","changeMember(uint256)":"11f19e04","claimActivityReward(address)":"6becff27","createCandidate(string)":"5fba7a56","daoVault()":"5903bd6c","decreaseMaxMember(uint256,uint256)":"50e8f17d","endAgendaVoting(uint256)":"885b4696","executeAgenda(uint256)":"216f486b","getClaimableActivityReward(address)":"9932e94c","increaseMaxMember(uint256,uint256)":"6da8f3ce","isCandidate(address)":"d51b9e93","isExistCandidate(address)":"561a1dab","isMember(address)":"a230c524","layer2Registry()":"cf2a239c","maxMember()":"03e3c9ac","members(uint256)":"5daf08ca","onApprove(address,address,uint256,bytes)":"4273ca16","quorum()":"1703a018","registerLayer2Candidate(address,string)":"a1ea3525","registerLayer2CandidateByOwner(address,address,string)":"440b69ad","retireMember()":"c4ef9c00","seigManager()":"6fb7f558","setActivityRewardPerSecond(uint256)":"5ebe7622","setAgendaManager(address)":"49c39f14","setAgendaStatus(uint256,uint256,uint256)":"805aca20","setCandidateFactory(address)":"047f52f2","setCandidatesCommittee(address[],address)":"5c43030f","setCandidatesSeigManager(address[],address)":"69154295","setCreateAgendaFees(uint256)":"b4f69b6a","setDaoVault(address)":"4b799db1","setExecutingPeriodSeconds(uint256)":"69b1227a","setLayer2Registry(address)":"2af60ff4","setMemoOnCandidate(address,string)":"c7cac42c","setMemoOnCandidateContract(address,string)":"607cf734","setMinimumNoticePeriodSeconds(uint256)":"23d09fdf","setMinimumVotingPeriodSeconds(uint256)":"c0bc5304","setQuorum(uint256)":"c1ba4e59","setSeigManager(address)":"7657f20a","setTon(address)":"4d288fec","ton()":"cc48b947","totalSupplyOnCandidate(address)":"ad6675dc","totalSupplyOnCandidateContract(address)":"78767d33","updateSeigniorage(address)":"89ea4300","updateSeigniorages(address[])":"57f0a867"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"activityRewardPerSecond\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"agendaManager\",\"outputs\":[{\"internalType\":\"contract IDAOAgendaManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_candidate\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"balanceOfOnCandidate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_candidateContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"balanceOfOnCandidateContract\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_candidate\",\"type\":\"address\"}],\"name\":\"candidateContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"candidateFactory\",\"outputs\":[{\"internalType\":\"contract ICandidateFactory\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_candidate\",\"type\":\"address\"}],\"name\":\"candidateInfos\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"candidateContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"indexMembers\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"memberJoinedTime\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"rewardPeriod\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"claimedTimestamp\",\"type\":\"uint128\"}],\"internalType\":\"struct IStorageStateCommittee.CandidateInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"candidates\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"candidatesLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_AgendaID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_vote\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_comment\",\"type\":\"string\"}],\"name\":\"castVote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_memberIndex\",\"type\":\"uint256\"}],\"name\":\"changeMember\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"}],\"name\":\"claimActivityReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_memo\",\"type\":\"string\"}],\"name\":\"createCandidate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"daoVault\",\"outputs\":[{\"internalType\":\"contract IDAOVault\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_reducingMemberIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_quorum\",\"type\":\"uint256\"}],\"name\":\"decreaseMaxMember\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_agendaID\",\"type\":\"uint256\"}],\"name\":\"endAgendaVoting\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_AgendaID\",\"type\":\"uint256\"}],\"name\":\"executeAgenda\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_candidate\",\"type\":\"address\"}],\"name\":\"getClaimableActivityReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newMaxMember\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_quorum\",\"type\":\"uint256\"}],\"name\":\"increaseMaxMember\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_candidate\",\"type\":\"address\"}],\"name\":\"isCandidate\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_candidate\",\"type\":\"address\"}],\"name\":\"isExistCandidate\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_candidate\",\"type\":\"address\"}],\"name\":\"isMember\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"layer2Registry\",\"outputs\":[{\"internalType\":\"contract ILayer2Registry\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxMember\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"members\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tonAmount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onApprove\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"quorum\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_layer2\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_memo\",\"type\":\"string\"}],\"name\":\"registerLayer2Candidate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_layer2\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_memo\",\"type\":\"string\"}],\"name\":\"registerLayer2CandidateByOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"retireMember\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"seigManager\",\"outputs\":[{\"internalType\":\"contract ISeigManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"setActivityRewardPerSecond\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_agendaManager\",\"type\":\"address\"}],\"name\":\"setAgendaManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_agendaID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_status\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_result\",\"type\":\"uint256\"}],\"name\":\"setAgendaStatus\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_candidateFactory\",\"type\":\"address\"}],\"name\":\"setCandidateFactory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_candidateContracts\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"_committee\",\"type\":\"address\"}],\"name\":\"setCandidatesCommittee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_candidateContracts\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"_seigManager\",\"type\":\"address\"}],\"name\":\"setCandidatesSeigManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_fees\",\"type\":\"uint256\"}],\"name\":\"setCreateAgendaFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_daoVault\",\"type\":\"address\"}],\"name\":\"setDaoVault\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_executingPeriodSeconds\",\"type\":\"uint256\"}],\"name\":\"setExecutingPeriodSeconds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_layer2Registry\",\"type\":\"address\"}],\"name\":\"setLayer2Registry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_candidate\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_memo\",\"type\":\"string\"}],\"name\":\"setMemoOnCandidate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_candidate\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_memo\",\"type\":\"string\"}],\"name\":\"setMemoOnCandidateContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_minimumNoticePeriod\",\"type\":\"uint256\"}],\"name\":\"setMinimumNoticePeriodSeconds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_minimumVotingPeriod\",\"type\":\"uint256\"}],\"name\":\"setMinimumVotingPeriodSeconds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_quorum\",\"type\":\"uint256\"}],\"name\":\"setQuorum\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_seigManager\",\"type\":\"address\"}],\"name\":\"setSeigManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_ton\",\"type\":\"address\"}],\"name\":\"setTon\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ton\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_candidate\",\"type\":\"address\"}],\"name\":\"totalSupplyOnCandidate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_candidateContract\",\"type\":\"address\"}],\"name\":\"totalSupplyOnCandidateContract\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_candidate\",\"type\":\"address\"}],\"name\":\"updateSeigniorage\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_candidates\",\"type\":\"address[]\"}],\"name\":\"updateSeigniorages\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IDAOCommittee.sol\":\"IDAOCommittee\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"contracts/interfaces/ICandidateFactory.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.17;\\n\\ninterface ICandidateFactory {\\n    function deploy(\\n        address _candidate,\\n        bool _isLayer2Candidate,\\n        string memory _name,\\n        address _committee,\\n        address _seigManager\\n    )\\n        external\\n        returns (address);\\n}\\n\",\"keccak256\":\"0xd335ad2ecb2294d4495a79c8e771d4b4bfd60174c32a20c06dfab80fbc241f0e\",\"license\":\"MIT\"},\"contracts/interfaces/IDAOAgendaManager.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.17;\\n\\nimport { LibAgenda } from \\\"../lib/Agenda.sol\\\";\\n// import { IDAOCommittee } from \\\"../interfaces/IDAOCommittee.sol\\\";\\n\\ninterface IDAOAgendaManager  {\\n    struct Ratio {\\n        uint256 numerator;\\n        uint256 denominator;\\n    }\\n\\n    function setCommittee(address _committee) external;\\n    function setCreateAgendaFees(uint256 _createAgendaFees) external;\\n    function setMinimumNoticePeriodSeconds(uint256 _minimumNoticePeriodSeconds) external;\\n    function setMinimumVotingPeriodSeconds(uint256 _minimumVotingPeriodSeconds) external;\\n    function setExecutingPeriodSeconds(uint256 _executingPeriodSeconds) external;\\n    function newAgenda(\\n        address[] memory _targets,\\n        uint256 _noticePeriodSeconds,\\n        uint256 _votingPeriodSeconds,\\n        bool _atomicExecute,\\n        bytes[] calldata _functionBytecodes\\n    )\\n        external\\n        returns (uint256 agendaID);\\n    function castVote(uint256 _agendaID, address voter, uint256 _vote) external returns (bool);\\n    function setExecutedAgenda(uint256 _agendaID) external;\\n    function setResult(uint256 _agendaID, LibAgenda.AgendaResult _result) external;\\n    function setStatus(uint256 _agendaID, LibAgenda.AgendaStatus _status) external;\\n    function endAgendaVoting(uint256 _agendaID) external;\\n    function setExecutedCount(uint256 _agendaID, uint256 _count) external;\\n     \\n    // -- view functions\\n    function isVoter(uint256 _agendaID, address _user) external view returns (bool);\\n    function hasVoted(uint256 _agendaID, address _user) external view returns (bool);\\n    function getVoteStatus(uint256 _agendaID, address _user) external view returns (bool, uint256);\\n    function getAgendaNoticeEndTimeSeconds(uint256 _agendaID) external view returns (uint256);\\n    function getAgendaVotingStartTimeSeconds(uint256 _agendaID) external view returns (uint256);\\n    function getAgendaVotingEndTimeSeconds(uint256 _agendaID) external view returns (uint256) ;\\n\\n    function canExecuteAgenda(uint256 _agendaID) external view returns (bool);\\n    function getAgendaStatus(uint256 _agendaID) external view returns (uint256 status);\\n    function totalAgendas() external view returns (uint256);\\n    function getAgendaResult(uint256 _agendaID) external view returns (uint256 result, bool executed);\\n    function getExecutionInfo(uint256 _agendaID)\\n        external\\n        view\\n        returns(\\n            address[] memory target,\\n            bytes[] memory functionBytecode,\\n            bool atomicExecute,\\n            uint256 executeStartFrom\\n        );\\n    function isVotableStatus(uint256 _agendaID) external view returns (bool);\\n    function getVotingCount(uint256 _agendaID)\\n        external\\n        view\\n        returns (\\n            uint256 countingYes,\\n            uint256 countingNo,\\n            uint256 countingAbstain\\n        );\\n    function getAgendaTimestamps(uint256 _agendaID)\\n        external\\n        view\\n        returns (\\n            uint256 createdTimestamp,\\n            uint256 noticeEndTimestamp,\\n            uint256 votingStartedTimestamp,\\n            uint256 votingEndTimestamp,\\n            uint256 executedTimestamp\\n        );\\n    function numAgendas() external view returns (uint256);\\n    function getVoters(uint256 _agendaID) external view returns (address[] memory);\\n\\n    function getStatus(uint256 _createAgendaFees) external pure returns (LibAgenda.AgendaStatus);\\n\\n    // getter\\n    // function committee() external view returns (IDAOCommittee);\\n    function createAgendaFees() external view returns (uint256);\\n    function minimumNoticePeriodSeconds() external view returns (uint256);\\n    function minimumVotingPeriodSeconds() external view returns (uint256);\\n    function executingPeriodSeconds() external view returns (uint256);\\n    function agendas(uint256 _index) external view returns (LibAgenda.Agenda memory);\\n    function voterInfos(uint256 _index1, address _index2) external view returns (LibAgenda.Voter memory);\\n}\\n\",\"keccak256\":\"0x6bacc8cf4e3511def801a867bd3a932f001f615ac28482b77f109e4d8571b287\",\"license\":\"MIT\"},\"contracts/interfaces/IDAOCommittee.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.17;\\npragma abicoder v2;\\n\\nimport { IStorageStateCommittee } from \\\"../interfaces/IStorageStateCommittee.sol\\\";\\n\\ninterface IDAOCommittee is IStorageStateCommittee {\\n    //--owner\\n    function setSeigManager(address _seigManager) external;\\n    function setCandidatesSeigManager(address[] calldata _candidateContracts, address _seigManager) external;\\n    function setCandidatesCommittee(address[] calldata _candidateContracts, address _committee) external;\\n    function setLayer2Registry(address _layer2Registry) external;\\n    function setAgendaManager(address _agendaManager) external;\\n    function setCandidateFactory(address _candidateFactory) external;\\n    function setTon(address _ton) external;\\n    function setActivityRewardPerSecond(uint256 _value) external;\\n    function setDaoVault(address _daoVault) external;\\n\\n    function increaseMaxMember(uint256 _newMaxMember, uint256 _quorum) external;\\n    function decreaseMaxMember(uint256 _reducingMemberIndex, uint256 _quorum) external;\\n    function createCandidate(string calldata _memo) external;\\n    function registerLayer2Candidate(address _layer2, string memory _memo) external;\\n    function registerLayer2CandidateByOwner(address _operator, address _layer2, string memory _memo) external;\\n    function changeMember(uint256 _memberIndex) external returns (bool);\\n    function retireMember() external returns (bool);\\n    function setMemoOnCandidate(address _candidate, string calldata _memo) external;\\n    function setMemoOnCandidateContract(address _candidate, string calldata _memo) external;\\n\\n    function onApprove(\\n        address owner,\\n        address spender,\\n        uint256 tonAmount,\\n        bytes calldata data\\n    )\\n        external\\n        returns (bool);\\n\\n    function setQuorum(uint256 _quorum) external;\\n    function setCreateAgendaFees(uint256 _fees) external;\\n    function setMinimumNoticePeriodSeconds(uint256 _minimumNoticePeriod) external;\\n    function setMinimumVotingPeriodSeconds(uint256 _minimumVotingPeriod) external;\\n    function setExecutingPeriodSeconds(uint256 _executingPeriodSeconds) external;\\n    function castVote(uint256 _AgendaID, uint256 _vote, string calldata _comment) external;\\n    function endAgendaVoting(uint256 _agendaID) external;\\n    function executeAgenda(uint256 _AgendaID) external;\\n    function setAgendaStatus(uint256 _agendaID, uint256 _status, uint256 _result) external;\\n\\n    function updateSeigniorage(address _candidate) external returns (bool);\\n    function updateSeigniorages(address[] calldata _candidates) external returns (bool);\\n    function claimActivityReward(address _receiver) external;\\n\\n    function isCandidate(address _candidate) external view returns (bool);\\n    function totalSupplyOnCandidate(address _candidate) external view returns (uint256);\\n    function balanceOfOnCandidate(address _candidate, address _account) external view returns (uint256);\\n    function totalSupplyOnCandidateContract(address _candidateContract) external view returns (uint256);\\n    function balanceOfOnCandidateContract(address _candidateContract, address _account) external view returns (uint256);\\n    function candidatesLength() external view returns (uint256);\\n    function isExistCandidate(address _candidate) external view returns (bool);\\n    function getClaimableActivityReward(address _candidate) external view returns (uint256);\\n}\\n\\n\",\"keccak256\":\"0x4389582fde637eed1831de216748a8163bfdffefcbf1d3c1a2d118f42f0a2fa3\",\"license\":\"MIT\"},\"contracts/interfaces/IDAOVault.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.17;\\n\\ninterface IDAOVault {\\n    function setTON(address _ton) external;\\n    function setWTON(address _wton) external;\\n    function approveTON(address _to, uint256 _amount) external;\\n    function approveWTON(address _to, uint256 _amount) external;\\n    function approveERC20(address _token, address _to, uint256 _amount) external;\\n    function claimTON(address _to, uint256 _amount) external;\\n    function claimWTON(address _to, uint256 _amount) external;\\n    function claimERC20(address _token, address _to, uint256 _amount) external;\\n}\\n\",\"keccak256\":\"0xcd8cea85e6f7672761cdeeb0fc2c7781a6f94919a08a6221c2ab1a4a5bde33cc\",\"license\":\"MIT\"},\"contracts/interfaces/ILayer2Registry.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.17;\\n\\ninterface ILayer2Registry {\\n    function layer2s(address layer2) external view returns (bool);\\n\\n    function register(address layer2) external returns (bool);\\n    function numLayer2s() external view returns (uint256);\\n    function layer2ByIndex(uint256 index) external view returns (address);\\n\\n    function deployCoinage(address layer2, address seigManager) external returns (bool);\\n    function registerAndDeployCoinage(address layer2, address seigManager) external returns (bool);\\n    function unregister(address layer2) external returns (bool);\\n}\\n\",\"keccak256\":\"0x7f69cf374891d446d3cdc65fb61a6d20ef7744cafad2acfb103912e9855393dd\",\"license\":\"MIT\"},\"contracts/interfaces/ISeigManager.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.17;\\n\\ninterface ISeigManager {\\n    function registry() external view returns (address);\\n    function depositManager() external view returns (address);\\n    function ton() external view returns (address);\\n    function wton() external view returns (address);\\n    function powerton() external view returns (address);\\n    function tot() external view returns (address);\\n    function coinages(address layer2) external view returns (address);\\n    function commissionRates(address layer2) external view returns (uint256);\\n\\n    function lastCommitBlock(address layer2) external view returns (uint256);\\n    function seigPerBlock() external view returns (uint256);\\n    function lastSeigBlock() external view returns (uint256);\\n    function pausedBlock() external view returns (uint256);\\n    function unpausedBlock() external view returns (uint256);\\n    function DEFAULT_FACTOR() external view returns (uint256);\\n\\n    function deployCoinage(address layer2) external returns (bool);\\n    function setCommissionRate(address layer2, uint256 commission, bool isCommissionRateNegative) external returns (bool);\\n\\n    function uncomittedStakeOf(address layer2, address account) external view returns (uint256);\\n    function stakeOf(address layer2, address account) external view returns (uint256);\\n    function additionalTotBurnAmount(address layer2, address account, uint256 amount) external view returns (uint256 totAmount);\\n\\n    function onTransfer(address sender, address recipient, uint256 amount) external returns (bool);\\n    function updateSeigniorage() external returns (bool);\\n    function onDeposit(address layer2, address account, uint256 amount) external returns (bool);\\n    function onWithdraw(address layer2, address account, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x72e8f6061d0585ba47b52244d7a368bb0c60a20462ac37fb14dea24218d4b10e\",\"license\":\"MIT\"},\"contracts/interfaces/IStorageStateCommittee.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.17;\\npragma abicoder v2;\\n\\nimport { ICandidateFactory } from \\\"../interfaces/ICandidateFactory.sol\\\";\\nimport { ILayer2Registry } from \\\"../interfaces/ILayer2Registry.sol\\\";\\nimport { ISeigManager } from \\\"../interfaces/ISeigManager.sol\\\";\\nimport { IDAOAgendaManager } from \\\"../interfaces/IDAOAgendaManager.sol\\\";\\nimport { IDAOVault } from \\\"../interfaces/IDAOVault.sol\\\";\\n\\ninterface IStorageStateCommittee {\\n    struct CandidateInfo {\\n        address candidateContract;\\n        uint256 indexMembers;\\n        uint128 memberJoinedTime;\\n        uint128 rewardPeriod;\\n        uint128 claimedTimestamp;\\n    }\\n\\n    function ton() external returns (address);\\n    function daoVault() external returns (IDAOVault);\\n    function agendaManager() external returns (IDAOAgendaManager);\\n    function candidateFactory() external returns (ICandidateFactory);\\n    function layer2Registry() external returns (ILayer2Registry);\\n    function seigManager() external returns (ISeigManager);\\n    function candidates(uint256 _index) external returns (address);\\n    function members(uint256 _index) external returns (address);\\n    function maxMember() external returns (uint256);\\n    function candidateInfos(address _candidate) external returns (CandidateInfo memory);\\n    function quorum() external returns (uint256);\\n    function activityRewardPerSecond() external returns (uint256);\\n\\n    function isMember(address _candidate) external returns (bool);\\n    function candidateContract(address _candidate) external returns (address);\\n}\\n\\n\",\"keccak256\":\"0x23a301acc48ede3c82b00b97714c2f123b47de278e75dd55374596b77312eedf\",\"license\":\"MIT\"},\"contracts/lib/Agenda.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.17;\\n\\nlibrary LibAgenda {\\n    //using LibAgenda for Agenda;\\n\\n    enum AgendaStatus { NONE, NOTICE, VOTING, WAITING_EXEC, EXECUTED, ENDED }\\n    enum AgendaResult { PENDING, ACCEPT, REJECT, DISMISS }\\n\\n    //votor : based operator \\n    struct Voter {\\n        bool isVoter;\\n        bool hasVoted;\\n        uint256 vote;\\n    }\\n\\n    // counting abstainVotes yesVotes noVotes\\n    struct Agenda {\\n        uint256 createdTimestamp;\\n        uint256 noticeEndTimestamp;\\n        uint256 votingPeriodInSeconds;\\n        uint256 votingStartedTimestamp;\\n        uint256 votingEndTimestamp;\\n        uint256 executableLimitTimestamp;\\n        uint256 executedTimestamp;\\n        uint256 countingYes;\\n        uint256 countingNo;\\n        uint256 countingAbstain;\\n        AgendaStatus status;\\n        AgendaResult result;\\n        address[] voters;\\n        bool executed;\\n    }\\n\\n    struct AgendaExecutionInfo {\\n        address[] targets;\\n        bytes[] functionBytecodes;\\n        bool atomicExecute;\\n        uint256 executeStartFrom;\\n    }\\n\\n    /*function getAgenda(Agenda[] storage agendas, uint256 index) public view returns (Agenda storage agenda) {\\n        return agendas[index];\\n    }*/\\n}\",\"keccak256\":\"0xec5e22ccc75c38403b0ab74466033a19de5f2745bd5e18f2d64b42af22a116a1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/interfaces/IDAOVault.sol":{"IDAOVault":{"abi":[{"inputs":[{"internalType":"address","name":"_token","type":"address"},{"internalType":"address","name":"_to","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"approveERC20","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_to","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"approveTON","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_to","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"approveWTON","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_token","type":"address"},{"internalType":"address","name":"_to","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"claimERC20","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_to","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"claimTON","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_to","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"claimWTON","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_ton","type":"address"}],"name":"setTON","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_wton","type":"address"}],"name":"setWTON","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"approveERC20(address,address,uint256)":"a8e5e4aa","approveTON(address,uint256)":"52cceeb6","approveWTON(address,uint256)":"54e68c9a","claimERC20(address,address,uint256)":"f848091a","claimTON(address,uint256)":"ef0d5594","claimWTON(address,uint256)":"f52bba70","setTON(address)":"230da4f2","setWTON(address)":"662d12b1"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"approveERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"approveTON\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"approveWTON\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"claimERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"claimTON\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"claimWTON\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_ton\",\"type\":\"address\"}],\"name\":\"setTON\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_wton\",\"type\":\"address\"}],\"name\":\"setWTON\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IDAOVault.sol\":\"IDAOVault\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IDAOVault.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.17;\\n\\ninterface IDAOVault {\\n    function setTON(address _ton) external;\\n    function setWTON(address _wton) external;\\n    function approveTON(address _to, uint256 _amount) external;\\n    function approveWTON(address _to, uint256 _amount) external;\\n    function approveERC20(address _token, address _to, uint256 _amount) external;\\n    function claimTON(address _to, uint256 _amount) external;\\n    function claimWTON(address _to, uint256 _amount) external;\\n    function claimERC20(address _token, address _to, uint256 _amount) external;\\n}\\n\",\"keccak256\":\"0xcd8cea85e6f7672761cdeeb0fc2c7781a6f94919a08a6221c2ab1a4a5bde33cc\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/interfaces/ILayer2Registry.sol":{"ILayer2Registry":{"abi":[{"inputs":[{"internalType":"address","name":"layer2","type":"address"},{"internalType":"address","name":"seigManager","type":"address"}],"name":"deployCoinage","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"name":"layer2ByIndex","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"layer2","type":"address"}],"name":"layer2s","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"numLayer2s","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"layer2","type":"address"}],"name":"register","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"layer2","type":"address"},{"internalType":"address","name":"seigManager","type":"address"}],"name":"registerAndDeployCoinage","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"layer2","type":"address"}],"name":"unregister","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"deployCoinage(address,address)":"85108604","layer2ByIndex(uint256)":"b7ffb179","layer2s(address)":"61cdc5b8","numLayer2s()":"0d42d497","register(address)":"4420e486","registerAndDeployCoinage(address,address)":"bcb1a71e","unregister(address)":"2ec2c246"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"layer2\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"seigManager\",\"type\":\"address\"}],\"name\":\"deployCoinage\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"layer2ByIndex\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"layer2\",\"type\":\"address\"}],\"name\":\"layer2s\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"numLayer2s\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"layer2\",\"type\":\"address\"}],\"name\":\"register\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"layer2\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"seigManager\",\"type\":\"address\"}],\"name\":\"registerAndDeployCoinage\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"layer2\",\"type\":\"address\"}],\"name\":\"unregister\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/ILayer2Registry.sol\":\"ILayer2Registry\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"contracts/interfaces/ILayer2Registry.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.17;\\n\\ninterface ILayer2Registry {\\n    function layer2s(address layer2) external view returns (bool);\\n\\n    function register(address layer2) external returns (bool);\\n    function numLayer2s() external view returns (uint256);\\n    function layer2ByIndex(uint256 index) external view returns (address);\\n\\n    function deployCoinage(address layer2, address seigManager) external returns (bool);\\n    function registerAndDeployCoinage(address layer2, address seigManager) external returns (bool);\\n    function unregister(address layer2) external returns (bool);\\n}\\n\",\"keccak256\":\"0x7f69cf374891d446d3cdc65fb61a6d20ef7744cafad2acfb103912e9855393dd\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/interfaces/ISeigManager.sol":{"ISeigManager":{"abi":[{"inputs":[],"name":"DEFAULT_FACTOR","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"layer2","type":"address"},{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"additionalTotBurnAmount","outputs":[{"internalType":"uint256","name":"totAmount","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"layer2","type":"address"}],"name":"coinages","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"layer2","type":"address"}],"name":"commissionRates","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"layer2","type":"address"}],"name":"deployCoinage","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"depositManager","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"layer2","type":"address"}],"name":"lastCommitBlock","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"lastSeigBlock","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"layer2","type":"address"},{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"onDeposit","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"onTransfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"layer2","type":"address"},{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"onWithdraw","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"pausedBlock","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"powerton","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"registry","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"seigPerBlock","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"layer2","type":"address"},{"internalType":"uint256","name":"commission","type":"uint256"},{"internalType":"bool","name":"isCommissionRateNegative","type":"bool"}],"name":"setCommissionRate","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"layer2","type":"address"},{"internalType":"address","name":"account","type":"address"}],"name":"stakeOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"ton","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"tot","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"layer2","type":"address"},{"internalType":"address","name":"account","type":"address"}],"name":"uncomittedStakeOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"unpausedBlock","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"updateSeigniorage","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"wton","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"DEFAULT_FACTOR()":"8bf91dc4","additionalTotBurnAmount(address,address,uint256)":"48c8577e","coinages(address)":"4c063c19","commissionRates(address)":"7b056c1b","deployCoinage(address)":"833a774f","depositManager()":"6c7ac9d8","lastCommitBlock(address)":"c59f1046","lastSeigBlock()":"f35c89e8","onDeposit(address,address,uint256)":"412c6d50","onTransfer(address,address,uint256)":"4a393149","onWithdraw(address,address,uint256)":"f850ffaa","pausedBlock()":"32053c99","powerton()":"3e832e1d","registry()":"7b103999","seigPerBlock()":"5f40a349","setCommissionRate(address,uint256,bool)":"4224ed66","stakeOf(address,address)":"ce4cb876","ton()":"cc48b947","tot()":"a16d6aa7","uncomittedStakeOf(address,address)":"fa9789c8","unpausedBlock()":"1cc47890","updateSeigniorage()":"764a7856","wton()":"8d62d949"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DEFAULT_FACTOR\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"layer2\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"additionalTotBurnAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"layer2\",\"type\":\"address\"}],\"name\":\"coinages\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"layer2\",\"type\":\"address\"}],\"name\":\"commissionRates\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"layer2\",\"type\":\"address\"}],\"name\":\"deployCoinage\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"depositManager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"layer2\",\"type\":\"address\"}],\"name\":\"lastCommitBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastSeigBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"layer2\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"onDeposit\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"onTransfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"layer2\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"onWithdraw\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pausedBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"powerton\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"registry\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"seigPerBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"layer2\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"commission\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isCommissionRateNegative\",\"type\":\"bool\"}],\"name\":\"setCommissionRate\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"layer2\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"stakeOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ton\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tot\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"layer2\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"uncomittedStakeOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpausedBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"updateSeigniorage\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wton\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/ISeigManager.sol\":\"ISeigManager\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"contracts/interfaces/ISeigManager.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.17;\\n\\ninterface ISeigManager {\\n    function registry() external view returns (address);\\n    function depositManager() external view returns (address);\\n    function ton() external view returns (address);\\n    function wton() external view returns (address);\\n    function powerton() external view returns (address);\\n    function tot() external view returns (address);\\n    function coinages(address layer2) external view returns (address);\\n    function commissionRates(address layer2) external view returns (uint256);\\n\\n    function lastCommitBlock(address layer2) external view returns (uint256);\\n    function seigPerBlock() external view returns (uint256);\\n    function lastSeigBlock() external view returns (uint256);\\n    function pausedBlock() external view returns (uint256);\\n    function unpausedBlock() external view returns (uint256);\\n    function DEFAULT_FACTOR() external view returns (uint256);\\n\\n    function deployCoinage(address layer2) external returns (bool);\\n    function setCommissionRate(address layer2, uint256 commission, bool isCommissionRateNegative) external returns (bool);\\n\\n    function uncomittedStakeOf(address layer2, address account) external view returns (uint256);\\n    function stakeOf(address layer2, address account) external view returns (uint256);\\n    function additionalTotBurnAmount(address layer2, address account, uint256 amount) external view returns (uint256 totAmount);\\n\\n    function onTransfer(address sender, address recipient, uint256 amount) external returns (bool);\\n    function updateSeigniorage() external returns (bool);\\n    function onDeposit(address layer2, address account, uint256 amount) external returns (bool);\\n    function onWithdraw(address layer2, address account, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x72e8f6061d0585ba47b52244d7a368bb0c60a20462ac37fb14dea24218d4b10e\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/interfaces/IStorageStateCommittee.sol":{"IStorageStateCommittee":{"abi":[{"inputs":[],"name":"activityRewardPerSecond","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"agendaManager","outputs":[{"internalType":"contract IDAOAgendaManager","name":"","type":"address"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_candidate","type":"address"}],"name":"candidateContract","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"candidateFactory","outputs":[{"internalType":"contract ICandidateFactory","name":"","type":"address"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_candidate","type":"address"}],"name":"candidateInfos","outputs":[{"components":[{"internalType":"address","name":"candidateContract","type":"address"},{"internalType":"uint256","name":"indexMembers","type":"uint256"},{"internalType":"uint128","name":"memberJoinedTime","type":"uint128"},{"internalType":"uint128","name":"rewardPeriod","type":"uint128"},{"internalType":"uint128","name":"claimedTimestamp","type":"uint128"}],"internalType":"struct IStorageStateCommittee.CandidateInfo","name":"","type":"tuple"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_index","type":"uint256"}],"name":"candidates","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"daoVault","outputs":[{"internalType":"contract IDAOVault","name":"","type":"address"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_candidate","type":"address"}],"name":"isMember","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"layer2Registry","outputs":[{"internalType":"contract ILayer2Registry","name":"","type":"address"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"maxMember","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_index","type":"uint256"}],"name":"members","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"quorum","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"seigManager","outputs":[{"internalType":"contract ISeigManager","name":"","type":"address"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"ton","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"activityRewardPerSecond()":"7f331636","agendaManager()":"27fd92fd","candidateContract(address)":"651d08cd","candidateFactory()":"b5dd1158","candidateInfos(address)":"2e011c1e","candidates(uint256)":"3477ee2e","daoVault()":"5903bd6c","isMember(address)":"a230c524","layer2Registry()":"cf2a239c","maxMember()":"03e3c9ac","members(uint256)":"5daf08ca","quorum()":"1703a018","seigManager()":"6fb7f558","ton()":"cc48b947"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"activityRewardPerSecond\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"agendaManager\",\"outputs\":[{\"internalType\":\"contract IDAOAgendaManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_candidate\",\"type\":\"address\"}],\"name\":\"candidateContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"candidateFactory\",\"outputs\":[{\"internalType\":\"contract ICandidateFactory\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_candidate\",\"type\":\"address\"}],\"name\":\"candidateInfos\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"candidateContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"indexMembers\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"memberJoinedTime\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"rewardPeriod\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"claimedTimestamp\",\"type\":\"uint128\"}],\"internalType\":\"struct IStorageStateCommittee.CandidateInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"candidates\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"daoVault\",\"outputs\":[{\"internalType\":\"contract IDAOVault\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_candidate\",\"type\":\"address\"}],\"name\":\"isMember\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"layer2Registry\",\"outputs\":[{\"internalType\":\"contract ILayer2Registry\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxMember\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"members\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"quorum\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"seigManager\",\"outputs\":[{\"internalType\":\"contract ISeigManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ton\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IStorageStateCommittee.sol\":\"IStorageStateCommittee\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"contracts/interfaces/ICandidateFactory.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.17;\\n\\ninterface ICandidateFactory {\\n    function deploy(\\n        address _candidate,\\n        bool _isLayer2Candidate,\\n        string memory _name,\\n        address _committee,\\n        address _seigManager\\n    )\\n        external\\n        returns (address);\\n}\\n\",\"keccak256\":\"0xd335ad2ecb2294d4495a79c8e771d4b4bfd60174c32a20c06dfab80fbc241f0e\",\"license\":\"MIT\"},\"contracts/interfaces/IDAOAgendaManager.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.17;\\n\\nimport { LibAgenda } from \\\"../lib/Agenda.sol\\\";\\n// import { IDAOCommittee } from \\\"../interfaces/IDAOCommittee.sol\\\";\\n\\ninterface IDAOAgendaManager  {\\n    struct Ratio {\\n        uint256 numerator;\\n        uint256 denominator;\\n    }\\n\\n    function setCommittee(address _committee) external;\\n    function setCreateAgendaFees(uint256 _createAgendaFees) external;\\n    function setMinimumNoticePeriodSeconds(uint256 _minimumNoticePeriodSeconds) external;\\n    function setMinimumVotingPeriodSeconds(uint256 _minimumVotingPeriodSeconds) external;\\n    function setExecutingPeriodSeconds(uint256 _executingPeriodSeconds) external;\\n    function newAgenda(\\n        address[] memory _targets,\\n        uint256 _noticePeriodSeconds,\\n        uint256 _votingPeriodSeconds,\\n        bool _atomicExecute,\\n        bytes[] calldata _functionBytecodes\\n    )\\n        external\\n        returns (uint256 agendaID);\\n    function castVote(uint256 _agendaID, address voter, uint256 _vote) external returns (bool);\\n    function setExecutedAgenda(uint256 _agendaID) external;\\n    function setResult(uint256 _agendaID, LibAgenda.AgendaResult _result) external;\\n    function setStatus(uint256 _agendaID, LibAgenda.AgendaStatus _status) external;\\n    function endAgendaVoting(uint256 _agendaID) external;\\n    function setExecutedCount(uint256 _agendaID, uint256 _count) external;\\n     \\n    // -- view functions\\n    function isVoter(uint256 _agendaID, address _user) external view returns (bool);\\n    function hasVoted(uint256 _agendaID, address _user) external view returns (bool);\\n    function getVoteStatus(uint256 _agendaID, address _user) external view returns (bool, uint256);\\n    function getAgendaNoticeEndTimeSeconds(uint256 _agendaID) external view returns (uint256);\\n    function getAgendaVotingStartTimeSeconds(uint256 _agendaID) external view returns (uint256);\\n    function getAgendaVotingEndTimeSeconds(uint256 _agendaID) external view returns (uint256) ;\\n\\n    function canExecuteAgenda(uint256 _agendaID) external view returns (bool);\\n    function getAgendaStatus(uint256 _agendaID) external view returns (uint256 status);\\n    function totalAgendas() external view returns (uint256);\\n    function getAgendaResult(uint256 _agendaID) external view returns (uint256 result, bool executed);\\n    function getExecutionInfo(uint256 _agendaID)\\n        external\\n        view\\n        returns(\\n            address[] memory target,\\n            bytes[] memory functionBytecode,\\n            bool atomicExecute,\\n            uint256 executeStartFrom\\n        );\\n    function isVotableStatus(uint256 _agendaID) external view returns (bool);\\n    function getVotingCount(uint256 _agendaID)\\n        external\\n        view\\n        returns (\\n            uint256 countingYes,\\n            uint256 countingNo,\\n            uint256 countingAbstain\\n        );\\n    function getAgendaTimestamps(uint256 _agendaID)\\n        external\\n        view\\n        returns (\\n            uint256 createdTimestamp,\\n            uint256 noticeEndTimestamp,\\n            uint256 votingStartedTimestamp,\\n            uint256 votingEndTimestamp,\\n            uint256 executedTimestamp\\n        );\\n    function numAgendas() external view returns (uint256);\\n    function getVoters(uint256 _agendaID) external view returns (address[] memory);\\n\\n    function getStatus(uint256 _createAgendaFees) external pure returns (LibAgenda.AgendaStatus);\\n\\n    // getter\\n    // function committee() external view returns (IDAOCommittee);\\n    function createAgendaFees() external view returns (uint256);\\n    function minimumNoticePeriodSeconds() external view returns (uint256);\\n    function minimumVotingPeriodSeconds() external view returns (uint256);\\n    function executingPeriodSeconds() external view returns (uint256);\\n    function agendas(uint256 _index) external view returns (LibAgenda.Agenda memory);\\n    function voterInfos(uint256 _index1, address _index2) external view returns (LibAgenda.Voter memory);\\n}\\n\",\"keccak256\":\"0x6bacc8cf4e3511def801a867bd3a932f001f615ac28482b77f109e4d8571b287\",\"license\":\"MIT\"},\"contracts/interfaces/IDAOVault.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.17;\\n\\ninterface IDAOVault {\\n    function setTON(address _ton) external;\\n    function setWTON(address _wton) external;\\n    function approveTON(address _to, uint256 _amount) external;\\n    function approveWTON(address _to, uint256 _amount) external;\\n    function approveERC20(address _token, address _to, uint256 _amount) external;\\n    function claimTON(address _to, uint256 _amount) external;\\n    function claimWTON(address _to, uint256 _amount) external;\\n    function claimERC20(address _token, address _to, uint256 _amount) external;\\n}\\n\",\"keccak256\":\"0xcd8cea85e6f7672761cdeeb0fc2c7781a6f94919a08a6221c2ab1a4a5bde33cc\",\"license\":\"MIT\"},\"contracts/interfaces/ILayer2Registry.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.17;\\n\\ninterface ILayer2Registry {\\n    function layer2s(address layer2) external view returns (bool);\\n\\n    function register(address layer2) external returns (bool);\\n    function numLayer2s() external view returns (uint256);\\n    function layer2ByIndex(uint256 index) external view returns (address);\\n\\n    function deployCoinage(address layer2, address seigManager) external returns (bool);\\n    function registerAndDeployCoinage(address layer2, address seigManager) external returns (bool);\\n    function unregister(address layer2) external returns (bool);\\n}\\n\",\"keccak256\":\"0x7f69cf374891d446d3cdc65fb61a6d20ef7744cafad2acfb103912e9855393dd\",\"license\":\"MIT\"},\"contracts/interfaces/ISeigManager.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.17;\\n\\ninterface ISeigManager {\\n    function registry() external view returns (address);\\n    function depositManager() external view returns (address);\\n    function ton() external view returns (address);\\n    function wton() external view returns (address);\\n    function powerton() external view returns (address);\\n    function tot() external view returns (address);\\n    function coinages(address layer2) external view returns (address);\\n    function commissionRates(address layer2) external view returns (uint256);\\n\\n    function lastCommitBlock(address layer2) external view returns (uint256);\\n    function seigPerBlock() external view returns (uint256);\\n    function lastSeigBlock() external view returns (uint256);\\n    function pausedBlock() external view returns (uint256);\\n    function unpausedBlock() external view returns (uint256);\\n    function DEFAULT_FACTOR() external view returns (uint256);\\n\\n    function deployCoinage(address layer2) external returns (bool);\\n    function setCommissionRate(address layer2, uint256 commission, bool isCommissionRateNegative) external returns (bool);\\n\\n    function uncomittedStakeOf(address layer2, address account) external view returns (uint256);\\n    function stakeOf(address layer2, address account) external view returns (uint256);\\n    function additionalTotBurnAmount(address layer2, address account, uint256 amount) external view returns (uint256 totAmount);\\n\\n    function onTransfer(address sender, address recipient, uint256 amount) external returns (bool);\\n    function updateSeigniorage() external returns (bool);\\n    function onDeposit(address layer2, address account, uint256 amount) external returns (bool);\\n    function onWithdraw(address layer2, address account, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x72e8f6061d0585ba47b52244d7a368bb0c60a20462ac37fb14dea24218d4b10e\",\"license\":\"MIT\"},\"contracts/interfaces/IStorageStateCommittee.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.17;\\npragma abicoder v2;\\n\\nimport { ICandidateFactory } from \\\"../interfaces/ICandidateFactory.sol\\\";\\nimport { ILayer2Registry } from \\\"../interfaces/ILayer2Registry.sol\\\";\\nimport { ISeigManager } from \\\"../interfaces/ISeigManager.sol\\\";\\nimport { IDAOAgendaManager } from \\\"../interfaces/IDAOAgendaManager.sol\\\";\\nimport { IDAOVault } from \\\"../interfaces/IDAOVault.sol\\\";\\n\\ninterface IStorageStateCommittee {\\n    struct CandidateInfo {\\n        address candidateContract;\\n        uint256 indexMembers;\\n        uint128 memberJoinedTime;\\n        uint128 rewardPeriod;\\n        uint128 claimedTimestamp;\\n    }\\n\\n    function ton() external returns (address);\\n    function daoVault() external returns (IDAOVault);\\n    function agendaManager() external returns (IDAOAgendaManager);\\n    function candidateFactory() external returns (ICandidateFactory);\\n    function layer2Registry() external returns (ILayer2Registry);\\n    function seigManager() external returns (ISeigManager);\\n    function candidates(uint256 _index) external returns (address);\\n    function members(uint256 _index) external returns (address);\\n    function maxMember() external returns (uint256);\\n    function candidateInfos(address _candidate) external returns (CandidateInfo memory);\\n    function quorum() external returns (uint256);\\n    function activityRewardPerSecond() external returns (uint256);\\n\\n    function isMember(address _candidate) external returns (bool);\\n    function candidateContract(address _candidate) external returns (address);\\n}\\n\\n\",\"keccak256\":\"0x23a301acc48ede3c82b00b97714c2f123b47de278e75dd55374596b77312eedf\",\"license\":\"MIT\"},\"contracts/lib/Agenda.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.17;\\n\\nlibrary LibAgenda {\\n    //using LibAgenda for Agenda;\\n\\n    enum AgendaStatus { NONE, NOTICE, VOTING, WAITING_EXEC, EXECUTED, ENDED }\\n    enum AgendaResult { PENDING, ACCEPT, REJECT, DISMISS }\\n\\n    //votor : based operator \\n    struct Voter {\\n        bool isVoter;\\n        bool hasVoted;\\n        uint256 vote;\\n    }\\n\\n    // counting abstainVotes yesVotes noVotes\\n    struct Agenda {\\n        uint256 createdTimestamp;\\n        uint256 noticeEndTimestamp;\\n        uint256 votingPeriodInSeconds;\\n        uint256 votingStartedTimestamp;\\n        uint256 votingEndTimestamp;\\n        uint256 executableLimitTimestamp;\\n        uint256 executedTimestamp;\\n        uint256 countingYes;\\n        uint256 countingNo;\\n        uint256 countingAbstain;\\n        AgendaStatus status;\\n        AgendaResult result;\\n        address[] voters;\\n        bool executed;\\n    }\\n\\n    struct AgendaExecutionInfo {\\n        address[] targets;\\n        bytes[] functionBytecodes;\\n        bool atomicExecute;\\n        uint256 executeStartFrom;\\n    }\\n\\n    /*function getAgenda(Agenda[] storage agendas, uint256 index) public view returns (Agenda storage agenda) {\\n        return agendas[index];\\n    }*/\\n}\",\"keccak256\":\"0xec5e22ccc75c38403b0ab74466033a19de5f2745bd5e18f2d64b42af22a116a1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/lib/Agenda.sol":{"LibAgenda":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f3a69f5260dbe810cbfd7bdf774438b0cb73518de84eb8d368efe501086ef16c64736f6c63430008120033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURN 0xA6 SWAP16 MSTORE PUSH1 0xDB 0xE8 LT 0xCB REVERT PUSH28 0xDF774438B0CB73518DE84EB8D368EFE501086EF16C64736F6C634300 ADDMOD SLT STOP CALLER ","sourceMap":"58:1164:20:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;58:1164:20;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f3a69f5260dbe810cbfd7bdf774438b0cb73518de84eb8d368efe501086ef16c64736f6c63430008120033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURN 0xA6 SWAP16 MSTORE PUSH1 0xDB 0xE8 LT 0xCB REVERT PUSH28 0xDF774438B0CB73518DE84EB8D368EFE501086EF16C64736F6C634300 ADDMOD SLT STOP CALLER ","sourceMap":"58:1164:20:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/lib/Agenda.sol\":\"LibAgenda\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"contracts/lib/Agenda.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.17;\\n\\nlibrary LibAgenda {\\n    //using LibAgenda for Agenda;\\n\\n    enum AgendaStatus { NONE, NOTICE, VOTING, WAITING_EXEC, EXECUTED, ENDED }\\n    enum AgendaResult { PENDING, ACCEPT, REJECT, DISMISS }\\n\\n    //votor : based operator \\n    struct Voter {\\n        bool isVoter;\\n        bool hasVoted;\\n        uint256 vote;\\n    }\\n\\n    // counting abstainVotes yesVotes noVotes\\n    struct Agenda {\\n        uint256 createdTimestamp;\\n        uint256 noticeEndTimestamp;\\n        uint256 votingPeriodInSeconds;\\n        uint256 votingStartedTimestamp;\\n        uint256 votingEndTimestamp;\\n        uint256 executableLimitTimestamp;\\n        uint256 executedTimestamp;\\n        uint256 countingYes;\\n        uint256 countingNo;\\n        uint256 countingAbstain;\\n        AgendaStatus status;\\n        AgendaResult result;\\n        address[] voters;\\n        bool executed;\\n    }\\n\\n    struct AgendaExecutionInfo {\\n        address[] targets;\\n        bytes[] functionBytecodes;\\n        bool atomicExecute;\\n        uint256 executeStartFrom;\\n    }\\n\\n    /*function getAgenda(Agenda[] storage agendas, uint256 index) public view returns (Agenda storage agenda) {\\n        return agendas[index];\\n    }*/\\n}\",\"keccak256\":\"0xec5e22ccc75c38403b0ab74466033a19de5f2745bd5e18f2d64b42af22a116a1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/test/DAOCommitteeProxy.sol":{"DAOCommitteeProxy":{"abi":[{"inputs":[{"internalType":"address","name":"_ton","type":"address"},{"internalType":"address","name":"_impl","type":"address"},{"internalType":"address","name":"_seigManager","type":"address"},{"internalType":"address","name":"_layer2Registry","type":"address"},{"internalType":"address","name":"_agendaManager","type":"address"},{"internalType":"address","name":"_candidateFactory","type":"address"},{"internalType":"address","name":"_daoVault","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"},{"stateMutability":"nonpayable","type":"fallback"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"activityRewardPerSecond","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"agendaManager","outputs":[{"internalType":"contract IDAOAgendaManager","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_candidate","type":"address"}],"name":"candidateContract","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"candidateFactory","outputs":[{"internalType":"contract ICandidateFactory","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_candidate","type":"address"}],"name":"candidateInfos","outputs":[{"components":[{"internalType":"address","name":"candidateContract","type":"address"},{"internalType":"uint256","name":"indexMembers","type":"uint256"},{"internalType":"uint128","name":"memberJoinedTime","type":"uint128"},{"internalType":"uint128","name":"rewardPeriod","type":"uint128"},{"internalType":"uint128","name":"claimedTimestamp","type":"uint128"}],"internalType":"struct IStorageStateCommittee.CandidateInfo","name":"","type":"tuple"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"candidates","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"daoVault","outputs":[{"internalType":"contract IDAOVault","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"implementation","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_candidate","type":"address"}],"name":"isMember","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"layer2Registry","outputs":[{"internalType":"contract ILayer2Registry","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"maxMember","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"members","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pauseProxy","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"quorum","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"seigManager","outputs":[{"internalType":"contract ISeigManager","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bool","name":"_pause","type":"bool"}],"name":"setProxyPause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"ton","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"impl","type":"address"}],"name":"upgradeTo","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"events":{"RoleAdminChanged(bytes32,bytes32,bytes32)":{"details":"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._"},"RoleGranted(bytes32,address,address)":{"details":"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."},"RoleRevoked(bytes32,address,address)":{"details":"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"}},"kind":"dev","methods":{"getRoleAdmin(bytes32)":{"details":"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."},"grantRole(bytes32,address)":{"details":"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."},"hasRole(bytes32,address)":{"details":"Returns `true` if `account` has been granted `role`."},"renounceRole(bytes32,address)":{"details":"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event."},"revokeRole(bytes32,address)":{"details":"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."},"setProxyPause(bool)":{"params":{"_pause":"true:pause or false:resume"}},"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."},"upgradeTo(address)":{"params":{"impl":"New implementation contract address"}}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_1561":{"entryPoint":null,"id":1561,"parameterSlots":0,"returnSlots":0},"@_3094":{"entryPoint":null,"id":3094,"parameterSlots":7,"returnSlots":0},"@_grantRole_3464":{"entryPoint":615,"id":3464,"parameterSlots":2,"returnSlots":0},"@_msgSender_3581":{"entryPoint":null,"id":3581,"parameterSlots":0,"returnSlots":1},"@_registerInterface_1581":{"entryPoint":470,"id":1581,"parameterSlots":1,"returnSlots":0},"@_setupRole_3404":{"entryPoint":599,"id":3404,"parameterSlots":2,"returnSlots":0},"@hasRole_3260":{"entryPoint":null,"id":3260,"parameterSlots":2,"returnSlots":1},"abi_decode_address_fromMemory":{"entryPoint":779,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_addresst_addresst_addresst_addresst_addresst_addresst_address_fromMemory":{"entryPoint":808,"id":null,"parameterSlots":2,"returnSlots":7},"abi_encode_tuple_t_stringliteral_282912c0dfceceb28d77d0333f496b83948f9ba5b3154358a8b140b849289dee__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_da208ebbc28d2dfe7d6ba43fa968507881a99f2c248db7b455c564aa8d0fc19d__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:1638:29","statements":[{"nodeType":"YulBlock","src":"6:3:29","statements":[]},{"body":{"nodeType":"YulBlock","src":"74:117:29","statements":[{"nodeType":"YulAssignment","src":"84:22:29","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"99:6:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"93:5:29"},"nodeType":"YulFunctionCall","src":"93:13:29"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"84:5:29"}]},{"body":{"nodeType":"YulBlock","src":"169:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"178:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"181:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"171:6:29"},"nodeType":"YulFunctionCall","src":"171:12:29"},"nodeType":"YulExpressionStatement","src":"171:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"128:5:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"139:5:29"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"154:3:29","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"159:1:29","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"150:3:29"},"nodeType":"YulFunctionCall","src":"150:11:29"},{"kind":"number","nodeType":"YulLiteral","src":"163:1:29","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"146:3:29"},"nodeType":"YulFunctionCall","src":"146:19:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"135:3:29"},"nodeType":"YulFunctionCall","src":"135:31:29"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"125:2:29"},"nodeType":"YulFunctionCall","src":"125:42:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"118:6:29"},"nodeType":"YulFunctionCall","src":"118:50:29"},"nodeType":"YulIf","src":"115:70:29"}]},"name":"abi_decode_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"53:6:29","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"64:5:29","type":""}],"src":"14:177:29"},{"body":{"nodeType":"YulBlock","src":"379:539:29","statements":[{"body":{"nodeType":"YulBlock","src":"426:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"435:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"438:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"428:6:29"},"nodeType":"YulFunctionCall","src":"428:12:29"},"nodeType":"YulExpressionStatement","src":"428:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"400:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"409:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"396:3:29"},"nodeType":"YulFunctionCall","src":"396:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"421:3:29","type":"","value":"224"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"392:3:29"},"nodeType":"YulFunctionCall","src":"392:33:29"},"nodeType":"YulIf","src":"389:53:29"},{"nodeType":"YulAssignment","src":"451:50:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"491:9:29"}],"functionName":{"name":"abi_decode_address_fromMemory","nodeType":"YulIdentifier","src":"461:29:29"},"nodeType":"YulFunctionCall","src":"461:40:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"451:6:29"}]},{"nodeType":"YulAssignment","src":"510:59:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"554:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"565:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"550:3:29"},"nodeType":"YulFunctionCall","src":"550:18:29"}],"functionName":{"name":"abi_decode_address_fromMemory","nodeType":"YulIdentifier","src":"520:29:29"},"nodeType":"YulFunctionCall","src":"520:49:29"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"510:6:29"}]},{"nodeType":"YulAssignment","src":"578:59:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"622:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"633:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"618:3:29"},"nodeType":"YulFunctionCall","src":"618:18:29"}],"functionName":{"name":"abi_decode_address_fromMemory","nodeType":"YulIdentifier","src":"588:29:29"},"nodeType":"YulFunctionCall","src":"588:49:29"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"578:6:29"}]},{"nodeType":"YulAssignment","src":"646:59:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"690:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"701:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"686:3:29"},"nodeType":"YulFunctionCall","src":"686:18:29"}],"functionName":{"name":"abi_decode_address_fromMemory","nodeType":"YulIdentifier","src":"656:29:29"},"nodeType":"YulFunctionCall","src":"656:49:29"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"646:6:29"}]},{"nodeType":"YulAssignment","src":"714:60:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"758:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"769:3:29","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"754:3:29"},"nodeType":"YulFunctionCall","src":"754:19:29"}],"functionName":{"name":"abi_decode_address_fromMemory","nodeType":"YulIdentifier","src":"724:29:29"},"nodeType":"YulFunctionCall","src":"724:50:29"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"714:6:29"}]},{"nodeType":"YulAssignment","src":"783:60:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"827:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"838:3:29","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"823:3:29"},"nodeType":"YulFunctionCall","src":"823:19:29"}],"functionName":{"name":"abi_decode_address_fromMemory","nodeType":"YulIdentifier","src":"793:29:29"},"nodeType":"YulFunctionCall","src":"793:50:29"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"783:6:29"}]},{"nodeType":"YulAssignment","src":"852:60:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"896:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"907:3:29","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"892:3:29"},"nodeType":"YulFunctionCall","src":"892:19:29"}],"functionName":{"name":"abi_decode_address_fromMemory","nodeType":"YulIdentifier","src":"862:29:29"},"nodeType":"YulFunctionCall","src":"862:50:29"},"variableNames":[{"name":"value6","nodeType":"YulIdentifier","src":"852:6:29"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_addresst_addresst_addresst_addresst_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"297:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"308:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"320:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"328:6:29","type":""},{"name":"value2","nodeType":"YulTypedName","src":"336:6:29","type":""},{"name":"value3","nodeType":"YulTypedName","src":"344:6:29","type":""},{"name":"value4","nodeType":"YulTypedName","src":"352:6:29","type":""},{"name":"value5","nodeType":"YulTypedName","src":"360:6:29","type":""},{"name":"value6","nodeType":"YulTypedName","src":"368:6:29","type":""}],"src":"196:722:29"},{"body":{"nodeType":"YulBlock","src":"1097:182:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1114:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"1125:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1107:6:29"},"nodeType":"YulFunctionCall","src":"1107:21:29"},"nodeType":"YulExpressionStatement","src":"1107:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1148:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"1159:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1144:3:29"},"nodeType":"YulFunctionCall","src":"1144:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"1164:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1137:6:29"},"nodeType":"YulFunctionCall","src":"1137:30:29"},"nodeType":"YulExpressionStatement","src":"1137:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1187:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"1198:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1183:3:29"},"nodeType":"YulFunctionCall","src":"1183:18:29"},{"hexValue":"44414f436f6d6d697474656550726f78793a20696e707574206973207a65726f","kind":"string","nodeType":"YulLiteral","src":"1203:34:29","type":"","value":"DAOCommitteeProxy: input is zero"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1176:6:29"},"nodeType":"YulFunctionCall","src":"1176:62:29"},"nodeType":"YulExpressionStatement","src":"1176:62:29"},{"nodeType":"YulAssignment","src":"1247:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1259:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"1270:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1255:3:29"},"nodeType":"YulFunctionCall","src":"1255:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1247:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_da208ebbc28d2dfe7d6ba43fa968507881a99f2c248db7b455c564aa8d0fc19d__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1074:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1088:4:29","type":""}],"src":"923:356:29"},{"body":{"nodeType":"YulBlock","src":"1458:178:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1475:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"1486:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1468:6:29"},"nodeType":"YulFunctionCall","src":"1468:21:29"},"nodeType":"YulExpressionStatement","src":"1468:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1509:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"1520:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1505:3:29"},"nodeType":"YulFunctionCall","src":"1505:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"1525:2:29","type":"","value":"28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1498:6:29"},"nodeType":"YulFunctionCall","src":"1498:30:29"},"nodeType":"YulExpressionStatement","src":"1498:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1548:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"1559:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1544:3:29"},"nodeType":"YulFunctionCall","src":"1544:18:29"},{"hexValue":"4552433136353a20696e76616c696420696e74657266616365206964","kind":"string","nodeType":"YulLiteral","src":"1564:30:29","type":"","value":"ERC165: invalid interface id"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1537:6:29"},"nodeType":"YulFunctionCall","src":"1537:58:29"},"nodeType":"YulExpressionStatement","src":"1537:58:29"},{"nodeType":"YulAssignment","src":"1604:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1616:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"1627:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1612:3:29"},"nodeType":"YulFunctionCall","src":"1612:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1604:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_282912c0dfceceb28d77d0333f496b83948f9ba5b3154358a8b140b849289dee__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1435:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1449:4:29","type":""}],"src":"1284:352:29"}]},"contents":"{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_addresst_addresst_addresst_addresst_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6\n    {\n        if slt(sub(dataEnd, headStart), 224) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        value1 := abi_decode_address_fromMemory(add(headStart, 32))\n        value2 := abi_decode_address_fromMemory(add(headStart, 64))\n        value3 := abi_decode_address_fromMemory(add(headStart, 96))\n        value4 := abi_decode_address_fromMemory(add(headStart, 128))\n        value5 := abi_decode_address_fromMemory(add(headStart, 160))\n        value6 := abi_decode_address_fromMemory(add(headStart, 192))\n    }\n    function abi_encode_tuple_t_stringliteral_da208ebbc28d2dfe7d6ba43fa968507881a99f2c248db7b455c564aa8d0fc19d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"DAOCommitteeProxy: input is zero\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_282912c0dfceceb28d77d0333f496b83948f9ba5b3154358a8b140b849289dee__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"ERC165: invalid interface id\")\n        tail := add(headStart, 96)\n    }\n}","id":29,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b50604051620011aa380380620011aa833981016040819052620000349162000328565b620000466301ffc9a760e01b620001d6565b6001600160a01b0387161515806200006657506001600160a01b03861615155b806200007a57506001600160a01b03851615155b806200008e57506001600160a01b03841615155b80620000a257506001600160a01b03831615155b80620000b657506001600160a01b03821615155b620001085760405162461bcd60e51b815260206004820181905260248201527f44414f436f6d6d697474656550726f78793a20696e707574206973207a65726f60448201526064015b60405180910390fd5b600080546001600160a01b03199081166001600160a01b038a811691909117909255600e8054821689841617905560058054821688841617905560048054821687841617905560028054821686841617815560038054831686851617905560018054909216928416929092179055600a55660b43fd20b59a0a600b55620001af7f4273ca16e32229270629d776700e1c07e4a1080fc9b26d21f6608efc2b31dc4d620001d6565b620001bc60003362000257565b620001c960003062000257565b50505050505050620003bd565b6001600160e01b03198082169003620002325760405162461bcd60e51b815260206004820152601c60248201527f4552433136353a20696e76616c696420696e74657266616365206964000000006044820152606401620000ff565b6001600160e01b0319166000908152600d60205260409020805460ff19166001179055565b62000263828262000267565b5050565b6000828152600c602090815260408083206001600160a01b038516845290915290205460ff1662000263576000828152600c602090815260408083206001600160a01b03851684529091529020805460ff19166001179055620002c73390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b80516001600160a01b03811681146200032357600080fd5b919050565b600080600080600080600060e0888a0312156200034457600080fd5b6200034f886200030b565b96506200035f602089016200030b565b95506200036f604089016200030b565b94506200037f606089016200030b565b93506200038f608089016200030b565b92506200039f60a089016200030b565b9150620003af60c089016200030b565b905092959891949750929550565b610ddd80620003cd6000396000f3fe608060405234801561001057600080fd5b50600436106101635760003560e01c80635daf08ca116100ce57806391d148541161008757806391d14854146103e6578063a217fddf146103f9578063a230c52414610401578063b5dd115814610438578063cc48b9471461044b578063cf2a239c1461045e578063d547741f1461047157610163565b80635daf08ca1461036457806363a8fd8914610377578063651d08cd1461038b5780636fb7f558146103b75780637cb00d25146103ca5780637f331636146103dd57610163565b80632f2ff15d116101205780632f2ff15d146102f45780633477ee2e1461030757806336568abe1461031a5780633659cfe61461032d5780635903bd6c146103405780635c60da1b1461035357610163565b806301ffc9a71461016d57806303e3c9ac146101955780631703a018146101ac578063248a9ca3146101b557806327fd92fd146101d85780632e011c1e14610203575b61016b610484565b005b61018061017b366004610b49565b610550565b60405190151581526020015b60405180910390f35b61019e60085481565b60405190815260200161018c565b61019e600a5481565b61019e6101c3366004610b73565b6000908152600c602052604090206001015490565b6002546101eb906001600160a01b031681565b6040516001600160a01b03909116815260200161018c565b61029f610211366004610ba8565b6040805160a0808201835260008083526020808401829052838501829052606080850183905260809485018390526001600160a01b0396871683526009825291859020855193840186528054909616835260018601549083015260028501546001600160801b0380821695840195909552600160801b90048416908201526003909301549091169082015290565b6040805182516001600160a01b0316815260208084015190820152828201516001600160801b03908116928201929092526060808401518316908201526080928301519091169181019190915260a00161018c565b61016b610302366004610bc3565b610587565b6101eb610315366004610b73565b6105ac565b61016b610328366004610bc3565b6105d6565b61016b61033b366004610ba8565b610654565b6001546101eb906001600160a01b031681565b600e546001600160a01b03166101eb565b6101eb610372366004610b73565b61079c565b600e5461018090600160a01b900460ff1681565b6101eb610399366004610ba8565b6001600160a01b039081166000908152600960205260409020541690565b6005546101eb906001600160a01b031681565b61016b6103d8366004610bef565b6107ac565b61019e600b5481565b6101806103f4366004610bc3565b6107f1565b61019e600081565b61018061040f366004610ba8565b6001600160a01b03166000908152600960205260409020600201546001600160801b0316151590565b6003546101eb906001600160a01b031681565b6000546101eb906001600160a01b031681565b6004546101eb906001600160a01b031681565b61016b61047f366004610bc3565b61081c565b6000610498600e546001600160a01b031690565b90506001600160a01b038116158015906104bc5750600e54600160a01b900460ff16155b6105275760405162461bcd60e51b815260206004820152603160248201527f44414f436f6d6d697474656550726f78793a20696d706c206973207a65726f206044820152704f522070726f78792069732066616c736560781b60648201526084015b60405180910390fd5b3660008037600080366000845af43d6000803e808015610546573d6000f35b3d6000fd5b505050565b60006001600160e01b03198216637965db0b60e01b148061058157506301ffc9a760e01b6001600160e01b03198316145b92915050565b6000828152600c60205260409020600101546105a281610841565b61054b838361084e565b600681815481106105bc57600080fd5b6000918252602090912001546001600160a01b0316905081565b6001600160a01b03811633146106465760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b606482015260840161051e565b61065082826108d4565b5050565b61065f6000336107f1565b61067b5760405162461bcd60e51b815260040161051e90610c11565b600e546001600160a01b03166106d35760405162461bcd60e51b815260206004820181905260248201527f44414f436f6d6d697474656550726f78793a20696e707574206973207a65726f604482015260640161051e565b600e546001600160a01b038083169116036107525760405162461bcd60e51b815260206004820152603960248201527f44414f436f6d6d697474656550726f78793a2054686520696e70757420616464604482015278726573732069732073616d652061732074686520737461746560381b606482015260840161051e565b600e80546001600160a01b0319166001600160a01b0383169081179091556040517fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b600781815481106105bc57600080fd5b6107b76000336107f1565b6107d35760405162461bcd60e51b815260040161051e90610c11565b600e8054911515600160a01b0260ff60a01b19909216919091179055565b6000918252600c602090815260408084206001600160a01b0393909316845291905290205460ff1690565b6000828152600c602052604090206001015461083781610841565b61054b83836108d4565b61084b813361093b565b50565b61085882826107f1565b610650576000828152600c602090815260408083206001600160a01b03851684529091529020805460ff191660011790556108903390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6108de82826107f1565b15610650576000828152600c602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b61094582826107f1565b6106505761095281610994565b61095d8360206109a6565b60405160200161096e929190610c82565b60408051601f198184030181529082905262461bcd60e51b825261051e91600401610cf1565b60606105816001600160a01b03831660145b606060006109b5836002610d3a565b6109c0906002610d51565b67ffffffffffffffff8111156109d8576109d8610d64565b6040519080825280601f01601f191660200182016040528015610a02576020820181803683370190505b509050600360fc1b81600081518110610a1d57610a1d610d7a565b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110610a4c57610a4c610d7a565b60200101906001600160f81b031916908160001a9053506000610a70846002610d3a565b610a7b906001610d51565b90505b6001811115610af3576f181899199a1a9b1b9c1cb0b131b232b360811b85600f1660108110610aaf57610aaf610d7a565b1a60f81b828281518110610ac557610ac5610d7a565b60200101906001600160f81b031916908160001a90535060049490941c93610aec81610d90565b9050610a7e565b508315610b425760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e74604482015260640161051e565b9392505050565b600060208284031215610b5b57600080fd5b81356001600160e01b031981168114610b4257600080fd5b600060208284031215610b8557600080fd5b5035919050565b80356001600160a01b0381168114610ba357600080fd5b919050565b600060208284031215610bba57600080fd5b610b4282610b8c565b60008060408385031215610bd657600080fd5b82359150610be660208401610b8c565b90509250929050565b600060208284031215610c0157600080fd5b81358015158114610b4257600080fd5b6020808252602d908201527f44414f436f6d6d697474656550726f78793a206d73672e73656e64657220697360408201526c103737ba1030b71030b236b4b760991b606082015260800190565b60005b83811015610c79578181015183820152602001610c61565b50506000910152565b76020b1b1b2b9b9a1b7b73a3937b61d1030b1b1b7bab73a1604d1b815260008351610cb4816017850160208801610c5e565b7001034b99036b4b9b9b4b733903937b6329607d1b6017918401918201528351610ce5816028840160208801610c5e565b01602801949350505050565b6020815260008251806020840152610d10816040850160208701610c5e565b601f01601f19169190910160400192915050565b634e487b7160e01b600052601160045260246000fd5b808202811582820484141761058157610581610d24565b8082018082111561058157610581610d24565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b600081610d9f57610d9f610d24565b50600019019056fea264697066735822122040cdc7e2cce6f60b2d522c0b9ed3ee65054ea9eed973e0225e32bcfe17e0a0af64736f6c63430008120033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x11AA CODESIZE SUB DUP1 PUSH3 0x11AA DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x328 JUMP JUMPDEST PUSH3 0x46 PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH3 0x1D6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND ISZERO ISZERO DUP1 PUSH3 0x66 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND ISZERO ISZERO JUMPDEST DUP1 PUSH3 0x7A JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND ISZERO ISZERO JUMPDEST DUP1 PUSH3 0x8E JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ISZERO ISZERO JUMPDEST DUP1 PUSH3 0xA2 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO ISZERO JUMPDEST DUP1 PUSH3 0xB6 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO ISZERO JUMPDEST PUSH3 0x108 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x44414F436F6D6D697474656550726F78793A20696E707574206973207A65726F PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 DUP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP3 SSTORE PUSH1 0xE DUP1 SLOAD DUP3 AND DUP10 DUP5 AND OR SWAP1 SSTORE PUSH1 0x5 DUP1 SLOAD DUP3 AND DUP9 DUP5 AND OR SWAP1 SSTORE PUSH1 0x4 DUP1 SLOAD DUP3 AND DUP8 DUP5 AND OR SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD DUP3 AND DUP7 DUP5 AND OR DUP2 SSTORE PUSH1 0x3 DUP1 SLOAD DUP4 AND DUP7 DUP6 AND OR SWAP1 SSTORE PUSH1 0x1 DUP1 SLOAD SWAP1 SWAP3 AND SWAP3 DUP5 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SSTORE PUSH1 0xA SSTORE PUSH7 0xB43FD20B59A0A PUSH1 0xB SSTORE PUSH3 0x1AF PUSH32 0x4273CA16E32229270629D776700E1C07E4A1080FC9B26D21F6608EFC2B31DC4D PUSH3 0x1D6 JUMP JUMPDEST PUSH3 0x1BC PUSH1 0x0 CALLER PUSH3 0x257 JUMP JUMPDEST PUSH3 0x1C9 PUSH1 0x0 ADDRESS PUSH3 0x257 JUMP JUMPDEST POP POP POP POP POP POP POP PUSH3 0x3BD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP1 DUP3 AND SWAP1 SUB PUSH3 0x232 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433136353A20696E76616C696420696E7465726661636520696400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0xFF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH3 0x263 DUP3 DUP3 PUSH3 0x267 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH3 0x263 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH3 0x2C7 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x323 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH3 0x344 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x34F DUP9 PUSH3 0x30B JUMP JUMPDEST SWAP7 POP PUSH3 0x35F PUSH1 0x20 DUP10 ADD PUSH3 0x30B JUMP JUMPDEST SWAP6 POP PUSH3 0x36F PUSH1 0x40 DUP10 ADD PUSH3 0x30B JUMP JUMPDEST SWAP5 POP PUSH3 0x37F PUSH1 0x60 DUP10 ADD PUSH3 0x30B JUMP JUMPDEST SWAP4 POP PUSH3 0x38F PUSH1 0x80 DUP10 ADD PUSH3 0x30B JUMP JUMPDEST SWAP3 POP PUSH3 0x39F PUSH1 0xA0 DUP10 ADD PUSH3 0x30B JUMP JUMPDEST SWAP2 POP PUSH3 0x3AF PUSH1 0xC0 DUP10 ADD PUSH3 0x30B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH2 0xDDD DUP1 PUSH3 0x3CD PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x163 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5DAF08CA GT PUSH2 0xCE JUMPI DUP1 PUSH4 0x91D14854 GT PUSH2 0x87 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x3E6 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x3F9 JUMPI DUP1 PUSH4 0xA230C524 EQ PUSH2 0x401 JUMPI DUP1 PUSH4 0xB5DD1158 EQ PUSH2 0x438 JUMPI DUP1 PUSH4 0xCC48B947 EQ PUSH2 0x44B JUMPI DUP1 PUSH4 0xCF2A239C EQ PUSH2 0x45E JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x471 JUMPI PUSH2 0x163 JUMP JUMPDEST DUP1 PUSH4 0x5DAF08CA EQ PUSH2 0x364 JUMPI DUP1 PUSH4 0x63A8FD89 EQ PUSH2 0x377 JUMPI DUP1 PUSH4 0x651D08CD EQ PUSH2 0x38B JUMPI DUP1 PUSH4 0x6FB7F558 EQ PUSH2 0x3B7 JUMPI DUP1 PUSH4 0x7CB00D25 EQ PUSH2 0x3CA JUMPI DUP1 PUSH4 0x7F331636 EQ PUSH2 0x3DD JUMPI PUSH2 0x163 JUMP JUMPDEST DUP1 PUSH4 0x2F2FF15D GT PUSH2 0x120 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x2F4 JUMPI DUP1 PUSH4 0x3477EE2E EQ PUSH2 0x307 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x31A JUMPI DUP1 PUSH4 0x3659CFE6 EQ PUSH2 0x32D JUMPI DUP1 PUSH4 0x5903BD6C EQ PUSH2 0x340 JUMPI DUP1 PUSH4 0x5C60DA1B EQ PUSH2 0x353 JUMPI PUSH2 0x163 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x16D JUMPI DUP1 PUSH4 0x3E3C9AC EQ PUSH2 0x195 JUMPI DUP1 PUSH4 0x1703A018 EQ PUSH2 0x1AC JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x1B5 JUMPI DUP1 PUSH4 0x27FD92FD EQ PUSH2 0x1D8 JUMPI DUP1 PUSH4 0x2E011C1E EQ PUSH2 0x203 JUMPI JUMPDEST PUSH2 0x16B PUSH2 0x484 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x180 PUSH2 0x17B CALLDATASIZE PUSH1 0x4 PUSH2 0xB49 JUMP JUMPDEST PUSH2 0x550 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19E PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x18C JUMP JUMPDEST PUSH2 0x19E PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH2 0x19E PUSH2 0x1C3 CALLDATASIZE PUSH1 0x4 PUSH2 0xB73 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x1EB SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x18C JUMP JUMPDEST PUSH2 0x29F PUSH2 0x211 CALLDATASIZE PUSH1 0x4 PUSH2 0xBA8 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP1 DUP3 ADD DUP4 MSTORE PUSH1 0x0 DUP1 DUP4 MSTORE PUSH1 0x20 DUP1 DUP5 ADD DUP3 SWAP1 MSTORE DUP4 DUP6 ADD DUP3 SWAP1 MSTORE PUSH1 0x60 DUP1 DUP6 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 SWAP5 DUP6 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP7 DUP8 AND DUP4 MSTORE PUSH1 0x9 DUP3 MSTORE SWAP2 DUP6 SWAP1 KECCAK256 DUP6 MLOAD SWAP4 DUP5 ADD DUP7 MSTORE DUP1 SLOAD SWAP1 SWAP7 AND DUP4 MSTORE PUSH1 0x1 DUP7 ADD SLOAD SWAP1 DUP4 ADD MSTORE PUSH1 0x2 DUP6 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP1 DUP3 AND SWAP6 DUP5 ADD SWAP6 SWAP1 SWAP6 MSTORE PUSH1 0x1 PUSH1 0x80 SHL SWAP1 DIV DUP5 AND SWAP1 DUP3 ADD MSTORE PUSH1 0x3 SWAP1 SWAP4 ADD SLOAD SWAP1 SWAP2 AND SWAP1 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP1 DUP5 ADD MLOAD SWAP1 DUP3 ADD MSTORE DUP3 DUP3 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 DUP2 AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP1 DUP5 ADD MLOAD DUP4 AND SWAP1 DUP3 ADD MSTORE PUSH1 0x80 SWAP3 DUP4 ADD MLOAD SWAP1 SWAP2 AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xA0 ADD PUSH2 0x18C JUMP JUMPDEST PUSH2 0x16B PUSH2 0x302 CALLDATASIZE PUSH1 0x4 PUSH2 0xBC3 JUMP JUMPDEST PUSH2 0x587 JUMP JUMPDEST PUSH2 0x1EB PUSH2 0x315 CALLDATASIZE PUSH1 0x4 PUSH2 0xB73 JUMP JUMPDEST PUSH2 0x5AC JUMP JUMPDEST PUSH2 0x16B PUSH2 0x328 CALLDATASIZE PUSH1 0x4 PUSH2 0xBC3 JUMP JUMPDEST PUSH2 0x5D6 JUMP JUMPDEST PUSH2 0x16B PUSH2 0x33B CALLDATASIZE PUSH1 0x4 PUSH2 0xBA8 JUMP JUMPDEST PUSH2 0x654 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x1EB SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0xE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1EB JUMP JUMPDEST PUSH2 0x1EB PUSH2 0x372 CALLDATASIZE PUSH1 0x4 PUSH2 0xB73 JUMP JUMPDEST PUSH2 0x79C JUMP JUMPDEST PUSH1 0xE SLOAD PUSH2 0x180 SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x1EB PUSH2 0x399 CALLDATASIZE PUSH1 0x4 PUSH2 0xBA8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND SWAP1 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x1EB SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x16B PUSH2 0x3D8 CALLDATASIZE PUSH1 0x4 PUSH2 0xBEF JUMP JUMPDEST PUSH2 0x7AC JUMP JUMPDEST PUSH2 0x19E PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH2 0x180 PUSH2 0x3F4 CALLDATASIZE PUSH1 0x4 PUSH2 0xBC3 JUMP JUMPDEST PUSH2 0x7F1 JUMP JUMPDEST PUSH2 0x19E PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH2 0x180 PUSH2 0x40F CALLDATASIZE PUSH1 0x4 PUSH2 0xBA8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x1EB SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x1EB SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x1EB SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x16B PUSH2 0x47F CALLDATASIZE PUSH1 0x4 PUSH2 0xBC3 JUMP JUMPDEST PUSH2 0x81C JUMP JUMPDEST PUSH1 0x0 PUSH2 0x498 PUSH1 0xE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x4BC JUMPI POP PUSH1 0xE SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x527 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x31 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x44414F436F6D6D697474656550726F78793A20696D706C206973207A65726F20 PUSH1 0x44 DUP3 ADD MSTORE PUSH17 0x4F522070726F78792069732066616C7365 PUSH1 0x78 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLDATASIZE PUSH1 0x0 DUP1 CALLDATACOPY PUSH1 0x0 DUP1 CALLDATASIZE PUSH1 0x0 DUP5 GAS DELEGATECALL RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY DUP1 DUP1 ISZERO PUSH2 0x546 JUMPI RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x7965DB0B PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x581 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x5A2 DUP2 PUSH2 0x841 JUMP JUMPDEST PUSH2 0x54B DUP4 DUP4 PUSH2 0x84E JUMP JUMPDEST PUSH1 0x6 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x5BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ PUSH2 0x646 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x103937B632B9903337B91039B2B633 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x51E JUMP JUMPDEST PUSH2 0x650 DUP3 DUP3 PUSH2 0x8D4 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x65F PUSH1 0x0 CALLER PUSH2 0x7F1 JUMP JUMPDEST PUSH2 0x67B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x51E SWAP1 PUSH2 0xC11 JUMP JUMPDEST PUSH1 0xE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x6D3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x44414F436F6D6D697474656550726F78793A20696E707574206973207A65726F PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x51E JUMP JUMPDEST PUSH1 0xE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND SWAP2 AND SUB PUSH2 0x752 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x44414F436F6D6D697474656550726F78793A2054686520696E70757420616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH25 0x726573732069732073616D6520617320746865207374617465 PUSH1 0x38 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x51E JUMP JUMPDEST PUSH1 0xE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x7 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x5BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7B7 PUSH1 0x0 CALLER PUSH2 0x7F1 JUMP JUMPDEST PUSH2 0x7D3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x51E SWAP1 PUSH2 0xC11 JUMP JUMPDEST PUSH1 0xE DUP1 SLOAD SWAP2 ISZERO ISZERO PUSH1 0x1 PUSH1 0xA0 SHL MUL PUSH1 0xFF PUSH1 0xA0 SHL NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0xC PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x837 DUP2 PUSH2 0x841 JUMP JUMPDEST PUSH2 0x54B DUP4 DUP4 PUSH2 0x8D4 JUMP JUMPDEST PUSH2 0x84B DUP2 CALLER PUSH2 0x93B JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x858 DUP3 DUP3 PUSH2 0x7F1 JUMP JUMPDEST PUSH2 0x650 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x890 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH2 0x8DE DUP3 DUP3 PUSH2 0x7F1 JUMP JUMPDEST ISZERO PUSH2 0x650 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD CALLER SWAP3 DUP6 SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP2 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH2 0x945 DUP3 DUP3 PUSH2 0x7F1 JUMP JUMPDEST PUSH2 0x650 JUMPI PUSH2 0x952 DUP2 PUSH2 0x994 JUMP JUMPDEST PUSH2 0x95D DUP4 PUSH1 0x20 PUSH2 0x9A6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x96E SWAP3 SWAP2 SWAP1 PUSH2 0xC82 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH2 0x51E SWAP2 PUSH1 0x4 ADD PUSH2 0xCF1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x581 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x14 JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x9B5 DUP4 PUSH1 0x2 PUSH2 0xD3A JUMP JUMPDEST PUSH2 0x9C0 SWAP1 PUSH1 0x2 PUSH2 0xD51 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x9D8 JUMPI PUSH2 0x9D8 PUSH2 0xD64 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xA02 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x3 PUSH1 0xFC SHL DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xA1D JUMPI PUSH2 0xA1D PUSH2 0xD7A JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0xF PUSH1 0xFB SHL DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0xA4C JUMPI PUSH2 0xA4C PUSH2 0xD7A JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x0 PUSH2 0xA70 DUP5 PUSH1 0x2 PUSH2 0xD3A JUMP JUMPDEST PUSH2 0xA7B SWAP1 PUSH1 0x1 PUSH2 0xD51 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xAF3 JUMPI PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL DUP6 PUSH1 0xF AND PUSH1 0x10 DUP2 LT PUSH2 0xAAF JUMPI PUSH2 0xAAF PUSH2 0xD7A JUMP JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xAC5 JUMPI PUSH2 0xAC5 PUSH2 0xD7A JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 SWAP5 SWAP1 SWAP5 SHR SWAP4 PUSH2 0xAEC DUP2 PUSH2 0xD90 JUMP JUMPDEST SWAP1 POP PUSH2 0xA7E JUMP JUMPDEST POP DUP4 ISZERO PUSH2 0xB42 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x51E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xB42 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB85 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xBA3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBBA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB42 DUP3 PUSH2 0xB8C JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBD6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0xBE6 PUSH1 0x20 DUP5 ADD PUSH2 0xB8C JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC01 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xB42 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2D SWAP1 DUP3 ADD MSTORE PUSH32 0x44414F436F6D6D697474656550726F78793A206D73672E73656E646572206973 PUSH1 0x40 DUP3 ADD MSTORE PUSH13 0x103737BA1030B71030B236B4B7 PUSH1 0x99 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xC79 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xC61 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH23 0x20B1B1B2B9B9A1B7B73A3937B61D1030B1B1B7BAB73A1 PUSH1 0x4D SHL DUP2 MSTORE PUSH1 0x0 DUP4 MLOAD PUSH2 0xCB4 DUP2 PUSH1 0x17 DUP6 ADD PUSH1 0x20 DUP9 ADD PUSH2 0xC5E JUMP JUMPDEST PUSH17 0x1034B99036B4B9B9B4B733903937B6329 PUSH1 0x7D SHL PUSH1 0x17 SWAP2 DUP5 ADD SWAP2 DUP3 ADD MSTORE DUP4 MLOAD PUSH2 0xCE5 DUP2 PUSH1 0x28 DUP5 ADD PUSH1 0x20 DUP9 ADD PUSH2 0xC5E JUMP JUMPDEST ADD PUSH1 0x28 ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0xD10 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0xC5E JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x581 JUMPI PUSH2 0x581 PUSH2 0xD24 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x581 JUMPI PUSH2 0x581 PUSH2 0xD24 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH2 0xD9F JUMPI PUSH2 0xD9F PUSH2 0xD24 JUMP JUMPDEST POP PUSH1 0x0 NOT ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BLOCKHASH 0xCD 0xC7 0xE2 0xCC 0xE6 0xF6 SIGNEXTEND 0x2D MSTORE 0x2C SIGNEXTEND SWAP15 0xD3 0xEE PUSH6 0x54EA9EED973 0xE0 0x22 0x5E ORIGIN 0xBC INVALID OR 0xE0 LOG0 0xAF PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ","sourceMap":"329:3253:21:-:0;;;688:1191;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;725:40:8;-1:-1:-1;;;725:18:8;:40::i;:::-;-1:-1:-1;;;;;985:18:21;;;;;:53;;-1:-1:-1;;;;;;1019:19:21;;;;985:53;:95;;;-1:-1:-1;;;;;;1054:26:21;;;;985:95;:140;;;-1:-1:-1;;;;;;1096:29:21;;;;985:140;:184;;;-1:-1:-1;;;;;;1141:28:21;;;;985:184;:231;;;-1:-1:-1;;;;;;1185:31:21;;;;985:231;964:310;;;;-1:-1:-1;;;964:310:21;;1125:2:29;964:310:21;;;1107:21:29;;;1144:18;;;1137:30;1203:34;1183:18;;;1176:62;1255:18;;964:310:21;;;;;;;;;1284:3;:10;;-1:-1:-1;;;;;;1284:10:21;;;-1:-1:-1;;;;;1284:10:21;;;;;;;;;;1304:15;:23;;;;;;;;;;1337:11;:40;;;;;;;;;;1387:14;:49;;;;;;;;;;1446:13;:49;;;;;;;;;;-1:-1:-1;1505:55:21;;;;;;;;;;-1:-1:-1;1570:31:21;;;;;;;;;;;;;;-1:-1:-1;1611:10:21;1657:16;-1:-1:-1;1631:42:21;1684:81;1710:53;1684:18;:81::i;:::-;1775:42;2072:4:22;1806:10:21;1775;:42::i;:::-;1827:45;2072:4:22;1866::21;1827:10;:45::i;:::-;688:1191;;;;;;;329:3253;;1480:198:8;-1:-1:-1;;;;;;1563:25:8;;;;;1555:66;;;;-1:-1:-1;;;1555:66:8;;1486:2:29;1555:66:8;;;1468:21:29;1525:2;1505:18;;;1498:30;1564;1544:18;;;1537:58;1612:18;;1555:66:8;1284:352:29;1555:66:8;-1:-1:-1;;;;;;1631:33:8;;;;;:20;:33;;;;;:40;;-1:-1:-1;;1631:40:8;1667:4;1631:40;;;1480:198::o;6811:110:22:-;6889:25;6900:4;6906:7;6889:10;:25::i;:::-;6811:110;;:::o;7461:233::-;2981:4;3004:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;3004:29:22;;;;;;;;;;;;7539:149;;7582:12;;;;:6;:12;;;;;;;;-1:-1:-1;;;;;7582:29:22;;;;;;;;;:36;;-1:-1:-1;;7582:36:22;7614:4;7582:36;;;7664:12;719:10:24;;640:96;7664:12:22;-1:-1:-1;;;;;7637:40:22;7655:7;-1:-1:-1;;;;;7637:40:22;7649:4;7637:40;;;;;;;;;;7461:233;;:::o;14:177:29:-;93:13;;-1:-1:-1;;;;;135:31:29;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:722::-;320:6;328;336;344;352;360;368;421:3;409:9;400:7;396:23;392:33;389:53;;;438:1;435;428:12;389:53;461:40;491:9;461:40;:::i;:::-;451:50;;520:49;565:2;554:9;550:18;520:49;:::i;:::-;510:59;;588:49;633:2;622:9;618:18;588:49;:::i;:::-;578:59;;656:49;701:2;690:9;686:18;656:49;:::i;:::-;646:59;;724:50;769:3;758:9;754:19;724:50;:::i;:::-;714:60;;793:50;838:3;827:9;823:19;793:50;:::i;:::-;783:60;;862:50;907:3;896:9;892:19;862:50;:::i;:::-;852:60;;196:722;;;;;;;;;;:::o;1284:352::-;329:3253:21;;;;;;"},"deployedBytecode":{"functionDebugData":{"@DEFAULT_ADMIN_ROLE_3208":{"entryPoint":null,"id":3208,"parameterSlots":0,"returnSlots":0},"@_3156":{"entryPoint":null,"id":3156,"parameterSlots":0,"returnSlots":0},"@_checkRole_3273":{"entryPoint":2113,"id":3273,"parameterSlots":1,"returnSlots":0},"@_checkRole_3312":{"entryPoint":2363,"id":3312,"parameterSlots":2,"returnSlots":0},"@_fallback_3179":{"entryPoint":1156,"id":3179,"parameterSlots":0,"returnSlots":0},"@_grantRole_3464":{"entryPoint":2126,"id":3464,"parameterSlots":2,"returnSlots":0},"@_msgSender_3581":{"entryPoint":null,"id":3581,"parameterSlots":0,"returnSlots":1},"@_revokeRole_3495":{"entryPoint":2260,"id":3495,"parameterSlots":2,"returnSlots":0},"@activityRewardPerSecond_1672":{"entryPoint":null,"id":1672,"parameterSlots":0,"returnSlots":0},"@agendaManager_1638":{"entryPoint":null,"id":1638,"parameterSlots":0,"returnSlots":0},"@candidateContract_1802":{"entryPoint":null,"id":1802,"parameterSlots":1,"returnSlots":1},"@candidateFactory_1642":{"entryPoint":null,"id":1642,"parameterSlots":0,"returnSlots":0},"@candidateInfos_1816":{"entryPoint":null,"id":1816,"parameterSlots":1,"returnSlots":1},"@candidates_1654":{"entryPoint":1452,"id":1654,"parameterSlots":0,"returnSlots":0},"@daoVault_1634":{"entryPoint":null,"id":1634,"parameterSlots":0,"returnSlots":0},"@getRoleAdmin_3327":{"entryPoint":null,"id":3327,"parameterSlots":1,"returnSlots":1},"@grantRole_3347":{"entryPoint":1415,"id":3347,"parameterSlots":2,"returnSlots":0},"@hasRole_3260":{"entryPoint":2033,"id":3260,"parameterSlots":2,"returnSlots":1},"@implementation_3149":{"entryPoint":null,"id":3149,"parameterSlots":0,"returnSlots":1},"@isMember_1788":{"entryPoint":null,"id":1788,"parameterSlots":1,"returnSlots":1},"@layer2Registry_1646":{"entryPoint":null,"id":1646,"parameterSlots":0,"returnSlots":0},"@maxMember_1661":{"entryPoint":null,"id":1661,"parameterSlots":0,"returnSlots":0},"@members_1658":{"entryPoint":1948,"id":1658,"parameterSlots":0,"returnSlots":0},"@pauseProxy_2945":{"entryPoint":null,"id":2945,"parameterSlots":0,"returnSlots":0},"@quorum_1669":{"entryPoint":null,"id":1669,"parameterSlots":0,"returnSlots":0},"@renounceRole_3390":{"entryPoint":1494,"id":3390,"parameterSlots":2,"returnSlots":0},"@revokeRole_3367":{"entryPoint":2076,"id":3367,"parameterSlots":2,"returnSlots":0},"@seigManager_1650":{"entryPoint":null,"id":1650,"parameterSlots":0,"returnSlots":0},"@setProxyPause_3107":{"entryPoint":1964,"id":3107,"parameterSlots":1,"returnSlots":0},"@supportsInterface_3241":{"entryPoint":1360,"id":3241,"parameterSlots":1,"returnSlots":1},"@supportsInterface_3789":{"entryPoint":null,"id":3789,"parameterSlots":1,"returnSlots":1},"@toHexString_3745":{"entryPoint":2470,"id":3745,"parameterSlots":2,"returnSlots":1},"@toHexString_3765":{"entryPoint":2452,"id":3765,"parameterSlots":1,"returnSlots":1},"@ton_1630":{"entryPoint":null,"id":1630,"parameterSlots":0,"returnSlots":0},"@upgradeTo_3141":{"entryPoint":1620,"id":3141,"parameterSlots":1,"returnSlots":0},"abi_decode_address":{"entryPoint":2956,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":2984,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bool":{"entryPoint":3055,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32":{"entryPoint":2931,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32t_address":{"entryPoint":3011,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes4":{"entryPoint":2889,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":3202,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_ICandidateFactory_$1930__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_IDAOAgendaManager_$2211__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_IDAOVault_$2534__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_ILayer2Registry_$2588__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_ISeigManager_$2752__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3313,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b035baf00c1e3ac88f8432354304909e029ddb0162e6075517efab161bb335ae__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3089,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d70c025721ba15246df7bc3230e47788aa833a819e25e2da2bdcaefb69b47304__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_da208ebbc28d2dfe7d6ba43fa968507881a99f2c248db7b455c564aa8d0fc19d__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_fbb41bc2abbf038368153bc6dea571ef2f6b4d4922e432099d9f2115037f6794__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_struct$_CandidateInfo_$2776_memory_ptr__to_t_struct$_CandidateInfo_$2776_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":3409,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":3386,"id":null,"parameterSlots":2,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":3166,"id":null,"parameterSlots":3,"returnSlots":0},"decrement_t_uint256":{"entryPoint":3472,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":3364,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":3450,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":3428,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:8842:29","statements":[{"nodeType":"YulBlock","src":"6:3:29","statements":[]},{"body":{"nodeType":"YulBlock","src":"83:217:29","statements":[{"body":{"nodeType":"YulBlock","src":"129:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"138:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"141:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"131:6:29"},"nodeType":"YulFunctionCall","src":"131:12:29"},"nodeType":"YulExpressionStatement","src":"131:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"104:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"113:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"100:3:29"},"nodeType":"YulFunctionCall","src":"100:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"125:2:29","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"96:3:29"},"nodeType":"YulFunctionCall","src":"96:32:29"},"nodeType":"YulIf","src":"93:52:29"},{"nodeType":"YulVariableDeclaration","src":"154:36:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"180:9:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"167:12:29"},"nodeType":"YulFunctionCall","src":"167:23:29"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"158:5:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"254:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"263:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"266:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"256:6:29"},"nodeType":"YulFunctionCall","src":"256:12:29"},"nodeType":"YulExpressionStatement","src":"256:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"212:5:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"223:5:29"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"234:3:29","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"239:10:29","type":"","value":"0xffffffff"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"230:3:29"},"nodeType":"YulFunctionCall","src":"230:20:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"219:3:29"},"nodeType":"YulFunctionCall","src":"219:32:29"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"209:2:29"},"nodeType":"YulFunctionCall","src":"209:43:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"202:6:29"},"nodeType":"YulFunctionCall","src":"202:51:29"},"nodeType":"YulIf","src":"199:71:29"},{"nodeType":"YulAssignment","src":"279:15:29","value":{"name":"value","nodeType":"YulIdentifier","src":"289:5:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"279:6:29"}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"49:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"60:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"72:6:29","type":""}],"src":"14:286:29"},{"body":{"nodeType":"YulBlock","src":"400:92:29","statements":[{"nodeType":"YulAssignment","src":"410:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"422:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"433:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"418:3:29"},"nodeType":"YulFunctionCall","src":"418:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"410:4:29"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"452:9:29"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"477:6:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"470:6:29"},"nodeType":"YulFunctionCall","src":"470:14:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"463:6:29"},"nodeType":"YulFunctionCall","src":"463:22:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"445:6:29"},"nodeType":"YulFunctionCall","src":"445:41:29"},"nodeType":"YulExpressionStatement","src":"445:41:29"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"369:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"380:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"391:4:29","type":""}],"src":"305:187:29"},{"body":{"nodeType":"YulBlock","src":"598:76:29","statements":[{"nodeType":"YulAssignment","src":"608:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"620:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"631:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"616:3:29"},"nodeType":"YulFunctionCall","src":"616:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"608:4:29"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"650:9:29"},{"name":"value0","nodeType":"YulIdentifier","src":"661:6:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"643:6:29"},"nodeType":"YulFunctionCall","src":"643:25:29"},"nodeType":"YulExpressionStatement","src":"643:25:29"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"567:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"578:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"589:4:29","type":""}],"src":"497:177:29"},{"body":{"nodeType":"YulBlock","src":"749:110:29","statements":[{"body":{"nodeType":"YulBlock","src":"795:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"804:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"807:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"797:6:29"},"nodeType":"YulFunctionCall","src":"797:12:29"},"nodeType":"YulExpressionStatement","src":"797:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"770:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"779:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"766:3:29"},"nodeType":"YulFunctionCall","src":"766:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"791:2:29","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"762:3:29"},"nodeType":"YulFunctionCall","src":"762:32:29"},"nodeType":"YulIf","src":"759:52:29"},{"nodeType":"YulAssignment","src":"820:33:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"843:9:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"830:12:29"},"nodeType":"YulFunctionCall","src":"830:23:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"820:6:29"}]}]},"name":"abi_decode_tuple_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"715:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"726:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"738:6:29","type":""}],"src":"679:180:29"},{"body":{"nodeType":"YulBlock","src":"965:76:29","statements":[{"nodeType":"YulAssignment","src":"975:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"987:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"998:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"983:3:29"},"nodeType":"YulFunctionCall","src":"983:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"975:4:29"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1017:9:29"},{"name":"value0","nodeType":"YulIdentifier","src":"1028:6:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1010:6:29"},"nodeType":"YulFunctionCall","src":"1010:25:29"},"nodeType":"YulExpressionStatement","src":"1010:25:29"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"934:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"945:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"956:4:29","type":""}],"src":"864:177:29"},{"body":{"nodeType":"YulBlock","src":"1173:102:29","statements":[{"nodeType":"YulAssignment","src":"1183:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1195:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"1206:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1191:3:29"},"nodeType":"YulFunctionCall","src":"1191:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1183:4:29"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1225:9:29"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1240:6:29"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1256:3:29","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"1261:1:29","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1252:3:29"},"nodeType":"YulFunctionCall","src":"1252:11:29"},{"kind":"number","nodeType":"YulLiteral","src":"1265:1:29","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1248:3:29"},"nodeType":"YulFunctionCall","src":"1248:19:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1236:3:29"},"nodeType":"YulFunctionCall","src":"1236:32:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1218:6:29"},"nodeType":"YulFunctionCall","src":"1218:51:29"},"nodeType":"YulExpressionStatement","src":"1218:51:29"}]},"name":"abi_encode_tuple_t_contract$_IDAOAgendaManager_$2211__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1142:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1153:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1164:4:29","type":""}],"src":"1046:229:29"},{"body":{"nodeType":"YulBlock","src":"1329:124:29","statements":[{"nodeType":"YulAssignment","src":"1339:29:29","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1361:6:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1348:12:29"},"nodeType":"YulFunctionCall","src":"1348:20:29"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1339:5:29"}]},{"body":{"nodeType":"YulBlock","src":"1431:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1440:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1443:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1433:6:29"},"nodeType":"YulFunctionCall","src":"1433:12:29"},"nodeType":"YulExpressionStatement","src":"1433:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1390:5:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1401:5:29"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1416:3:29","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"1421:1:29","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1412:3:29"},"nodeType":"YulFunctionCall","src":"1412:11:29"},{"kind":"number","nodeType":"YulLiteral","src":"1425:1:29","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1408:3:29"},"nodeType":"YulFunctionCall","src":"1408:19:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1397:3:29"},"nodeType":"YulFunctionCall","src":"1397:31:29"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1387:2:29"},"nodeType":"YulFunctionCall","src":"1387:42:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1380:6:29"},"nodeType":"YulFunctionCall","src":"1380:50:29"},"nodeType":"YulIf","src":"1377:70:29"}]},"name":"abi_decode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1308:6:29","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1319:5:29","type":""}],"src":"1280:173:29"},{"body":{"nodeType":"YulBlock","src":"1528:116:29","statements":[{"body":{"nodeType":"YulBlock","src":"1574:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1583:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1586:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1576:6:29"},"nodeType":"YulFunctionCall","src":"1576:12:29"},"nodeType":"YulExpressionStatement","src":"1576:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1549:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"1558:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1545:3:29"},"nodeType":"YulFunctionCall","src":"1545:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"1570:2:29","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1541:3:29"},"nodeType":"YulFunctionCall","src":"1541:32:29"},"nodeType":"YulIf","src":"1538:52:29"},{"nodeType":"YulAssignment","src":"1599:39:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1628:9:29"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1609:18:29"},"nodeType":"YulFunctionCall","src":"1609:29:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1599:6:29"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1494:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1505:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1517:6:29","type":""}],"src":"1458:186:29"},{"body":{"nodeType":"YulBlock","src":"1812:468:29","statements":[{"nodeType":"YulAssignment","src":"1822:27:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1834:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"1845:3:29","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1830:3:29"},"nodeType":"YulFunctionCall","src":"1830:19:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1822:4:29"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1865:9:29"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1886:6:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1880:5:29"},"nodeType":"YulFunctionCall","src":"1880:13:29"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1903:3:29","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"1908:1:29","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1899:3:29"},"nodeType":"YulFunctionCall","src":"1899:11:29"},{"kind":"number","nodeType":"YulLiteral","src":"1912:1:29","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1895:3:29"},"nodeType":"YulFunctionCall","src":"1895:19:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1876:3:29"},"nodeType":"YulFunctionCall","src":"1876:39:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1858:6:29"},"nodeType":"YulFunctionCall","src":"1858:58:29"},"nodeType":"YulExpressionStatement","src":"1858:58:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1936:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"1947:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1932:3:29"},"nodeType":"YulFunctionCall","src":"1932:20:29"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1964:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"1972:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1960:3:29"},"nodeType":"YulFunctionCall","src":"1960:17:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1954:5:29"},"nodeType":"YulFunctionCall","src":"1954:24:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1925:6:29"},"nodeType":"YulFunctionCall","src":"1925:54:29"},"nodeType":"YulExpressionStatement","src":"1925:54:29"},{"nodeType":"YulVariableDeclaration","src":"1988:44:29","value":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2018:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"2026:4:29","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2014:3:29"},"nodeType":"YulFunctionCall","src":"2014:17:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2008:5:29"},"nodeType":"YulFunctionCall","src":"2008:24:29"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"1992:12:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2041:29:29","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2059:3:29","type":"","value":"128"},{"kind":"number","nodeType":"YulLiteral","src":"2064:1:29","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2055:3:29"},"nodeType":"YulFunctionCall","src":"2055:11:29"},{"kind":"number","nodeType":"YulLiteral","src":"2068:1:29","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2051:3:29"},"nodeType":"YulFunctionCall","src":"2051:19:29"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"2045:2:29","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2090:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"2101:4:29","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2086:3:29"},"nodeType":"YulFunctionCall","src":"2086:20:29"},{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"2112:12:29"},{"name":"_1","nodeType":"YulIdentifier","src":"2126:2:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2108:3:29"},"nodeType":"YulFunctionCall","src":"2108:21:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2079:6:29"},"nodeType":"YulFunctionCall","src":"2079:51:29"},"nodeType":"YulExpressionStatement","src":"2079:51:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2150:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"2161:4:29","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2146:3:29"},"nodeType":"YulFunctionCall","src":"2146:20:29"},{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2182:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"2190:4:29","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2178:3:29"},"nodeType":"YulFunctionCall","src":"2178:17:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2172:5:29"},"nodeType":"YulFunctionCall","src":"2172:24:29"},{"name":"_1","nodeType":"YulIdentifier","src":"2198:2:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2168:3:29"},"nodeType":"YulFunctionCall","src":"2168:33:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2139:6:29"},"nodeType":"YulFunctionCall","src":"2139:63:29"},"nodeType":"YulExpressionStatement","src":"2139:63:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2222:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"2233:4:29","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2218:3:29"},"nodeType":"YulFunctionCall","src":"2218:20:29"},{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2254:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"2262:4:29","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2250:3:29"},"nodeType":"YulFunctionCall","src":"2250:17:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2244:5:29"},"nodeType":"YulFunctionCall","src":"2244:24:29"},{"name":"_1","nodeType":"YulIdentifier","src":"2270:2:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2240:3:29"},"nodeType":"YulFunctionCall","src":"2240:33:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2211:6:29"},"nodeType":"YulFunctionCall","src":"2211:63:29"},"nodeType":"YulExpressionStatement","src":"2211:63:29"}]},"name":"abi_encode_tuple_t_struct$_CandidateInfo_$2776_memory_ptr__to_t_struct$_CandidateInfo_$2776_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1781:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1792:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1803:4:29","type":""}],"src":"1649:631:29"},{"body":{"nodeType":"YulBlock","src":"2372:167:29","statements":[{"body":{"nodeType":"YulBlock","src":"2418:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2427:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2430:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2420:6:29"},"nodeType":"YulFunctionCall","src":"2420:12:29"},"nodeType":"YulExpressionStatement","src":"2420:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2393:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"2402:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2389:3:29"},"nodeType":"YulFunctionCall","src":"2389:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"2414:2:29","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2385:3:29"},"nodeType":"YulFunctionCall","src":"2385:32:29"},"nodeType":"YulIf","src":"2382:52:29"},{"nodeType":"YulAssignment","src":"2443:33:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2466:9:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2453:12:29"},"nodeType":"YulFunctionCall","src":"2453:23:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2443:6:29"}]},{"nodeType":"YulAssignment","src":"2485:48:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2518:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"2529:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2514:3:29"},"nodeType":"YulFunctionCall","src":"2514:18:29"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2495:18:29"},"nodeType":"YulFunctionCall","src":"2495:38:29"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2485:6:29"}]}]},"name":"abi_decode_tuple_t_bytes32t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2330:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2341:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2353:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2361:6:29","type":""}],"src":"2285:254:29"},{"body":{"nodeType":"YulBlock","src":"2614:110:29","statements":[{"body":{"nodeType":"YulBlock","src":"2660:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2669:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2672:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2662:6:29"},"nodeType":"YulFunctionCall","src":"2662:12:29"},"nodeType":"YulExpressionStatement","src":"2662:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2635:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"2644:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2631:3:29"},"nodeType":"YulFunctionCall","src":"2631:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"2656:2:29","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2627:3:29"},"nodeType":"YulFunctionCall","src":"2627:32:29"},"nodeType":"YulIf","src":"2624:52:29"},{"nodeType":"YulAssignment","src":"2685:33:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2708:9:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2695:12:29"},"nodeType":"YulFunctionCall","src":"2695:23:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2685:6:29"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2580:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2591:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2603:6:29","type":""}],"src":"2544:180:29"},{"body":{"nodeType":"YulBlock","src":"2830:102:29","statements":[{"nodeType":"YulAssignment","src":"2840:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2852:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"2863:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2848:3:29"},"nodeType":"YulFunctionCall","src":"2848:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2840:4:29"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2882:9:29"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2897:6:29"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2913:3:29","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"2918:1:29","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2909:3:29"},"nodeType":"YulFunctionCall","src":"2909:11:29"},{"kind":"number","nodeType":"YulLiteral","src":"2922:1:29","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2905:3:29"},"nodeType":"YulFunctionCall","src":"2905:19:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2893:3:29"},"nodeType":"YulFunctionCall","src":"2893:32:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2875:6:29"},"nodeType":"YulFunctionCall","src":"2875:51:29"},"nodeType":"YulExpressionStatement","src":"2875:51:29"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2799:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2810:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2821:4:29","type":""}],"src":"2729:203:29"},{"body":{"nodeType":"YulBlock","src":"3056:102:29","statements":[{"nodeType":"YulAssignment","src":"3066:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3078:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"3089:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3074:3:29"},"nodeType":"YulFunctionCall","src":"3074:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3066:4:29"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3108:9:29"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3123:6:29"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3139:3:29","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"3144:1:29","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3135:3:29"},"nodeType":"YulFunctionCall","src":"3135:11:29"},{"kind":"number","nodeType":"YulLiteral","src":"3148:1:29","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3131:3:29"},"nodeType":"YulFunctionCall","src":"3131:19:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3119:3:29"},"nodeType":"YulFunctionCall","src":"3119:32:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3101:6:29"},"nodeType":"YulFunctionCall","src":"3101:51:29"},"nodeType":"YulExpressionStatement","src":"3101:51:29"}]},"name":"abi_encode_tuple_t_contract$_IDAOVault_$2534__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3025:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3036:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3047:4:29","type":""}],"src":"2937:221:29"},{"body":{"nodeType":"YulBlock","src":"3285:102:29","statements":[{"nodeType":"YulAssignment","src":"3295:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3307:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"3318:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3303:3:29"},"nodeType":"YulFunctionCall","src":"3303:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3295:4:29"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3337:9:29"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3352:6:29"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3368:3:29","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"3373:1:29","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3364:3:29"},"nodeType":"YulFunctionCall","src":"3364:11:29"},{"kind":"number","nodeType":"YulLiteral","src":"3377:1:29","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3360:3:29"},"nodeType":"YulFunctionCall","src":"3360:19:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3348:3:29"},"nodeType":"YulFunctionCall","src":"3348:32:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3330:6:29"},"nodeType":"YulFunctionCall","src":"3330:51:29"},"nodeType":"YulExpressionStatement","src":"3330:51:29"}]},"name":"abi_encode_tuple_t_contract$_ISeigManager_$2752__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3254:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3265:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3276:4:29","type":""}],"src":"3163:224:29"},{"body":{"nodeType":"YulBlock","src":"3459:206:29","statements":[{"body":{"nodeType":"YulBlock","src":"3505:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3514:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3517:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3507:6:29"},"nodeType":"YulFunctionCall","src":"3507:12:29"},"nodeType":"YulExpressionStatement","src":"3507:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3480:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"3489:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3476:3:29"},"nodeType":"YulFunctionCall","src":"3476:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"3501:2:29","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3472:3:29"},"nodeType":"YulFunctionCall","src":"3472:32:29"},"nodeType":"YulIf","src":"3469:52:29"},{"nodeType":"YulVariableDeclaration","src":"3530:36:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3556:9:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3543:12:29"},"nodeType":"YulFunctionCall","src":"3543:23:29"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"3534:5:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"3619:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3628:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3631:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3621:6:29"},"nodeType":"YulFunctionCall","src":"3621:12:29"},"nodeType":"YulExpressionStatement","src":"3621:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3588:5:29"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3609:5:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3602:6:29"},"nodeType":"YulFunctionCall","src":"3602:13:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3595:6:29"},"nodeType":"YulFunctionCall","src":"3595:21:29"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3585:2:29"},"nodeType":"YulFunctionCall","src":"3585:32:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3578:6:29"},"nodeType":"YulFunctionCall","src":"3578:40:29"},"nodeType":"YulIf","src":"3575:60:29"},{"nodeType":"YulAssignment","src":"3644:15:29","value":{"name":"value","nodeType":"YulIdentifier","src":"3654:5:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3644:6:29"}]}]},"name":"abi_decode_tuple_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3425:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3436:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3448:6:29","type":""}],"src":"3392:273:29"},{"body":{"nodeType":"YulBlock","src":"3797:102:29","statements":[{"nodeType":"YulAssignment","src":"3807:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3819:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"3830:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3815:3:29"},"nodeType":"YulFunctionCall","src":"3815:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3807:4:29"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3849:9:29"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3864:6:29"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3880:3:29","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"3885:1:29","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3876:3:29"},"nodeType":"YulFunctionCall","src":"3876:11:29"},{"kind":"number","nodeType":"YulLiteral","src":"3889:1:29","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3872:3:29"},"nodeType":"YulFunctionCall","src":"3872:19:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3860:3:29"},"nodeType":"YulFunctionCall","src":"3860:32:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3842:6:29"},"nodeType":"YulFunctionCall","src":"3842:51:29"},"nodeType":"YulExpressionStatement","src":"3842:51:29"}]},"name":"abi_encode_tuple_t_contract$_ICandidateFactory_$1930__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3766:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3777:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3788:4:29","type":""}],"src":"3670:229:29"},{"body":{"nodeType":"YulBlock","src":"4029:102:29","statements":[{"nodeType":"YulAssignment","src":"4039:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4051:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"4062:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4047:3:29"},"nodeType":"YulFunctionCall","src":"4047:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4039:4:29"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4081:9:29"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4096:6:29"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4112:3:29","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"4117:1:29","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4108:3:29"},"nodeType":"YulFunctionCall","src":"4108:11:29"},{"kind":"number","nodeType":"YulLiteral","src":"4121:1:29","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4104:3:29"},"nodeType":"YulFunctionCall","src":"4104:19:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4092:3:29"},"nodeType":"YulFunctionCall","src":"4092:32:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4074:6:29"},"nodeType":"YulFunctionCall","src":"4074:51:29"},"nodeType":"YulExpressionStatement","src":"4074:51:29"}]},"name":"abi_encode_tuple_t_contract$_ILayer2Registry_$2588__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3998:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4009:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4020:4:29","type":""}],"src":"3904:227:29"},{"body":{"nodeType":"YulBlock","src":"4310:239:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4327:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"4338:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4320:6:29"},"nodeType":"YulFunctionCall","src":"4320:21:29"},"nodeType":"YulExpressionStatement","src":"4320:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4361:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"4372:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4357:3:29"},"nodeType":"YulFunctionCall","src":"4357:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"4377:2:29","type":"","value":"49"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4350:6:29"},"nodeType":"YulFunctionCall","src":"4350:30:29"},"nodeType":"YulExpressionStatement","src":"4350:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4400:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"4411:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4396:3:29"},"nodeType":"YulFunctionCall","src":"4396:18:29"},{"hexValue":"44414f436f6d6d697474656550726f78793a20696d706c206973207a65726f20","kind":"string","nodeType":"YulLiteral","src":"4416:34:29","type":"","value":"DAOCommitteeProxy: impl is zero "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4389:6:29"},"nodeType":"YulFunctionCall","src":"4389:62:29"},"nodeType":"YulExpressionStatement","src":"4389:62:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4471:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"4482:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4467:3:29"},"nodeType":"YulFunctionCall","src":"4467:18:29"},{"hexValue":"4f522070726f78792069732066616c7365","kind":"string","nodeType":"YulLiteral","src":"4487:19:29","type":"","value":"OR proxy is false"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4460:6:29"},"nodeType":"YulFunctionCall","src":"4460:47:29"},"nodeType":"YulExpressionStatement","src":"4460:47:29"},{"nodeType":"YulAssignment","src":"4516:27:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4528:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"4539:3:29","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4524:3:29"},"nodeType":"YulFunctionCall","src":"4524:19:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4516:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_fbb41bc2abbf038368153bc6dea571ef2f6b4d4922e432099d9f2115037f6794__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4287:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4301:4:29","type":""}],"src":"4136:413:29"},{"body":{"nodeType":"YulBlock","src":"4728:237:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4745:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"4756:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4738:6:29"},"nodeType":"YulFunctionCall","src":"4738:21:29"},"nodeType":"YulExpressionStatement","src":"4738:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4779:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"4790:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4775:3:29"},"nodeType":"YulFunctionCall","src":"4775:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"4795:2:29","type":"","value":"47"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4768:6:29"},"nodeType":"YulFunctionCall","src":"4768:30:29"},"nodeType":"YulExpressionStatement","src":"4768:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4818:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"4829:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4814:3:29"},"nodeType":"YulFunctionCall","src":"4814:18:29"},{"hexValue":"416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e6365","kind":"string","nodeType":"YulLiteral","src":"4834:34:29","type":"","value":"AccessControl: can only renounce"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4807:6:29"},"nodeType":"YulFunctionCall","src":"4807:62:29"},"nodeType":"YulExpressionStatement","src":"4807:62:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4889:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"4900:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4885:3:29"},"nodeType":"YulFunctionCall","src":"4885:18:29"},{"hexValue":"20726f6c657320666f722073656c66","kind":"string","nodeType":"YulLiteral","src":"4905:17:29","type":"","value":" roles for self"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4878:6:29"},"nodeType":"YulFunctionCall","src":"4878:45:29"},"nodeType":"YulExpressionStatement","src":"4878:45:29"},{"nodeType":"YulAssignment","src":"4932:27:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4944:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"4955:3:29","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4940:3:29"},"nodeType":"YulFunctionCall","src":"4940:19:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4932:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4705:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4719:4:29","type":""}],"src":"4554:411:29"},{"body":{"nodeType":"YulBlock","src":"5144:235:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5161:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"5172:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5154:6:29"},"nodeType":"YulFunctionCall","src":"5154:21:29"},"nodeType":"YulExpressionStatement","src":"5154:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5195:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"5206:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5191:3:29"},"nodeType":"YulFunctionCall","src":"5191:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"5211:2:29","type":"","value":"45"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5184:6:29"},"nodeType":"YulFunctionCall","src":"5184:30:29"},"nodeType":"YulExpressionStatement","src":"5184:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5234:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"5245:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5230:3:29"},"nodeType":"YulFunctionCall","src":"5230:18:29"},{"hexValue":"44414f436f6d6d697474656550726f78793a206d73672e73656e646572206973","kind":"string","nodeType":"YulLiteral","src":"5250:34:29","type":"","value":"DAOCommitteeProxy: msg.sender is"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5223:6:29"},"nodeType":"YulFunctionCall","src":"5223:62:29"},"nodeType":"YulExpressionStatement","src":"5223:62:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5305:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"5316:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5301:3:29"},"nodeType":"YulFunctionCall","src":"5301:18:29"},{"hexValue":"206e6f7420616e2061646d696e","kind":"string","nodeType":"YulLiteral","src":"5321:15:29","type":"","value":" not an admin"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5294:6:29"},"nodeType":"YulFunctionCall","src":"5294:43:29"},"nodeType":"YulExpressionStatement","src":"5294:43:29"},{"nodeType":"YulAssignment","src":"5346:27:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5358:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"5369:3:29","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5354:3:29"},"nodeType":"YulFunctionCall","src":"5354:19:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5346:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_b035baf00c1e3ac88f8432354304909e029ddb0162e6075517efab161bb335ae__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5121:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5135:4:29","type":""}],"src":"4970:409:29"},{"body":{"nodeType":"YulBlock","src":"5558:182:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5575:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"5586:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5568:6:29"},"nodeType":"YulFunctionCall","src":"5568:21:29"},"nodeType":"YulExpressionStatement","src":"5568:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5609:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"5620:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5605:3:29"},"nodeType":"YulFunctionCall","src":"5605:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"5625:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5598:6:29"},"nodeType":"YulFunctionCall","src":"5598:30:29"},"nodeType":"YulExpressionStatement","src":"5598:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5648:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"5659:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5644:3:29"},"nodeType":"YulFunctionCall","src":"5644:18:29"},{"hexValue":"44414f436f6d6d697474656550726f78793a20696e707574206973207a65726f","kind":"string","nodeType":"YulLiteral","src":"5664:34:29","type":"","value":"DAOCommitteeProxy: input is zero"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5637:6:29"},"nodeType":"YulFunctionCall","src":"5637:62:29"},"nodeType":"YulExpressionStatement","src":"5637:62:29"},{"nodeType":"YulAssignment","src":"5708:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5720:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"5731:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5716:3:29"},"nodeType":"YulFunctionCall","src":"5716:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5708:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_da208ebbc28d2dfe7d6ba43fa968507881a99f2c248db7b455c564aa8d0fc19d__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5535:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5549:4:29","type":""}],"src":"5384:356:29"},{"body":{"nodeType":"YulBlock","src":"5919:247:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5936:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"5947:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5929:6:29"},"nodeType":"YulFunctionCall","src":"5929:21:29"},"nodeType":"YulExpressionStatement","src":"5929:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5970:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"5981:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5966:3:29"},"nodeType":"YulFunctionCall","src":"5966:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"5986:2:29","type":"","value":"57"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5959:6:29"},"nodeType":"YulFunctionCall","src":"5959:30:29"},"nodeType":"YulExpressionStatement","src":"5959:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6009:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"6020:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6005:3:29"},"nodeType":"YulFunctionCall","src":"6005:18:29"},{"hexValue":"44414f436f6d6d697474656550726f78793a2054686520696e70757420616464","kind":"string","nodeType":"YulLiteral","src":"6025:34:29","type":"","value":"DAOCommitteeProxy: The input add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5998:6:29"},"nodeType":"YulFunctionCall","src":"5998:62:29"},"nodeType":"YulExpressionStatement","src":"5998:62:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6080:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"6091:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6076:3:29"},"nodeType":"YulFunctionCall","src":"6076:18:29"},{"hexValue":"726573732069732073616d6520617320746865207374617465","kind":"string","nodeType":"YulLiteral","src":"6096:27:29","type":"","value":"ress is same as the state"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6069:6:29"},"nodeType":"YulFunctionCall","src":"6069:55:29"},"nodeType":"YulExpressionStatement","src":"6069:55:29"},{"nodeType":"YulAssignment","src":"6133:27:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6145:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"6156:3:29","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6141:3:29"},"nodeType":"YulFunctionCall","src":"6141:19:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6133:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_d70c025721ba15246df7bc3230e47788aa833a819e25e2da2bdcaefb69b47304__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5896:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5910:4:29","type":""}],"src":"5745:421:29"},{"body":{"nodeType":"YulBlock","src":"6237:184:29","statements":[{"nodeType":"YulVariableDeclaration","src":"6247:10:29","value":{"kind":"number","nodeType":"YulLiteral","src":"6256:1:29","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"6251:1:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"6316:63:29","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"6341:3:29"},{"name":"i","nodeType":"YulIdentifier","src":"6346:1:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6337:3:29"},"nodeType":"YulFunctionCall","src":"6337:11:29"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"6360:3:29"},{"name":"i","nodeType":"YulIdentifier","src":"6365:1:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6356:3:29"},"nodeType":"YulFunctionCall","src":"6356:11:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6350:5:29"},"nodeType":"YulFunctionCall","src":"6350:18:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6330:6:29"},"nodeType":"YulFunctionCall","src":"6330:39:29"},"nodeType":"YulExpressionStatement","src":"6330:39:29"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"6277:1:29"},{"name":"length","nodeType":"YulIdentifier","src":"6280:6:29"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6274:2:29"},"nodeType":"YulFunctionCall","src":"6274:13:29"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"6288:19:29","statements":[{"nodeType":"YulAssignment","src":"6290:15:29","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"6299:1:29"},{"kind":"number","nodeType":"YulLiteral","src":"6302:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6295:3:29"},"nodeType":"YulFunctionCall","src":"6295:10:29"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"6290:1:29"}]}]},"pre":{"nodeType":"YulBlock","src":"6270:3:29","statements":[]},"src":"6266:113:29"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"6399:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"6404:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6395:3:29"},"nodeType":"YulFunctionCall","src":"6395:16:29"},{"kind":"number","nodeType":"YulLiteral","src":"6413:1:29","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6388:6:29"},"nodeType":"YulFunctionCall","src":"6388:27:29"},"nodeType":"YulExpressionStatement","src":"6388:27:29"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"6215:3:29","type":""},{"name":"dst","nodeType":"YulTypedName","src":"6220:3:29","type":""},{"name":"length","nodeType":"YulTypedName","src":"6225:6:29","type":""}],"src":"6171:250:29"},{"body":{"nodeType":"YulBlock","src":"6815:423:29","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6832:3:29"},{"hexValue":"416363657373436f6e74726f6c3a206163636f756e7420","kind":"string","nodeType":"YulLiteral","src":"6837:25:29","type":"","value":"AccessControl: account "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6825:6:29"},"nodeType":"YulFunctionCall","src":"6825:38:29"},"nodeType":"YulExpressionStatement","src":"6825:38:29"},{"nodeType":"YulVariableDeclaration","src":"6872:27:29","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6892:6:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6886:5:29"},"nodeType":"YulFunctionCall","src":"6886:13:29"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"6876:6:29","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6947:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"6955:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6943:3:29"},"nodeType":"YulFunctionCall","src":"6943:17:29"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6966:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"6971:2:29","type":"","value":"23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6962:3:29"},"nodeType":"YulFunctionCall","src":"6962:12:29"},{"name":"length","nodeType":"YulIdentifier","src":"6976:6:29"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"6908:34:29"},"nodeType":"YulFunctionCall","src":"6908:75:29"},"nodeType":"YulExpressionStatement","src":"6908:75:29"},{"nodeType":"YulVariableDeclaration","src":"6992:26:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7006:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"7011:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7002:3:29"},"nodeType":"YulFunctionCall","src":"7002:16:29"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"6996:2:29","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"7038:2:29"},{"kind":"number","nodeType":"YulLiteral","src":"7042:2:29","type":"","value":"23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7034:3:29"},"nodeType":"YulFunctionCall","src":"7034:11:29"},{"hexValue":"206973206d697373696e6720726f6c6520","kind":"string","nodeType":"YulLiteral","src":"7047:19:29","type":"","value":" is missing role "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7027:6:29"},"nodeType":"YulFunctionCall","src":"7027:40:29"},"nodeType":"YulExpressionStatement","src":"7027:40:29"},{"nodeType":"YulVariableDeclaration","src":"7076:29:29","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"7098:6:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7092:5:29"},"nodeType":"YulFunctionCall","src":"7092:13:29"},"variables":[{"name":"length_1","nodeType":"YulTypedName","src":"7080:8:29","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"7153:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"7161:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7149:3:29"},"nodeType":"YulFunctionCall","src":"7149:17:29"},{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"7172:2:29"},{"kind":"number","nodeType":"YulLiteral","src":"7176:2:29","type":"","value":"40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7168:3:29"},"nodeType":"YulFunctionCall","src":"7168:11:29"},{"name":"length_1","nodeType":"YulIdentifier","src":"7181:8:29"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"7114:34:29"},"nodeType":"YulFunctionCall","src":"7114:76:29"},"nodeType":"YulExpressionStatement","src":"7114:76:29"},{"nodeType":"YulAssignment","src":"7199:33:29","value":{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"7214:2:29"},{"name":"length_1","nodeType":"YulIdentifier","src":"7218:8:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7210:3:29"},"nodeType":"YulFunctionCall","src":"7210:17:29"},{"kind":"number","nodeType":"YulLiteral","src":"7229:2:29","type":"","value":"40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7206:3:29"},"nodeType":"YulFunctionCall","src":"7206:26:29"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7199:3:29"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"6783:3:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6788:6:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6796:6:29","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6807:3:29","type":""}],"src":"6426:812:29"},{"body":{"nodeType":"YulBlock","src":"7364:275:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7381:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"7392:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7374:6:29"},"nodeType":"YulFunctionCall","src":"7374:21:29"},"nodeType":"YulExpressionStatement","src":"7374:21:29"},{"nodeType":"YulVariableDeclaration","src":"7404:27:29","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7424:6:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7418:5:29"},"nodeType":"YulFunctionCall","src":"7418:13:29"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"7408:6:29","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7451:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"7462:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7447:3:29"},"nodeType":"YulFunctionCall","src":"7447:18:29"},{"name":"length","nodeType":"YulIdentifier","src":"7467:6:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7440:6:29"},"nodeType":"YulFunctionCall","src":"7440:34:29"},"nodeType":"YulExpressionStatement","src":"7440:34:29"},{"expression":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7522:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"7530:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7518:3:29"},"nodeType":"YulFunctionCall","src":"7518:15:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7539:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"7550:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7535:3:29"},"nodeType":"YulFunctionCall","src":"7535:18:29"},{"name":"length","nodeType":"YulIdentifier","src":"7555:6:29"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"7483:34:29"},"nodeType":"YulFunctionCall","src":"7483:79:29"},"nodeType":"YulExpressionStatement","src":"7483:79:29"},{"nodeType":"YulAssignment","src":"7571:62:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7587:9:29"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7606:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"7614:2:29","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7602:3:29"},"nodeType":"YulFunctionCall","src":"7602:15:29"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7623:2:29","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"7619:3:29"},"nodeType":"YulFunctionCall","src":"7619:7:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7598:3:29"},"nodeType":"YulFunctionCall","src":"7598:29:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7583:3:29"},"nodeType":"YulFunctionCall","src":"7583:45:29"},{"kind":"number","nodeType":"YulLiteral","src":"7630:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7579:3:29"},"nodeType":"YulFunctionCall","src":"7579:54:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7571:4:29"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7333:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7344:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7355:4:29","type":""}],"src":"7243:396:29"},{"body":{"nodeType":"YulBlock","src":"7676:95:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7693:1:29","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7700:3:29","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"7705:10:29","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"7696:3:29"},"nodeType":"YulFunctionCall","src":"7696:20:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7686:6:29"},"nodeType":"YulFunctionCall","src":"7686:31:29"},"nodeType":"YulExpressionStatement","src":"7686:31:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7733:1:29","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"7736:4:29","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7726:6:29"},"nodeType":"YulFunctionCall","src":"7726:15:29"},"nodeType":"YulExpressionStatement","src":"7726:15:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7757:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7760:4:29","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7750:6:29"},"nodeType":"YulFunctionCall","src":"7750:15:29"},"nodeType":"YulExpressionStatement","src":"7750:15:29"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"7644:127:29"},{"body":{"nodeType":"YulBlock","src":"7828:116:29","statements":[{"nodeType":"YulAssignment","src":"7838:20:29","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"7853:1:29"},{"name":"y","nodeType":"YulIdentifier","src":"7856:1:29"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"7849:3:29"},"nodeType":"YulFunctionCall","src":"7849:9:29"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"7838:7:29"}]},{"body":{"nodeType":"YulBlock","src":"7916:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"7918:16:29"},"nodeType":"YulFunctionCall","src":"7918:18:29"},"nodeType":"YulExpressionStatement","src":"7918:18:29"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"7887:1:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7880:6:29"},"nodeType":"YulFunctionCall","src":"7880:9:29"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"7894:1:29"},{"arguments":[{"name":"product","nodeType":"YulIdentifier","src":"7901:7:29"},{"name":"x","nodeType":"YulIdentifier","src":"7910:1:29"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"7897:3:29"},"nodeType":"YulFunctionCall","src":"7897:15:29"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"7891:2:29"},"nodeType":"YulFunctionCall","src":"7891:22:29"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"7877:2:29"},"nodeType":"YulFunctionCall","src":"7877:37:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7870:6:29"},"nodeType":"YulFunctionCall","src":"7870:45:29"},"nodeType":"YulIf","src":"7867:71:29"}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"7807:1:29","type":""},{"name":"y","nodeType":"YulTypedName","src":"7810:1:29","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"7816:7:29","type":""}],"src":"7776:168:29"},{"body":{"nodeType":"YulBlock","src":"7997:77:29","statements":[{"nodeType":"YulAssignment","src":"8007:16:29","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"8018:1:29"},{"name":"y","nodeType":"YulIdentifier","src":"8021:1:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8014:3:29"},"nodeType":"YulFunctionCall","src":"8014:9:29"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"8007:3:29"}]},{"body":{"nodeType":"YulBlock","src":"8046:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"8048:16:29"},"nodeType":"YulFunctionCall","src":"8048:18:29"},"nodeType":"YulExpressionStatement","src":"8048:18:29"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"8038:1:29"},{"name":"sum","nodeType":"YulIdentifier","src":"8041:3:29"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8035:2:29"},"nodeType":"YulFunctionCall","src":"8035:10:29"},"nodeType":"YulIf","src":"8032:36:29"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"7980:1:29","type":""},{"name":"y","nodeType":"YulTypedName","src":"7983:1:29","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"7989:3:29","type":""}],"src":"7949:125:29"},{"body":{"nodeType":"YulBlock","src":"8111:95:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8128:1:29","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8135:3:29","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"8140:10:29","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"8131:3:29"},"nodeType":"YulFunctionCall","src":"8131:20:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8121:6:29"},"nodeType":"YulFunctionCall","src":"8121:31:29"},"nodeType":"YulExpressionStatement","src":"8121:31:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8168:1:29","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"8171:4:29","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8161:6:29"},"nodeType":"YulFunctionCall","src":"8161:15:29"},"nodeType":"YulExpressionStatement","src":"8161:15:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8192:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8195:4:29","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8185:6:29"},"nodeType":"YulFunctionCall","src":"8185:15:29"},"nodeType":"YulExpressionStatement","src":"8185:15:29"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"8079:127:29"},{"body":{"nodeType":"YulBlock","src":"8243:95:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8260:1:29","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8267:3:29","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"8272:10:29","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"8263:3:29"},"nodeType":"YulFunctionCall","src":"8263:20:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8253:6:29"},"nodeType":"YulFunctionCall","src":"8253:31:29"},"nodeType":"YulExpressionStatement","src":"8253:31:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8300:1:29","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"8303:4:29","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8293:6:29"},"nodeType":"YulFunctionCall","src":"8293:15:29"},"nodeType":"YulExpressionStatement","src":"8293:15:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8324:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8327:4:29","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8317:6:29"},"nodeType":"YulFunctionCall","src":"8317:15:29"},"nodeType":"YulExpressionStatement","src":"8317:15:29"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"8211:127:29"},{"body":{"nodeType":"YulBlock","src":"8390:89:29","statements":[{"body":{"nodeType":"YulBlock","src":"8417:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"8419:16:29"},"nodeType":"YulFunctionCall","src":"8419:18:29"},"nodeType":"YulExpressionStatement","src":"8419:18:29"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8410:5:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8403:6:29"},"nodeType":"YulFunctionCall","src":"8403:13:29"},"nodeType":"YulIf","src":"8400:39:29"},{"nodeType":"YulAssignment","src":"8448:25:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8459:5:29"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8470:1:29","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"8466:3:29"},"nodeType":"YulFunctionCall","src":"8466:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8455:3:29"},"nodeType":"YulFunctionCall","src":"8455:18:29"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"8448:3:29"}]}]},"name":"decrement_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8372:5:29","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"8382:3:29","type":""}],"src":"8343:136:29"},{"body":{"nodeType":"YulBlock","src":"8658:182:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8675:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"8686:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8668:6:29"},"nodeType":"YulFunctionCall","src":"8668:21:29"},"nodeType":"YulExpressionStatement","src":"8668:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8709:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"8720:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8705:3:29"},"nodeType":"YulFunctionCall","src":"8705:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"8725:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8698:6:29"},"nodeType":"YulFunctionCall","src":"8698:30:29"},"nodeType":"YulExpressionStatement","src":"8698:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8748:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"8759:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8744:3:29"},"nodeType":"YulFunctionCall","src":"8744:18:29"},{"hexValue":"537472696e67733a20686578206c656e67746820696e73756666696369656e74","kind":"string","nodeType":"YulLiteral","src":"8764:34:29","type":"","value":"Strings: hex length insufficient"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8737:6:29"},"nodeType":"YulFunctionCall","src":"8737:62:29"},"nodeType":"YulExpressionStatement","src":"8737:62:29"},{"nodeType":"YulAssignment","src":"8808:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8820:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"8831:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8816:3:29"},"nodeType":"YulFunctionCall","src":"8816:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8808:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8635:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8649:4:29","type":""}],"src":"8484:356:29"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_contract$_IDAOAgendaManager_$2211__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_struct$_CandidateInfo_$2776_memory_ptr__to_t_struct$_CandidateInfo_$2776_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, and(mload(value0), sub(shl(160, 1), 1)))\n        mstore(add(headStart, 0x20), mload(add(value0, 0x20)))\n        let memberValue0 := mload(add(value0, 0x40))\n        let _1 := sub(shl(128, 1), 1)\n        mstore(add(headStart, 0x40), and(memberValue0, _1))\n        mstore(add(headStart, 0x60), and(mload(add(value0, 0x60)), _1))\n        mstore(add(headStart, 0x80), and(mload(add(value0, 0x80)), _1))\n    }\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_contract$_IDAOVault_$2534__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_contract$_ISeigManager_$2752__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_bool(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_contract$_ICandidateFactory_$1930__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_contract$_ILayer2Registry_$2588__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_fbb41bc2abbf038368153bc6dea571ef2f6b4d4922e432099d9f2115037f6794__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 49)\n        mstore(add(headStart, 64), \"DAOCommitteeProxy: impl is zero \")\n        mstore(add(headStart, 96), \"OR proxy is false\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 47)\n        mstore(add(headStart, 64), \"AccessControl: can only renounce\")\n        mstore(add(headStart, 96), \" roles for self\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_b035baf00c1e3ac88f8432354304909e029ddb0162e6075517efab161bb335ae__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 45)\n        mstore(add(headStart, 64), \"DAOCommitteeProxy: msg.sender is\")\n        mstore(add(headStart, 96), \" not an admin\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_da208ebbc28d2dfe7d6ba43fa968507881a99f2c248db7b455c564aa8d0fc19d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"DAOCommitteeProxy: input is zero\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_d70c025721ba15246df7bc3230e47788aa833a819e25e2da2bdcaefb69b47304__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 57)\n        mstore(add(headStart, 64), \"DAOCommitteeProxy: The input add\")\n        mstore(add(headStart, 96), \"ress is same as the state\")\n        tail := add(headStart, 128)\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        mstore(pos, \"AccessControl: account \")\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), add(pos, 23), length)\n        let _1 := add(pos, length)\n        mstore(add(_1, 23), \" is missing role \")\n        let length_1 := mload(value1)\n        copy_memory_to_memory_with_cleanup(add(value1, 0x20), add(_1, 40), length_1)\n        end := add(add(_1, length_1), 40)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory_with_cleanup(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function decrement_t_uint256(value) -> ret\n    {\n        if iszero(value) { panic_error_0x11() }\n        ret := add(value, not(0))\n    }\n    function abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Strings: hex length insufficient\")\n        tail := add(headStart, 96)\n    }\n}","id":29,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106101635760003560e01c80635daf08ca116100ce57806391d148541161008757806391d14854146103e6578063a217fddf146103f9578063a230c52414610401578063b5dd115814610438578063cc48b9471461044b578063cf2a239c1461045e578063d547741f1461047157610163565b80635daf08ca1461036457806363a8fd8914610377578063651d08cd1461038b5780636fb7f558146103b75780637cb00d25146103ca5780637f331636146103dd57610163565b80632f2ff15d116101205780632f2ff15d146102f45780633477ee2e1461030757806336568abe1461031a5780633659cfe61461032d5780635903bd6c146103405780635c60da1b1461035357610163565b806301ffc9a71461016d57806303e3c9ac146101955780631703a018146101ac578063248a9ca3146101b557806327fd92fd146101d85780632e011c1e14610203575b61016b610484565b005b61018061017b366004610b49565b610550565b60405190151581526020015b60405180910390f35b61019e60085481565b60405190815260200161018c565b61019e600a5481565b61019e6101c3366004610b73565b6000908152600c602052604090206001015490565b6002546101eb906001600160a01b031681565b6040516001600160a01b03909116815260200161018c565b61029f610211366004610ba8565b6040805160a0808201835260008083526020808401829052838501829052606080850183905260809485018390526001600160a01b0396871683526009825291859020855193840186528054909616835260018601549083015260028501546001600160801b0380821695840195909552600160801b90048416908201526003909301549091169082015290565b6040805182516001600160a01b0316815260208084015190820152828201516001600160801b03908116928201929092526060808401518316908201526080928301519091169181019190915260a00161018c565b61016b610302366004610bc3565b610587565b6101eb610315366004610b73565b6105ac565b61016b610328366004610bc3565b6105d6565b61016b61033b366004610ba8565b610654565b6001546101eb906001600160a01b031681565b600e546001600160a01b03166101eb565b6101eb610372366004610b73565b61079c565b600e5461018090600160a01b900460ff1681565b6101eb610399366004610ba8565b6001600160a01b039081166000908152600960205260409020541690565b6005546101eb906001600160a01b031681565b61016b6103d8366004610bef565b6107ac565b61019e600b5481565b6101806103f4366004610bc3565b6107f1565b61019e600081565b61018061040f366004610ba8565b6001600160a01b03166000908152600960205260409020600201546001600160801b0316151590565b6003546101eb906001600160a01b031681565b6000546101eb906001600160a01b031681565b6004546101eb906001600160a01b031681565b61016b61047f366004610bc3565b61081c565b6000610498600e546001600160a01b031690565b90506001600160a01b038116158015906104bc5750600e54600160a01b900460ff16155b6105275760405162461bcd60e51b815260206004820152603160248201527f44414f436f6d6d697474656550726f78793a20696d706c206973207a65726f206044820152704f522070726f78792069732066616c736560781b60648201526084015b60405180910390fd5b3660008037600080366000845af43d6000803e808015610546573d6000f35b3d6000fd5b505050565b60006001600160e01b03198216637965db0b60e01b148061058157506301ffc9a760e01b6001600160e01b03198316145b92915050565b6000828152600c60205260409020600101546105a281610841565b61054b838361084e565b600681815481106105bc57600080fd5b6000918252602090912001546001600160a01b0316905081565b6001600160a01b03811633146106465760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b606482015260840161051e565b61065082826108d4565b5050565b61065f6000336107f1565b61067b5760405162461bcd60e51b815260040161051e90610c11565b600e546001600160a01b03166106d35760405162461bcd60e51b815260206004820181905260248201527f44414f436f6d6d697474656550726f78793a20696e707574206973207a65726f604482015260640161051e565b600e546001600160a01b038083169116036107525760405162461bcd60e51b815260206004820152603960248201527f44414f436f6d6d697474656550726f78793a2054686520696e70757420616464604482015278726573732069732073616d652061732074686520737461746560381b606482015260840161051e565b600e80546001600160a01b0319166001600160a01b0383169081179091556040517fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b600781815481106105bc57600080fd5b6107b76000336107f1565b6107d35760405162461bcd60e51b815260040161051e90610c11565b600e8054911515600160a01b0260ff60a01b19909216919091179055565b6000918252600c602090815260408084206001600160a01b0393909316845291905290205460ff1690565b6000828152600c602052604090206001015461083781610841565b61054b83836108d4565b61084b813361093b565b50565b61085882826107f1565b610650576000828152600c602090815260408083206001600160a01b03851684529091529020805460ff191660011790556108903390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6108de82826107f1565b15610650576000828152600c602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b61094582826107f1565b6106505761095281610994565b61095d8360206109a6565b60405160200161096e929190610c82565b60408051601f198184030181529082905262461bcd60e51b825261051e91600401610cf1565b60606105816001600160a01b03831660145b606060006109b5836002610d3a565b6109c0906002610d51565b67ffffffffffffffff8111156109d8576109d8610d64565b6040519080825280601f01601f191660200182016040528015610a02576020820181803683370190505b509050600360fc1b81600081518110610a1d57610a1d610d7a565b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110610a4c57610a4c610d7a565b60200101906001600160f81b031916908160001a9053506000610a70846002610d3a565b610a7b906001610d51565b90505b6001811115610af3576f181899199a1a9b1b9c1cb0b131b232b360811b85600f1660108110610aaf57610aaf610d7a565b1a60f81b828281518110610ac557610ac5610d7a565b60200101906001600160f81b031916908160001a90535060049490941c93610aec81610d90565b9050610a7e565b508315610b425760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e74604482015260640161051e565b9392505050565b600060208284031215610b5b57600080fd5b81356001600160e01b031981168114610b4257600080fd5b600060208284031215610b8557600080fd5b5035919050565b80356001600160a01b0381168114610ba357600080fd5b919050565b600060208284031215610bba57600080fd5b610b4282610b8c565b60008060408385031215610bd657600080fd5b82359150610be660208401610b8c565b90509250929050565b600060208284031215610c0157600080fd5b81358015158114610b4257600080fd5b6020808252602d908201527f44414f436f6d6d697474656550726f78793a206d73672e73656e64657220697360408201526c103737ba1030b71030b236b4b760991b606082015260800190565b60005b83811015610c79578181015183820152602001610c61565b50506000910152565b76020b1b1b2b9b9a1b7b73a3937b61d1030b1b1b7bab73a1604d1b815260008351610cb4816017850160208801610c5e565b7001034b99036b4b9b9b4b733903937b6329607d1b6017918401918201528351610ce5816028840160208801610c5e565b01602801949350505050565b6020815260008251806020840152610d10816040850160208701610c5e565b601f01601f19169190910160400192915050565b634e487b7160e01b600052601160045260246000fd5b808202811582820484141761058157610581610d24565b8082018082111561058157610581610d24565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b600081610d9f57610d9f610d24565b50600019019056fea264697066735822122040cdc7e2cce6f60b2d522c0b9ed3ee65054ea9eed973e0225e32bcfe17e0a0af64736f6c63430008120033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x163 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5DAF08CA GT PUSH2 0xCE JUMPI DUP1 PUSH4 0x91D14854 GT PUSH2 0x87 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x3E6 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x3F9 JUMPI DUP1 PUSH4 0xA230C524 EQ PUSH2 0x401 JUMPI DUP1 PUSH4 0xB5DD1158 EQ PUSH2 0x438 JUMPI DUP1 PUSH4 0xCC48B947 EQ PUSH2 0x44B JUMPI DUP1 PUSH4 0xCF2A239C EQ PUSH2 0x45E JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x471 JUMPI PUSH2 0x163 JUMP JUMPDEST DUP1 PUSH4 0x5DAF08CA EQ PUSH2 0x364 JUMPI DUP1 PUSH4 0x63A8FD89 EQ PUSH2 0x377 JUMPI DUP1 PUSH4 0x651D08CD EQ PUSH2 0x38B JUMPI DUP1 PUSH4 0x6FB7F558 EQ PUSH2 0x3B7 JUMPI DUP1 PUSH4 0x7CB00D25 EQ PUSH2 0x3CA JUMPI DUP1 PUSH4 0x7F331636 EQ PUSH2 0x3DD JUMPI PUSH2 0x163 JUMP JUMPDEST DUP1 PUSH4 0x2F2FF15D GT PUSH2 0x120 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x2F4 JUMPI DUP1 PUSH4 0x3477EE2E EQ PUSH2 0x307 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x31A JUMPI DUP1 PUSH4 0x3659CFE6 EQ PUSH2 0x32D JUMPI DUP1 PUSH4 0x5903BD6C EQ PUSH2 0x340 JUMPI DUP1 PUSH4 0x5C60DA1B EQ PUSH2 0x353 JUMPI PUSH2 0x163 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x16D JUMPI DUP1 PUSH4 0x3E3C9AC EQ PUSH2 0x195 JUMPI DUP1 PUSH4 0x1703A018 EQ PUSH2 0x1AC JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x1B5 JUMPI DUP1 PUSH4 0x27FD92FD EQ PUSH2 0x1D8 JUMPI DUP1 PUSH4 0x2E011C1E EQ PUSH2 0x203 JUMPI JUMPDEST PUSH2 0x16B PUSH2 0x484 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x180 PUSH2 0x17B CALLDATASIZE PUSH1 0x4 PUSH2 0xB49 JUMP JUMPDEST PUSH2 0x550 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19E PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x18C JUMP JUMPDEST PUSH2 0x19E PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH2 0x19E PUSH2 0x1C3 CALLDATASIZE PUSH1 0x4 PUSH2 0xB73 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x1EB SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x18C JUMP JUMPDEST PUSH2 0x29F PUSH2 0x211 CALLDATASIZE PUSH1 0x4 PUSH2 0xBA8 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP1 DUP3 ADD DUP4 MSTORE PUSH1 0x0 DUP1 DUP4 MSTORE PUSH1 0x20 DUP1 DUP5 ADD DUP3 SWAP1 MSTORE DUP4 DUP6 ADD DUP3 SWAP1 MSTORE PUSH1 0x60 DUP1 DUP6 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 SWAP5 DUP6 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP7 DUP8 AND DUP4 MSTORE PUSH1 0x9 DUP3 MSTORE SWAP2 DUP6 SWAP1 KECCAK256 DUP6 MLOAD SWAP4 DUP5 ADD DUP7 MSTORE DUP1 SLOAD SWAP1 SWAP7 AND DUP4 MSTORE PUSH1 0x1 DUP7 ADD SLOAD SWAP1 DUP4 ADD MSTORE PUSH1 0x2 DUP6 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP1 DUP3 AND SWAP6 DUP5 ADD SWAP6 SWAP1 SWAP6 MSTORE PUSH1 0x1 PUSH1 0x80 SHL SWAP1 DIV DUP5 AND SWAP1 DUP3 ADD MSTORE PUSH1 0x3 SWAP1 SWAP4 ADD SLOAD SWAP1 SWAP2 AND SWAP1 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP1 DUP5 ADD MLOAD SWAP1 DUP3 ADD MSTORE DUP3 DUP3 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 DUP2 AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP1 DUP5 ADD MLOAD DUP4 AND SWAP1 DUP3 ADD MSTORE PUSH1 0x80 SWAP3 DUP4 ADD MLOAD SWAP1 SWAP2 AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xA0 ADD PUSH2 0x18C JUMP JUMPDEST PUSH2 0x16B PUSH2 0x302 CALLDATASIZE PUSH1 0x4 PUSH2 0xBC3 JUMP JUMPDEST PUSH2 0x587 JUMP JUMPDEST PUSH2 0x1EB PUSH2 0x315 CALLDATASIZE PUSH1 0x4 PUSH2 0xB73 JUMP JUMPDEST PUSH2 0x5AC JUMP JUMPDEST PUSH2 0x16B PUSH2 0x328 CALLDATASIZE PUSH1 0x4 PUSH2 0xBC3 JUMP JUMPDEST PUSH2 0x5D6 JUMP JUMPDEST PUSH2 0x16B PUSH2 0x33B CALLDATASIZE PUSH1 0x4 PUSH2 0xBA8 JUMP JUMPDEST PUSH2 0x654 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x1EB SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0xE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1EB JUMP JUMPDEST PUSH2 0x1EB PUSH2 0x372 CALLDATASIZE PUSH1 0x4 PUSH2 0xB73 JUMP JUMPDEST PUSH2 0x79C JUMP JUMPDEST PUSH1 0xE SLOAD PUSH2 0x180 SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x1EB PUSH2 0x399 CALLDATASIZE PUSH1 0x4 PUSH2 0xBA8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND SWAP1 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x1EB SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x16B PUSH2 0x3D8 CALLDATASIZE PUSH1 0x4 PUSH2 0xBEF JUMP JUMPDEST PUSH2 0x7AC JUMP JUMPDEST PUSH2 0x19E PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH2 0x180 PUSH2 0x3F4 CALLDATASIZE PUSH1 0x4 PUSH2 0xBC3 JUMP JUMPDEST PUSH2 0x7F1 JUMP JUMPDEST PUSH2 0x19E PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH2 0x180 PUSH2 0x40F CALLDATASIZE PUSH1 0x4 PUSH2 0xBA8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x1EB SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x1EB SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x1EB SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x16B PUSH2 0x47F CALLDATASIZE PUSH1 0x4 PUSH2 0xBC3 JUMP JUMPDEST PUSH2 0x81C JUMP JUMPDEST PUSH1 0x0 PUSH2 0x498 PUSH1 0xE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x4BC JUMPI POP PUSH1 0xE SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x527 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x31 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x44414F436F6D6D697474656550726F78793A20696D706C206973207A65726F20 PUSH1 0x44 DUP3 ADD MSTORE PUSH17 0x4F522070726F78792069732066616C7365 PUSH1 0x78 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLDATASIZE PUSH1 0x0 DUP1 CALLDATACOPY PUSH1 0x0 DUP1 CALLDATASIZE PUSH1 0x0 DUP5 GAS DELEGATECALL RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY DUP1 DUP1 ISZERO PUSH2 0x546 JUMPI RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x7965DB0B PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x581 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x5A2 DUP2 PUSH2 0x841 JUMP JUMPDEST PUSH2 0x54B DUP4 DUP4 PUSH2 0x84E JUMP JUMPDEST PUSH1 0x6 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x5BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ PUSH2 0x646 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x103937B632B9903337B91039B2B633 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x51E JUMP JUMPDEST PUSH2 0x650 DUP3 DUP3 PUSH2 0x8D4 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x65F PUSH1 0x0 CALLER PUSH2 0x7F1 JUMP JUMPDEST PUSH2 0x67B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x51E SWAP1 PUSH2 0xC11 JUMP JUMPDEST PUSH1 0xE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x6D3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x44414F436F6D6D697474656550726F78793A20696E707574206973207A65726F PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x51E JUMP JUMPDEST PUSH1 0xE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND SWAP2 AND SUB PUSH2 0x752 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x44414F436F6D6D697474656550726F78793A2054686520696E70757420616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH25 0x726573732069732073616D6520617320746865207374617465 PUSH1 0x38 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x51E JUMP JUMPDEST PUSH1 0xE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x7 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x5BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7B7 PUSH1 0x0 CALLER PUSH2 0x7F1 JUMP JUMPDEST PUSH2 0x7D3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x51E SWAP1 PUSH2 0xC11 JUMP JUMPDEST PUSH1 0xE DUP1 SLOAD SWAP2 ISZERO ISZERO PUSH1 0x1 PUSH1 0xA0 SHL MUL PUSH1 0xFF PUSH1 0xA0 SHL NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0xC PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x837 DUP2 PUSH2 0x841 JUMP JUMPDEST PUSH2 0x54B DUP4 DUP4 PUSH2 0x8D4 JUMP JUMPDEST PUSH2 0x84B DUP2 CALLER PUSH2 0x93B JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x858 DUP3 DUP3 PUSH2 0x7F1 JUMP JUMPDEST PUSH2 0x650 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x890 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH2 0x8DE DUP3 DUP3 PUSH2 0x7F1 JUMP JUMPDEST ISZERO PUSH2 0x650 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD CALLER SWAP3 DUP6 SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP2 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH2 0x945 DUP3 DUP3 PUSH2 0x7F1 JUMP JUMPDEST PUSH2 0x650 JUMPI PUSH2 0x952 DUP2 PUSH2 0x994 JUMP JUMPDEST PUSH2 0x95D DUP4 PUSH1 0x20 PUSH2 0x9A6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x96E SWAP3 SWAP2 SWAP1 PUSH2 0xC82 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH2 0x51E SWAP2 PUSH1 0x4 ADD PUSH2 0xCF1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x581 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x14 JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x9B5 DUP4 PUSH1 0x2 PUSH2 0xD3A JUMP JUMPDEST PUSH2 0x9C0 SWAP1 PUSH1 0x2 PUSH2 0xD51 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x9D8 JUMPI PUSH2 0x9D8 PUSH2 0xD64 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xA02 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x3 PUSH1 0xFC SHL DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xA1D JUMPI PUSH2 0xA1D PUSH2 0xD7A JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0xF PUSH1 0xFB SHL DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0xA4C JUMPI PUSH2 0xA4C PUSH2 0xD7A JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x0 PUSH2 0xA70 DUP5 PUSH1 0x2 PUSH2 0xD3A JUMP JUMPDEST PUSH2 0xA7B SWAP1 PUSH1 0x1 PUSH2 0xD51 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xAF3 JUMPI PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL DUP6 PUSH1 0xF AND PUSH1 0x10 DUP2 LT PUSH2 0xAAF JUMPI PUSH2 0xAAF PUSH2 0xD7A JUMP JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xAC5 JUMPI PUSH2 0xAC5 PUSH2 0xD7A JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 SWAP5 SWAP1 SWAP5 SHR SWAP4 PUSH2 0xAEC DUP2 PUSH2 0xD90 JUMP JUMPDEST SWAP1 POP PUSH2 0xA7E JUMP JUMPDEST POP DUP4 ISZERO PUSH2 0xB42 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x51E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xB42 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB85 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xBA3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBBA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB42 DUP3 PUSH2 0xB8C JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBD6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0xBE6 PUSH1 0x20 DUP5 ADD PUSH2 0xB8C JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC01 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xB42 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2D SWAP1 DUP3 ADD MSTORE PUSH32 0x44414F436F6D6D697474656550726F78793A206D73672E73656E646572206973 PUSH1 0x40 DUP3 ADD MSTORE PUSH13 0x103737BA1030B71030B236B4B7 PUSH1 0x99 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xC79 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xC61 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH23 0x20B1B1B2B9B9A1B7B73A3937B61D1030B1B1B7BAB73A1 PUSH1 0x4D SHL DUP2 MSTORE PUSH1 0x0 DUP4 MLOAD PUSH2 0xCB4 DUP2 PUSH1 0x17 DUP6 ADD PUSH1 0x20 DUP9 ADD PUSH2 0xC5E JUMP JUMPDEST PUSH17 0x1034B99036B4B9B9B4B733903937B6329 PUSH1 0x7D SHL PUSH1 0x17 SWAP2 DUP5 ADD SWAP2 DUP3 ADD MSTORE DUP4 MLOAD PUSH2 0xCE5 DUP2 PUSH1 0x28 DUP5 ADD PUSH1 0x20 DUP9 ADD PUSH2 0xC5E JUMP JUMPDEST ADD PUSH1 0x28 ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0xD10 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0xC5E JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x581 JUMPI PUSH2 0x581 PUSH2 0xD24 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x581 JUMPI PUSH2 0x581 PUSH2 0xD24 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH2 0xD9F JUMPI PUSH2 0xD9F PUSH2 0xD24 JUMP JUMPDEST POP PUSH1 0x0 NOT ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BLOCKHASH 0xCD 0xC7 0xE2 0xCC 0xE6 0xF6 SIGNEXTEND 0x2D MSTORE 0x2C SIGNEXTEND SWAP15 0xD3 0xEE PUSH6 0x54EA9EED973 0xE0 0x22 0x5E ORIGIN 0xBC INVALID OR 0xE0 LOG0 0xAF PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ","sourceMap":"329:3253:21:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2607:11;:9;:11::i;:::-;329:3253;2606:202:22;;;;;;:::i;:::-;;:::i;:::-;;;470:14:29;;463:22;445:41;;433:2;418:18;2606:202:22;;;;;;;;1118:33:11;;;;;;;;;643:25:29;;;631:2;616:18;1118:33:11;497:177:29;1268:30:11;;;;;;4378:129:22;;;;;;:::i;:::-;4452:7;4478:12;;;:6;:12;;;;;:22;;;;4378:129;829:47:11;;;;;-1:-1:-1;;;;;829:47:11;;;;;;-1:-1:-1;;;;;1236:32:29;;;1218:51;;1206:2;1191:18;829:47:11;1046:229:29;2638:144:11;;;;;;:::i;:::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2748:27:11;;;;;:15;:27;;;;;;2741:34;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2741:34:11;;;;;;;;;;-1:-1:-1;;;2741:34:11;;;;;;;;;;;;;;;;;;;;;2638:144;;;;;1880:13:29;;-1:-1:-1;;;;;1876:39:29;1858:58;;1972:4;1960:17;;;1954:24;1932:20;;;1925:54;2014:17;;;2008:24;-1:-1:-1;;;;;2108:21:29;;;2086:20;;;2079:51;;;;2190:4;2178:17;;;2172:24;2168:33;;2146:20;;;2139:63;2059:3;2250:17;;;2244:24;2240:33;;;2218:20;;;2211:63;;;;1845:3;1830:19;2638:144:11;1649:631:29;4803:145:22;;;;;;:::i;:::-;;:::i;1037:36:11:-;;;;;;:::i;:::-;;:::i;5912:214:22:-;;;;;;:::i;:::-;;:::i;2163:307:21:-;;;;;;:::i;:::-;;:::i;789:34:11:-;;;;;-1:-1:-1;;;;;789:34:11;;;2476:95:21;2549:15;;-1:-1:-1;;;;;2549:15:21;2476:95;;1079:33:11;;;;;;:::i;:::-;;:::i;449:22:21:-;;;;;-1:-1:-1;;;449:22:21;;;;;;2477:155:11;;;;;;:::i;:::-;-1:-1:-1;;;;;2580:27:11;;;2554:7;2580:27;;;:15;:27;;;;;:45;;;2477:155;990:40;;;;;-1:-1:-1;;;;;990:40:11;;;1966:91:21;;;;;;:::i;:::-;;:::i;1305:47:11:-;;;;;;2895:145:22;;;;;;:::i;:::-;;:::i;2027:49::-;;2072:4;2027:49;;2325:146:11;;;;;;:::i;:::-;-1:-1:-1;;;;;2416:27:11;2393:4;2416:27;;;:15;:27;;;;;:44;;;-1:-1:-1;;;;;2416:44:11;:48;;;2325:146;882:50;;;;;-1:-1:-1;;;;;882:50:11;;;756:27;;;;;-1:-1:-1;;;;;756:27:11;;;938:46;;;;;-1:-1:-1;;;;;938:46:11;;;5228:147:22;;;;;;:::i;:::-;;:::i;2631:949:21:-;2671:13;2687:16;2549:15;;-1:-1:-1;;;;;2549:15:21;;2476:95;2687:16;2671:32;-1:-1:-1;;;;;;2721:19:21;;;;;;:34;;-1:-1:-1;2745:10:21;;-1:-1:-1;;;2745:10:21;;;;2744:11;2721:34;2713:96;;;;-1:-1:-1;;;2713:96:21;;4338:2:29;2713:96:21;;;4320:21:29;4377:2;4357:18;;;4350:30;4416:34;4396:18;;;4389:62;-1:-1:-1;;;4467:18:29;;;4460:47;4524:19;;2713:96:21;;;;;;;;;3088:14;3085:1;3082;3069:34;3293:1;3290;3274:14;3271:1;3264:5;3257;3244:51;3369:16;3366:1;3363;3348:38;3407:6;3474:38;;;;3545:16;3542:1;3535:27;3474:38;3493:16;3490:1;3483:27;3400:164;;;2829:745;2631:949::o;2606:202:22:-;2691:4;-1:-1:-1;;;;;;2714:47:22;;-1:-1:-1;;;2714:47:22;;:87;;-1:-1:-1;;;;;;;;;;937:40:26;;;2765:36:22;2707:94;2606:202;-1:-1:-1;;2606:202:22:o;4803:145::-;4452:7;4478:12;;;:6;:12;;;;;:22;;;2505:16;2516:4;2505:10;:16::i;:::-;4916:25:::1;4927:4;4933:7;4916:10;:25::i;1037:36:11:-:0;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1037:36:11;;-1:-1:-1;1037:36:11;:::o;5912:214:22:-;-1:-1:-1;;;;;6007:23:22;;719:10:24;6007:23:22;5999:83;;;;-1:-1:-1;;;5999:83:22;;4756:2:29;5999:83:22;;;4738:21:29;4795:2;4775:18;;;4768:30;4834:34;4814:18;;;4807:62;-1:-1:-1;;;4885:18:29;;;4878:45;4940:19;;5999:83:22;4554:411:29;5999:83:22;6093:26;6105:4;6111:7;6093:11;:26::i;:::-;5912:214;;:::o;2163:307:21:-;570:39;2072:4:22;598:10:21;570:7;:39::i;:::-;562:97;;;;-1:-1:-1;;;562:97:21;;;;;;;:::i;:::-;2233:15:::1;::::0;-1:-1:-1;;;;;2233:15:21::1;2225:74;;;::::0;-1:-1:-1;;;2225:74:21;;5586:2:29;2225:74:21::1;::::0;::::1;5568:21:29::0;;;5605:18;;;5598:30;5664:34;5644:18;;;5637:62;5716:18;;2225:74:21::1;5384:356:29::0;2225:74:21::1;2317:15;::::0;-1:-1:-1;;;;;2317:23:21;;::::1;:15:::0;::::1;:23:::0;2309:93:::1;;;::::0;-1:-1:-1;;;2309:93:21;;5947:2:29;2309:93:21::1;::::0;::::1;5929:21:29::0;5986:2;5966:18;;;5959:30;6025:34;6005:18;;;5998:62;-1:-1:-1;;;6076:18:29;;;6069:55;6141:19;;2309:93:21::1;5745:421:29::0;2309:93:21::1;2412:15;:22:::0;;-1:-1:-1;;;;;;2412:22:21::1;-1:-1:-1::0;;;;;2412:22:21;::::1;::::0;;::::1;::::0;;;2449:14:::1;::::0;::::1;::::0;-1:-1:-1;;2449:14:21::1;2163:307:::0;:::o;1079:33:11:-;;;;;;;;;;;;1966:91:21;570:39;2072:4:22;598:10:21;570:7;:39::i;:::-;562:97;;;;-1:-1:-1;;;562:97:21;;;;;;;:::i;:::-;2031:10:::1;:19:::0;;;::::1;;-1:-1:-1::0;;;2031:19:21::1;-1:-1:-1::0;;;;2031:19:21;;::::1;::::0;;;::::1;::::0;;1966:91::o;2895:145:22:-;2981:4;3004:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;3004:29:22;;;;;;;;;;;;;;;2895:145::o;5228:147::-;4452:7;4478:12;;;:6;:12;;;;;:22;;;2505:16;2516:4;2505:10;:16::i;:::-;5342:26:::1;5354:4;5360:7;5342:11;:26::i;3334:103::-:0;3400:30;3411:4;719:10:24;3400::22;:30::i;:::-;3334:103;:::o;7461:233::-;7544:22;7552:4;7558:7;7544;:22::i;:::-;7539:149;;7582:12;;;;:6;:12;;;;;;;;-1:-1:-1;;;;;7582:29:22;;;;;;;;;:36;;-1:-1:-1;;7582:36:22;7614:4;7582:36;;;7664:12;719:10:24;;640:96;7664:12:22;-1:-1:-1;;;;;7637:40:22;7655:7;-1:-1:-1;;;;;7637:40:22;7649:4;7637:40;;;;;;;;;;7461:233;;:::o;7865:234::-;7948:22;7956:4;7962:7;7948;:22::i;:::-;7944:149;;;8018:5;7986:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;7986:29:22;;;;;;;;;;:37;;-1:-1:-1;;7986:37:22;;;8042:40;719:10:24;;7986:12:22;;8042:40;;8018:5;8042:40;7865:234;;:::o;3718:479::-;3806:22;3814:4;3820:7;3806;:22::i;:::-;3801:390;;3989:28;4009:7;3989:19;:28::i;:::-;4088:38;4116:4;4123:2;4088:19;:38::i;:::-;3896:252;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;3896:252:22;;;;;;;;;;-1:-1:-1;;;3844:336:22;;;;;;;:::i;2102:149:25:-;2160:13;2192:52;-1:-1:-1;;;;;2204:22:25;;311:2;1513:437;1588:13;1613:19;1645:10;1649:6;1645:1;:10;:::i;:::-;:14;;1658:1;1645:14;:::i;:::-;1635:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1635:25:25;;1613:47;;-1:-1:-1;;;1670:6:25;1677:1;1670:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1670:15:25;;;;;;;;;-1:-1:-1;;;1695:6:25;1702:1;1695:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1695:15:25;;;;;;;;-1:-1:-1;1725:9:25;1737:10;1741:6;1737:1;:10;:::i;:::-;:14;;1750:1;1737:14;:::i;:::-;1725:26;;1720:128;1757:1;1753;:5;1720:128;;;-1:-1:-1;;;1800:5:25;1808:3;1800:11;1791:21;;;;;;;:::i;:::-;;;;1779:6;1786:1;1779:9;;;;;;;;:::i;:::-;;;;:33;-1:-1:-1;;;;;1779:33:25;;;;;;;;-1:-1:-1;1836:1:25;1826:11;;;;;1760:3;;;:::i;:::-;;;1720:128;;;-1:-1:-1;1865:10:25;;1857:55;;;;-1:-1:-1;;;1857:55:25;;8686:2:29;1857:55:25;;;8668:21:29;;;8705:18;;;8698:30;8764:34;8744:18;;;8737:62;8816:18;;1857:55:25;8484:356:29;1857:55:25;1936:6;1513:437;-1:-1:-1;;;1513:437:25:o;14:286:29:-;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:29;;209:43;;199:71;;266:1;263;256:12;679:180;738:6;791:2;779:9;770:7;766:23;762:32;759:52;;;807:1;804;797:12;759:52;-1:-1:-1;830:23:29;;679:180;-1:-1:-1;679:180:29:o;1280:173::-;1348:20;;-1:-1:-1;;;;;1397:31:29;;1387:42;;1377:70;;1443:1;1440;1433:12;1377:70;1280:173;;;:::o;1458:186::-;1517:6;1570:2;1558:9;1549:7;1545:23;1541:32;1538:52;;;1586:1;1583;1576:12;1538:52;1609:29;1628:9;1609:29;:::i;2285:254::-;2353:6;2361;2414:2;2402:9;2393:7;2389:23;2385:32;2382:52;;;2430:1;2427;2420:12;2382:52;2466:9;2453:23;2443:33;;2495:38;2529:2;2518:9;2514:18;2495:38;:::i;:::-;2485:48;;2285:254;;;;;:::o;3392:273::-;3448:6;3501:2;3489:9;3480:7;3476:23;3472:32;3469:52;;;3517:1;3514;3507:12;3469:52;3556:9;3543:23;3609:5;3602:13;3595:21;3588:5;3585:32;3575:60;;3631:1;3628;3621:12;4970:409;5172:2;5154:21;;;5211:2;5191:18;;;5184:30;5250:34;5245:2;5230:18;;5223:62;-1:-1:-1;;;5316:2:29;5301:18;;5294:43;5369:3;5354:19;;4970:409::o;6171:250::-;6256:1;6266:113;6280:6;6277:1;6274:13;6266:113;;;6356:11;;;6350:18;6337:11;;;6330:39;6302:2;6295:10;6266:113;;;-1:-1:-1;;6413:1:29;6395:16;;6388:27;6171:250::o;6426:812::-;-1:-1:-1;;;6832:3:29;6825:38;6807:3;6892:6;6886:13;6908:75;6976:6;6971:2;6966:3;6962:12;6955:4;6947:6;6943:17;6908:75;:::i;:::-;-1:-1:-1;;;7042:2:29;7002:16;;;7034:11;;;7027:40;7092:13;;7114:76;7092:13;7176:2;7168:11;;7161:4;7149:17;;7114:76;:::i;:::-;7210:17;7229:2;7206:26;;6426:812;-1:-1:-1;;;;6426:812:29:o;7243:396::-;7392:2;7381:9;7374:21;7355:4;7424:6;7418:13;7467:6;7462:2;7451:9;7447:18;7440:34;7483:79;7555:6;7550:2;7539:9;7535:18;7530:2;7522:6;7518:15;7483:79;:::i;:::-;7623:2;7602:15;-1:-1:-1;;7598:29:29;7583:45;;;;7630:2;7579:54;;7243:396;-1:-1:-1;;7243:396:29:o;7644:127::-;7705:10;7700:3;7696:20;7693:1;7686:31;7736:4;7733:1;7726:15;7760:4;7757:1;7750:15;7776:168;7849:9;;;7880;;7897:15;;;7891:22;;7877:37;7867:71;;7918:18;;:::i;7949:125::-;8014:9;;;8035:10;;;8032:36;;;8048:18;;:::i;8079:127::-;8140:10;8135:3;8131:20;8128:1;8121:31;8171:4;8168:1;8161:15;8195:4;8192:1;8185:15;8211:127;8272:10;8267:3;8263:20;8260:1;8253:31;8303:4;8300:1;8293:15;8327:4;8324:1;8317:15;8343:136;8382:3;8410:5;8400:39;;8419:18;;:::i;:::-;-1:-1:-1;;;8455:18:29;;8343:136::o"},"gasEstimates":{"creation":{"codeDepositCost":"709800","executionCost":"infinite","totalCost":"infinite"},"external":{"":"infinite","DEFAULT_ADMIN_ROLE()":"239","activityRewardPerSecond()":"2428","agendaManager()":"2449","candidateContract(address)":"2634","candidateFactory()":"2425","candidateInfos(address)":"9504","candidates(uint256)":"4659","daoVault()":"2448","getRoleAdmin(bytes32)":"2534","grantRole(bytes32,address)":"infinite","hasRole(bytes32,address)":"2676","implementation()":"2464","isMember(address)":"2628","layer2Registry()":"2469","maxMember()":"2341","members(uint256)":"4637","pauseProxy()":"2361","quorum()":"2363","renounceRole(bytes32,address)":"29068","revokeRole(bytes32,address)":"infinite","seigManager()":"2426","setProxyPause(bool)":"26948","supportsInterface(bytes4)":"450","ton()":"2447","upgradeTo(address)":"32401"},"internal":{"_fallback()":"infinite"}},"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","activityRewardPerSecond()":"7f331636","agendaManager()":"27fd92fd","candidateContract(address)":"651d08cd","candidateFactory()":"b5dd1158","candidateInfos(address)":"2e011c1e","candidates(uint256)":"3477ee2e","daoVault()":"5903bd6c","getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","implementation()":"5c60da1b","isMember(address)":"a230c524","layer2Registry()":"cf2a239c","maxMember()":"03e3c9ac","members(uint256)":"5daf08ca","pauseProxy()":"63a8fd89","quorum()":"1703a018","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","seigManager()":"6fb7f558","setProxyPause(bool)":"7cb00d25","supportsInterface(bytes4)":"01ffc9a7","ton()":"cc48b947","upgradeTo(address)":"3659cfe6"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_ton\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_impl\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_seigManager\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_layer2Registry\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_agendaManager\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_candidateFactory\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_daoVault\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"stateMutability\":\"nonpayable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"activityRewardPerSecond\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"agendaManager\",\"outputs\":[{\"internalType\":\"contract IDAOAgendaManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_candidate\",\"type\":\"address\"}],\"name\":\"candidateContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"candidateFactory\",\"outputs\":[{\"internalType\":\"contract ICandidateFactory\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_candidate\",\"type\":\"address\"}],\"name\":\"candidateInfos\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"candidateContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"indexMembers\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"memberJoinedTime\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"rewardPeriod\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"claimedTimestamp\",\"type\":\"uint128\"}],\"internalType\":\"struct IStorageStateCommittee.CandidateInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"candidates\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"daoVault\",\"outputs\":[{\"internalType\":\"contract IDAOVault\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_candidate\",\"type\":\"address\"}],\"name\":\"isMember\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"layer2Registry\",\"outputs\":[{\"internalType\":\"contract ILayer2Registry\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxMember\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"members\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pauseProxy\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"quorum\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"seigManager\",\"outputs\":[{\"internalType\":\"contract ISeigManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_pause\",\"type\":\"bool\"}],\"name\":\"setProxyPause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ton\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"impl\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"setProxyPause(bool)\":{\"params\":{\"_pause\":\"true:pause or false:resume\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"upgradeTo(address)\":{\"params\":{\"impl\":\"New implementation contract address\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"setProxyPause(bool)\":{\"notice\":\"Set pause state\"},\"upgradeTo(address)\":{\"notice\":\"Set implementation contract\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/test/DAOCommitteeProxy.sol\":\"DAOCommitteeProxy\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"contracts/AccessControl/ERC165A.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.4;\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts may inherit from this and call {_registerInterface} to declare\\n * their support of an interface.\\n */\\nabstract contract ERC165A {\\n    /*\\n     * bytes4(keccak256('supportsInterface(bytes4)')) == 0x01ffc9a7\\n     */\\n    bytes4 private constant _INTERFACE_ID_ERC165 = 0x01ffc9a7;\\n\\n    /**\\n     * @dev Mapping of interface ids to whether or not it's supported.\\n     */\\n    mapping(bytes4 => bool) private _supportedInterfaces;\\n\\n    constructor () internal {\\n        // Derived contracts need only register support for their own interfaces,\\n        // we register support for ERC165 itself here\\n        _registerInterface(_INTERFACE_ID_ERC165);\\n    }\\n\\n    // /**\\n    //  * @dev See {IERC165-supportsInterface}.\\n    //  *\\n    //  * Time complexity O(1), guaranteed to always use less than 30 000 gas.\\n    //  */\\n    // function supportsInterface(bytes4 interfaceId) public view override returns (bool) {\\n    //     return _supportedInterfaces[interfaceId];\\n    // }\\n\\n    /**\\n     * @dev Registers the contract as an implementer of the interface defined by\\n     * `interfaceId`. Support of the actual ERC165 interface is automatic and\\n     * registering its interface id is not required.\\n     *\\n     * See {IERC165-supportsInterface}.\\n     *\\n     * Requirements:\\n     *\\n     * - `interfaceId` cannot be the ERC165 invalid interface (`0xffffffff`).\\n     */\\n    function _registerInterface(bytes4 interfaceId) internal virtual {\\n        require(interfaceId != 0xffffffff, \\\"ERC165: invalid interface id\\\");\\n        _supportedInterfaces[interfaceId] = true;\\n    }\\n}\",\"keccak256\":\"0x42ac6a7c9cc571496eaed210a7452ae8955ba963702bfec60340ad04c62abb49\",\"license\":\"MIT\"},\"contracts/dao/StorageStateCommittee.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.17;\\npragma abicoder v2;\\n\\nimport { IStorageStateCommittee } from \\\"../interfaces/IStorageStateCommittee.sol\\\";\\nimport { ICandidateFactory } from \\\"../interfaces/ICandidateFactory.sol\\\";\\nimport { ILayer2Registry } from \\\"../interfaces/ILayer2Registry.sol\\\";\\nimport { ISeigManager } from \\\"../interfaces/ISeigManager.sol\\\";\\nimport { IDAOAgendaManager } from \\\"../interfaces/IDAOAgendaManager.sol\\\";\\nimport { IDAOVault } from \\\"../interfaces/IDAOVault.sol\\\";\\nimport { ICandidate } from \\\"../interfaces/ICandidate.sol\\\";\\n\\ncontract StorageStateCommittee is IStorageStateCommittee {\\n    enum AgendaStatus { NONE, NOTICE, VOTING, EXEC, ENDED, PENDING, RISK }\\n    enum AgendaResult { UNDEFINED, ACCEPT, REJECT, DISMISS }\\n\\n    address public override ton;\\n    IDAOVault public override daoVault;\\n    IDAOAgendaManager public override agendaManager;\\n    ICandidateFactory public override candidateFactory;\\n    ILayer2Registry public override layer2Registry;\\n    ISeigManager public override seigManager;\\n\\n    address[] public override candidates;\\n    address[] public override members;\\n    uint256 public override maxMember;\\n\\n    // candidate EOA => candidate information\\n    mapping(address => CandidateInfo) internal _candidateInfos;\\n    uint256 public override quorum;\\n\\n    uint256 public override activityRewardPerSecond;\\n\\n    modifier validAgendaManager() {\\n        require(address(agendaManager) != address(0), \\\"StorageStateCommittee: AgendaManager is zero\\\");\\n        _;\\n    }\\n    \\n    modifier validCommitteeL2Factory() {\\n        require(address(candidateFactory) != address(0), \\\"StorageStateCommittee: invalid CommitteeL2Factory\\\");\\n        _;\\n    }\\n\\n    modifier validLayer2Registry() {\\n        require(address(layer2Registry) != address(0), \\\"StorageStateCommittee: invalid Layer2Registry\\\");\\n        _;\\n    }\\n\\n    modifier validSeigManager() {\\n        require(address(seigManager) != address(0), \\\"StorageStateCommittee: invalid SeigManagere\\\");\\n        _;\\n    }\\n\\n    modifier onlyMember() {\\n        require(isMember(msg.sender), \\\"StorageStateCommittee: not a member\\\");\\n        _;\\n    }\\n\\n    modifier onlyMemberContract() {\\n        address candidate = ICandidate(msg.sender).candidate();\\n        require(isMember(candidate), \\\"StorageStateCommittee: not a member\\\");\\n        _;\\n    }\\n    \\n    function isMember(address _candidate) public view override returns (bool) {\\n        return _candidateInfos[_candidate].memberJoinedTime > 0;\\n    }\\n\\n    function candidateContract(address _candidate) public view override returns (address) {\\n        return _candidateInfos[_candidate].candidateContract;\\n    }\\n\\n    function candidateInfos(address _candidate) external override returns (CandidateInfo memory) {\\n        return _candidateInfos[_candidate];\\n    }\\n\\n    /*function getCandidate() public view returns (address) {\\n        ILayer2(_candidateContract).\\n    }*/\\n}\\n\",\"keccak256\":\"0x01e5edcae801f932991d2222a704f82cf9afea49892a0f2987ac14e5cc57ff77\",\"license\":\"MIT\"},\"contracts/interfaces/ICandidate.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.17;\\n\\nimport { IDAOCommittee } from \\\"../interfaces/IDAOCommittee.sol\\\";\\nimport { ISeigManager } from \\\"../interfaces/ISeigManager.sol\\\";\\n\\ninterface ICandidate {\\n    function setSeigManager(address _seigMan) external;\\n    function setCommittee(address _committee) external;\\n    function updateSeigniorage() external returns (bool);\\n    function changeMember(uint256 _memberIndex) external returns (bool);\\n    function retireMember() external returns (bool);\\n    function castVote(uint256 _agendaID, uint256 _vote, string calldata _comment) external;\\n    function isCandidateContract() external view returns (bool);\\n    function totalStaked() external view returns (uint256 totalsupply);\\n    function stakedOf(address _account) external view returns (uint256 amount);\\n    function setMemo(string calldata _memo) external;\\n    function claimActivityReward() external;\\n\\n    // getter\\n    function candidate() external view returns (address);\\n    function isLayer2Candidate() external view returns (bool);\\n    function memo() external view returns (string memory);\\n    function committee() external view returns (IDAOCommittee);\\n    function seigManager() external view returns (ISeigManager);\\n}\\n\",\"keccak256\":\"0x3449e0328ee19655438006715afb08b81edd12f6db96b2e3d25d0cb308bd3875\",\"license\":\"MIT\"},\"contracts/interfaces/ICandidateFactory.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.17;\\n\\ninterface ICandidateFactory {\\n    function deploy(\\n        address _candidate,\\n        bool _isLayer2Candidate,\\n        string memory _name,\\n        address _committee,\\n        address _seigManager\\n    )\\n        external\\n        returns (address);\\n}\\n\",\"keccak256\":\"0xd335ad2ecb2294d4495a79c8e771d4b4bfd60174c32a20c06dfab80fbc241f0e\",\"license\":\"MIT\"},\"contracts/interfaces/IDAOAgendaManager.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.17;\\n\\nimport { LibAgenda } from \\\"../lib/Agenda.sol\\\";\\n// import { IDAOCommittee } from \\\"../interfaces/IDAOCommittee.sol\\\";\\n\\ninterface IDAOAgendaManager  {\\n    struct Ratio {\\n        uint256 numerator;\\n        uint256 denominator;\\n    }\\n\\n    function setCommittee(address _committee) external;\\n    function setCreateAgendaFees(uint256 _createAgendaFees) external;\\n    function setMinimumNoticePeriodSeconds(uint256 _minimumNoticePeriodSeconds) external;\\n    function setMinimumVotingPeriodSeconds(uint256 _minimumVotingPeriodSeconds) external;\\n    function setExecutingPeriodSeconds(uint256 _executingPeriodSeconds) external;\\n    function newAgenda(\\n        address[] memory _targets,\\n        uint256 _noticePeriodSeconds,\\n        uint256 _votingPeriodSeconds,\\n        bool _atomicExecute,\\n        bytes[] calldata _functionBytecodes\\n    )\\n        external\\n        returns (uint256 agendaID);\\n    function castVote(uint256 _agendaID, address voter, uint256 _vote) external returns (bool);\\n    function setExecutedAgenda(uint256 _agendaID) external;\\n    function setResult(uint256 _agendaID, LibAgenda.AgendaResult _result) external;\\n    function setStatus(uint256 _agendaID, LibAgenda.AgendaStatus _status) external;\\n    function endAgendaVoting(uint256 _agendaID) external;\\n    function setExecutedCount(uint256 _agendaID, uint256 _count) external;\\n     \\n    // -- view functions\\n    function isVoter(uint256 _agendaID, address _user) external view returns (bool);\\n    function hasVoted(uint256 _agendaID, address _user) external view returns (bool);\\n    function getVoteStatus(uint256 _agendaID, address _user) external view returns (bool, uint256);\\n    function getAgendaNoticeEndTimeSeconds(uint256 _agendaID) external view returns (uint256);\\n    function getAgendaVotingStartTimeSeconds(uint256 _agendaID) external view returns (uint256);\\n    function getAgendaVotingEndTimeSeconds(uint256 _agendaID) external view returns (uint256) ;\\n\\n    function canExecuteAgenda(uint256 _agendaID) external view returns (bool);\\n    function getAgendaStatus(uint256 _agendaID) external view returns (uint256 status);\\n    function totalAgendas() external view returns (uint256);\\n    function getAgendaResult(uint256 _agendaID) external view returns (uint256 result, bool executed);\\n    function getExecutionInfo(uint256 _agendaID)\\n        external\\n        view\\n        returns(\\n            address[] memory target,\\n            bytes[] memory functionBytecode,\\n            bool atomicExecute,\\n            uint256 executeStartFrom\\n        );\\n    function isVotableStatus(uint256 _agendaID) external view returns (bool);\\n    function getVotingCount(uint256 _agendaID)\\n        external\\n        view\\n        returns (\\n            uint256 countingYes,\\n            uint256 countingNo,\\n            uint256 countingAbstain\\n        );\\n    function getAgendaTimestamps(uint256 _agendaID)\\n        external\\n        view\\n        returns (\\n            uint256 createdTimestamp,\\n            uint256 noticeEndTimestamp,\\n            uint256 votingStartedTimestamp,\\n            uint256 votingEndTimestamp,\\n            uint256 executedTimestamp\\n        );\\n    function numAgendas() external view returns (uint256);\\n    function getVoters(uint256 _agendaID) external view returns (address[] memory);\\n\\n    function getStatus(uint256 _createAgendaFees) external pure returns (LibAgenda.AgendaStatus);\\n\\n    // getter\\n    // function committee() external view returns (IDAOCommittee);\\n    function createAgendaFees() external view returns (uint256);\\n    function minimumNoticePeriodSeconds() external view returns (uint256);\\n    function minimumVotingPeriodSeconds() external view returns (uint256);\\n    function executingPeriodSeconds() external view returns (uint256);\\n    function agendas(uint256 _index) external view returns (LibAgenda.Agenda memory);\\n    function voterInfos(uint256 _index1, address _index2) external view returns (LibAgenda.Voter memory);\\n}\\n\",\"keccak256\":\"0x6bacc8cf4e3511def801a867bd3a932f001f615ac28482b77f109e4d8571b287\",\"license\":\"MIT\"},\"contracts/interfaces/IDAOCommittee.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.17;\\npragma abicoder v2;\\n\\nimport { IStorageStateCommittee } from \\\"../interfaces/IStorageStateCommittee.sol\\\";\\n\\ninterface IDAOCommittee is IStorageStateCommittee {\\n    //--owner\\n    function setSeigManager(address _seigManager) external;\\n    function setCandidatesSeigManager(address[] calldata _candidateContracts, address _seigManager) external;\\n    function setCandidatesCommittee(address[] calldata _candidateContracts, address _committee) external;\\n    function setLayer2Registry(address _layer2Registry) external;\\n    function setAgendaManager(address _agendaManager) external;\\n    function setCandidateFactory(address _candidateFactory) external;\\n    function setTon(address _ton) external;\\n    function setActivityRewardPerSecond(uint256 _value) external;\\n    function setDaoVault(address _daoVault) external;\\n\\n    function increaseMaxMember(uint256 _newMaxMember, uint256 _quorum) external;\\n    function decreaseMaxMember(uint256 _reducingMemberIndex, uint256 _quorum) external;\\n    function createCandidate(string calldata _memo) external;\\n    function registerLayer2Candidate(address _layer2, string memory _memo) external;\\n    function registerLayer2CandidateByOwner(address _operator, address _layer2, string memory _memo) external;\\n    function changeMember(uint256 _memberIndex) external returns (bool);\\n    function retireMember() external returns (bool);\\n    function setMemoOnCandidate(address _candidate, string calldata _memo) external;\\n    function setMemoOnCandidateContract(address _candidate, string calldata _memo) external;\\n\\n    function onApprove(\\n        address owner,\\n        address spender,\\n        uint256 tonAmount,\\n        bytes calldata data\\n    )\\n        external\\n        returns (bool);\\n\\n    function setQuorum(uint256 _quorum) external;\\n    function setCreateAgendaFees(uint256 _fees) external;\\n    function setMinimumNoticePeriodSeconds(uint256 _minimumNoticePeriod) external;\\n    function setMinimumVotingPeriodSeconds(uint256 _minimumVotingPeriod) external;\\n    function setExecutingPeriodSeconds(uint256 _executingPeriodSeconds) external;\\n    function castVote(uint256 _AgendaID, uint256 _vote, string calldata _comment) external;\\n    function endAgendaVoting(uint256 _agendaID) external;\\n    function executeAgenda(uint256 _AgendaID) external;\\n    function setAgendaStatus(uint256 _agendaID, uint256 _status, uint256 _result) external;\\n\\n    function updateSeigniorage(address _candidate) external returns (bool);\\n    function updateSeigniorages(address[] calldata _candidates) external returns (bool);\\n    function claimActivityReward(address _receiver) external;\\n\\n    function isCandidate(address _candidate) external view returns (bool);\\n    function totalSupplyOnCandidate(address _candidate) external view returns (uint256);\\n    function balanceOfOnCandidate(address _candidate, address _account) external view returns (uint256);\\n    function totalSupplyOnCandidateContract(address _candidateContract) external view returns (uint256);\\n    function balanceOfOnCandidateContract(address _candidateContract, address _account) external view returns (uint256);\\n    function candidatesLength() external view returns (uint256);\\n    function isExistCandidate(address _candidate) external view returns (bool);\\n    function getClaimableActivityReward(address _candidate) external view returns (uint256);\\n}\\n\\n\",\"keccak256\":\"0x4389582fde637eed1831de216748a8163bfdffefcbf1d3c1a2d118f42f0a2fa3\",\"license\":\"MIT\"},\"contracts/interfaces/IDAOVault.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.17;\\n\\ninterface IDAOVault {\\n    function setTON(address _ton) external;\\n    function setWTON(address _wton) external;\\n    function approveTON(address _to, uint256 _amount) external;\\n    function approveWTON(address _to, uint256 _amount) external;\\n    function approveERC20(address _token, address _to, uint256 _amount) external;\\n    function claimTON(address _to, uint256 _amount) external;\\n    function claimWTON(address _to, uint256 _amount) external;\\n    function claimERC20(address _token, address _to, uint256 _amount) external;\\n}\\n\",\"keccak256\":\"0xcd8cea85e6f7672761cdeeb0fc2c7781a6f94919a08a6221c2ab1a4a5bde33cc\",\"license\":\"MIT\"},\"contracts/interfaces/ILayer2Registry.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.17;\\n\\ninterface ILayer2Registry {\\n    function layer2s(address layer2) external view returns (bool);\\n\\n    function register(address layer2) external returns (bool);\\n    function numLayer2s() external view returns (uint256);\\n    function layer2ByIndex(uint256 index) external view returns (address);\\n\\n    function deployCoinage(address layer2, address seigManager) external returns (bool);\\n    function registerAndDeployCoinage(address layer2, address seigManager) external returns (bool);\\n    function unregister(address layer2) external returns (bool);\\n}\\n\",\"keccak256\":\"0x7f69cf374891d446d3cdc65fb61a6d20ef7744cafad2acfb103912e9855393dd\",\"license\":\"MIT\"},\"contracts/interfaces/ISeigManager.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.17;\\n\\ninterface ISeigManager {\\n    function registry() external view returns (address);\\n    function depositManager() external view returns (address);\\n    function ton() external view returns (address);\\n    function wton() external view returns (address);\\n    function powerton() external view returns (address);\\n    function tot() external view returns (address);\\n    function coinages(address layer2) external view returns (address);\\n    function commissionRates(address layer2) external view returns (uint256);\\n\\n    function lastCommitBlock(address layer2) external view returns (uint256);\\n    function seigPerBlock() external view returns (uint256);\\n    function lastSeigBlock() external view returns (uint256);\\n    function pausedBlock() external view returns (uint256);\\n    function unpausedBlock() external view returns (uint256);\\n    function DEFAULT_FACTOR() external view returns (uint256);\\n\\n    function deployCoinage(address layer2) external returns (bool);\\n    function setCommissionRate(address layer2, uint256 commission, bool isCommissionRateNegative) external returns (bool);\\n\\n    function uncomittedStakeOf(address layer2, address account) external view returns (uint256);\\n    function stakeOf(address layer2, address account) external view returns (uint256);\\n    function additionalTotBurnAmount(address layer2, address account, uint256 amount) external view returns (uint256 totAmount);\\n\\n    function onTransfer(address sender, address recipient, uint256 amount) external returns (bool);\\n    function updateSeigniorage() external returns (bool);\\n    function onDeposit(address layer2, address account, uint256 amount) external returns (bool);\\n    function onWithdraw(address layer2, address account, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x72e8f6061d0585ba47b52244d7a368bb0c60a20462ac37fb14dea24218d4b10e\",\"license\":\"MIT\"},\"contracts/interfaces/IStorageStateCommittee.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.17;\\npragma abicoder v2;\\n\\nimport { ICandidateFactory } from \\\"../interfaces/ICandidateFactory.sol\\\";\\nimport { ILayer2Registry } from \\\"../interfaces/ILayer2Registry.sol\\\";\\nimport { ISeigManager } from \\\"../interfaces/ISeigManager.sol\\\";\\nimport { IDAOAgendaManager } from \\\"../interfaces/IDAOAgendaManager.sol\\\";\\nimport { IDAOVault } from \\\"../interfaces/IDAOVault.sol\\\";\\n\\ninterface IStorageStateCommittee {\\n    struct CandidateInfo {\\n        address candidateContract;\\n        uint256 indexMembers;\\n        uint128 memberJoinedTime;\\n        uint128 rewardPeriod;\\n        uint128 claimedTimestamp;\\n    }\\n\\n    function ton() external returns (address);\\n    function daoVault() external returns (IDAOVault);\\n    function agendaManager() external returns (IDAOAgendaManager);\\n    function candidateFactory() external returns (ICandidateFactory);\\n    function layer2Registry() external returns (ILayer2Registry);\\n    function seigManager() external returns (ISeigManager);\\n    function candidates(uint256 _index) external returns (address);\\n    function members(uint256 _index) external returns (address);\\n    function maxMember() external returns (uint256);\\n    function candidateInfos(address _candidate) external returns (CandidateInfo memory);\\n    function quorum() external returns (uint256);\\n    function activityRewardPerSecond() external returns (uint256);\\n\\n    function isMember(address _candidate) external returns (bool);\\n    function candidateContract(address _candidate) external returns (address);\\n}\\n\\n\",\"keccak256\":\"0x23a301acc48ede3c82b00b97714c2f123b47de278e75dd55374596b77312eedf\",\"license\":\"MIT\"},\"contracts/lib/Agenda.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.17;\\n\\nlibrary LibAgenda {\\n    //using LibAgenda for Agenda;\\n\\n    enum AgendaStatus { NONE, NOTICE, VOTING, WAITING_EXEC, EXECUTED, ENDED }\\n    enum AgendaResult { PENDING, ACCEPT, REJECT, DISMISS }\\n\\n    //votor : based operator \\n    struct Voter {\\n        bool isVoter;\\n        bool hasVoted;\\n        uint256 vote;\\n    }\\n\\n    // counting abstainVotes yesVotes noVotes\\n    struct Agenda {\\n        uint256 createdTimestamp;\\n        uint256 noticeEndTimestamp;\\n        uint256 votingPeriodInSeconds;\\n        uint256 votingStartedTimestamp;\\n        uint256 votingEndTimestamp;\\n        uint256 executableLimitTimestamp;\\n        uint256 executedTimestamp;\\n        uint256 countingYes;\\n        uint256 countingNo;\\n        uint256 countingAbstain;\\n        AgendaStatus status;\\n        AgendaResult result;\\n        address[] voters;\\n        bool executed;\\n    }\\n\\n    struct AgendaExecutionInfo {\\n        address[] targets;\\n        bytes[] functionBytecodes;\\n        bool atomicExecute;\\n        uint256 executeStartFrom;\\n    }\\n\\n    /*function getAgenda(Agenda[] storage agendas, uint256 index) public view returns (Agenda storage agenda) {\\n        return agendas[index];\\n    }*/\\n}\",\"keccak256\":\"0xec5e22ccc75c38403b0ab74466033a19de5f2745bd5e18f2d64b42af22a116a1\",\"license\":\"MIT\"},\"contracts/test/DAOCommitteeProxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\npragma abicoder v2;\\n\\nimport \\\"../dao/StorageStateCommittee.sol\\\";\\n//import \\\"../../node_modules/@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"../../node_modules/@openzeppelin/contracts/access/AccessControl.sol\\\";\\nimport { ERC165A } from \\\"../AccessControl/ERC165A.sol\\\";\\n\\ncontract DAOCommitteeProxy is StorageStateCommittee, AccessControl, ERC165A {\\n    address internal _implementation;\\n    bool public pauseProxy;\\n\\n    event Upgraded(address indexed implementation);\\n\\n    modifier onlyOwner() {\\n        require(hasRole(DEFAULT_ADMIN_ROLE, msg.sender), \\\"DAOCommitteeProxy: msg.sender is not an admin\\\");\\n        _;\\n    }\\n     \\n    constructor(\\n        address _ton,\\n        address _impl,\\n        address _seigManager,\\n        address _layer2Registry,\\n        address _agendaManager,\\n        address _candidateFactory,\\n        //address _activityRewardManager,\\n        address _daoVault\\n    )\\n    {\\n        require(\\n            _ton != address(0)\\n            || _impl != address(0)\\n            || _seigManager != address(0)\\n            || _layer2Registry != address(0)\\n            || _agendaManager != address(0)\\n            || _candidateFactory != address(0),\\n            \\\"DAOCommitteeProxy: input is zero\\\"\\n        );\\n        ton = _ton;\\n        _implementation = _impl;\\n        seigManager = ISeigManager(_seigManager);\\n        layer2Registry = ILayer2Registry(_layer2Registry);\\n        agendaManager = IDAOAgendaManager(_agendaManager);\\n        candidateFactory = ICandidateFactory(_candidateFactory);\\n        daoVault = IDAOVault(_daoVault);\\n        quorum = 2;\\n        activityRewardPerSecond = 3170979198376458;\\n\\n        _registerInterface(bytes4(keccak256(\\\"onApprove(address,address,uint256,bytes)\\\")));\\n        _setupRole(DEFAULT_ADMIN_ROLE, msg.sender);\\n        _setupRole(DEFAULT_ADMIN_ROLE, address(this));\\n    }\\n\\n    /// @notice Set pause state\\n    /// @param _pause true:pause or false:resume\\n    function setProxyPause(bool _pause) external onlyOwner {\\n        pauseProxy = _pause;\\n    }\\n\\n    /// @notice Set implementation contract\\n    /// @param impl New implementation contract address\\n    function upgradeTo(address impl) external onlyOwner {\\n        require(_implementation != address(0), \\\"DAOCommitteeProxy: input is zero\\\");\\n        require(_implementation != impl, \\\"DAOCommitteeProxy: The input address is same as the state\\\");\\n        _implementation = impl;\\n        emit Upgraded(impl);\\n    }\\n\\n    function implementation() public view returns (address) {\\n        return _implementation;\\n    }\\n\\n    fallback() external {\\n        _fallback();\\n    }\\n\\n    function _fallback() internal {\\n        address _impl = implementation();\\n        require(_impl != address(0) && !pauseProxy, \\\"DAOCommitteeProxy: impl is zero OR proxy is false\\\");\\n\\n        assembly {\\n            // Copy msg.data. We take full control of memory in this inline assembly\\n            // block because it will not return to Solidity code. We overwrite the\\n            // Solidity scratch pad at memory position 0.\\n            calldatacopy(0, 0, calldatasize())\\n\\n            // Call the implementation.\\n            // out and outsize are 0 because we don't know the size yet.\\n            let result := delegatecall(gas(), _impl, 0, calldatasize(), 0, 0)\\n\\n            // Copy the returned data.\\n            returndatacopy(0, 0, returndatasize())\\n\\n            switch result\\n            // delegatecall returns 0 on error.\\n            case 0 { revert(0, returndatasize()) }\\n            default { return(0, returndatasize()) }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x5a957a36e24c107a1ffb8b558b3ea9d76e0b8bd1389a4ee821086a2c6d8c6a14\",\"license\":\"MIT\"},\"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (access/AccessControl.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IAccessControl.sol\\\";\\nimport \\\"../utils/Context.sol\\\";\\nimport \\\"../utils/Strings.sol\\\";\\nimport \\\"../utils/introspection/ERC165.sol\\\";\\n\\n/**\\n * @dev Contract module that allows children to implement role-based access\\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\\n * members except through off-chain means by accessing the contract event logs. Some\\n * applications may benefit from on-chain enumerability, for those cases see\\n * {AccessControlEnumerable}.\\n *\\n * Roles are referred to by their `bytes32` identifier. These should be exposed\\n * in the external API and be unique. The best way to achieve this is by\\n * using `public constant` hash digests:\\n *\\n * ```\\n * bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\");\\n * ```\\n *\\n * Roles can be used to represent a set of permissions. To restrict access to a\\n * function call, use {hasRole}:\\n *\\n * ```\\n * function foo() public {\\n *     require(hasRole(MY_ROLE, msg.sender));\\n *     ...\\n * }\\n * ```\\n *\\n * Roles can be granted and revoked dynamically via the {grantRole} and\\n * {revokeRole} functions. Each role has an associated admin role, and only\\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\\n *\\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\\n * that only accounts with this role will be able to grant or revoke other\\n * roles. More complex role relationships can be created by using\\n * {_setRoleAdmin}.\\n *\\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\\n * grant and revoke this role. Extra precautions should be taken to secure\\n * accounts that have been granted it.\\n */\\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\\n    struct RoleData {\\n        mapping(address => bool) members;\\n        bytes32 adminRole;\\n    }\\n\\n    mapping(bytes32 => RoleData) private _roles;\\n\\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\\n\\n    /**\\n     * @dev Modifier that checks that an account has a specific role. Reverts\\n     * with a standardized message including the required role.\\n     *\\n     * The format of the revert reason is given by the following regular expression:\\n     *\\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\\n     *\\n     * _Available since v4.1._\\n     */\\n    modifier onlyRole(bytes32 role) {\\n        _checkRole(role);\\n        _;\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev Returns `true` if `account` has been granted `role`.\\n     */\\n    function hasRole(bytes32 role, address account) public view virtual override returns (bool) {\\n        return _roles[role].members[account];\\n    }\\n\\n    /**\\n     * @dev Revert with a standard message if `_msgSender()` is missing `role`.\\n     * Overriding this function changes the behavior of the {onlyRole} modifier.\\n     *\\n     * Format of the revert message is described in {_checkRole}.\\n     *\\n     * _Available since v4.6._\\n     */\\n    function _checkRole(bytes32 role) internal view virtual {\\n        _checkRole(role, _msgSender());\\n    }\\n\\n    /**\\n     * @dev Revert with a standard message if `account` is missing `role`.\\n     *\\n     * The format of the revert reason is given by the following regular expression:\\n     *\\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\\n     */\\n    function _checkRole(bytes32 role, address account) internal view virtual {\\n        if (!hasRole(role, account)) {\\n            revert(\\n                string(\\n                    abi.encodePacked(\\n                        \\\"AccessControl: account \\\",\\n                        Strings.toHexString(account),\\n                        \\\" is missing role \\\",\\n                        Strings.toHexString(uint256(role), 32)\\n                    )\\n                )\\n            );\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\\n     * {revokeRole}.\\n     *\\n     * To change a role's admin, use {_setRoleAdmin}.\\n     */\\n    function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {\\n        return _roles[role].adminRole;\\n    }\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     *\\n     * May emit a {RoleGranted} event.\\n     */\\n    function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\\n        _grantRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Revokes `role` from `account`.\\n     *\\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     *\\n     * May emit a {RoleRevoked} event.\\n     */\\n    function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\\n        _revokeRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Revokes `role` from the calling account.\\n     *\\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\\n     * purpose is to provide a mechanism for accounts to lose their privileges\\n     * if they are compromised (such as when a trusted device is misplaced).\\n     *\\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must be `account`.\\n     *\\n     * May emit a {RoleRevoked} event.\\n     */\\n    function renounceRole(bytes32 role, address account) public virtual override {\\n        require(account == _msgSender(), \\\"AccessControl: can only renounce roles for self\\\");\\n\\n        _revokeRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event. Note that unlike {grantRole}, this function doesn't perform any\\n     * checks on the calling account.\\n     *\\n     * May emit a {RoleGranted} event.\\n     *\\n     * [WARNING]\\n     * ====\\n     * This function should only be called from the constructor when setting\\n     * up the initial roles for the system.\\n     *\\n     * Using this function in any other way is effectively circumventing the admin\\n     * system imposed by {AccessControl}.\\n     * ====\\n     *\\n     * NOTE: This function is deprecated in favor of {_grantRole}.\\n     */\\n    function _setupRole(bytes32 role, address account) internal virtual {\\n        _grantRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Sets `adminRole` as ``role``'s admin role.\\n     *\\n     * Emits a {RoleAdminChanged} event.\\n     */\\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\\n        bytes32 previousAdminRole = getRoleAdmin(role);\\n        _roles[role].adminRole = adminRole;\\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\\n    }\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * Internal function without access restriction.\\n     *\\n     * May emit a {RoleGranted} event.\\n     */\\n    function _grantRole(bytes32 role, address account) internal virtual {\\n        if (!hasRole(role, account)) {\\n            _roles[role].members[account] = true;\\n            emit RoleGranted(role, account, _msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Revokes `role` from `account`.\\n     *\\n     * Internal function without access restriction.\\n     *\\n     * May emit a {RoleRevoked} event.\\n     */\\n    function _revokeRole(bytes32 role, address account) internal virtual {\\n        if (hasRole(role, account)) {\\n            _roles[role].members[account] = false;\\n            emit RoleRevoked(role, account, _msgSender());\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x67e3daf189111d6d5b0464ed09cf9f0605a22c4b965a7fcecd707101faff008a\",\"license\":\"MIT\"},\"node_modules/@openzeppelin/contracts/access/IAccessControl.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/IAccessControl.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev External interface of AccessControl declared to support ERC165 detection.\\n */\\ninterface IAccessControl {\\n    /**\\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\\n     *\\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\\n     * {RoleAdminChanged} not being emitted signaling this.\\n     *\\n     * _Available since v3.1._\\n     */\\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\\n\\n    /**\\n     * @dev Emitted when `account` is granted `role`.\\n     *\\n     * `sender` is the account that originated the contract call, an admin role\\n     * bearer except when using {AccessControl-_setupRole}.\\n     */\\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\\n\\n    /**\\n     * @dev Emitted when `account` is revoked `role`.\\n     *\\n     * `sender` is the account that originated the contract call:\\n     *   - if using `revokeRole`, it is the admin role bearer\\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\\n     */\\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\\n\\n    /**\\n     * @dev Returns `true` if `account` has been granted `role`.\\n     */\\n    function hasRole(bytes32 role, address account) external view returns (bool);\\n\\n    /**\\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\\n     * {revokeRole}.\\n     *\\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\\n     */\\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function grantRole(bytes32 role, address account) external;\\n\\n    /**\\n     * @dev Revokes `role` from `account`.\\n     *\\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function revokeRole(bytes32 role, address account) external;\\n\\n    /**\\n     * @dev Revokes `role` from the calling account.\\n     *\\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\\n     * purpose is to provide a mechanism for accounts to lose their privileges\\n     * if they are compromised (such as when a trusted device is misplaced).\\n     *\\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must be `account`.\\n     */\\n    function renounceRole(bytes32 role, address account) external;\\n}\\n\",\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\"},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"node_modules/@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./math/Math.sol\\\";\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _SYMBOLS = \\\"0123456789abcdef\\\";\\n    uint8 private constant _ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            uint256 length = Math.log10(value) + 1;\\n            string memory buffer = new string(length);\\n            uint256 ptr;\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                ptr := add(buffer, add(32, length))\\n            }\\n            while (true) {\\n                ptr--;\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\\n                }\\n                value /= 10;\\n                if (value == 0) break;\\n            }\\n            return buffer;\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            return toHexString(value, Math.log256(value) + 1);\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\n    }\\n}\\n\",\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\"},\"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\"},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"},\"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    enum Rounding {\\n        Down, // Toward negative infinity\\n        Up, // Toward infinity\\n        Zero // Toward zero\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\\n     * with further edits by Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator\\n    ) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod0 := mul(x, y)\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            require(denominator > prod1);\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n            // See https://cs.stackexchange.com/q/138556/92363.\\n\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 twos = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator,\\n        Rounding rounding\\n    ) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10**64) {\\n                value /= 10**64;\\n                result += 64;\\n            }\\n            if (value >= 10**32) {\\n                value /= 10**32;\\n                result += 32;\\n            }\\n            if (value >= 10**16) {\\n                value /= 10**16;\\n                result += 16;\\n            }\\n            if (value >= 10**8) {\\n                value /= 10**8;\\n                result += 8;\\n            }\\n            if (value >= 10**4) {\\n                value /= 10**4;\\n                result += 4;\\n            }\\n            if (value >= 10**2) {\\n                value /= 10**2;\\n                result += 2;\\n            }\\n            if (value >= 10**1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (rounding == Rounding.Up && 10**result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (rounding == Rounding.Up && 1 << (result * 8) < value ? 1 : 0);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":1630,"contract":"contracts/test/DAOCommitteeProxy.sol:DAOCommitteeProxy","label":"ton","offset":0,"slot":"0","type":"t_address"},{"astId":1634,"contract":"contracts/test/DAOCommitteeProxy.sol:DAOCommitteeProxy","label":"daoVault","offset":0,"slot":"1","type":"t_contract(IDAOVault)2534"},{"astId":1638,"contract":"contracts/test/DAOCommitteeProxy.sol:DAOCommitteeProxy","label":"agendaManager","offset":0,"slot":"2","type":"t_contract(IDAOAgendaManager)2211"},{"astId":1642,"contract":"contracts/test/DAOCommitteeProxy.sol:DAOCommitteeProxy","label":"candidateFactory","offset":0,"slot":"3","type":"t_contract(ICandidateFactory)1930"},{"astId":1646,"contract":"contracts/test/DAOCommitteeProxy.sol:DAOCommitteeProxy","label":"layer2Registry","offset":0,"slot":"4","type":"t_contract(ILayer2Registry)2588"},{"astId":1650,"contract":"contracts/test/DAOCommitteeProxy.sol:DAOCommitteeProxy","label":"seigManager","offset":0,"slot":"5","type":"t_contract(ISeigManager)2752"},{"astId":1654,"contract":"contracts/test/DAOCommitteeProxy.sol:DAOCommitteeProxy","label":"candidates","offset":0,"slot":"6","type":"t_array(t_address)dyn_storage"},{"astId":1658,"contract":"contracts/test/DAOCommitteeProxy.sol:DAOCommitteeProxy","label":"members","offset":0,"slot":"7","type":"t_array(t_address)dyn_storage"},{"astId":1661,"contract":"contracts/test/DAOCommitteeProxy.sol:DAOCommitteeProxy","label":"maxMember","offset":0,"slot":"8","type":"t_uint256"},{"astId":1666,"contract":"contracts/test/DAOCommitteeProxy.sol:DAOCommitteeProxy","label":"_candidateInfos","offset":0,"slot":"9","type":"t_mapping(t_address,t_struct(CandidateInfo)2776_storage)"},{"astId":1669,"contract":"contracts/test/DAOCommitteeProxy.sol:DAOCommitteeProxy","label":"quorum","offset":0,"slot":"10","type":"t_uint256"},{"astId":1672,"contract":"contracts/test/DAOCommitteeProxy.sol:DAOCommitteeProxy","label":"activityRewardPerSecond","offset":0,"slot":"11","type":"t_uint256"},{"astId":3205,"contract":"contracts/test/DAOCommitteeProxy.sol:DAOCommitteeProxy","label":"_roles","offset":0,"slot":"12","type":"t_mapping(t_bytes32,t_struct(RoleData)3200_storage)"},{"astId":1553,"contract":"contracts/test/DAOCommitteeProxy.sol:DAOCommitteeProxy","label":"_supportedInterfaces","offset":0,"slot":"13","type":"t_mapping(t_bytes4,t_bool)"},{"astId":2943,"contract":"contracts/test/DAOCommitteeProxy.sol:DAOCommitteeProxy","label":"_implementation","offset":0,"slot":"14","type":"t_address"},{"astId":2945,"contract":"contracts/test/DAOCommitteeProxy.sol:DAOCommitteeProxy","label":"pauseProxy","offset":20,"slot":"14","type":"t_bool"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_address)dyn_storage":{"base":"t_address","encoding":"dynamic_array","label":"address[]","numberOfBytes":"32"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_bytes4":{"encoding":"inplace","label":"bytes4","numberOfBytes":"4"},"t_contract(ICandidateFactory)1930":{"encoding":"inplace","label":"contract ICandidateFactory","numberOfBytes":"20"},"t_contract(IDAOAgendaManager)2211":{"encoding":"inplace","label":"contract IDAOAgendaManager","numberOfBytes":"20"},"t_contract(IDAOVault)2534":{"encoding":"inplace","label":"contract IDAOVault","numberOfBytes":"20"},"t_contract(ILayer2Registry)2588":{"encoding":"inplace","label":"contract ILayer2Registry","numberOfBytes":"20"},"t_contract(ISeigManager)2752":{"encoding":"inplace","label":"contract ISeigManager","numberOfBytes":"20"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_struct(CandidateInfo)2776_storage)":{"encoding":"mapping","key":"t_address","label":"mapping(address => struct IStorageStateCommittee.CandidateInfo)","numberOfBytes":"32","value":"t_struct(CandidateInfo)2776_storage"},"t_mapping(t_bytes32,t_struct(RoleData)3200_storage)":{"encoding":"mapping","key":"t_bytes32","label":"mapping(bytes32 => struct AccessControl.RoleData)","numberOfBytes":"32","value":"t_struct(RoleData)3200_storage"},"t_mapping(t_bytes4,t_bool)":{"encoding":"mapping","key":"t_bytes4","label":"mapping(bytes4 => bool)","numberOfBytes":"32","value":"t_bool"},"t_struct(CandidateInfo)2776_storage":{"encoding":"inplace","label":"struct IStorageStateCommittee.CandidateInfo","members":[{"astId":2767,"contract":"contracts/test/DAOCommitteeProxy.sol:DAOCommitteeProxy","label":"candidateContract","offset":0,"slot":"0","type":"t_address"},{"astId":2769,"contract":"contracts/test/DAOCommitteeProxy.sol:DAOCommitteeProxy","label":"indexMembers","offset":0,"slot":"1","type":"t_uint256"},{"astId":2771,"contract":"contracts/test/DAOCommitteeProxy.sol:DAOCommitteeProxy","label":"memberJoinedTime","offset":0,"slot":"2","type":"t_uint128"},{"astId":2773,"contract":"contracts/test/DAOCommitteeProxy.sol:DAOCommitteeProxy","label":"rewardPeriod","offset":16,"slot":"2","type":"t_uint128"},{"astId":2775,"contract":"contracts/test/DAOCommitteeProxy.sol:DAOCommitteeProxy","label":"claimedTimestamp","offset":0,"slot":"3","type":"t_uint128"}],"numberOfBytes":"128"},"t_struct(RoleData)3200_storage":{"encoding":"inplace","label":"struct AccessControl.RoleData","members":[{"astId":3197,"contract":"contracts/test/DAOCommitteeProxy.sol:DAOCommitteeProxy","label":"members","offset":0,"slot":"0","type":"t_mapping(t_address,t_bool)"},{"astId":3199,"contract":"contracts/test/DAOCommitteeProxy.sol:DAOCommitteeProxy","label":"adminRole","offset":0,"slot":"1","type":"t_bytes32"}],"numberOfBytes":"64"},"t_uint128":{"encoding":"inplace","label":"uint128","numberOfBytes":"16"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{"setProxyPause(bool)":{"notice":"Set pause state"},"upgradeTo(address)":{"notice":"Set implementation contract"}},"version":1}}},"node_modules/@openzeppelin/contracts/access/AccessControl.sol":{"AccessControl":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ``` bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ``` function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it.","events":{"RoleAdminChanged(bytes32,bytes32,bytes32)":{"details":"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._"},"RoleGranted(bytes32,address,address)":{"details":"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."},"RoleRevoked(bytes32,address,address)":{"details":"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"}},"kind":"dev","methods":{"getRoleAdmin(bytes32)":{"details":"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."},"grantRole(bytes32,address)":{"details":"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."},"hasRole(bytes32,address)":{"details":"Returns `true` if `account` has been granted `role`."},"renounceRole(bytes32,address)":{"details":"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event."},"revokeRole(bytes32,address)":{"details":"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."},"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ``` bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ``` function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it.\",\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (access/AccessControl.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IAccessControl.sol\\\";\\nimport \\\"../utils/Context.sol\\\";\\nimport \\\"../utils/Strings.sol\\\";\\nimport \\\"../utils/introspection/ERC165.sol\\\";\\n\\n/**\\n * @dev Contract module that allows children to implement role-based access\\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\\n * members except through off-chain means by accessing the contract event logs. Some\\n * applications may benefit from on-chain enumerability, for those cases see\\n * {AccessControlEnumerable}.\\n *\\n * Roles are referred to by their `bytes32` identifier. These should be exposed\\n * in the external API and be unique. The best way to achieve this is by\\n * using `public constant` hash digests:\\n *\\n * ```\\n * bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\");\\n * ```\\n *\\n * Roles can be used to represent a set of permissions. To restrict access to a\\n * function call, use {hasRole}:\\n *\\n * ```\\n * function foo() public {\\n *     require(hasRole(MY_ROLE, msg.sender));\\n *     ...\\n * }\\n * ```\\n *\\n * Roles can be granted and revoked dynamically via the {grantRole} and\\n * {revokeRole} functions. Each role has an associated admin role, and only\\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\\n *\\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\\n * that only accounts with this role will be able to grant or revoke other\\n * roles. More complex role relationships can be created by using\\n * {_setRoleAdmin}.\\n *\\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\\n * grant and revoke this role. Extra precautions should be taken to secure\\n * accounts that have been granted it.\\n */\\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\\n    struct RoleData {\\n        mapping(address => bool) members;\\n        bytes32 adminRole;\\n    }\\n\\n    mapping(bytes32 => RoleData) private _roles;\\n\\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\\n\\n    /**\\n     * @dev Modifier that checks that an account has a specific role. Reverts\\n     * with a standardized message including the required role.\\n     *\\n     * The format of the revert reason is given by the following regular expression:\\n     *\\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\\n     *\\n     * _Available since v4.1._\\n     */\\n    modifier onlyRole(bytes32 role) {\\n        _checkRole(role);\\n        _;\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev Returns `true` if `account` has been granted `role`.\\n     */\\n    function hasRole(bytes32 role, address account) public view virtual override returns (bool) {\\n        return _roles[role].members[account];\\n    }\\n\\n    /**\\n     * @dev Revert with a standard message if `_msgSender()` is missing `role`.\\n     * Overriding this function changes the behavior of the {onlyRole} modifier.\\n     *\\n     * Format of the revert message is described in {_checkRole}.\\n     *\\n     * _Available since v4.6._\\n     */\\n    function _checkRole(bytes32 role) internal view virtual {\\n        _checkRole(role, _msgSender());\\n    }\\n\\n    /**\\n     * @dev Revert with a standard message if `account` is missing `role`.\\n     *\\n     * The format of the revert reason is given by the following regular expression:\\n     *\\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\\n     */\\n    function _checkRole(bytes32 role, address account) internal view virtual {\\n        if (!hasRole(role, account)) {\\n            revert(\\n                string(\\n                    abi.encodePacked(\\n                        \\\"AccessControl: account \\\",\\n                        Strings.toHexString(account),\\n                        \\\" is missing role \\\",\\n                        Strings.toHexString(uint256(role), 32)\\n                    )\\n                )\\n            );\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\\n     * {revokeRole}.\\n     *\\n     * To change a role's admin, use {_setRoleAdmin}.\\n     */\\n    function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {\\n        return _roles[role].adminRole;\\n    }\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     *\\n     * May emit a {RoleGranted} event.\\n     */\\n    function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\\n        _grantRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Revokes `role` from `account`.\\n     *\\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     *\\n     * May emit a {RoleRevoked} event.\\n     */\\n    function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\\n        _revokeRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Revokes `role` from the calling account.\\n     *\\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\\n     * purpose is to provide a mechanism for accounts to lose their privileges\\n     * if they are compromised (such as when a trusted device is misplaced).\\n     *\\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must be `account`.\\n     *\\n     * May emit a {RoleRevoked} event.\\n     */\\n    function renounceRole(bytes32 role, address account) public virtual override {\\n        require(account == _msgSender(), \\\"AccessControl: can only renounce roles for self\\\");\\n\\n        _revokeRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event. Note that unlike {grantRole}, this function doesn't perform any\\n     * checks on the calling account.\\n     *\\n     * May emit a {RoleGranted} event.\\n     *\\n     * [WARNING]\\n     * ====\\n     * This function should only be called from the constructor when setting\\n     * up the initial roles for the system.\\n     *\\n     * Using this function in any other way is effectively circumventing the admin\\n     * system imposed by {AccessControl}.\\n     * ====\\n     *\\n     * NOTE: This function is deprecated in favor of {_grantRole}.\\n     */\\n    function _setupRole(bytes32 role, address account) internal virtual {\\n        _grantRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Sets `adminRole` as ``role``'s admin role.\\n     *\\n     * Emits a {RoleAdminChanged} event.\\n     */\\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\\n        bytes32 previousAdminRole = getRoleAdmin(role);\\n        _roles[role].adminRole = adminRole;\\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\\n    }\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * Internal function without access restriction.\\n     *\\n     * May emit a {RoleGranted} event.\\n     */\\n    function _grantRole(bytes32 role, address account) internal virtual {\\n        if (!hasRole(role, account)) {\\n            _roles[role].members[account] = true;\\n            emit RoleGranted(role, account, _msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Revokes `role` from `account`.\\n     *\\n     * Internal function without access restriction.\\n     *\\n     * May emit a {RoleRevoked} event.\\n     */\\n    function _revokeRole(bytes32 role, address account) internal virtual {\\n        if (hasRole(role, account)) {\\n            _roles[role].members[account] = false;\\n            emit RoleRevoked(role, account, _msgSender());\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x67e3daf189111d6d5b0464ed09cf9f0605a22c4b965a7fcecd707101faff008a\",\"license\":\"MIT\"},\"node_modules/@openzeppelin/contracts/access/IAccessControl.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/IAccessControl.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev External interface of AccessControl declared to support ERC165 detection.\\n */\\ninterface IAccessControl {\\n    /**\\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\\n     *\\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\\n     * {RoleAdminChanged} not being emitted signaling this.\\n     *\\n     * _Available since v3.1._\\n     */\\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\\n\\n    /**\\n     * @dev Emitted when `account` is granted `role`.\\n     *\\n     * `sender` is the account that originated the contract call, an admin role\\n     * bearer except when using {AccessControl-_setupRole}.\\n     */\\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\\n\\n    /**\\n     * @dev Emitted when `account` is revoked `role`.\\n     *\\n     * `sender` is the account that originated the contract call:\\n     *   - if using `revokeRole`, it is the admin role bearer\\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\\n     */\\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\\n\\n    /**\\n     * @dev Returns `true` if `account` has been granted `role`.\\n     */\\n    function hasRole(bytes32 role, address account) external view returns (bool);\\n\\n    /**\\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\\n     * {revokeRole}.\\n     *\\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\\n     */\\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function grantRole(bytes32 role, address account) external;\\n\\n    /**\\n     * @dev Revokes `role` from `account`.\\n     *\\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function revokeRole(bytes32 role, address account) external;\\n\\n    /**\\n     * @dev Revokes `role` from the calling account.\\n     *\\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\\n     * purpose is to provide a mechanism for accounts to lose their privileges\\n     * if they are compromised (such as when a trusted device is misplaced).\\n     *\\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must be `account`.\\n     */\\n    function renounceRole(bytes32 role, address account) external;\\n}\\n\",\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\"},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"node_modules/@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./math/Math.sol\\\";\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _SYMBOLS = \\\"0123456789abcdef\\\";\\n    uint8 private constant _ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            uint256 length = Math.log10(value) + 1;\\n            string memory buffer = new string(length);\\n            uint256 ptr;\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                ptr := add(buffer, add(32, length))\\n            }\\n            while (true) {\\n                ptr--;\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\\n                }\\n                value /= 10;\\n                if (value == 0) break;\\n            }\\n            return buffer;\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            return toHexString(value, Math.log256(value) + 1);\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\n    }\\n}\\n\",\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\"},\"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\"},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"},\"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    enum Rounding {\\n        Down, // Toward negative infinity\\n        Up, // Toward infinity\\n        Zero // Toward zero\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\\n     * with further edits by Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator\\n    ) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod0 := mul(x, y)\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            require(denominator > prod1);\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n            // See https://cs.stackexchange.com/q/138556/92363.\\n\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 twos = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator,\\n        Rounding rounding\\n    ) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10**64) {\\n                value /= 10**64;\\n                result += 64;\\n            }\\n            if (value >= 10**32) {\\n                value /= 10**32;\\n                result += 32;\\n            }\\n            if (value >= 10**16) {\\n                value /= 10**16;\\n                result += 16;\\n            }\\n            if (value >= 10**8) {\\n                value /= 10**8;\\n                result += 8;\\n            }\\n            if (value >= 10**4) {\\n                value /= 10**4;\\n                result += 4;\\n            }\\n            if (value >= 10**2) {\\n                value /= 10**2;\\n                result += 2;\\n            }\\n            if (value >= 10**1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (rounding == Rounding.Up && 10**result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (rounding == Rounding.Up && 1 << (result * 8) < value ? 1 : 0);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":3205,"contract":"node_modules/@openzeppelin/contracts/access/AccessControl.sol:AccessControl","label":"_roles","offset":0,"slot":"0","type":"t_mapping(t_bytes32,t_struct(RoleData)3200_storage)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_bytes32,t_struct(RoleData)3200_storage)":{"encoding":"mapping","key":"t_bytes32","label":"mapping(bytes32 => struct AccessControl.RoleData)","numberOfBytes":"32","value":"t_struct(RoleData)3200_storage"},"t_struct(RoleData)3200_storage":{"encoding":"inplace","label":"struct AccessControl.RoleData","members":[{"astId":3197,"contract":"node_modules/@openzeppelin/contracts/access/AccessControl.sol:AccessControl","label":"members","offset":0,"slot":"0","type":"t_mapping(t_address,t_bool)"},{"astId":3199,"contract":"node_modules/@openzeppelin/contracts/access/AccessControl.sol:AccessControl","label":"adminRole","offset":0,"slot":"1","type":"t_bytes32"}],"numberOfBytes":"64"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"node_modules/@openzeppelin/contracts/access/IAccessControl.sol":{"IAccessControl":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"External interface of AccessControl declared to support ERC165 detection.","events":{"RoleAdminChanged(bytes32,bytes32,bytes32)":{"details":"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._"},"RoleGranted(bytes32,address,address)":{"details":"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."},"RoleRevoked(bytes32,address,address)":{"details":"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"}},"kind":"dev","methods":{"getRoleAdmin(bytes32)":{"details":"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}."},"grantRole(bytes32,address)":{"details":"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."},"hasRole(bytes32,address)":{"details":"Returns `true` if `account` has been granted `role`."},"renounceRole(bytes32,address)":{"details":"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."},"revokeRole(bytes32,address)":{"details":"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC165 detection.\",\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/access/IAccessControl.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/IAccessControl.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev External interface of AccessControl declared to support ERC165 detection.\\n */\\ninterface IAccessControl {\\n    /**\\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\\n     *\\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\\n     * {RoleAdminChanged} not being emitted signaling this.\\n     *\\n     * _Available since v3.1._\\n     */\\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\\n\\n    /**\\n     * @dev Emitted when `account` is granted `role`.\\n     *\\n     * `sender` is the account that originated the contract call, an admin role\\n     * bearer except when using {AccessControl-_setupRole}.\\n     */\\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\\n\\n    /**\\n     * @dev Emitted when `account` is revoked `role`.\\n     *\\n     * `sender` is the account that originated the contract call:\\n     *   - if using `revokeRole`, it is the admin role bearer\\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\\n     */\\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\\n\\n    /**\\n     * @dev Returns `true` if `account` has been granted `role`.\\n     */\\n    function hasRole(bytes32 role, address account) external view returns (bool);\\n\\n    /**\\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\\n     * {revokeRole}.\\n     *\\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\\n     */\\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function grantRole(bytes32 role, address account) external;\\n\\n    /**\\n     * @dev Revokes `role` from `account`.\\n     *\\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function revokeRole(bytes32 role, address account) external;\\n\\n    /**\\n     * @dev Revokes `role` from the calling account.\\n     *\\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\\n     * purpose is to provide a mechanism for accounts to lose their privileges\\n     * if they are compromised (such as when a trusted device is misplaced).\\n     *\\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must be `account`.\\n     */\\n    function renounceRole(bytes32 role, address account) external;\\n}\\n\",\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"node_modules/@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"devdoc":{"details":"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"node_modules/@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[],"devdoc":{"details":"String operations.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201152cf314f9ef844562b5e076a501bbf7cb444833d8d745f227d6f8681225b7c64736f6c63430008120033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GT MSTORE 0xCF BALANCE 0x4F SWAP15 0xF8 PREVRANDAO JUMP 0x2B 0x5E SMOD PUSH11 0x501BBF7CB444833D8D745F 0x22 PUSH30 0x6F8681225B7C64736F6C6343000812003300000000000000000000000000 ","sourceMap":"188:2065:25:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;188:2065:25;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201152cf314f9ef844562b5e076a501bbf7cb444833d8d745f227d6f8681225b7c64736f6c63430008120033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GT MSTORE 0xCF BALANCE 0x4F SWAP15 0xF8 PREVRANDAO JUMP 0x2B 0x5E SMOD PUSH11 0x501BBF7CB444833D8D745F 0x22 PUSH30 0x6F8681225B7C64736F6C6343000812003300000000000000000000000000 ","sourceMap":"188:2065:25:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"},"internal":{"toHexString(address)":"infinite","toHexString(uint256)":"infinite","toHexString(uint256,uint256)":"infinite","toString(uint256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./math/Math.sol\\\";\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _SYMBOLS = \\\"0123456789abcdef\\\";\\n    uint8 private constant _ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            uint256 length = Math.log10(value) + 1;\\n            string memory buffer = new string(length);\\n            uint256 ptr;\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                ptr := add(buffer, add(32, length))\\n            }\\n            while (true) {\\n                ptr--;\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\\n                }\\n                value /= 10;\\n                if (value == 0) break;\\n            }\\n            return buffer;\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            return toHexString(value, Math.log256(value) + 1);\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\n    }\\n}\\n\",\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\"},\"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    enum Rounding {\\n        Down, // Toward negative infinity\\n        Up, // Toward infinity\\n        Zero // Toward zero\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\\n     * with further edits by Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator\\n    ) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod0 := mul(x, y)\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            require(denominator > prod1);\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n            // See https://cs.stackexchange.com/q/138556/92363.\\n\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 twos = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator,\\n        Rounding rounding\\n    ) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10**64) {\\n                value /= 10**64;\\n                result += 64;\\n            }\\n            if (value >= 10**32) {\\n                value /= 10**32;\\n                result += 32;\\n            }\\n            if (value >= 10**16) {\\n                value /= 10**16;\\n                result += 16;\\n            }\\n            if (value >= 10**8) {\\n                value /= 10**8;\\n                result += 8;\\n            }\\n            if (value >= 10**4) {\\n                value /= 10**4;\\n                result += 4;\\n            }\\n            if (value >= 10**2) {\\n                value /= 10**2;\\n                result += 2;\\n            }\\n            if (value >= 10**1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (rounding == Rounding.Up && 10**result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (rounding == Rounding.Up && 1 << (result * 8) < value ? 1 : 0);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.","kind":"dev","methods":{"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\"},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.","kind":"dev","methods":{"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"node_modules/@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"devdoc":{"details":"Standard math utilities missing in the Solidity language.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122050a7da0359fa09be260b7c4f1417ecde2362e1829469fe63c2064bc28340fd0364736f6c63430008120033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 POP 0xA7 0xDA SUB MSIZE STATICCALL MULMOD 0xBE 0x26 SIGNEXTEND PUSH29 0x4F1417ECDE2362E1829469FE63C2064BC28340FD0364736F6C63430008 SLT STOP CALLER ","sourceMap":"202:12302:28:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;202:12302:28;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122050a7da0359fa09be260b7c4f1417ecde2362e1829469fe63c2064bc28340fd0364736f6c63430008120033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 POP 0xA7 0xDA SUB MSIZE STATICCALL MULMOD 0xBE 0x26 SIGNEXTEND PUSH29 0x4F1417ECDE2362E1829469FE63C2064BC28340FD0364736F6C63430008 SLT STOP CALLER ","sourceMap":"202:12302:28:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"},"internal":{"average(uint256,uint256)":"infinite","ceilDiv(uint256,uint256)":"infinite","log10(uint256)":"infinite","log10(uint256,enum Math.Rounding)":"infinite","log2(uint256)":"infinite","log2(uint256,enum Math.Rounding)":"infinite","log256(uint256)":"infinite","log256(uint256,enum Math.Rounding)":"infinite","max(uint256,uint256)":"infinite","min(uint256,uint256)":"infinite","mulDiv(uint256,uint256,uint256)":"infinite","mulDiv(uint256,uint256,uint256,enum Math.Rounding)":"infinite","sqrt(uint256)":"infinite","sqrt(uint256,enum Math.Rounding)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    enum Rounding {\\n        Down, // Toward negative infinity\\n        Up, // Toward infinity\\n        Zero // Toward zero\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\\n     * with further edits by Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator\\n    ) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod0 := mul(x, y)\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            require(denominator > prod1);\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n            // See https://cs.stackexchange.com/q/138556/92363.\\n\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 twos = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator,\\n        Rounding rounding\\n    ) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10**64) {\\n                value /= 10**64;\\n                result += 64;\\n            }\\n            if (value >= 10**32) {\\n                value /= 10**32;\\n                result += 32;\\n            }\\n            if (value >= 10**16) {\\n                value /= 10**16;\\n                result += 16;\\n            }\\n            if (value >= 10**8) {\\n                value /= 10**8;\\n                result += 8;\\n            }\\n            if (value >= 10**4) {\\n                value /= 10**4;\\n                result += 4;\\n            }\\n            if (value >= 10**2) {\\n                value /= 10**2;\\n                result += 2;\\n            }\\n            if (value >= 10**1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (rounding == Rounding.Up && 10**result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (rounding == Rounding.Up && 1 << (result * 8) < value ? 1 : 0);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}}}}}