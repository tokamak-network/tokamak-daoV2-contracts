{"id":"d29bff608ec8e02b49ce0dddddc86851","_format":"hh-sol-build-info-1","solcVersion":"0.8.18","solcLongVersion":"0.8.18+commit.87f61d96","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SafeMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"},"contracts/AccessControl/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/*\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with GSN meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\n        return msg.data;\n    }\n}"},"contracts/AccessControl/ERC20.sol":{"content":"pragma solidity ^0.8.4;\n\nimport \"./Context.sol\";\nimport \"./IERC20.sol\";\nimport \"./SafeMath.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20Mintable}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * We have followed general OpenZeppelin guidelines: functions revert instead\n * of returning `false` on failure. This behavior is nonetheless conventional\n * and does not conflict with the expectations of ERC20 applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20 {\n    using SafeMath for uint256;\n\n    mapping (address => uint256) private _balances;\n\n    mapping (address => mapping (address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `recipient` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address recipient, uint256 amount) public returns (bool) {\n        _transfer(_msgSender(), recipient, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public returns (bool) {\n        _approve(_msgSender(), spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20};\n     *\n     * Requirements:\n     * - `sender` and `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     * - the caller must have allowance for `sender`'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(address sender, address recipient, uint256 amount) public returns (bool) {\n        _transfer(sender, recipient, amount);\n        _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\"));\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue));\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\"));\n        return true;\n    }\n\n    /**\n     * @dev Moves tokens `amount` from `sender` to `recipient`.\n     *\n     * This is internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `sender` cannot be the zero address.\n     * - `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     */\n    function _transfer(address sender, address recipient, uint256 amount) internal {\n        require(sender != address(0), \"ERC20: transfer from the zero address\");\n        require(recipient != address(0), \"ERC20: transfer to the zero address\");\n\n        _balances[sender] = _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\");\n        _balances[recipient] = _balances[recipient].add(amount);\n        emit Transfer(sender, recipient, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements\n     *\n     * - `to` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _totalSupply = _totalSupply.add(amount);\n        _balances[account] = _balances[account].add(amount);\n        emit Transfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _balances[account] = _balances[account].sub(amount, \"ERC20: burn amount exceeds balance\");\n        _totalSupply = _totalSupply.sub(amount);\n        emit Transfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.\n     *\n     * This is internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(address owner, address spender, uint256 amount) internal {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`.`amount` is then deducted\n     * from the caller's allowance.\n     *\n     * See {_burn} and {_approve}.\n     */\n    function _burnFrom(address account, uint256 amount) internal {\n        _burn(account, amount);\n        _approve(account, _msgSender(), _allowances[account][_msgSender()].sub(amount, \"ERC20: burn amount exceeds allowance\"));\n    }\n}\n"},"contracts/AccessControl/ERC20Burnable.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.4;\n\nimport \"./Context.sol\";\nimport \"./ERC20.sol\";\n\n/**\n * @dev Extension of {ERC20} that allows token holders to destroy both their own\n * tokens and those that they have an allowance for, in a way that can be\n * recognized off-chain (via event analysis).\n */\ncontract ERC20Burnable is Context, ERC20 {\n    /**\n     * @dev Destroys `amount` tokens from the caller.\n     *\n     * See {ERC20-_burn}.\n     */\n    function burn(uint256 amount) public {\n        _burn(_msgSender(), amount);\n    }\n\n    /**\n     * @dev See {ERC20-_burnFrom}.\n     */\n    function burnFrom(address account, uint256 amount) public {\n        _burnFrom(account, amount);\n    }\n}\n"},"contracts/AccessControl/ERC20Detailed.sol":{"content":"pragma solidity ^0.8.4;\n\nimport \"./IERC20.sol\";\n\n/**\n * @dev Optional functions from the ERC20 standard.\n */\nabstract contract ERC20Detailed is IERC20 {\n    string private _name;\n    string private _symbol;\n    uint8 private _decimals;\n\n    /**\n     * @dev Sets the values for `name`, `symbol`, and `decimals`. All three of\n     * these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor (string memory name, string memory symbol, uint8 decimals) {\n        _name = name;\n        _symbol = symbol;\n        _decimals = decimals;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5,05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view returns (uint8) {\n        return _decimals;\n    }\n}\n"},"contracts/AccessControl/ERC20Mintable.sol":{"content":"pragma solidity ^0.8.4;\n\nimport \"./ERC20.sol\";\nimport \"./MinterRole.sol\";\n\n/**\n * @dev Extension of {ERC20} that adds a set of accounts with the {MinterRole},\n * which have permission to mint (create) new tokens as they see fit.\n *\n * At construction, the deployer of the contract is the only minter.\n */\ncontract ERC20Mintable is ERC20, MinterRole {\n    /**\n     * @dev See {ERC20-_mint}.\n     *\n     * Requirements:\n     *\n     * - the caller must have the {MinterRole}.\n     */\n    function mint(address account, uint256 amount) public onlyMinter returns (bool) {\n        _mint(account, amount);\n        return true;\n    }\n}\n"},"contracts/AccessControl/IERC20.sol":{"content":"pragma solidity ^0.8.4;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP. Does not include\n * the optional functions; to access them see {ERC20Detailed}.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"},"contracts/AccessControl/MinterRole.sol":{"content":"pragma solidity ^0.8.4;\n\nimport \"./Context.sol\";\nimport \"./Roles.sol\";\n\ncontract MinterRole is Context {\n    using Roles for Roles.Role;\n\n    event MinterAdded(address indexed account);\n    event MinterRemoved(address indexed account);\n\n    Roles.Role private _minters;\n\n    constructor () {\n        _addMinter(_msgSender());\n    }\n\n    modifier onlyMinter() {\n        require(isMinter(_msgSender()), \"MinterRole: caller does not have the Minter role\");\n        _;\n    }\n\n    function isMinter(address account) public view returns (bool) {\n        return _minters.has(account);\n    }\n\n    function addMinter(address account) public onlyMinter {\n        _addMinter(account);\n    }\n\n    function renounceMinter() public {\n        _removeMinter(_msgSender());\n    }\n\n    function _addMinter(address account) internal {\n        _minters.add(account);\n        emit MinterAdded(account);\n    }\n\n    function _removeMinter(address account) internal {\n        _minters.remove(account);\n        emit MinterRemoved(account);\n    }\n}\n"},"contracts/AccessControl/Roles.sol":{"content":"pragma solidity ^0.8.4;\n\n/**\n * @title Roles\n * @dev Library for managing addresses assigned to a Role.\n */\nlibrary Roles {\n    struct Role {\n        mapping (address => bool) bearer;\n    }\n\n    /**\n     * @dev Give an account access to this role.\n     */\n    function add(Role storage role, address account) internal {\n        require(!has(role, account), \"Roles: account already has role\");\n        role.bearer[account] = true;\n    }\n\n    /**\n     * @dev Remove an account's access to this role.\n     */\n    function remove(Role storage role, address account) internal {\n        require(has(role, account), \"Roles: account does not have role\");\n        role.bearer[account] = false;\n    }\n\n    /**\n     * @dev Check if an account has this role.\n     * @return bool\n     */\n    function has(Role storage role, address account) internal view returns (bool) {\n        require(account != address(0), \"Roles: account is the zero address\");\n        return role.bearer[account];\n    }\n}\n"},"contracts/AccessControl/SafeMath.sol":{"content":"pragma solidity ^0.8.4;\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\n * checks.\n *\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\n * in bugs, because programmers usually assume that an overflow raises an\n * error, which is the standard behavior in high level programming languages.\n * `SafeMath` restores this intuition by reverting the transaction when an\n * operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        require(c >= a, \"SafeMath: addition overflow\");\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return sub(a, b, \"SafeMath: subtraction overflow\");\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     * - Subtraction cannot overflow.\n     *\n     * _Available since v2.4.0._\n     */\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b <= a, errorMessage);\n        uint256 c = a - b;\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n        // benefit is lost if 'b' is also tested.\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n        if (a == 0) {\n            return 0;\n        }\n\n        uint256 c = a * b;\n        require(c / a == b, \"SafeMath: multiplication overflow\");\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers. Reverts on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return div(a, b, \"SafeMath: division by zero\");\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     * - The divisor cannot be zero.\n     *\n     * _Available since v2.4.0._\n     */\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        // Solidity only automatically asserts when dividing by 0\n        require(b > 0, errorMessage);\n        uint256 c = a / b;\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * Reverts when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return mod(a, b, \"SafeMath: modulo by zero\");\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * Reverts with custom message when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     * - The divisor cannot be zero.\n     *\n     * _Available since v2.4.0._\n     */\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b != 0, errorMessage);\n        return a % b;\n    }\n}\n"},"contracts/interfaces/AutoRefactorCoinageI.sol":{"content":"pragma solidity ^0.8.4;\n\ninterface AutoRefactorCoinageI {\n  function factor() external view returns (uint256);\n  function setFactor(uint256 factor) external returns (bool);\n  function burn(uint256 amount) external;\n  function burnFrom(address account, uint256 amount) external;\n  function mint(address account, uint256 amount) external returns (bool);\n  function totalSupply() external view returns (uint256);\n  function balanceOf(address account) external view returns (uint256);\n  function addMinter(address account) external;\n  function renounceMinter() external;\n  function transferOwnership(address newOwner) external;\n}\n"},"contracts/interfaces/CoinageFactoryI.sol":{"content":"pragma solidity ^0.8.4;\n\ninterface CoinageFactoryI {\n  function deploy() external returns (address);\n}\n"},"contracts/lib/DSMath.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-or-later\n// https://github.com/dapphub/ds-math/blob/de45767/src/math.sol\n/// math.sol -- mixin for inline numerical wizardry\n\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity >0.4.13;\n\ncontract DSMath {\n    function add(uint256 x, uint256 y) internal pure returns (uint256 z) {\n        require((z = x + y) >= x, \"ds-math-add-overflow\");\n    }\n\n    function sub(uint256 x, uint256 y) internal pure returns (uint256 z) {\n        require((z = x - y) <= x, \"ds-math-sub-underflow\");\n    }\n\n    function mul(uint256 x, uint256 y) internal pure returns (uint256 z) {\n        require(y == 0 || (z = x * y) / y == x, \"ds-math-mul-overflow\");\n    }\n\n    function min(uint256 x, uint256 y) internal pure returns (uint256 z) {\n        return x <= y ? x : y;\n    }\n\n    function max(uint256 x, uint256 y) internal pure returns (uint256 z) {\n        return x >= y ? x : y;\n    }\n\n    function imin(int256 x, int256 y) internal pure returns (int256 z) {\n        return x <= y ? x : y;\n    }\n\n    function imax(int256 x, int256 y) internal pure returns (int256 z) {\n        return x >= y ? x : y;\n    }\n\n    uint256 constant WAD = 10**18;\n    uint256 constant RAY = 10**27;\n\n    function wmul(uint256 x, uint256 y) internal pure returns (uint256 z) {\n        z = add(mul(x, y), WAD / 2) / WAD;\n    }\n\n    function rmul(uint256 x, uint256 y) internal pure returns (uint256 z) {\n        z = add(mul(x, y), RAY / 2) / RAY;\n    }\n\n    function wdiv(uint256 x, uint256 y) internal pure returns (uint256 z) {\n        z = add(mul(x, WAD), y / 2) / y;\n    }\n\n    function rdiv(uint256 x, uint256 y) internal pure returns (uint256 z) {\n        z = add(mul(x, RAY), y / 2) / y;\n    }\n\n    function wmul2(uint256 x, uint256 y) internal pure returns (uint256 z) {\n        z = mul(x, y) / WAD;\n    }\n\n    function rmul2(uint256 x, uint256 y) internal pure returns (uint256 z) {\n        z = mul(x, y) / RAY;\n    }\n\n    function wdiv2(uint256 x, uint256 y) internal pure returns (uint256 z) {\n        z = mul(x, WAD) / y;\n    }\n\n    function rdiv2(uint256 x, uint256 y) internal pure returns (uint256 z) {\n        z = mul(x, RAY) / y;\n    }\n\n    // This famous algorithm is called \"exponentiation by squaring\"\n    // and calculates x^n with x as fixed-point and n as regular unsigned.\n    //\n    // It's O(log n), instead of O(n) for naive repeated multiplication.\n    //\n    // These facts are why it works:\n    //\n    //  If n is even, then x^n = (x^2)^(n/2).\n    //  If n is odd,  then x^n = x * x^(n-1),\n    //   and applying the equation for even x gives\n    //  x^n = x * (x^2)^((n-1) / 2).\n    //\n    //  Also, EVM division is flooring and\n    //  floor[(n-1) / 2] = floor[n / 2].\n    //\n    function wpow(uint256 x, uint256 n) internal pure returns (uint256 z) {\n        z = n % 2 != 0 ? x : WAD;\n\n        for (n /= 2; n != 0; n /= 2) {\n            x = wmul(x, x);\n\n            if (n % 2 != 0) {\n                z = wmul(z, x);\n            }\n        }\n    }\n\n    function rpow(uint256 x, uint256 n) internal pure returns (uint256 z) {\n        z = n % 2 != 0 ? x : RAY;\n\n        for (n /= 2; n != 0; n /= 2) {\n            x = rmul(x, x);\n\n            if (n % 2 != 0) {\n                z = rmul(z, x);\n            }\n        }\n    }\n}\n"},"contracts/test/AutoRefactorCoinage.sol":{"content":"// based on ERC20 implementation of openzeppelin/-solidity: https://github.com/OpenZeppelin/openzeppelin/-contracts/blob/7552af95e4ec6fccd64a95b206f59a1b4ff91517/contracts/token/ERC20/ERC20.sol\npragma solidity ^0.8.4;\n\nimport { AutoRefactorCoinageI } from \"../interfaces/AutoRefactorCoinageI.sol\";\nimport { SafeMath } from \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\n// import { Context } from \"../AccessControl/Context.sol\";\n\nimport { Ownable } from \"@openzeppelin/contracts/access/Ownable.sol\";\n// import { IERC20 } from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport { ERC20Detailed } from \"../AccessControl/ERC20Detailed.sol\";\n// import { ERC20Mintable } from \"../AccessControl/ERC20Mintable.sol\";\n// import { ERC20Burnable } from \"../AccessControl/ERC20Burnable.sol\";\nimport \"../AccessControl/Roles.sol\";\nimport { DSMath } from \"../lib/DSMath.sol\";\n\n\n/**\n * @dev Implementation of coin age token based on ERC20 of openzeppelin/-solidity\n *\n * AutoRefactorCoinage stores `_totalSupply` and `_balances` as RAY BASED value,\n * `_allowances` as RAY FACTORED value.\n *\n * This takes public function (including _approve) parameters as RAY FACTORED value\n * and internal function (including approve) parameters as RAY BASED value, and emits event in RAY FACTORED value.\n *\n * `RAY BASED` = `RAY FACTORED`  / factor\n *\n *  factor increases exponentially for each block mined.\n */\ncontract AutoRefactorCoinage is DSMath, Ownable, ERC20Detailed {\n  using SafeMath for uint256;\n  using Roles for Roles.Role;\n\n  struct Balance {\n    uint256 balance;\n    uint256 refactoredCount;\n    uint256 remain;\n  }\n\n  uint256 public REFACTOR_BOUNDARY = 10 ** 28;\n  uint256 public REFACTOR_DIVIDER = 2;\n\n  uint256 public refactorCount;\n\n  mapping (address => Balance) public balances;\n\n  Balance public _totalSupply;\n\n  uint256 public _factor;\n\n  bool internal _transfersEnabled;\n\n  event FactorSet(uint256 previous, uint256 current, uint256 shiftCount);\n\n  event MinterAdded(address indexed account);\n  event MinterRemoved(address indexed account);\n\n  Roles.Role private _minters;\n\n  constructor (\n    string memory name,\n    string memory symbol,\n    uint256 factor\n  )\n    public\n    ERC20Detailed(name, symbol, 27)\n  {\n    _addMinter(_msgSender());\n    _factor = factor;\n    //_factorIncrement = factorIncrement;\n    //_lastBlock = block.number;\n    //_transfersEnabled = transfersEnabled;\n  }\n\n  modifier onlyMinter() {\n      require(isMinter(_msgSender()), \"MinterRole: caller does not have the Minter role\");\n      _;\n  }\n\n  function isMinter(address account) public view returns (bool) {\n      return _minters.has(account);\n  }\n\n  function addMinter(address account) public onlyMinter {\n      _addMinter(account);\n  }\n\n  function renounceMinter() public {\n      _removeMinter(_msgSender());\n  }\n\n  function _addMinter(address account) internal {\n      _minters.add(account);\n      emit MinterAdded(account);\n  }\n\n  function _removeMinter(address account) internal {\n      _minters.remove(account);\n      emit MinterRemoved(account);\n  }\n\n  function factor() public view returns (uint256) {\n    uint256 result = _factor;\n    for (uint256 i = 0; i < refactorCount; i++) {\n      result = result.mul(REFACTOR_DIVIDER);\n    }\n    return result;\n  }\n\n  /**\n    * @dev See {IERC20-totalSupply}.\n    */\n  function totalSupply() public view returns (uint256) {\n    return _applyFactor(_totalSupply.balance, _totalSupply.refactoredCount).add(_totalSupply.remain);\n  }\n\n\n  /**\n    * @dev See {IERC20-balanceOf}.\n    */\n  function balanceOf(address account) public view returns (uint256) {\n    Balance storage b = balances[account];\n\n    return _applyFactor(b.balance, b.refactoredCount).add(b.remain);\n  }\n\n  /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n    * the total supply.\n    *\n    * Emits a {Transfer} event with `from` set to the zero address.\n    *\n    * Requirements\n    *\n    * - `to` cannot be the zero address.\n    */\n\n  function mint(address account, uint256 amount) public onlyMinter returns (bool) {\n    _mint(account, amount);\n    return true;\n  }\n\n  function _mint(address account, uint256 amount) internal {\n    require(account != address(0), \"AutoRefactorCoinage: mint to the zero address\");\n    Balance storage b = balances[account];\n\n    uint256 currentBalance = balanceOf(account);\n    uint256 newBalance = currentBalance.add(amount);\n\n    uint256 rbAmount = _toRAYBased(newBalance);\n    b.balance = rbAmount;\n    b.refactoredCount = refactorCount;\n\n    addTotalSupply(amount);\n    emit Transfer(address(0), account, _toRAYFactored(rbAmount));\n  }\n\n    /**\n    * @dev Destroys `amount` tokens from `account`, reducing the\n    * total supply.\n    *\n    * Emits a {Transfer} event with `to` set to the zero address.\n    *\n    * Requirements\n    *\n    * - `account` cannot be the zero address.\n    * - `account` must have at least `amount` tokens.\n    */\n\n  function burn(uint256 amount) public {\n      _burn(_msgSender(), amount);\n  }\n\n  /**\n    * @dev See {ERC20-_burnFrom}.\n    */\n  function burnFrom(address account, uint256 amount) public {\n      _burnFrom(account, amount);\n  }\n\n  function _burn(address account, uint256 amount) internal {\n    require(account != address(0), \"AutoRefactorCoinage: burn from the zero address\");\n    Balance storage b = balances[account];\n\n    uint256 currentBalance = balanceOf(account);\n    uint256 newBalance = currentBalance.sub(amount);\n\n    uint256 rbAmount = _toRAYBased(newBalance);\n    b.balance = rbAmount;\n    b.refactoredCount = refactorCount;\n\n    subTotalSupply(amount);\n    emit Transfer(account, address(0), _toRAYFactored(rbAmount));\n  }\n\n  function _burnFrom(address account, uint256 amount) internal {\n    _burn(account, amount);\n  }\n\n  // helpers\n\n  /**\n   * @param v the value to be factored\n   */\n  function _applyFactor(uint256 v, uint256 refactoredCount) internal view returns (uint256) {\n    if (v == 0) {\n      return 0;\n    }\n\n    v = rmul2(v, _factor);\n\n    for (uint256 i = refactoredCount; i < refactorCount; i++) {\n      v = v.mul(REFACTOR_DIVIDER);\n    }\n\n    return v;\n  }\n\n  /**\n   * @dev Calculate RAY BASED from RAY FACTORED\n   */\n  function _toRAYBased(uint256 rf) internal view returns (uint256 rb) {\n    return rdiv2(rf, _factor);\n  }\n\n  /**\n   * @dev Calculate RAY FACTORED from RAY BASED\n   */\n  function _toRAYFactored(uint256 rb) internal view returns (uint256 rf) {\n    return rmul2(rb, _factor);\n  }\n\n\n  // new\n\n  function setFactor(uint256 factor) external onlyOwner returns (bool) {\n    uint256 previous = _factor;\n\n    uint256 count = 0;\n    uint256 f = factor;\n    for (; f >= REFACTOR_BOUNDARY; f = f.div(REFACTOR_DIVIDER)) {\n      count = count.add(1);\n    }\n\n    refactorCount = count;\n    _factor = f;\n    emit FactorSet(previous, f, count);\n  }\n\n  function addTotalSupply(uint256 amount) internal {\n    uint256 currentSupply = _applyFactor(_totalSupply.balance, _totalSupply.refactoredCount);\n    uint256 newSupply = currentSupply.add(amount);\n\n    uint256 rbAmount = _toRAYBased(newSupply);\n    _totalSupply.balance = rbAmount;\n    _totalSupply.refactoredCount = refactorCount;\n  }\n\n  function subTotalSupply(uint256 amount) internal {\n    uint256 currentSupply = _applyFactor(_totalSupply.balance, _totalSupply.refactoredCount);\n    uint256 newSupply = currentSupply.sub(amount);\n\n    uint256 rbAmount = _toRAYBased(newSupply);\n    _totalSupply.balance = rbAmount;\n    _totalSupply.refactoredCount = refactorCount;\n  }\n\n  // unsupported functions\n\n  function transfer(address recipient, uint256 amount) public returns (bool) {\n    revert();\n  }\n\n  function allowance(address owner, address spender) public view returns (uint256) {\n    return 0;\n  }\n\n  function approve(address spender, uint256 amount) public returns (bool) {\n    revert();\n  }\n\n  function transferFrom(address sender, address recipient, uint256 amount) public returns (bool) {\n    revert();\n  }\n}\n"},"contracts/test/CoinageFactory.sol":{"content":"pragma solidity ^0.8.4;\n\nimport { AutoRefactorCoinage } from \"./AutoRefactorCoinage.sol\";\nimport { CoinageFactoryI } from \"../interfaces/CoinageFactoryI.sol\";\n\ncontract CoinageFactory is CoinageFactoryI {\n  uint256 constant public RAY = 10 ** 27; // 1 RAY\n  uint256 constant internal _DEFAULT_FACTOR = RAY;\n\n  function deploy() external returns (address) {\n    AutoRefactorCoinage c = new AutoRefactorCoinage(\n      \"\",\n      \"\",\n      _DEFAULT_FACTOR\n    );\n\n    c.addMinter(msg.sender);\n    c.renounceMinter();\n    c.transferOwnership(msg.sender);\n\n    return address(c);\n  }\n}\n"}},"settings":{"optimizer":{"enabled":true,"runs":100},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"errors":[{"component":"general","errorCode":"1878","formattedMessage":"Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/AccessControl/ERC20.sol\n\n","message":"SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.","severity":"warning","sourceLocation":{"end":-1,"file":"contracts/AccessControl/ERC20.sol","start":-1},"type":"Warning"},{"component":"general","errorCode":"1878","formattedMessage":"Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/AccessControl/ERC20Detailed.sol\n\n","message":"SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.","severity":"warning","sourceLocation":{"end":-1,"file":"contracts/AccessControl/ERC20Detailed.sol","start":-1},"type":"Warning"},{"component":"general","errorCode":"1878","formattedMessage":"Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/AccessControl/ERC20Mintable.sol\n\n","message":"SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.","severity":"warning","sourceLocation":{"end":-1,"file":"contracts/AccessControl/ERC20Mintable.sol","start":-1},"type":"Warning"},{"component":"general","errorCode":"1878","formattedMessage":"Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/AccessControl/IERC20.sol\n\n","message":"SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.","severity":"warning","sourceLocation":{"end":-1,"file":"contracts/AccessControl/IERC20.sol","start":-1},"type":"Warning"},{"component":"general","errorCode":"1878","formattedMessage":"Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/AccessControl/MinterRole.sol\n\n","message":"SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.","severity":"warning","sourceLocation":{"end":-1,"file":"contracts/AccessControl/MinterRole.sol","start":-1},"type":"Warning"},{"component":"general","errorCode":"1878","formattedMessage":"Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/AccessControl/Roles.sol\n\n","message":"SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.","severity":"warning","sourceLocation":{"end":-1,"file":"contracts/AccessControl/Roles.sol","start":-1},"type":"Warning"},{"component":"general","errorCode":"1878","formattedMessage":"Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/AccessControl/SafeMath.sol\n\n","message":"SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.","severity":"warning","sourceLocation":{"end":-1,"file":"contracts/AccessControl/SafeMath.sol","start":-1},"type":"Warning"},{"component":"general","errorCode":"1878","formattedMessage":"Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/interfaces/AutoRefactorCoinageI.sol\n\n","message":"SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.","severity":"warning","sourceLocation":{"end":-1,"file":"contracts/interfaces/AutoRefactorCoinageI.sol","start":-1},"type":"Warning"},{"component":"general","errorCode":"1878","formattedMessage":"Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/interfaces/CoinageFactoryI.sol\n\n","message":"SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.","severity":"warning","sourceLocation":{"end":-1,"file":"contracts/interfaces/CoinageFactoryI.sol","start":-1},"type":"Warning"},{"component":"general","errorCode":"1878","formattedMessage":"Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/test/AutoRefactorCoinage.sol\n\n","message":"SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.","severity":"warning","sourceLocation":{"end":-1,"file":"contracts/test/AutoRefactorCoinage.sol","start":-1},"type":"Warning"},{"component":"general","errorCode":"1878","formattedMessage":"Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/test/CoinageFactory.sol\n\n","message":"SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.","severity":"warning","sourceLocation":{"end":-1,"file":"contracts/test/CoinageFactory.sol","start":-1},"type":"Warning"},{"component":"general","errorCode":"2519","formattedMessage":"Warning: This declaration shadows an existing declaration.\n  --> contracts/AccessControl/ERC20Detailed.sol:18:18:\n   |\n18 |     constructor (string memory name, string memory symbol, uint8 decimals) {\n   |                  ^^^^^^^^^^^^^^^^^^\nNote: The shadowed declaration is here:\n  --> contracts/AccessControl/ERC20Detailed.sol:27:5:\n   |\n27 |     function name() public view returns (string memory) {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n","message":"This declaration shadows an existing declaration.","secondarySourceLocations":[{"end":727,"file":"contracts/AccessControl/ERC20Detailed.sol","message":"The shadowed declaration is here:","start":646}],"severity":"warning","sourceLocation":{"end":456,"file":"contracts/AccessControl/ERC20Detailed.sol","start":438},"type":"Warning"},{"component":"general","errorCode":"2519","formattedMessage":"Warning: This declaration shadows an existing declaration.\n  --> contracts/AccessControl/ERC20Detailed.sol:18:38:\n   |\n18 |     constructor (string memory name, string memory symbol, uint8 decimals) {\n   |                                      ^^^^^^^^^^^^^^^^^^^^\nNote: The shadowed declaration is here:\n  --> contracts/AccessControl/ERC20Detailed.sol:35:5:\n   |\n35 |     function symbol() public view returns (string memory) {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n","message":"This declaration shadows an existing declaration.","secondarySourceLocations":[{"end":925,"file":"contracts/AccessControl/ERC20Detailed.sol","message":"The shadowed declaration is here:","start":840}],"severity":"warning","sourceLocation":{"end":478,"file":"contracts/AccessControl/ERC20Detailed.sol","start":458},"type":"Warning"},{"component":"general","errorCode":"2519","formattedMessage":"Warning: This declaration shadows an existing declaration.\n  --> contracts/AccessControl/ERC20Detailed.sol:18:60:\n   |\n18 |     constructor (string memory name, string memory symbol, uint8 decimals) {\n   |                                                            ^^^^^^^^^^^^^^\nNote: The shadowed declaration is here:\n  --> contracts/AccessControl/ERC20Detailed.sol:51:5:\n   |\n51 |     function decimals() public view returns (uint8) {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n","message":"This declaration shadows an existing declaration.","secondarySourceLocations":[{"end":1555,"file":"contracts/AccessControl/ERC20Detailed.sol","message":"The shadowed declaration is here:","start":1474}],"severity":"warning","sourceLocation":{"end":494,"file":"contracts/AccessControl/ERC20Detailed.sol","start":480},"type":"Warning"},{"component":"general","errorCode":"2519","formattedMessage":"Warning: This declaration shadows an existing declaration.\n  --> contracts/test/AutoRefactorCoinage.sol:63:5:\n   |\n63 |     uint256 factor\n   |     ^^^^^^^^^^^^^^\nNote: The shadowed declaration is here:\n   --> contracts/test/AutoRefactorCoinage.sol:102:3:\n    |\n102 |   function factor() public view returns (uint256) {\n    |   ^ (Relevant source part starts here and spans across multiple lines).\n\n","message":"This declaration shadows an existing declaration.","secondarySourceLocations":[{"end":3248,"file":"contracts/test/AutoRefactorCoinage.sol","message":"The shadowed declaration is here:","start":3045}],"severity":"warning","sourceLocation":{"end":2164,"file":"contracts/test/AutoRefactorCoinage.sol","start":2150},"type":"Warning"},{"component":"general","errorCode":"2519","formattedMessage":"Warning: This declaration shadows an existing declaration.\n   --> contracts/test/AutoRefactorCoinage.sol:235:22:\n    |\n235 |   function setFactor(uint256 factor) external onlyOwner returns (bool) {\n    |                      ^^^^^^^^^^^^^^\nNote: The shadowed declaration is here:\n   --> contracts/test/AutoRefactorCoinage.sol:102:3:\n    |\n102 |   function factor() public view returns (uint256) {\n    |   ^ (Relevant source part starts here and spans across multiple lines).\n\n","message":"This declaration shadows an existing declaration.","secondarySourceLocations":[{"end":3248,"file":"contracts/test/AutoRefactorCoinage.sol","message":"The shadowed declaration is here:","start":3045}],"severity":"warning","sourceLocation":{"end":6473,"file":"contracts/test/AutoRefactorCoinage.sol","start":6459},"type":"Warning"},{"component":"general","errorCode":"2462","formattedMessage":"Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.\n  --> contracts/test/AutoRefactorCoinage.sol:60:3:\n   |\n60 |   constructor (\n   |   ^ (Relevant source part starts here and spans across multiple lines).\n\n","message":"Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.","severity":"warning","sourceLocation":{"end":2394,"file":"contracts/test/AutoRefactorCoinage.sol","start":2082},"type":"Warning"},{"component":"general","errorCode":"6321","formattedMessage":"Warning: Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.\n   --> contracts/test/AutoRefactorCoinage.sol:235:66:\n    |\n235 |   function setFactor(uint256 factor) external onlyOwner returns (bool) {\n    |                                                                  ^^^^\n\n","message":"Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.","severity":"warning","sourceLocation":{"end":6507,"file":"contracts/test/AutoRefactorCoinage.sol","start":6503},"type":"Warning"},{"component":"general","errorCode":"5667","formattedMessage":"Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> contracts/test/AutoRefactorCoinage.sol:269:21:\n    |\n269 |   function transfer(address recipient, uint256 amount) public returns (bool) {\n    |                     ^^^^^^^^^^^^^^^^^\n\n","message":"Unused function parameter. Remove or comment out the variable name to silence this warning.","severity":"warning","sourceLocation":{"end":7522,"file":"contracts/test/AutoRefactorCoinage.sol","start":7505},"type":"Warning"},{"component":"general","errorCode":"5667","formattedMessage":"Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> contracts/test/AutoRefactorCoinage.sol:269:40:\n    |\n269 |   function transfer(address recipient, uint256 amount) public returns (bool) {\n    |                                        ^^^^^^^^^^^^^^\n\n","message":"Unused function parameter. Remove or comment out the variable name to silence this warning.","severity":"warning","sourceLocation":{"end":7538,"file":"contracts/test/AutoRefactorCoinage.sol","start":7524},"type":"Warning"},{"component":"general","errorCode":"5667","formattedMessage":"Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> contracts/test/AutoRefactorCoinage.sol:273:22:\n    |\n273 |   function allowance(address owner, address spender) public view returns (uint256) {\n    |                      ^^^^^^^^^^^^^\n\n","message":"Unused function parameter. Remove or comment out the variable name to silence this warning.","severity":"warning","sourceLocation":{"end":7617,"file":"contracts/test/AutoRefactorCoinage.sol","start":7604},"type":"Warning"},{"component":"general","errorCode":"5667","formattedMessage":"Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> contracts/test/AutoRefactorCoinage.sol:273:37:\n    |\n273 |   function allowance(address owner, address spender) public view returns (uint256) {\n    |                                     ^^^^^^^^^^^^^^^\n\n","message":"Unused function parameter. Remove or comment out the variable name to silence this warning.","severity":"warning","sourceLocation":{"end":7634,"file":"contracts/test/AutoRefactorCoinage.sol","start":7619},"type":"Warning"},{"component":"general","errorCode":"5667","formattedMessage":"Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> contracts/test/AutoRefactorCoinage.sol:277:20:\n    |\n277 |   function approve(address spender, uint256 amount) public returns (bool) {\n    |                    ^^^^^^^^^^^^^^^\n\n","message":"Unused function parameter. Remove or comment out the variable name to silence this warning.","severity":"warning","sourceLocation":{"end":7721,"file":"contracts/test/AutoRefactorCoinage.sol","start":7706},"type":"Warning"},{"component":"general","errorCode":"5667","formattedMessage":"Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> contracts/test/AutoRefactorCoinage.sol:277:37:\n    |\n277 |   function approve(address spender, uint256 amount) public returns (bool) {\n    |                                     ^^^^^^^^^^^^^^\n\n","message":"Unused function parameter. Remove or comment out the variable name to silence this warning.","severity":"warning","sourceLocation":{"end":7737,"file":"contracts/test/AutoRefactorCoinage.sol","start":7723},"type":"Warning"},{"component":"general","errorCode":"5667","formattedMessage":"Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> contracts/test/AutoRefactorCoinage.sol:281:25:\n    |\n281 |   function transferFrom(address sender, address recipient, uint256 amount) public returns (bool) {\n    |                         ^^^^^^^^^^^^^^\n\n","message":"Unused function parameter. Remove or comment out the variable name to silence this warning.","severity":"warning","sourceLocation":{"end":7820,"file":"contracts/test/AutoRefactorCoinage.sol","start":7806},"type":"Warning"},{"component":"general","errorCode":"5667","formattedMessage":"Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> contracts/test/AutoRefactorCoinage.sol:281:41:\n    |\n281 |   function transferFrom(address sender, address recipient, uint256 amount) public returns (bool) {\n    |                                         ^^^^^^^^^^^^^^^^^\n\n","message":"Unused function parameter. Remove or comment out the variable name to silence this warning.","severity":"warning","sourceLocation":{"end":7839,"file":"contracts/test/AutoRefactorCoinage.sol","start":7822},"type":"Warning"},{"component":"general","errorCode":"5667","formattedMessage":"Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> contracts/test/AutoRefactorCoinage.sol:281:60:\n    |\n281 |   function transferFrom(address sender, address recipient, uint256 amount) public returns (bool) {\n    |                                                            ^^^^^^^^^^^^^^\n\n","message":"Unused function parameter. Remove or comment out the variable name to silence this warning.","severity":"warning","sourceLocation":{"end":7855,"file":"contracts/test/AutoRefactorCoinage.sol","start":7841},"type":"Warning"},{"component":"general","errorCode":"2018","formattedMessage":"Warning: Function state mutability can be restricted to pure\n   --> contracts/test/AutoRefactorCoinage.sol:269:3:\n    |\n269 |   function transfer(address recipient, uint256 amount) public returns (bool) {\n    |   ^ (Relevant source part starts here and spans across multiple lines).\n\n","message":"Function state mutability can be restricted to pure","severity":"warning","sourceLocation":{"end":7581,"file":"contracts/test/AutoRefactorCoinage.sol","start":7487},"type":"Warning"},{"component":"general","errorCode":"2018","formattedMessage":"Warning: Function state mutability can be restricted to pure\n   --> contracts/test/AutoRefactorCoinage.sol:273:3:\n    |\n273 |   function allowance(address owner, address spender) public view returns (uint256) {\n    |   ^ (Relevant source part starts here and spans across multiple lines).\n\n","message":"Function state mutability can be restricted to pure","severity":"warning","sourceLocation":{"end":7685,"file":"contracts/test/AutoRefactorCoinage.sol","start":7585},"type":"Warning"},{"component":"general","errorCode":"2018","formattedMessage":"Warning: Function state mutability can be restricted to pure\n   --> contracts/test/AutoRefactorCoinage.sol:277:3:\n    |\n277 |   function approve(address spender, uint256 amount) public returns (bool) {\n    |   ^ (Relevant source part starts here and spans across multiple lines).\n\n","message":"Function state mutability can be restricted to pure","severity":"warning","sourceLocation":{"end":7780,"file":"contracts/test/AutoRefactorCoinage.sol","start":7689},"type":"Warning"},{"component":"general","errorCode":"2018","formattedMessage":"Warning: Function state mutability can be restricted to pure\n   --> contracts/test/AutoRefactorCoinage.sol:281:3:\n    |\n281 |   function transferFrom(address sender, address recipient, uint256 amount) public returns (bool) {\n    |   ^ (Relevant source part starts here and spans across multiple lines).\n\n","message":"Function state mutability can be restricted to pure","severity":"warning","sourceLocation":{"end":7898,"file":"contracts/test/AutoRefactorCoinage.sol","start":7784},"type":"Warning"}],"sources":{"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[134],"Ownable":[112]},"id":113,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"102:23:0"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":2,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":113,"sourceUnit":135,"src":"127:30:0","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":4,"name":"Context","nameLocations":["683:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":134,"src":"683:7:0"},"id":5,"nodeType":"InheritanceSpecifier","src":"683:7:0"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":3,"nodeType":"StructuredDocumentation","src":"159:494:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":112,"linearizedBaseContracts":[112,134],"name":"Ownable","nameLocation":"672:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":7,"mutability":"mutable","name":"_owner","nameLocation":"713:6:0","nodeType":"VariableDeclaration","scope":112,"src":"697:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6,"name":"address","nodeType":"ElementaryTypeName","src":"697:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":13,"name":"OwnershipTransferred","nameLocation":"732:20:0","nodeType":"EventDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"769:13:0","nodeType":"VariableDeclaration","scope":13,"src":"753:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8,"name":"address","nodeType":"ElementaryTypeName","src":"753:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"800:8:0","nodeType":"VariableDeclaration","scope":13,"src":"784:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"784:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"752:57:0"},"src":"726:84:0"},{"body":{"id":22,"nodeType":"Block","src":"926:49:0","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":18,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":124,"src":"955:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":19,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"955:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":17,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"936:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":20,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"936:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":21,"nodeType":"ExpressionStatement","src":"936:32:0"}]},"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"816:91:0","text":" @dev Initializes the contract setting the deployer as the initial owner."},"id":23,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":15,"nodeType":"ParameterList","parameters":[],"src":"923:2:0"},"returnParameters":{"id":16,"nodeType":"ParameterList","parameters":[],"src":"926:0:0"},"scope":112,"src":"912:63:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":30,"nodeType":"Block","src":"1084:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":26,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":54,"src":"1094:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":27,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1094:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":28,"nodeType":"ExpressionStatement","src":"1094:13:0"},{"id":29,"nodeType":"PlaceholderStatement","src":"1117:1:0"}]},"documentation":{"id":24,"nodeType":"StructuredDocumentation","src":"981:77:0","text":" @dev Throws if called by any account other than the owner."},"id":31,"name":"onlyOwner","nameLocation":"1072:9:0","nodeType":"ModifierDefinition","parameters":{"id":25,"nodeType":"ParameterList","parameters":[],"src":"1081:2:0"},"src":"1063:62:0","virtual":false,"visibility":"internal"},{"body":{"id":39,"nodeType":"Block","src":"1256:30:0","statements":[{"expression":{"id":37,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"1273:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":36,"id":38,"nodeType":"Return","src":"1266:13:0"}]},"documentation":{"id":32,"nodeType":"StructuredDocumentation","src":"1131:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":40,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1210:5:0","nodeType":"FunctionDefinition","parameters":{"id":33,"nodeType":"ParameterList","parameters":[],"src":"1215:2:0"},"returnParameters":{"id":36,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":40,"src":"1247:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":34,"name":"address","nodeType":"ElementaryTypeName","src":"1247:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1246:9:0"},"scope":112,"src":"1201:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":53,"nodeType":"Block","src":"1404:85:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":49,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":45,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40,"src":"1422:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":46,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1422:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":47,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":124,"src":"1433:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":48,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1433:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1422:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","id":50,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1447:34:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""},"value":"Ownable: caller is not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""}],"id":44,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1414:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":51,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1414:68:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":52,"nodeType":"ExpressionStatement","src":"1414:68:0"}]},"documentation":{"id":41,"nodeType":"StructuredDocumentation","src":"1292:62:0","text":" @dev Throws if the sender is not the owner."},"id":54,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1368:11:0","nodeType":"FunctionDefinition","parameters":{"id":42,"nodeType":"ParameterList","parameters":[],"src":"1379:2:0"},"returnParameters":{"id":43,"nodeType":"ParameterList","parameters":[],"src":"1404:0:0"},"scope":112,"src":"1359:130:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":67,"nodeType":"Block","src":"1885:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":63,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1922:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":62,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1914:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":61,"name":"address","nodeType":"ElementaryTypeName","src":"1914:7:0","typeDescriptions":{}}},"id":64,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1914:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":60,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"1895:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":65,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1895:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":66,"nodeType":"ExpressionStatement","src":"1895:30:0"}]},"documentation":{"id":55,"nodeType":"StructuredDocumentation","src":"1495:331:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."},"functionSelector":"715018a6","id":68,"implemented":true,"kind":"function","modifiers":[{"id":58,"kind":"modifierInvocation","modifierName":{"id":57,"name":"onlyOwner","nameLocations":["1875:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"1875:9:0"},"nodeType":"ModifierInvocation","src":"1875:9:0"}],"name":"renounceOwnership","nameLocation":"1840:17:0","nodeType":"FunctionDefinition","parameters":{"id":56,"nodeType":"ParameterList","parameters":[],"src":"1857:2:0"},"returnParameters":{"id":59,"nodeType":"ParameterList","parameters":[],"src":"1885:0:0"},"scope":112,"src":"1831:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":90,"nodeType":"Block","src":"2151:128:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":82,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":77,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":71,"src":"2169:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":80,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2189:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":79,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2181:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":78,"name":"address","nodeType":"ElementaryTypeName","src":"2181:7:0","typeDescriptions":{}}},"id":81,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2181:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2169:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373","id":83,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2193:40:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""},"value":"Ownable: new owner is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""}],"id":76,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2161:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":84,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2161:73:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":85,"nodeType":"ExpressionStatement","src":"2161:73:0"},{"expression":{"arguments":[{"id":87,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":71,"src":"2263:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":86,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"2244:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":88,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2244:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":89,"nodeType":"ExpressionStatement","src":"2244:28:0"}]},"documentation":{"id":69,"nodeType":"StructuredDocumentation","src":"1938:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":91,"implemented":true,"kind":"function","modifiers":[{"id":74,"kind":"modifierInvocation","modifierName":{"id":73,"name":"onlyOwner","nameLocations":["2141:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"2141:9:0"},"nodeType":"ModifierInvocation","src":"2141:9:0"}],"name":"transferOwnership","nameLocation":"2090:17:0","nodeType":"FunctionDefinition","parameters":{"id":72,"nodeType":"ParameterList","parameters":[{"constant":false,"id":71,"mutability":"mutable","name":"newOwner","nameLocation":"2116:8:0","nodeType":"VariableDeclaration","scope":91,"src":"2108:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":70,"name":"address","nodeType":"ElementaryTypeName","src":"2108:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2107:18:0"},"returnParameters":{"id":75,"nodeType":"ParameterList","parameters":[],"src":"2151:0:0"},"scope":112,"src":"2081:198:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":110,"nodeType":"Block","src":"2496:124:0","statements":[{"assignments":[98],"declarations":[{"constant":false,"id":98,"mutability":"mutable","name":"oldOwner","nameLocation":"2514:8:0","nodeType":"VariableDeclaration","scope":110,"src":"2506:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":97,"name":"address","nodeType":"ElementaryTypeName","src":"2506:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":100,"initialValue":{"id":99,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"2525:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2506:25:0"},{"expression":{"id":103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":101,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"2541:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":102,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"2550:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2541:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":104,"nodeType":"ExpressionStatement","src":"2541:17:0"},{"eventCall":{"arguments":[{"id":106,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":98,"src":"2594:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":107,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"2604:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":105,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"2573:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":108,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2573:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":109,"nodeType":"EmitStatement","src":"2568:45:0"}]},"documentation":{"id":92,"nodeType":"StructuredDocumentation","src":"2285:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":111,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2442:18:0","nodeType":"FunctionDefinition","parameters":{"id":95,"nodeType":"ParameterList","parameters":[{"constant":false,"id":94,"mutability":"mutable","name":"newOwner","nameLocation":"2469:8:0","nodeType":"VariableDeclaration","scope":111,"src":"2461:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":93,"name":"address","nodeType":"ElementaryTypeName","src":"2461:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2460:18:0"},"returnParameters":{"id":96,"nodeType":"ParameterList","parameters":[],"src":"2496:0:0"},"scope":112,"src":"2433:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":113,"src":"654:1968:0","usedErrors":[]}],"src":"102:2521:0"},"id":0},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[134]},"id":135,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":114,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"86:23:1"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":115,"nodeType":"StructuredDocumentation","src":"111:496:1","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":134,"linearizedBaseContracts":[134],"name":"Context","nameLocation":"626:7:1","nodeType":"ContractDefinition","nodes":[{"body":{"id":123,"nodeType":"Block","src":"702:34:1","statements":[{"expression":{"expression":{"id":120,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"719:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"723:6:1","memberName":"sender","nodeType":"MemberAccess","src":"719:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":119,"id":122,"nodeType":"Return","src":"712:17:1"}]},"id":124,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"649:10:1","nodeType":"FunctionDefinition","parameters":{"id":116,"nodeType":"ParameterList","parameters":[],"src":"659:2:1"},"returnParameters":{"id":119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":118,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":124,"src":"693:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":117,"name":"address","nodeType":"ElementaryTypeName","src":"693:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"692:9:1"},"scope":134,"src":"640:96:1","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":132,"nodeType":"Block","src":"809:32:1","statements":[{"expression":{"expression":{"id":129,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"826:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"830:4:1","memberName":"data","nodeType":"MemberAccess","src":"826:8:1","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":128,"id":131,"nodeType":"Return","src":"819:15:1"}]},"id":133,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"751:8:1","nodeType":"FunctionDefinition","parameters":{"id":125,"nodeType":"ParameterList","parameters":[],"src":"759:2:1"},"returnParameters":{"id":128,"nodeType":"ParameterList","parameters":[{"constant":false,"id":127,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":133,"src":"793:14:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":126,"name":"bytes","nodeType":"ElementaryTypeName","src":"793:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"792:16:1"},"scope":134,"src":"742:99:1","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":135,"src":"608:235:1","usedErrors":[]}],"src":"86:758:1"},"id":1},"@openzeppelin/contracts/utils/math/SafeMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeMath.sol","exportedSymbols":{"SafeMath":[446]},"id":447,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":136,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"107:23:2"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeMath","contractDependencies":[],"contractKind":"library","documentation":{"id":137,"nodeType":"StructuredDocumentation","src":"285:196:2","text":" @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."},"fullyImplemented":true,"id":446,"linearizedBaseContracts":[446],"name":"SafeMath","nameLocation":"490:8:2","nodeType":"ContractDefinition","nodes":[{"body":{"id":168,"nodeType":"Block","src":"717:140:2","statements":[{"id":167,"nodeType":"UncheckedBlock","src":"727:124:2","statements":[{"assignments":[150],"declarations":[{"constant":false,"id":150,"mutability":"mutable","name":"c","nameLocation":"759:1:2","nodeType":"VariableDeclaration","scope":167,"src":"751:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":149,"name":"uint256","nodeType":"ElementaryTypeName","src":"751:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":154,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":151,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":140,"src":"763:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":152,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":142,"src":"767:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"763:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"751:17:2"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":155,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":150,"src":"786:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":156,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":140,"src":"790:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"786:5:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":162,"nodeType":"IfStatement","src":"782:28:2","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":158,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"801:5:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":159,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"808:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":160,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"800:10:2","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":148,"id":161,"nodeType":"Return","src":"793:17:2"}},{"expression":{"components":[{"hexValue":"74727565","id":163,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"832:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":164,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":150,"src":"838:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":165,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"831:9:2","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":148,"id":166,"nodeType":"Return","src":"824:16:2"}]}]},"documentation":{"id":138,"nodeType":"StructuredDocumentation","src":"505:131:2","text":" @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"},"id":169,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"650:6:2","nodeType":"FunctionDefinition","parameters":{"id":143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":140,"mutability":"mutable","name":"a","nameLocation":"665:1:2","nodeType":"VariableDeclaration","scope":169,"src":"657:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":139,"name":"uint256","nodeType":"ElementaryTypeName","src":"657:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":142,"mutability":"mutable","name":"b","nameLocation":"676:1:2","nodeType":"VariableDeclaration","scope":169,"src":"668:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":141,"name":"uint256","nodeType":"ElementaryTypeName","src":"668:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"656:22:2"},"returnParameters":{"id":148,"nodeType":"ParameterList","parameters":[{"constant":false,"id":145,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":169,"src":"702:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":144,"name":"bool","nodeType":"ElementaryTypeName","src":"702:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":147,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":169,"src":"708:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":146,"name":"uint256","nodeType":"ElementaryTypeName","src":"708:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"701:15:2"},"scope":446,"src":"641:216:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":196,"nodeType":"Block","src":"1078:113:2","statements":[{"id":195,"nodeType":"UncheckedBlock","src":"1088:97:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":181,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":174,"src":"1116:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":182,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":172,"src":"1120:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1116:5:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":188,"nodeType":"IfStatement","src":"1112:28:2","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":184,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1131:5:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":185,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1138:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":186,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1130:10:2","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":180,"id":187,"nodeType":"Return","src":"1123:17:2"}},{"expression":{"components":[{"hexValue":"74727565","id":189,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1162:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":190,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":172,"src":"1168:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":191,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":174,"src":"1172:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1168:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":193,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1161:13:2","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":180,"id":194,"nodeType":"Return","src":"1154:20:2"}]}]},"documentation":{"id":170,"nodeType":"StructuredDocumentation","src":"863:134:2","text":" @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"},"id":197,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"1011:6:2","nodeType":"FunctionDefinition","parameters":{"id":175,"nodeType":"ParameterList","parameters":[{"constant":false,"id":172,"mutability":"mutable","name":"a","nameLocation":"1026:1:2","nodeType":"VariableDeclaration","scope":197,"src":"1018:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":171,"name":"uint256","nodeType":"ElementaryTypeName","src":"1018:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":174,"mutability":"mutable","name":"b","nameLocation":"1037:1:2","nodeType":"VariableDeclaration","scope":197,"src":"1029:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":173,"name":"uint256","nodeType":"ElementaryTypeName","src":"1029:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1017:22:2"},"returnParameters":{"id":180,"nodeType":"ParameterList","parameters":[{"constant":false,"id":177,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":197,"src":"1063:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":176,"name":"bool","nodeType":"ElementaryTypeName","src":"1063:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":179,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":197,"src":"1069:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":178,"name":"uint256","nodeType":"ElementaryTypeName","src":"1069:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1062:15:2"},"scope":446,"src":"1002:189:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":238,"nodeType":"Block","src":"1415:417:2","statements":[{"id":237,"nodeType":"UncheckedBlock","src":"1425:401:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":209,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":200,"src":"1683:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":210,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1688:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1683:6:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":216,"nodeType":"IfStatement","src":"1679:28:2","trueBody":{"expression":{"components":[{"hexValue":"74727565","id":212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1699:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"hexValue":"30","id":213,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1705:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":214,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1698:9:2","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":208,"id":215,"nodeType":"Return","src":"1691:16:2"}},{"assignments":[218],"declarations":[{"constant":false,"id":218,"mutability":"mutable","name":"c","nameLocation":"1729:1:2","nodeType":"VariableDeclaration","scope":237,"src":"1721:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":217,"name":"uint256","nodeType":"ElementaryTypeName","src":"1721:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":222,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":219,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":200,"src":"1733:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":220,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":202,"src":"1737:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1733:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1721:17:2"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":223,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":218,"src":"1756:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":224,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":200,"src":"1760:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1756:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":226,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":202,"src":"1765:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1756:10:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":232,"nodeType":"IfStatement","src":"1752:33:2","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":228,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1776:5:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":229,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1783:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":230,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1775:10:2","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":208,"id":231,"nodeType":"Return","src":"1768:17:2"}},{"expression":{"components":[{"hexValue":"74727565","id":233,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1807:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":234,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":218,"src":"1813:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":235,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1806:9:2","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":208,"id":236,"nodeType":"Return","src":"1799:16:2"}]}]},"documentation":{"id":198,"nodeType":"StructuredDocumentation","src":"1197:137:2","text":" @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"},"id":239,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"1348:6:2","nodeType":"FunctionDefinition","parameters":{"id":203,"nodeType":"ParameterList","parameters":[{"constant":false,"id":200,"mutability":"mutable","name":"a","nameLocation":"1363:1:2","nodeType":"VariableDeclaration","scope":239,"src":"1355:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":199,"name":"uint256","nodeType":"ElementaryTypeName","src":"1355:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":202,"mutability":"mutable","name":"b","nameLocation":"1374:1:2","nodeType":"VariableDeclaration","scope":239,"src":"1366:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":201,"name":"uint256","nodeType":"ElementaryTypeName","src":"1366:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1354:22:2"},"returnParameters":{"id":208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":205,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":239,"src":"1400:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":204,"name":"bool","nodeType":"ElementaryTypeName","src":"1400:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":207,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":239,"src":"1406:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":206,"name":"uint256","nodeType":"ElementaryTypeName","src":"1406:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1399:15:2"},"scope":446,"src":"1339:493:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":266,"nodeType":"Block","src":"2057:114:2","statements":[{"id":265,"nodeType":"UncheckedBlock","src":"2067:98:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":251,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":244,"src":"2095:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":252,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2100:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2095:6:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":258,"nodeType":"IfStatement","src":"2091:29:2","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":254,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2111:5:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":255,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2118:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":256,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2110:10:2","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":250,"id":257,"nodeType":"Return","src":"2103:17:2"}},{"expression":{"components":[{"hexValue":"74727565","id":259,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2142:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":260,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":242,"src":"2148:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":261,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":244,"src":"2152:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2148:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":263,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2141:13:2","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":250,"id":264,"nodeType":"Return","src":"2134:20:2"}]}]},"documentation":{"id":240,"nodeType":"StructuredDocumentation","src":"1838:138:2","text":" @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"},"id":267,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"1990:6:2","nodeType":"FunctionDefinition","parameters":{"id":245,"nodeType":"ParameterList","parameters":[{"constant":false,"id":242,"mutability":"mutable","name":"a","nameLocation":"2005:1:2","nodeType":"VariableDeclaration","scope":267,"src":"1997:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":241,"name":"uint256","nodeType":"ElementaryTypeName","src":"1997:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":244,"mutability":"mutable","name":"b","nameLocation":"2016:1:2","nodeType":"VariableDeclaration","scope":267,"src":"2008:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":243,"name":"uint256","nodeType":"ElementaryTypeName","src":"2008:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1996:22:2"},"returnParameters":{"id":250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":247,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":267,"src":"2042:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":246,"name":"bool","nodeType":"ElementaryTypeName","src":"2042:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":249,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":267,"src":"2048:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":248,"name":"uint256","nodeType":"ElementaryTypeName","src":"2048:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2041:15:2"},"scope":446,"src":"1981:190:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":294,"nodeType":"Block","src":"2406:114:2","statements":[{"id":293,"nodeType":"UncheckedBlock","src":"2416:98:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":279,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":272,"src":"2444:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":280,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2449:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2444:6:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":286,"nodeType":"IfStatement","src":"2440:29:2","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":282,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2460:5:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":283,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2467:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":284,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2459:10:2","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":278,"id":285,"nodeType":"Return","src":"2452:17:2"}},{"expression":{"components":[{"hexValue":"74727565","id":287,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2491:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":288,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":270,"src":"2497:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":289,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":272,"src":"2501:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2497:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":291,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2490:13:2","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":278,"id":292,"nodeType":"Return","src":"2483:20:2"}]}]},"documentation":{"id":268,"nodeType":"StructuredDocumentation","src":"2177:148:2","text":" @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"},"id":295,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"2339:6:2","nodeType":"FunctionDefinition","parameters":{"id":273,"nodeType":"ParameterList","parameters":[{"constant":false,"id":270,"mutability":"mutable","name":"a","nameLocation":"2354:1:2","nodeType":"VariableDeclaration","scope":295,"src":"2346:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":269,"name":"uint256","nodeType":"ElementaryTypeName","src":"2346:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":272,"mutability":"mutable","name":"b","nameLocation":"2365:1:2","nodeType":"VariableDeclaration","scope":295,"src":"2357:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":271,"name":"uint256","nodeType":"ElementaryTypeName","src":"2357:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2345:22:2"},"returnParameters":{"id":278,"nodeType":"ParameterList","parameters":[{"constant":false,"id":275,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":295,"src":"2391:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":274,"name":"bool","nodeType":"ElementaryTypeName","src":"2391:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":277,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":295,"src":"2397:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":276,"name":"uint256","nodeType":"ElementaryTypeName","src":"2397:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2390:15:2"},"scope":446,"src":"2330:190:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":309,"nodeType":"Block","src":"2822:29:2","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":305,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":298,"src":"2839:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":306,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":300,"src":"2843:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2839:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":304,"id":308,"nodeType":"Return","src":"2832:12:2"}]},"documentation":{"id":296,"nodeType":"StructuredDocumentation","src":"2526:224:2","text":" @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."},"id":310,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"2764:3:2","nodeType":"FunctionDefinition","parameters":{"id":301,"nodeType":"ParameterList","parameters":[{"constant":false,"id":298,"mutability":"mutable","name":"a","nameLocation":"2776:1:2","nodeType":"VariableDeclaration","scope":310,"src":"2768:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":297,"name":"uint256","nodeType":"ElementaryTypeName","src":"2768:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":300,"mutability":"mutable","name":"b","nameLocation":"2787:1:2","nodeType":"VariableDeclaration","scope":310,"src":"2779:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":299,"name":"uint256","nodeType":"ElementaryTypeName","src":"2779:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2767:22:2"},"returnParameters":{"id":304,"nodeType":"ParameterList","parameters":[{"constant":false,"id":303,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":310,"src":"2813:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":302,"name":"uint256","nodeType":"ElementaryTypeName","src":"2813:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2812:9:2"},"scope":446,"src":"2755:96:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":324,"nodeType":"Block","src":"3189:29:2","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":320,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":313,"src":"3206:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":321,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"3210:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3206:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":319,"id":323,"nodeType":"Return","src":"3199:12:2"}]},"documentation":{"id":311,"nodeType":"StructuredDocumentation","src":"2857:260:2","text":" @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."},"id":325,"implemented":true,"kind":"function","modifiers":[],"name":"sub","nameLocation":"3131:3:2","nodeType":"FunctionDefinition","parameters":{"id":316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":313,"mutability":"mutable","name":"a","nameLocation":"3143:1:2","nodeType":"VariableDeclaration","scope":325,"src":"3135:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":312,"name":"uint256","nodeType":"ElementaryTypeName","src":"3135:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":315,"mutability":"mutable","name":"b","nameLocation":"3154:1:2","nodeType":"VariableDeclaration","scope":325,"src":"3146:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":314,"name":"uint256","nodeType":"ElementaryTypeName","src":"3146:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3134:22:2"},"returnParameters":{"id":319,"nodeType":"ParameterList","parameters":[{"constant":false,"id":318,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":325,"src":"3180:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":317,"name":"uint256","nodeType":"ElementaryTypeName","src":"3180:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3179:9:2"},"scope":446,"src":"3122:96:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":339,"nodeType":"Block","src":"3532:29:2","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":335,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":328,"src":"3549:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":336,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":330,"src":"3553:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3549:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":334,"id":338,"nodeType":"Return","src":"3542:12:2"}]},"documentation":{"id":326,"nodeType":"StructuredDocumentation","src":"3224:236:2","text":" @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."},"id":340,"implemented":true,"kind":"function","modifiers":[],"name":"mul","nameLocation":"3474:3:2","nodeType":"FunctionDefinition","parameters":{"id":331,"nodeType":"ParameterList","parameters":[{"constant":false,"id":328,"mutability":"mutable","name":"a","nameLocation":"3486:1:2","nodeType":"VariableDeclaration","scope":340,"src":"3478:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":327,"name":"uint256","nodeType":"ElementaryTypeName","src":"3478:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":330,"mutability":"mutable","name":"b","nameLocation":"3497:1:2","nodeType":"VariableDeclaration","scope":340,"src":"3489:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":329,"name":"uint256","nodeType":"ElementaryTypeName","src":"3489:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3477:22:2"},"returnParameters":{"id":334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":333,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":340,"src":"3523:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":332,"name":"uint256","nodeType":"ElementaryTypeName","src":"3523:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3522:9:2"},"scope":446,"src":"3465:96:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":354,"nodeType":"Block","src":"3917:29:2","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":350,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":343,"src":"3934:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":351,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":345,"src":"3938:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3934:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":349,"id":353,"nodeType":"Return","src":"3927:12:2"}]},"documentation":{"id":341,"nodeType":"StructuredDocumentation","src":"3567:278:2","text":" @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."},"id":355,"implemented":true,"kind":"function","modifiers":[],"name":"div","nameLocation":"3859:3:2","nodeType":"FunctionDefinition","parameters":{"id":346,"nodeType":"ParameterList","parameters":[{"constant":false,"id":343,"mutability":"mutable","name":"a","nameLocation":"3871:1:2","nodeType":"VariableDeclaration","scope":355,"src":"3863:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":342,"name":"uint256","nodeType":"ElementaryTypeName","src":"3863:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":345,"mutability":"mutable","name":"b","nameLocation":"3882:1:2","nodeType":"VariableDeclaration","scope":355,"src":"3874:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":344,"name":"uint256","nodeType":"ElementaryTypeName","src":"3874:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3862:22:2"},"returnParameters":{"id":349,"nodeType":"ParameterList","parameters":[{"constant":false,"id":348,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":355,"src":"3908:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":347,"name":"uint256","nodeType":"ElementaryTypeName","src":"3908:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3907:9:2"},"scope":446,"src":"3850:96:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":369,"nodeType":"Block","src":"4466:29:2","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":365,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":358,"src":"4483:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":366,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":360,"src":"4487:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4483:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":364,"id":368,"nodeType":"Return","src":"4476:12:2"}]},"documentation":{"id":356,"nodeType":"StructuredDocumentation","src":"3952:442:2","text":" @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."},"id":370,"implemented":true,"kind":"function","modifiers":[],"name":"mod","nameLocation":"4408:3:2","nodeType":"FunctionDefinition","parameters":{"id":361,"nodeType":"ParameterList","parameters":[{"constant":false,"id":358,"mutability":"mutable","name":"a","nameLocation":"4420:1:2","nodeType":"VariableDeclaration","scope":370,"src":"4412:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":357,"name":"uint256","nodeType":"ElementaryTypeName","src":"4412:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":360,"mutability":"mutable","name":"b","nameLocation":"4431:1:2","nodeType":"VariableDeclaration","scope":370,"src":"4423:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":359,"name":"uint256","nodeType":"ElementaryTypeName","src":"4423:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4411:22:2"},"returnParameters":{"id":364,"nodeType":"ParameterList","parameters":[{"constant":false,"id":363,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":370,"src":"4457:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":362,"name":"uint256","nodeType":"ElementaryTypeName","src":"4457:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4456:9:2"},"scope":446,"src":"4399:96:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":394,"nodeType":"Block","src":"5084:106:2","statements":[{"id":393,"nodeType":"UncheckedBlock","src":"5094:90:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":383,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":375,"src":"5126:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":384,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":373,"src":"5131:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5126:6:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":386,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":377,"src":"5134:12:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":382,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5118:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":387,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5118:29:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":388,"nodeType":"ExpressionStatement","src":"5118:29:2"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":389,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":373,"src":"5168:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":390,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":375,"src":"5172:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5168:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":381,"id":392,"nodeType":"Return","src":"5161:12:2"}]}]},"documentation":{"id":371,"nodeType":"StructuredDocumentation","src":"4501:453:2","text":" @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."},"id":395,"implemented":true,"kind":"function","modifiers":[],"name":"sub","nameLocation":"4968:3:2","nodeType":"FunctionDefinition","parameters":{"id":378,"nodeType":"ParameterList","parameters":[{"constant":false,"id":373,"mutability":"mutable","name":"a","nameLocation":"4989:1:2","nodeType":"VariableDeclaration","scope":395,"src":"4981:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":372,"name":"uint256","nodeType":"ElementaryTypeName","src":"4981:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":375,"mutability":"mutable","name":"b","nameLocation":"5008:1:2","nodeType":"VariableDeclaration","scope":395,"src":"5000:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":374,"name":"uint256","nodeType":"ElementaryTypeName","src":"5000:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":377,"mutability":"mutable","name":"errorMessage","nameLocation":"5033:12:2","nodeType":"VariableDeclaration","scope":395,"src":"5019:26:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":376,"name":"string","nodeType":"ElementaryTypeName","src":"5019:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4971:80:2"},"returnParameters":{"id":381,"nodeType":"ParameterList","parameters":[{"constant":false,"id":380,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":395,"src":"5075:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":379,"name":"uint256","nodeType":"ElementaryTypeName","src":"5075:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5074:9:2"},"scope":446,"src":"4959:231:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":419,"nodeType":"Block","src":"5799:105:2","statements":[{"id":418,"nodeType":"UncheckedBlock","src":"5809:89:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":408,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":400,"src":"5841:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5845:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5841:5:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":411,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":402,"src":"5848:12:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":407,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5833:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":412,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5833:28:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":413,"nodeType":"ExpressionStatement","src":"5833:28:2"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":414,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":398,"src":"5882:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":415,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":400,"src":"5886:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5882:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":406,"id":417,"nodeType":"Return","src":"5875:12:2"}]}]},"documentation":{"id":396,"nodeType":"StructuredDocumentation","src":"5196:473:2","text":" @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."},"id":420,"implemented":true,"kind":"function","modifiers":[],"name":"div","nameLocation":"5683:3:2","nodeType":"FunctionDefinition","parameters":{"id":403,"nodeType":"ParameterList","parameters":[{"constant":false,"id":398,"mutability":"mutable","name":"a","nameLocation":"5704:1:2","nodeType":"VariableDeclaration","scope":420,"src":"5696:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":397,"name":"uint256","nodeType":"ElementaryTypeName","src":"5696:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":400,"mutability":"mutable","name":"b","nameLocation":"5723:1:2","nodeType":"VariableDeclaration","scope":420,"src":"5715:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":399,"name":"uint256","nodeType":"ElementaryTypeName","src":"5715:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":402,"mutability":"mutable","name":"errorMessage","nameLocation":"5748:12:2","nodeType":"VariableDeclaration","scope":420,"src":"5734:26:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":401,"name":"string","nodeType":"ElementaryTypeName","src":"5734:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5686:80:2"},"returnParameters":{"id":406,"nodeType":"ParameterList","parameters":[{"constant":false,"id":405,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":420,"src":"5790:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":404,"name":"uint256","nodeType":"ElementaryTypeName","src":"5790:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5789:9:2"},"scope":446,"src":"5674:230:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":444,"nodeType":"Block","src":"6675:105:2","statements":[{"id":443,"nodeType":"UncheckedBlock","src":"6685:89:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":433,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":425,"src":"6717:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":434,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6721:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6717:5:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":436,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":427,"src":"6724:12:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":432,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6709:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":437,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6709:28:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":438,"nodeType":"ExpressionStatement","src":"6709:28:2"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":439,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":423,"src":"6758:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":440,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":425,"src":"6762:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6758:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":431,"id":442,"nodeType":"Return","src":"6751:12:2"}]}]},"documentation":{"id":421,"nodeType":"StructuredDocumentation","src":"5910:635:2","text":" @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."},"id":445,"implemented":true,"kind":"function","modifiers":[],"name":"mod","nameLocation":"6559:3:2","nodeType":"FunctionDefinition","parameters":{"id":428,"nodeType":"ParameterList","parameters":[{"constant":false,"id":423,"mutability":"mutable","name":"a","nameLocation":"6580:1:2","nodeType":"VariableDeclaration","scope":445,"src":"6572:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":422,"name":"uint256","nodeType":"ElementaryTypeName","src":"6572:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":425,"mutability":"mutable","name":"b","nameLocation":"6599:1:2","nodeType":"VariableDeclaration","scope":445,"src":"6591:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":424,"name":"uint256","nodeType":"ElementaryTypeName","src":"6591:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":427,"mutability":"mutable","name":"errorMessage","nameLocation":"6624:12:2","nodeType":"VariableDeclaration","scope":445,"src":"6610:26:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":426,"name":"string","nodeType":"ElementaryTypeName","src":"6610:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6562:80:2"},"returnParameters":{"id":431,"nodeType":"ParameterList","parameters":[{"constant":false,"id":430,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":445,"src":"6666:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":429,"name":"uint256","nodeType":"ElementaryTypeName","src":"6666:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6665:9:2"},"scope":446,"src":"6550:230:2","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":447,"src":"482:6300:2","usedErrors":[]}],"src":"107:6676:2"},"id":2},"contracts/AccessControl/Context.sol":{"ast":{"absolutePath":"contracts/AccessControl/Context.sol","exportedSymbols":{"Context":[469]},"id":470,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":448,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"33:23:3"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":469,"linearizedBaseContracts":[469],"name":"Context","nameLocation":"576:7:3","nodeType":"ContractDefinition","nodes":[{"body":{"id":456,"nodeType":"Block","src":"652:34:3","statements":[{"expression":{"expression":{"id":453,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"669:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"673:6:3","memberName":"sender","nodeType":"MemberAccess","src":"669:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":452,"id":455,"nodeType":"Return","src":"662:17:3"}]},"id":457,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"599:10:3","nodeType":"FunctionDefinition","parameters":{"id":449,"nodeType":"ParameterList","parameters":[],"src":"609:2:3"},"returnParameters":{"id":452,"nodeType":"ParameterList","parameters":[{"constant":false,"id":451,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":457,"src":"643:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":450,"name":"address","nodeType":"ElementaryTypeName","src":"643:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"642:9:3"},"scope":469,"src":"590:96:3","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":467,"nodeType":"Block","src":"759:165:3","statements":[{"expression":{"id":462,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"769:4:3","typeDescriptions":{"typeIdentifier":"t_contract$_Context_$469","typeString":"contract Context"}},"id":463,"nodeType":"ExpressionStatement","src":"769:4:3"},{"expression":{"expression":{"id":464,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"909:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"913:4:3","memberName":"data","nodeType":"MemberAccess","src":"909:8:3","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":461,"id":466,"nodeType":"Return","src":"902:15:3"}]},"id":468,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"701:8:3","nodeType":"FunctionDefinition","parameters":{"id":458,"nodeType":"ParameterList","parameters":[],"src":"709:2:3"},"returnParameters":{"id":461,"nodeType":"ParameterList","parameters":[{"constant":false,"id":460,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":468,"src":"743:14:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":459,"name":"bytes","nodeType":"ElementaryTypeName","src":"743:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"742:16:3"},"scope":469,"src":"692:232:3","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":470,"src":"558:368:3","usedErrors":[]}],"src":"33:893:3"},"id":3},"contracts/AccessControl/ERC20.sol":{"ast":{"absolutePath":"contracts/AccessControl/ERC20.sol","exportedSymbols":{"Context":[469],"ERC20":[896],"IERC20":[1104],"SafeMath":[1498]},"id":897,"nodeType":"SourceUnit","nodes":[{"id":471,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"0:23:4"},{"absolutePath":"contracts/AccessControl/Context.sol","file":"./Context.sol","id":472,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":897,"sourceUnit":470,"src":"25:23:4","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/AccessControl/IERC20.sol","file":"./IERC20.sol","id":473,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":897,"sourceUnit":1105,"src":"49:22:4","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/AccessControl/SafeMath.sol","file":"./SafeMath.sol","id":474,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":897,"sourceUnit":1499,"src":"72:24:4","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":476,"name":"Context","nameLocations":["1269:7:4"],"nodeType":"IdentifierPath","referencedDeclaration":469,"src":"1269:7:4"},"id":477,"nodeType":"InheritanceSpecifier","src":"1269:7:4"},{"baseName":{"id":478,"name":"IERC20","nameLocations":["1278:6:4"],"nodeType":"IdentifierPath","referencedDeclaration":1104,"src":"1278:6:4"},"id":479,"nodeType":"InheritanceSpecifier","src":"1278:6:4"}],"canonicalName":"ERC20","contractDependencies":[],"contractKind":"contract","documentation":{"id":475,"nodeType":"StructuredDocumentation","src":"98:1152:4","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20Mintable}.\n TIP: For a detailed writeup see our guide\n https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin guidelines: functions revert instead\n of returning `false` on failure. This behavior is nonetheless conventional\n and does not conflict with the expectations of ERC20 applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."},"fullyImplemented":true,"id":896,"linearizedBaseContracts":[896,1104,469],"name":"ERC20","nameLocation":"1260:5:4","nodeType":"ContractDefinition","nodes":[{"global":false,"id":482,"libraryName":{"id":480,"name":"SafeMath","nameLocations":["1297:8:4"],"nodeType":"IdentifierPath","referencedDeclaration":1498,"src":"1297:8:4"},"nodeType":"UsingForDirective","src":"1291:27:4","typeName":{"id":481,"name":"uint256","nodeType":"ElementaryTypeName","src":"1310:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":false,"id":486,"mutability":"mutable","name":"_balances","nameLocation":"1361:9:4","nodeType":"VariableDeclaration","scope":896,"src":"1324:46:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":485,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":483,"name":"address","nodeType":"ElementaryTypeName","src":"1333:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1324:28:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":484,"name":"uint256","nodeType":"ElementaryTypeName","src":"1344:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":492,"mutability":"mutable","name":"_allowances","nameLocation":"1435:11:4","nodeType":"VariableDeclaration","scope":896,"src":"1377:69:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":491,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":487,"name":"address","nodeType":"ElementaryTypeName","src":"1386:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1377:49:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":490,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":488,"name":"address","nodeType":"ElementaryTypeName","src":"1406:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1397:28:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":489,"name":"uint256","nodeType":"ElementaryTypeName","src":"1417:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":494,"mutability":"mutable","name":"_totalSupply","nameLocation":"1469:12:4","nodeType":"VariableDeclaration","scope":896,"src":"1453:28:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":493,"name":"uint256","nodeType":"ElementaryTypeName","src":"1453:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"baseFunctions":[1035],"body":{"id":502,"nodeType":"Block","src":"1595:36:4","statements":[{"expression":{"id":500,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":494,"src":"1612:12:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":499,"id":501,"nodeType":"Return","src":"1605:19:4"}]},"documentation":{"id":495,"nodeType":"StructuredDocumentation","src":"1488:49:4","text":" @dev See {IERC20-totalSupply}."},"functionSelector":"18160ddd","id":503,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"1551:11:4","nodeType":"FunctionDefinition","parameters":{"id":496,"nodeType":"ParameterList","parameters":[],"src":"1562:2:4"},"returnParameters":{"id":499,"nodeType":"ParameterList","parameters":[{"constant":false,"id":498,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":503,"src":"1586:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":497,"name":"uint256","nodeType":"ElementaryTypeName","src":"1586:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1585:9:4"},"scope":896,"src":"1542:89:4","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[1043],"body":{"id":515,"nodeType":"Block","src":"1755:42:4","statements":[{"expression":{"baseExpression":{"id":511,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":486,"src":"1772:9:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":513,"indexExpression":{"id":512,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":506,"src":"1782:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1772:18:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":510,"id":514,"nodeType":"Return","src":"1765:25:4"}]},"documentation":{"id":504,"nodeType":"StructuredDocumentation","src":"1637:47:4","text":" @dev See {IERC20-balanceOf}."},"functionSelector":"70a08231","id":516,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"1698:9:4","nodeType":"FunctionDefinition","parameters":{"id":507,"nodeType":"ParameterList","parameters":[{"constant":false,"id":506,"mutability":"mutable","name":"account","nameLocation":"1716:7:4","nodeType":"VariableDeclaration","scope":516,"src":"1708:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":505,"name":"address","nodeType":"ElementaryTypeName","src":"1708:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1707:17:4"},"returnParameters":{"id":510,"nodeType":"ParameterList","parameters":[{"constant":false,"id":509,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":516,"src":"1746:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":508,"name":"uint256","nodeType":"ElementaryTypeName","src":"1746:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1745:9:4"},"scope":896,"src":"1689:108:4","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[1053],"body":{"id":535,"nodeType":"Block","src":"2075:80:4","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":527,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":457,"src":"2095:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":528,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2095:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":529,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":519,"src":"2109:9:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":530,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":521,"src":"2120:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":526,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":727,"src":"2085:9:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":531,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2085:42:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":532,"nodeType":"ExpressionStatement","src":"2085:42:4"},{"expression":{"hexValue":"74727565","id":533,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2144:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":525,"id":534,"nodeType":"Return","src":"2137:11:4"}]},"documentation":{"id":517,"nodeType":"StructuredDocumentation","src":"1803:192:4","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `recipient` cannot be the zero address.\n - the caller must have a balance of at least `amount`."},"functionSelector":"a9059cbb","id":536,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"2009:8:4","nodeType":"FunctionDefinition","parameters":{"id":522,"nodeType":"ParameterList","parameters":[{"constant":false,"id":519,"mutability":"mutable","name":"recipient","nameLocation":"2026:9:4","nodeType":"VariableDeclaration","scope":536,"src":"2018:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":518,"name":"address","nodeType":"ElementaryTypeName","src":"2018:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":521,"mutability":"mutable","name":"amount","nameLocation":"2045:6:4","nodeType":"VariableDeclaration","scope":536,"src":"2037:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":520,"name":"uint256","nodeType":"ElementaryTypeName","src":"2037:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2017:35:4"},"returnParameters":{"id":525,"nodeType":"ParameterList","parameters":[{"constant":false,"id":524,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":536,"src":"2069:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":523,"name":"bool","nodeType":"ElementaryTypeName","src":"2069:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2068:6:4"},"scope":896,"src":"2000:155:4","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[1063],"body":{"id":552,"nodeType":"Block","src":"2294:51:4","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":546,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":492,"src":"2311:11:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":548,"indexExpression":{"id":547,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":539,"src":"2323:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2311:18:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":550,"indexExpression":{"id":549,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":541,"src":"2330:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2311:27:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":545,"id":551,"nodeType":"Return","src":"2304:34:4"}]},"documentation":{"id":537,"nodeType":"StructuredDocumentation","src":"2161:47:4","text":" @dev See {IERC20-allowance}."},"functionSelector":"dd62ed3e","id":553,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"2222:9:4","nodeType":"FunctionDefinition","parameters":{"id":542,"nodeType":"ParameterList","parameters":[{"constant":false,"id":539,"mutability":"mutable","name":"owner","nameLocation":"2240:5:4","nodeType":"VariableDeclaration","scope":553,"src":"2232:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":538,"name":"address","nodeType":"ElementaryTypeName","src":"2232:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":541,"mutability":"mutable","name":"spender","nameLocation":"2255:7:4","nodeType":"VariableDeclaration","scope":553,"src":"2247:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":540,"name":"address","nodeType":"ElementaryTypeName","src":"2247:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2231:32:4"},"returnParameters":{"id":545,"nodeType":"ParameterList","parameters":[{"constant":false,"id":544,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":553,"src":"2285:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":543,"name":"uint256","nodeType":"ElementaryTypeName","src":"2285:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2284:9:4"},"scope":896,"src":"2213:132:4","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[1073],"body":{"id":572,"nodeType":"Block","src":"2555:77:4","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":564,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":457,"src":"2574:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":565,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2574:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":566,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":556,"src":"2588:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":567,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":558,"src":"2597:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":563,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":865,"src":"2565:8:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":568,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2565:39:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":569,"nodeType":"ExpressionStatement","src":"2565:39:4"},{"expression":{"hexValue":"74727565","id":570,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2621:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":562,"id":571,"nodeType":"Return","src":"2614:11:4"}]},"documentation":{"id":554,"nodeType":"StructuredDocumentation","src":"2351:127:4","text":" @dev See {IERC20-approve}.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":573,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2492:7:4","nodeType":"FunctionDefinition","parameters":{"id":559,"nodeType":"ParameterList","parameters":[{"constant":false,"id":556,"mutability":"mutable","name":"spender","nameLocation":"2508:7:4","nodeType":"VariableDeclaration","scope":573,"src":"2500:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":555,"name":"address","nodeType":"ElementaryTypeName","src":"2500:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":558,"mutability":"mutable","name":"amount","nameLocation":"2525:6:4","nodeType":"VariableDeclaration","scope":573,"src":"2517:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":557,"name":"uint256","nodeType":"ElementaryTypeName","src":"2517:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2499:33:4"},"returnParameters":{"id":562,"nodeType":"ParameterList","parameters":[{"constant":false,"id":561,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":573,"src":"2549:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":560,"name":"bool","nodeType":"ElementaryTypeName","src":"2549:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2548:6:4"},"scope":896,"src":"2483:149:4","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[1085],"body":{"id":609,"nodeType":"Block","src":"3185:205:4","statements":[{"expression":{"arguments":[{"id":586,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":576,"src":"3205:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":587,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":578,"src":"3213:9:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":588,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":580,"src":"3224:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":585,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":727,"src":"3195:9:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":589,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3195:36:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":590,"nodeType":"ExpressionStatement","src":"3195:36:4"},{"expression":{"arguments":[{"id":592,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":576,"src":"3250:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":593,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":457,"src":"3258:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":594,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3258:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":602,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":580,"src":"3310:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365","id":603,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3318:42:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330","typeString":"literal_string \"ERC20: transfer amount exceeds allowance\""},"value":"ERC20: transfer amount exceeds allowance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330","typeString":"literal_string \"ERC20: transfer amount exceeds allowance\""}],"expression":{"baseExpression":{"baseExpression":{"id":595,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":492,"src":"3272:11:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":597,"indexExpression":{"id":596,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":576,"src":"3284:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3272:19:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":600,"indexExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":598,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":457,"src":"3292:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":599,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3292:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3272:33:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3306:3:4","memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":1376,"src":"3272:37:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256,string memory) pure returns (uint256)"}},"id":604,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3272:89:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":591,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":865,"src":"3241:8:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":605,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3241:121:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":606,"nodeType":"ExpressionStatement","src":"3241:121:4"},{"expression":{"hexValue":"74727565","id":607,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3379:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":584,"id":608,"nodeType":"Return","src":"3372:11:4"}]},"documentation":{"id":574,"nodeType":"StructuredDocumentation","src":"2638:447:4","text":" @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20};\n Requirements:\n - `sender` and `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`.\n - the caller must have allowance for `sender`'s tokens of at least\n `amount`."},"functionSelector":"23b872dd","id":610,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"3099:12:4","nodeType":"FunctionDefinition","parameters":{"id":581,"nodeType":"ParameterList","parameters":[{"constant":false,"id":576,"mutability":"mutable","name":"sender","nameLocation":"3120:6:4","nodeType":"VariableDeclaration","scope":610,"src":"3112:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":575,"name":"address","nodeType":"ElementaryTypeName","src":"3112:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":578,"mutability":"mutable","name":"recipient","nameLocation":"3136:9:4","nodeType":"VariableDeclaration","scope":610,"src":"3128:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":577,"name":"address","nodeType":"ElementaryTypeName","src":"3128:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":580,"mutability":"mutable","name":"amount","nameLocation":"3155:6:4","nodeType":"VariableDeclaration","scope":610,"src":"3147:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":579,"name":"uint256","nodeType":"ElementaryTypeName","src":"3147:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3111:51:4"},"returnParameters":{"id":584,"nodeType":"ParameterList","parameters":[{"constant":false,"id":583,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":610,"src":"3179:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":582,"name":"bool","nodeType":"ElementaryTypeName","src":"3179:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3178:6:4"},"scope":896,"src":"3090:300:4","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":637,"nodeType":"Block","src":"3871:121:4","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":621,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":457,"src":"3890:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":622,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3890:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":623,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":613,"src":"3904:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":631,"name":"addedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":615,"src":"3952:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"baseExpression":{"id":624,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":492,"src":"3913:11:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":627,"indexExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":625,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":457,"src":"3925:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":626,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3925:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3913:25:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":629,"indexExpression":{"id":628,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":613,"src":"3939:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3913:34:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3948:3:4","memberName":"add","nodeType":"MemberAccess","referencedDeclaration":1331,"src":"3913:38:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":632,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3913:50:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":620,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":865,"src":"3881:8:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":633,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3881:83:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":634,"nodeType":"ExpressionStatement","src":"3881:83:4"},{"expression":{"hexValue":"74727565","id":635,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3981:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":619,"id":636,"nodeType":"Return","src":"3974:11:4"}]},"documentation":{"id":611,"nodeType":"StructuredDocumentation","src":"3396:384:4","text":" @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"39509351","id":638,"implemented":true,"kind":"function","modifiers":[],"name":"increaseAllowance","nameLocation":"3794:17:4","nodeType":"FunctionDefinition","parameters":{"id":616,"nodeType":"ParameterList","parameters":[{"constant":false,"id":613,"mutability":"mutable","name":"spender","nameLocation":"3820:7:4","nodeType":"VariableDeclaration","scope":638,"src":"3812:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":612,"name":"address","nodeType":"ElementaryTypeName","src":"3812:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":615,"mutability":"mutable","name":"addedValue","nameLocation":"3837:10:4","nodeType":"VariableDeclaration","scope":638,"src":"3829:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":614,"name":"uint256","nodeType":"ElementaryTypeName","src":"3829:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3811:37:4"},"returnParameters":{"id":619,"nodeType":"ParameterList","parameters":[{"constant":false,"id":618,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":638,"src":"3865:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":617,"name":"bool","nodeType":"ElementaryTypeName","src":"3865:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3864:6:4"},"scope":896,"src":"3785:207:4","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":666,"nodeType":"Block","src":"4570:167:4","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":649,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":457,"src":"4589:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":650,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4589:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":651,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":641,"src":"4603:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":659,"name":"subtractedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":643,"src":"4651:15:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f","id":660,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4668:39:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","typeString":"literal_string \"ERC20: decreased allowance below zero\""},"value":"ERC20: decreased allowance below zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","typeString":"literal_string \"ERC20: decreased allowance below zero\""}],"expression":{"baseExpression":{"baseExpression":{"id":652,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":492,"src":"4612:11:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":655,"indexExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":653,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":457,"src":"4624:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":654,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4624:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4612:25:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":657,"indexExpression":{"id":656,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":641,"src":"4638:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4612:34:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4647:3:4","memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":1376,"src":"4612:38:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256,string memory) pure returns (uint256)"}},"id":661,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4612:96:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":648,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":865,"src":"4580:8:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":662,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4580:129:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":663,"nodeType":"ExpressionStatement","src":"4580:129:4"},{"expression":{"hexValue":"74727565","id":664,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4726:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":647,"id":665,"nodeType":"Return","src":"4719:11:4"}]},"documentation":{"id":639,"nodeType":"StructuredDocumentation","src":"3998:476:4","text":" @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."},"functionSelector":"a457c2d7","id":667,"implemented":true,"kind":"function","modifiers":[],"name":"decreaseAllowance","nameLocation":"4488:17:4","nodeType":"FunctionDefinition","parameters":{"id":644,"nodeType":"ParameterList","parameters":[{"constant":false,"id":641,"mutability":"mutable","name":"spender","nameLocation":"4514:7:4","nodeType":"VariableDeclaration","scope":667,"src":"4506:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":640,"name":"address","nodeType":"ElementaryTypeName","src":"4506:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":643,"mutability":"mutable","name":"subtractedValue","nameLocation":"4531:15:4","nodeType":"VariableDeclaration","scope":667,"src":"4523:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":642,"name":"uint256","nodeType":"ElementaryTypeName","src":"4523:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4505:42:4"},"returnParameters":{"id":647,"nodeType":"ParameterList","parameters":[{"constant":false,"id":646,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":667,"src":"4564:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":645,"name":"bool","nodeType":"ElementaryTypeName","src":"4564:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4563:6:4"},"scope":896,"src":"4479:258:4","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":726,"nodeType":"Block","src":"5290:385:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":678,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":670,"src":"5308:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":681,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5326:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":680,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5318:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":679,"name":"address","nodeType":"ElementaryTypeName","src":"5318:7:4","typeDescriptions":{}}},"id":682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5318:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5308:20:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373","id":684,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5330:39:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","typeString":"literal_string \"ERC20: transfer from the zero address\""},"value":"ERC20: transfer from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","typeString":"literal_string \"ERC20: transfer from the zero address\""}],"id":677,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5300:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":685,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5300:70:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":686,"nodeType":"ExpressionStatement","src":"5300:70:4"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":688,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":672,"src":"5388:9:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5409:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":690,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5401:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":689,"name":"address","nodeType":"ElementaryTypeName","src":"5401:7:4","typeDescriptions":{}}},"id":692,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5401:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5388:23:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e7366657220746f20746865207a65726f2061646472657373","id":694,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5413:37:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","typeString":"literal_string \"ERC20: transfer to the zero address\""},"value":"ERC20: transfer to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","typeString":"literal_string \"ERC20: transfer to the zero address\""}],"id":687,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5380:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":695,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5380:71:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":696,"nodeType":"ExpressionStatement","src":"5380:71:4"},{"expression":{"id":707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":697,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":486,"src":"5462:9:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":699,"indexExpression":{"id":698,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":670,"src":"5472:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5462:17:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":704,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":674,"src":"5504:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365","id":705,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5512:40:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","typeString":"literal_string \"ERC20: transfer amount exceeds balance\""},"value":"ERC20: transfer amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","typeString":"literal_string \"ERC20: transfer amount exceeds balance\""}],"expression":{"baseExpression":{"id":700,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":486,"src":"5482:9:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":702,"indexExpression":{"id":701,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":670,"src":"5492:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5482:17:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5500:3:4","memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":1376,"src":"5482:21:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256,string memory) pure returns (uint256)"}},"id":706,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5482:71:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5462:91:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":708,"nodeType":"ExpressionStatement","src":"5462:91:4"},{"expression":{"id":718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":709,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":486,"src":"5563:9:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":711,"indexExpression":{"id":710,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":672,"src":"5573:9:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5563:20:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":716,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":674,"src":"5611:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"id":712,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":486,"src":"5586:9:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":714,"indexExpression":{"id":713,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":672,"src":"5596:9:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5586:20:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5607:3:4","memberName":"add","nodeType":"MemberAccess","referencedDeclaration":1331,"src":"5586:24:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":717,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5586:32:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5563:55:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":719,"nodeType":"ExpressionStatement","src":"5563:55:4"},{"eventCall":{"arguments":[{"id":721,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":670,"src":"5642:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":722,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":672,"src":"5650:9:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":723,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":674,"src":"5661:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":720,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1094,"src":"5633:8:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":724,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5633:35:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":725,"nodeType":"EmitStatement","src":"5628:40:4"}]},"documentation":{"id":668,"nodeType":"StructuredDocumentation","src":"4743:463:4","text":" @dev Moves tokens `amount` from `sender` to `recipient`.\n This is internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `sender` cannot be the zero address.\n - `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`."},"id":727,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"5220:9:4","nodeType":"FunctionDefinition","parameters":{"id":675,"nodeType":"ParameterList","parameters":[{"constant":false,"id":670,"mutability":"mutable","name":"sender","nameLocation":"5238:6:4","nodeType":"VariableDeclaration","scope":727,"src":"5230:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":669,"name":"address","nodeType":"ElementaryTypeName","src":"5230:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":672,"mutability":"mutable","name":"recipient","nameLocation":"5254:9:4","nodeType":"VariableDeclaration","scope":727,"src":"5246:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":671,"name":"address","nodeType":"ElementaryTypeName","src":"5246:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":674,"mutability":"mutable","name":"amount","nameLocation":"5273:6:4","nodeType":"VariableDeclaration","scope":727,"src":"5265:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":673,"name":"uint256","nodeType":"ElementaryTypeName","src":"5265:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5229:51:4"},"returnParameters":{"id":676,"nodeType":"ParameterList","parameters":[],"src":"5290:0:4"},"scope":896,"src":"5211:464:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":772,"nodeType":"Block","src":"6002:245:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":736,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":730,"src":"6020:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":739,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6039:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":738,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6031:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":737,"name":"address","nodeType":"ElementaryTypeName","src":"6031:7:4","typeDescriptions":{}}},"id":740,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6031:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6020:21:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206d696e7420746f20746865207a65726f2061646472657373","id":742,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6043:33:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","typeString":"literal_string \"ERC20: mint to the zero address\""},"value":"ERC20: mint to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","typeString":"literal_string \"ERC20: mint to the zero address\""}],"id":735,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6012:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":743,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6012:65:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":744,"nodeType":"ExpressionStatement","src":"6012:65:4"},{"expression":{"id":750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":745,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":494,"src":"6088:12:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":748,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":732,"src":"6120:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":746,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":494,"src":"6103:12:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6116:3:4","memberName":"add","nodeType":"MemberAccess","referencedDeclaration":1331,"src":"6103:16:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":749,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6103:24:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6088:39:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":751,"nodeType":"ExpressionStatement","src":"6088:39:4"},{"expression":{"id":761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":752,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":486,"src":"6137:9:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":754,"indexExpression":{"id":753,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":730,"src":"6147:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6137:18:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":759,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":732,"src":"6181:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"id":755,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":486,"src":"6158:9:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":757,"indexExpression":{"id":756,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":730,"src":"6168:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6158:18:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6177:3:4","memberName":"add","nodeType":"MemberAccess","referencedDeclaration":1331,"src":"6158:22:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":760,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6158:30:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6137:51:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":762,"nodeType":"ExpressionStatement","src":"6137:51:4"},{"eventCall":{"arguments":[{"arguments":[{"hexValue":"30","id":766,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6220:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":765,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6212:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":764,"name":"address","nodeType":"ElementaryTypeName","src":"6212:7:4","typeDescriptions":{}}},"id":767,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6212:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":768,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":730,"src":"6224:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":769,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":732,"src":"6233:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":763,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1094,"src":"6203:8:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":770,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6203:37:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":771,"nodeType":"EmitStatement","src":"6198:42:4"}]},"documentation":{"id":728,"nodeType":"StructuredDocumentation","src":"5681:259:4","text":"@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements\n - `to` cannot be the zero address."},"id":773,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"5954:5:4","nodeType":"FunctionDefinition","parameters":{"id":733,"nodeType":"ParameterList","parameters":[{"constant":false,"id":730,"mutability":"mutable","name":"account","nameLocation":"5968:7:4","nodeType":"VariableDeclaration","scope":773,"src":"5960:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":729,"name":"address","nodeType":"ElementaryTypeName","src":"5960:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":732,"mutability":"mutable","name":"amount","nameLocation":"5985:6:4","nodeType":"VariableDeclaration","scope":773,"src":"5977:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":731,"name":"uint256","nodeType":"ElementaryTypeName","src":"5977:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5959:33:4"},"returnParameters":{"id":734,"nodeType":"ParameterList","parameters":[],"src":"6002:0:4"},"scope":896,"src":"5945:302:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":819,"nodeType":"Block","src":"6623:285:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":782,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":776,"src":"6641:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":785,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6660:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":784,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6652:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":783,"name":"address","nodeType":"ElementaryTypeName","src":"6652:7:4","typeDescriptions":{}}},"id":786,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6652:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6641:21:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206275726e2066726f6d20746865207a65726f2061646472657373","id":788,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6664:35:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f","typeString":"literal_string \"ERC20: burn from the zero address\""},"value":"ERC20: burn from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f","typeString":"literal_string \"ERC20: burn from the zero address\""}],"id":781,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6633:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":789,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6633:67:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":790,"nodeType":"ExpressionStatement","src":"6633:67:4"},{"expression":{"id":801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":791,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":486,"src":"6711:9:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":793,"indexExpression":{"id":792,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":776,"src":"6721:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6711:18:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":798,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":778,"src":"6755:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365","id":799,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6763:36:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd","typeString":"literal_string \"ERC20: burn amount exceeds balance\""},"value":"ERC20: burn amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd","typeString":"literal_string \"ERC20: burn amount exceeds balance\""}],"expression":{"baseExpression":{"id":794,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":486,"src":"6732:9:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":796,"indexExpression":{"id":795,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":776,"src":"6742:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6732:18:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6751:3:4","memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":1376,"src":"6732:22:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256,string memory) pure returns (uint256)"}},"id":800,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6732:68:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6711:89:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":802,"nodeType":"ExpressionStatement","src":"6711:89:4"},{"expression":{"id":808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":803,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":494,"src":"6810:12:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":806,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":778,"src":"6842:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":804,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":494,"src":"6825:12:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6838:3:4","memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":1348,"src":"6825:16:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":807,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6825:24:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6810:39:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":809,"nodeType":"ExpressionStatement","src":"6810:39:4"},{"eventCall":{"arguments":[{"id":811,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":776,"src":"6873:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":814,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6890:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":813,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6882:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":812,"name":"address","nodeType":"ElementaryTypeName","src":"6882:7:4","typeDescriptions":{}}},"id":815,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6882:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":816,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":778,"src":"6894:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":810,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1094,"src":"6864:8:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":817,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6864:37:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":818,"nodeType":"EmitStatement","src":"6859:42:4"}]},"documentation":{"id":774,"nodeType":"StructuredDocumentation","src":"6253:308:4","text":" @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."},"id":820,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"6575:5:4","nodeType":"FunctionDefinition","parameters":{"id":779,"nodeType":"ParameterList","parameters":[{"constant":false,"id":776,"mutability":"mutable","name":"account","nameLocation":"6589:7:4","nodeType":"VariableDeclaration","scope":820,"src":"6581:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":775,"name":"address","nodeType":"ElementaryTypeName","src":"6581:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":778,"mutability":"mutable","name":"amount","nameLocation":"6606:6:4","nodeType":"VariableDeclaration","scope":820,"src":"6598:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":777,"name":"uint256","nodeType":"ElementaryTypeName","src":"6598:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6580:33:4"},"returnParameters":{"id":780,"nodeType":"ParameterList","parameters":[],"src":"6623:0:4"},"scope":896,"src":"6566:342:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":864,"nodeType":"Block","src":"7408:257:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":831,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":823,"src":"7426:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":834,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7443:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":833,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7435:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":832,"name":"address","nodeType":"ElementaryTypeName","src":"7435:7:4","typeDescriptions":{}}},"id":835,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7435:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7426:19:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373","id":837,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7447:38:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","typeString":"literal_string \"ERC20: approve from the zero address\""},"value":"ERC20: approve from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","typeString":"literal_string \"ERC20: approve from the zero address\""}],"id":830,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7418:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":838,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7418:68:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":839,"nodeType":"ExpressionStatement","src":"7418:68:4"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":841,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":825,"src":"7504:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":844,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7523:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":843,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7515:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":842,"name":"address","nodeType":"ElementaryTypeName","src":"7515:7:4","typeDescriptions":{}}},"id":845,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7515:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7504:21:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20617070726f766520746f20746865207a65726f2061646472657373","id":847,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7527:36:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","typeString":"literal_string \"ERC20: approve to the zero address\""},"value":"ERC20: approve to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","typeString":"literal_string \"ERC20: approve to the zero address\""}],"id":840,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7496:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":848,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7496:68:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":849,"nodeType":"ExpressionStatement","src":"7496:68:4"},{"expression":{"id":856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":850,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":492,"src":"7575:11:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":853,"indexExpression":{"id":851,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":823,"src":"7587:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7575:18:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":854,"indexExpression":{"id":852,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":825,"src":"7594:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7575:27:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":855,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":827,"src":"7605:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7575:36:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":857,"nodeType":"ExpressionStatement","src":"7575:36:4"},{"eventCall":{"arguments":[{"id":859,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":823,"src":"7635:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":860,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":825,"src":"7642:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":861,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":827,"src":"7651:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":858,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1103,"src":"7626:8:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":862,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7626:32:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":863,"nodeType":"EmitStatement","src":"7621:37:4"}]},"documentation":{"id":821,"nodeType":"StructuredDocumentation","src":"6914:414:4","text":" @dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.\n This is internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."},"id":865,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"7342:8:4","nodeType":"FunctionDefinition","parameters":{"id":828,"nodeType":"ParameterList","parameters":[{"constant":false,"id":823,"mutability":"mutable","name":"owner","nameLocation":"7359:5:4","nodeType":"VariableDeclaration","scope":865,"src":"7351:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":822,"name":"address","nodeType":"ElementaryTypeName","src":"7351:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":825,"mutability":"mutable","name":"spender","nameLocation":"7374:7:4","nodeType":"VariableDeclaration","scope":865,"src":"7366:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":824,"name":"address","nodeType":"ElementaryTypeName","src":"7366:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":827,"mutability":"mutable","name":"amount","nameLocation":"7391:6:4","nodeType":"VariableDeclaration","scope":865,"src":"7383:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":826,"name":"uint256","nodeType":"ElementaryTypeName","src":"7383:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7350:48:4"},"returnParameters":{"id":829,"nodeType":"ParameterList","parameters":[],"src":"7408:0:4"},"scope":896,"src":"7333:332:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":894,"nodeType":"Block","src":"7904:168:4","statements":[{"expression":{"arguments":[{"id":874,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":868,"src":"7920:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":875,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":870,"src":"7929:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":873,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":820,"src":"7914:5:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":876,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7914:22:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":877,"nodeType":"ExpressionStatement","src":"7914:22:4"},{"expression":{"arguments":[{"id":879,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":868,"src":"7955:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":880,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":457,"src":"7964:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":881,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7964:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":889,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":870,"src":"8017:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"45524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e6365","id":890,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8025:38:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_a287c363786607a1457a2d9d12fa61c0073358e02d76b4035fc2c2d86a19c0db","typeString":"literal_string \"ERC20: burn amount exceeds allowance\""},"value":"ERC20: burn amount exceeds allowance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_a287c363786607a1457a2d9d12fa61c0073358e02d76b4035fc2c2d86a19c0db","typeString":"literal_string \"ERC20: burn amount exceeds allowance\""}],"expression":{"baseExpression":{"baseExpression":{"id":882,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":492,"src":"7978:11:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":884,"indexExpression":{"id":883,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":868,"src":"7990:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7978:20:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":887,"indexExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":885,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":457,"src":"7999:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":886,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7999:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7978:34:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8013:3:4","memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":1376,"src":"7978:38:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256,string memory) pure returns (uint256)"}},"id":891,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7978:86:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":878,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":865,"src":"7946:8:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":892,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7946:119:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":893,"nodeType":"ExpressionStatement","src":"7946:119:4"}]},"documentation":{"id":866,"nodeType":"StructuredDocumentation","src":"7671:167:4","text":" @dev Destroys `amount` tokens from `account`.`amount` is then deducted\n from the caller's allowance.\n See {_burn} and {_approve}."},"id":895,"implemented":true,"kind":"function","modifiers":[],"name":"_burnFrom","nameLocation":"7852:9:4","nodeType":"FunctionDefinition","parameters":{"id":871,"nodeType":"ParameterList","parameters":[{"constant":false,"id":868,"mutability":"mutable","name":"account","nameLocation":"7870:7:4","nodeType":"VariableDeclaration","scope":895,"src":"7862:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":867,"name":"address","nodeType":"ElementaryTypeName","src":"7862:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":870,"mutability":"mutable","name":"amount","nameLocation":"7887:6:4","nodeType":"VariableDeclaration","scope":895,"src":"7879:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":869,"name":"uint256","nodeType":"ElementaryTypeName","src":"7879:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7861:33:4"},"returnParameters":{"id":872,"nodeType":"ParameterList","parameters":[],"src":"7904:0:4"},"scope":896,"src":"7843:229:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":897,"src":"1251:6823:4","usedErrors":[]}],"src":"0:8075:4"},"id":4},"contracts/AccessControl/ERC20Burnable.sol":{"ast":{"absolutePath":"contracts/AccessControl/ERC20Burnable.sol","exportedSymbols":{"Context":[469],"ERC20":[896],"ERC20Burnable":[933],"IERC20":[1104],"SafeMath":[1498]},"id":934,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":898,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"33:23:5"},{"absolutePath":"contracts/AccessControl/Context.sol","file":"./Context.sol","id":899,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":934,"sourceUnit":470,"src":"58:23:5","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/AccessControl/ERC20.sol","file":"./ERC20.sol","id":900,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":934,"sourceUnit":897,"src":"82:21:5","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":902,"name":"Context","nameLocations":["340:7:5"],"nodeType":"IdentifierPath","referencedDeclaration":469,"src":"340:7:5"},"id":903,"nodeType":"InheritanceSpecifier","src":"340:7:5"},{"baseName":{"id":904,"name":"ERC20","nameLocations":["349:5:5"],"nodeType":"IdentifierPath","referencedDeclaration":896,"src":"349:5:5"},"id":905,"nodeType":"InheritanceSpecifier","src":"349:5:5"}],"canonicalName":"ERC20Burnable","contractDependencies":[],"contractKind":"contract","documentation":{"id":901,"nodeType":"StructuredDocumentation","src":"105:208:5","text":" @dev Extension of {ERC20} that allows token holders to destroy both their own\n tokens and those that they have an allowance for, in a way that can be\n recognized off-chain (via event analysis)."},"fullyImplemented":true,"id":933,"linearizedBaseContracts":[933,896,1104,469],"name":"ERC20Burnable","nameLocation":"323:13:5","nodeType":"ContractDefinition","nodes":[{"body":{"id":917,"nodeType":"Block","src":"501:44:5","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":912,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":457,"src":"517:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":913,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"517:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":914,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":908,"src":"531:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":911,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":820,"src":"511:5:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":915,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"511:27:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":916,"nodeType":"ExpressionStatement","src":"511:27:5"}]},"documentation":{"id":906,"nodeType":"StructuredDocumentation","src":"361:98:5","text":" @dev Destroys `amount` tokens from the caller.\n See {ERC20-_burn}."},"functionSelector":"42966c68","id":918,"implemented":true,"kind":"function","modifiers":[],"name":"burn","nameLocation":"473:4:5","nodeType":"FunctionDefinition","parameters":{"id":909,"nodeType":"ParameterList","parameters":[{"constant":false,"id":908,"mutability":"mutable","name":"amount","nameLocation":"486:6:5","nodeType":"VariableDeclaration","scope":918,"src":"478:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":907,"name":"uint256","nodeType":"ElementaryTypeName","src":"478:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"477:16:5"},"returnParameters":{"id":910,"nodeType":"ParameterList","parameters":[],"src":"501:0:5"},"scope":933,"src":"464:81:5","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":931,"nodeType":"Block","src":"660:43:5","statements":[{"expression":{"arguments":[{"id":927,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":921,"src":"680:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":928,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":923,"src":"689:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":926,"name":"_burnFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":895,"src":"670:9:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":929,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"670:26:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":930,"nodeType":"ExpressionStatement","src":"670:26:5"}]},"documentation":{"id":919,"nodeType":"StructuredDocumentation","src":"551:46:5","text":" @dev See {ERC20-_burnFrom}."},"functionSelector":"79cc6790","id":932,"implemented":true,"kind":"function","modifiers":[],"name":"burnFrom","nameLocation":"611:8:5","nodeType":"FunctionDefinition","parameters":{"id":924,"nodeType":"ParameterList","parameters":[{"constant":false,"id":921,"mutability":"mutable","name":"account","nameLocation":"628:7:5","nodeType":"VariableDeclaration","scope":932,"src":"620:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":920,"name":"address","nodeType":"ElementaryTypeName","src":"620:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":923,"mutability":"mutable","name":"amount","nameLocation":"645:6:5","nodeType":"VariableDeclaration","scope":932,"src":"637:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":922,"name":"uint256","nodeType":"ElementaryTypeName","src":"637:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"619:33:5"},"returnParameters":{"id":925,"nodeType":"ParameterList","parameters":[],"src":"660:0:5"},"scope":933,"src":"602:101:5","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":934,"src":"314:391:5","usedErrors":[]}],"src":"33:673:5"},"id":5},"contracts/AccessControl/ERC20Detailed.sol":{"ast":{"absolutePath":"contracts/AccessControl/ERC20Detailed.sol","exportedSymbols":{"ERC20Detailed":[996],"IERC20":[1104]},"id":997,"nodeType":"SourceUnit","nodes":[{"id":935,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"0:23:6"},{"absolutePath":"contracts/AccessControl/IERC20.sol","file":"./IERC20.sol","id":936,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":997,"sourceUnit":1105,"src":"25:22:6","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":938,"name":"IERC20","nameLocations":["144:6:6"],"nodeType":"IdentifierPath","referencedDeclaration":1104,"src":"144:6:6"},"id":939,"nodeType":"InheritanceSpecifier","src":"144:6:6"}],"canonicalName":"ERC20Detailed","contractDependencies":[],"contractKind":"contract","documentation":{"id":937,"nodeType":"StructuredDocumentation","src":"49:59:6","text":" @dev Optional functions from the ERC20 standard."},"fullyImplemented":false,"id":996,"linearizedBaseContracts":[996,1104],"name":"ERC20Detailed","nameLocation":"127:13:6","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":941,"mutability":"mutable","name":"_name","nameLocation":"172:5:6","nodeType":"VariableDeclaration","scope":996,"src":"157:20:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":940,"name":"string","nodeType":"ElementaryTypeName","src":"157:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":943,"mutability":"mutable","name":"_symbol","nameLocation":"198:7:6","nodeType":"VariableDeclaration","scope":996,"src":"183:22:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":942,"name":"string","nodeType":"ElementaryTypeName","src":"183:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":945,"mutability":"mutable","name":"_decimals","nameLocation":"225:9:6","nodeType":"VariableDeclaration","scope":996,"src":"211:23:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":944,"name":"uint8","nodeType":"ElementaryTypeName","src":"211:5:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"private"},{"body":{"id":967,"nodeType":"Block","src":"496:85:6","statements":[{"expression":{"id":957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":955,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":941,"src":"506:5:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":956,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":948,"src":"514:4:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"506:12:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":958,"nodeType":"ExpressionStatement","src":"506:12:6"},{"expression":{"id":961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":959,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":943,"src":"528:7:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":960,"name":"symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":950,"src":"538:6:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"528:16:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":962,"nodeType":"ExpressionStatement","src":"528:16:6"},{"expression":{"id":965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":963,"name":"_decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":945,"src":"554:9:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":964,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":952,"src":"566:8:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"554:20:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":966,"nodeType":"ExpressionStatement","src":"554:20:6"}]},"documentation":{"id":946,"nodeType":"StructuredDocumentation","src":"241:179:6","text":" @dev Sets the values for `name`, `symbol`, and `decimals`. All three of\n these values are immutable: they can only be set once during\n construction."},"id":968,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":953,"nodeType":"ParameterList","parameters":[{"constant":false,"id":948,"mutability":"mutable","name":"name","nameLocation":"452:4:6","nodeType":"VariableDeclaration","scope":968,"src":"438:18:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":947,"name":"string","nodeType":"ElementaryTypeName","src":"438:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":950,"mutability":"mutable","name":"symbol","nameLocation":"472:6:6","nodeType":"VariableDeclaration","scope":968,"src":"458:20:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":949,"name":"string","nodeType":"ElementaryTypeName","src":"458:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":952,"mutability":"mutable","name":"decimals","nameLocation":"486:8:6","nodeType":"VariableDeclaration","scope":968,"src":"480:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":951,"name":"uint8","nodeType":"ElementaryTypeName","src":"480:5:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"437:58:6"},"returnParameters":{"id":954,"nodeType":"ParameterList","parameters":[],"src":"496:0:6"},"scope":996,"src":"425:156:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":976,"nodeType":"Block","src":"698:29:6","statements":[{"expression":{"id":974,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":941,"src":"715:5:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":973,"id":975,"nodeType":"Return","src":"708:12:6"}]},"documentation":{"id":969,"nodeType":"StructuredDocumentation","src":"587:54:6","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":977,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"655:4:6","nodeType":"FunctionDefinition","parameters":{"id":970,"nodeType":"ParameterList","parameters":[],"src":"659:2:6"},"returnParameters":{"id":973,"nodeType":"ParameterList","parameters":[{"constant":false,"id":972,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":977,"src":"683:13:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":971,"name":"string","nodeType":"ElementaryTypeName","src":"683:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"682:15:6"},"scope":996,"src":"646:81:6","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":985,"nodeType":"Block","src":"894:31:6","statements":[{"expression":{"id":983,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":943,"src":"911:7:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":982,"id":984,"nodeType":"Return","src":"904:14:6"}]},"documentation":{"id":978,"nodeType":"StructuredDocumentation","src":"733:102:6","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":986,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"849:6:6","nodeType":"FunctionDefinition","parameters":{"id":979,"nodeType":"ParameterList","parameters":[],"src":"855:2:6"},"returnParameters":{"id":982,"nodeType":"ParameterList","parameters":[{"constant":false,"id":981,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":986,"src":"879:13:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":980,"name":"string","nodeType":"ElementaryTypeName","src":"879:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"878:15:6"},"scope":996,"src":"840:85:6","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":994,"nodeType":"Block","src":"1522:33:6","statements":[{"expression":{"id":992,"name":"_decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":945,"src":"1539:9:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":991,"id":993,"nodeType":"Return","src":"1532:16:6"}]},"documentation":{"id":987,"nodeType":"StructuredDocumentation","src":"931:538:6","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5,05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":995,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"1483:8:6","nodeType":"FunctionDefinition","parameters":{"id":988,"nodeType":"ParameterList","parameters":[],"src":"1491:2:6"},"returnParameters":{"id":991,"nodeType":"ParameterList","parameters":[{"constant":false,"id":990,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":995,"src":"1515:5:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":989,"name":"uint8","nodeType":"ElementaryTypeName","src":"1515:5:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"1514:7:6"},"scope":996,"src":"1474:81:6","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":997,"src":"109:1448:6","usedErrors":[]}],"src":"0:1558:6"},"id":6},"contracts/AccessControl/ERC20Mintable.sol":{"ast":{"absolutePath":"contracts/AccessControl/ERC20Mintable.sol","exportedSymbols":{"Context":[469],"ERC20":[896],"ERC20Mintable":[1026],"IERC20":[1104],"MinterRole":[1213],"Roles":[1302],"SafeMath":[1498]},"id":1027,"nodeType":"SourceUnit","nodes":[{"id":998,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"0:23:7"},{"absolutePath":"contracts/AccessControl/ERC20.sol","file":"./ERC20.sol","id":999,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1027,"sourceUnit":897,"src":"25:21:7","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/AccessControl/MinterRole.sol","file":"./MinterRole.sol","id":1000,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1027,"sourceUnit":1214,"src":"47:26:7","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1002,"name":"ERC20","nameLocations":["331:5:7"],"nodeType":"IdentifierPath","referencedDeclaration":896,"src":"331:5:7"},"id":1003,"nodeType":"InheritanceSpecifier","src":"331:5:7"},{"baseName":{"id":1004,"name":"MinterRole","nameLocations":["338:10:7"],"nodeType":"IdentifierPath","referencedDeclaration":1213,"src":"338:10:7"},"id":1005,"nodeType":"InheritanceSpecifier","src":"338:10:7"}],"canonicalName":"ERC20Mintable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1001,"nodeType":"StructuredDocumentation","src":"75:229:7","text":" @dev Extension of {ERC20} that adds a set of accounts with the {MinterRole},\n which have permission to mint (create) new tokens as they see fit.\n At construction, the deployer of the contract is the only minter."},"fullyImplemented":true,"id":1026,"linearizedBaseContracts":[1026,1213,896,1104,469],"name":"ERC20Mintable","nameLocation":"314:13:7","nodeType":"ContractDefinition","nodes":[{"body":{"id":1024,"nodeType":"Block","src":"565:60:7","statements":[{"expression":{"arguments":[{"id":1018,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1008,"src":"581:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1019,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1010,"src":"590:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1017,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":773,"src":"575:5:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1020,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"575:22:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1021,"nodeType":"ExpressionStatement","src":"575:22:7"},{"expression":{"hexValue":"74727565","id":1022,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"614:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1016,"id":1023,"nodeType":"Return","src":"607:11:7"}]},"documentation":{"id":1006,"nodeType":"StructuredDocumentation","src":"355:125:7","text":" @dev See {ERC20-_mint}.\n Requirements:\n - the caller must have the {MinterRole}."},"functionSelector":"40c10f19","id":1025,"implemented":true,"kind":"function","modifiers":[{"id":1013,"kind":"modifierInvocation","modifierName":{"id":1012,"name":"onlyMinter","nameLocations":["539:10:7"],"nodeType":"IdentifierPath","referencedDeclaration":1146,"src":"539:10:7"},"nodeType":"ModifierInvocation","src":"539:10:7"}],"name":"mint","nameLocation":"494:4:7","nodeType":"FunctionDefinition","parameters":{"id":1011,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1008,"mutability":"mutable","name":"account","nameLocation":"507:7:7","nodeType":"VariableDeclaration","scope":1025,"src":"499:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1007,"name":"address","nodeType":"ElementaryTypeName","src":"499:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1010,"mutability":"mutable","name":"amount","nameLocation":"524:6:7","nodeType":"VariableDeclaration","scope":1025,"src":"516:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1009,"name":"uint256","nodeType":"ElementaryTypeName","src":"516:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"498:33:7"},"returnParameters":{"id":1016,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1015,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1025,"src":"559:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1014,"name":"bool","nodeType":"ElementaryTypeName","src":"559:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"558:6:7"},"scope":1026,"src":"485:140:7","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":1027,"src":"305:322:7","usedErrors":[]}],"src":"0:628:7"},"id":7},"contracts/AccessControl/IERC20.sol":{"ast":{"absolutePath":"contracts/AccessControl/IERC20.sol","exportedSymbols":{"IERC20":[1104]},"id":1105,"nodeType":"SourceUnit","nodes":[{"id":1028,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"0:23:8"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":1029,"nodeType":"StructuredDocumentation","src":"25:150:8","text":" @dev Interface of the ERC20 standard as defined in the EIP. Does not include\n the optional functions; to access them see {ERC20Detailed}."},"fullyImplemented":false,"id":1104,"linearizedBaseContracts":[1104],"name":"IERC20","nameLocation":"186:6:8","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1030,"nodeType":"StructuredDocumentation","src":"199:66:8","text":" @dev Returns the amount of tokens in existence."},"functionSelector":"18160ddd","id":1035,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"279:11:8","nodeType":"FunctionDefinition","parameters":{"id":1031,"nodeType":"ParameterList","parameters":[],"src":"290:2:8"},"returnParameters":{"id":1034,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1033,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1035,"src":"316:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1032,"name":"uint256","nodeType":"ElementaryTypeName","src":"316:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"315:9:8"},"scope":1104,"src":"270:55:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1036,"nodeType":"StructuredDocumentation","src":"331:72:8","text":" @dev Returns the amount of tokens owned by `account`."},"functionSelector":"70a08231","id":1043,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"417:9:8","nodeType":"FunctionDefinition","parameters":{"id":1039,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1038,"mutability":"mutable","name":"account","nameLocation":"435:7:8","nodeType":"VariableDeclaration","scope":1043,"src":"427:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1037,"name":"address","nodeType":"ElementaryTypeName","src":"427:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"426:17:8"},"returnParameters":{"id":1042,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1041,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1043,"src":"467:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1040,"name":"uint256","nodeType":"ElementaryTypeName","src":"467:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"466:9:8"},"scope":1104,"src":"408:68:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1044,"nodeType":"StructuredDocumentation","src":"482:209:8","text":" @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":1053,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"705:8:8","nodeType":"FunctionDefinition","parameters":{"id":1049,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1046,"mutability":"mutable","name":"recipient","nameLocation":"722:9:8","nodeType":"VariableDeclaration","scope":1053,"src":"714:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1045,"name":"address","nodeType":"ElementaryTypeName","src":"714:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1048,"mutability":"mutable","name":"amount","nameLocation":"741:6:8","nodeType":"VariableDeclaration","scope":1053,"src":"733:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1047,"name":"uint256","nodeType":"ElementaryTypeName","src":"733:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"713:35:8"},"returnParameters":{"id":1052,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1051,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1053,"src":"767:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1050,"name":"bool","nodeType":"ElementaryTypeName","src":"767:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"766:6:8"},"scope":1104,"src":"696:77:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1054,"nodeType":"StructuredDocumentation","src":"779:264:8","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":1063,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1057:9:8","nodeType":"FunctionDefinition","parameters":{"id":1059,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1056,"mutability":"mutable","name":"owner","nameLocation":"1075:5:8","nodeType":"VariableDeclaration","scope":1063,"src":"1067:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1055,"name":"address","nodeType":"ElementaryTypeName","src":"1067:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1058,"mutability":"mutable","name":"spender","nameLocation":"1090:7:8","nodeType":"VariableDeclaration","scope":1063,"src":"1082:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1057,"name":"address","nodeType":"ElementaryTypeName","src":"1082:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1066:32:8"},"returnParameters":{"id":1062,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1061,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1063,"src":"1122:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1060,"name":"uint256","nodeType":"ElementaryTypeName","src":"1122:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1121:9:8"},"scope":1104,"src":"1048:83:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1064,"nodeType":"StructuredDocumentation","src":"1137:642:8","text":" @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":1073,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"1793:7:8","nodeType":"FunctionDefinition","parameters":{"id":1069,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1066,"mutability":"mutable","name":"spender","nameLocation":"1809:7:8","nodeType":"VariableDeclaration","scope":1073,"src":"1801:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1065,"name":"address","nodeType":"ElementaryTypeName","src":"1801:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1068,"mutability":"mutable","name":"amount","nameLocation":"1826:6:8","nodeType":"VariableDeclaration","scope":1073,"src":"1818:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1067,"name":"uint256","nodeType":"ElementaryTypeName","src":"1818:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1800:33:8"},"returnParameters":{"id":1072,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1071,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1073,"src":"1852:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1070,"name":"bool","nodeType":"ElementaryTypeName","src":"1852:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1851:6:8"},"scope":1104,"src":"1784:74:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1074,"nodeType":"StructuredDocumentation","src":"1864:296:8","text":" @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":1085,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2174:12:8","nodeType":"FunctionDefinition","parameters":{"id":1081,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1076,"mutability":"mutable","name":"sender","nameLocation":"2195:6:8","nodeType":"VariableDeclaration","scope":1085,"src":"2187:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1075,"name":"address","nodeType":"ElementaryTypeName","src":"2187:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1078,"mutability":"mutable","name":"recipient","nameLocation":"2211:9:8","nodeType":"VariableDeclaration","scope":1085,"src":"2203:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1077,"name":"address","nodeType":"ElementaryTypeName","src":"2203:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1080,"mutability":"mutable","name":"amount","nameLocation":"2230:6:8","nodeType":"VariableDeclaration","scope":1085,"src":"2222:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1079,"name":"uint256","nodeType":"ElementaryTypeName","src":"2222:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2186:51:8"},"returnParameters":{"id":1084,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1083,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1085,"src":"2256:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1082,"name":"bool","nodeType":"ElementaryTypeName","src":"2256:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2255:6:8"},"scope":1104,"src":"2165:97:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"anonymous":false,"documentation":{"id":1086,"nodeType":"StructuredDocumentation","src":"2268:158:8","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":1094,"name":"Transfer","nameLocation":"2437:8:8","nodeType":"EventDefinition","parameters":{"id":1093,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1088,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"2462:4:8","nodeType":"VariableDeclaration","scope":1094,"src":"2446:20:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1087,"name":"address","nodeType":"ElementaryTypeName","src":"2446:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1090,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"2484:2:8","nodeType":"VariableDeclaration","scope":1094,"src":"2468:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1089,"name":"address","nodeType":"ElementaryTypeName","src":"2468:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1092,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"2496:5:8","nodeType":"VariableDeclaration","scope":1094,"src":"2488:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1091,"name":"uint256","nodeType":"ElementaryTypeName","src":"2488:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2445:57:8"},"src":"2431:72:8"},{"anonymous":false,"documentation":{"id":1095,"nodeType":"StructuredDocumentation","src":"2509:148:8","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":1103,"name":"Approval","nameLocation":"2668:8:8","nodeType":"EventDefinition","parameters":{"id":1102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1097,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"2693:5:8","nodeType":"VariableDeclaration","scope":1103,"src":"2677:21:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1096,"name":"address","nodeType":"ElementaryTypeName","src":"2677:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1099,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"2716:7:8","nodeType":"VariableDeclaration","scope":1103,"src":"2700:23:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1098,"name":"address","nodeType":"ElementaryTypeName","src":"2700:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1101,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"2733:5:8","nodeType":"VariableDeclaration","scope":1103,"src":"2725:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1100,"name":"uint256","nodeType":"ElementaryTypeName","src":"2725:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2676:63:8"},"src":"2662:78:8"}],"scope":1105,"src":"176:2566:8","usedErrors":[]}],"src":"0:2743:8"},"id":8},"contracts/AccessControl/MinterRole.sol":{"ast":{"absolutePath":"contracts/AccessControl/MinterRole.sol","exportedSymbols":{"Context":[469],"MinterRole":[1213],"Roles":[1302]},"id":1214,"nodeType":"SourceUnit","nodes":[{"id":1106,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"0:23:9"},{"absolutePath":"contracts/AccessControl/Context.sol","file":"./Context.sol","id":1107,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1214,"sourceUnit":470,"src":"25:23:9","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/AccessControl/Roles.sol","file":"./Roles.sol","id":1108,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1214,"sourceUnit":1303,"src":"49:21:9","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1109,"name":"Context","nameLocations":["95:7:9"],"nodeType":"IdentifierPath","referencedDeclaration":469,"src":"95:7:9"},"id":1110,"nodeType":"InheritanceSpecifier","src":"95:7:9"}],"canonicalName":"MinterRole","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":1213,"linearizedBaseContracts":[1213,469],"name":"MinterRole","nameLocation":"81:10:9","nodeType":"ContractDefinition","nodes":[{"global":false,"id":1114,"libraryName":{"id":1111,"name":"Roles","nameLocations":["115:5:9"],"nodeType":"IdentifierPath","referencedDeclaration":1302,"src":"115:5:9"},"nodeType":"UsingForDirective","src":"109:27:9","typeName":{"id":1113,"nodeType":"UserDefinedTypeName","pathNode":{"id":1112,"name":"Roles.Role","nameLocations":["125:5:9","131:4:9"],"nodeType":"IdentifierPath","referencedDeclaration":1221,"src":"125:10:9"},"referencedDeclaration":1221,"src":"125:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_Role_$1221_storage_ptr","typeString":"struct Roles.Role"}}},{"anonymous":false,"eventSelector":"6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f6","id":1118,"name":"MinterAdded","nameLocation":"148:11:9","nodeType":"EventDefinition","parameters":{"id":1117,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1116,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"176:7:9","nodeType":"VariableDeclaration","scope":1118,"src":"160:23:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1115,"name":"address","nodeType":"ElementaryTypeName","src":"160:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"159:25:9"},"src":"142:43:9"},{"anonymous":false,"eventSelector":"e94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb66692","id":1122,"name":"MinterRemoved","nameLocation":"196:13:9","nodeType":"EventDefinition","parameters":{"id":1121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1120,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"226:7:9","nodeType":"VariableDeclaration","scope":1122,"src":"210:23:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1119,"name":"address","nodeType":"ElementaryTypeName","src":"210:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"209:25:9"},"src":"190:45:9"},{"constant":false,"id":1125,"mutability":"mutable","name":"_minters","nameLocation":"260:8:9","nodeType":"VariableDeclaration","scope":1213,"src":"241:27:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Role_$1221_storage","typeString":"struct Roles.Role"},"typeName":{"id":1124,"nodeType":"UserDefinedTypeName","pathNode":{"id":1123,"name":"Roles.Role","nameLocations":["241:5:9","247:4:9"],"nodeType":"IdentifierPath","referencedDeclaration":1221,"src":"241:10:9"},"referencedDeclaration":1221,"src":"241:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_Role_$1221_storage_ptr","typeString":"struct Roles.Role"}},"visibility":"private"},{"body":{"id":1133,"nodeType":"Block","src":"290:41:9","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1129,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":457,"src":"311:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1130,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"311:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1128,"name":"_addMinter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1196,"src":"300:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1131,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"300:24:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1132,"nodeType":"ExpressionStatement","src":"300:24:9"}]},"id":1134,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1126,"nodeType":"ParameterList","parameters":[],"src":"287:2:9"},"returnParameters":{"id":1127,"nodeType":"ParameterList","parameters":[],"src":"290:0:9"},"scope":1213,"src":"275:56:9","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1145,"nodeType":"Block","src":"359:111:9","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1138,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":457,"src":"386:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1139,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"386:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1137,"name":"isMinter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1159,"src":"377:8:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":1140,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"377:22:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d696e746572526f6c653a2063616c6c657220646f6573206e6f74206861766520746865204d696e74657220726f6c65","id":1141,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"401:50:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_79ecb50133735b20228dea9d08fe36a462bbc1350f591a146908848db91104cd","typeString":"literal_string \"MinterRole: caller does not have the Minter role\""},"value":"MinterRole: caller does not have the Minter role"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_79ecb50133735b20228dea9d08fe36a462bbc1350f591a146908848db91104cd","typeString":"literal_string \"MinterRole: caller does not have the Minter role\""}],"id":1136,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"369:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1142,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"369:83:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1143,"nodeType":"ExpressionStatement","src":"369:83:9"},{"id":1144,"nodeType":"PlaceholderStatement","src":"462:1:9"}]},"id":1146,"name":"onlyMinter","nameLocation":"346:10:9","nodeType":"ModifierDefinition","parameters":{"id":1135,"nodeType":"ParameterList","parameters":[],"src":"356:2:9"},"src":"337:133:9","virtual":false,"visibility":"internal"},{"body":{"id":1158,"nodeType":"Block","src":"538:45:9","statements":[{"expression":{"arguments":[{"id":1155,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1148,"src":"568:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1153,"name":"_minters","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1125,"src":"555:8:9","typeDescriptions":{"typeIdentifier":"t_struct$_Role_$1221_storage","typeString":"struct Roles.Role storage ref"}},"id":1154,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"564:3:9","memberName":"has","nodeType":"MemberAccess","referencedDeclaration":1301,"src":"555:12:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Role_$1221_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_Role_$1221_storage_ptr_$","typeString":"function (struct Roles.Role storage pointer,address) view returns (bool)"}},"id":1156,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"555:21:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1152,"id":1157,"nodeType":"Return","src":"548:28:9"}]},"functionSelector":"aa271e1a","id":1159,"implemented":true,"kind":"function","modifiers":[],"name":"isMinter","nameLocation":"485:8:9","nodeType":"FunctionDefinition","parameters":{"id":1149,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1148,"mutability":"mutable","name":"account","nameLocation":"502:7:9","nodeType":"VariableDeclaration","scope":1159,"src":"494:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1147,"name":"address","nodeType":"ElementaryTypeName","src":"494:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"493:17:9"},"returnParameters":{"id":1152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1151,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1159,"src":"532:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1150,"name":"bool","nodeType":"ElementaryTypeName","src":"532:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"531:6:9"},"scope":1213,"src":"476:107:9","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":1170,"nodeType":"Block","src":"643:36:9","statements":[{"expression":{"arguments":[{"id":1167,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1161,"src":"664:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1166,"name":"_addMinter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1196,"src":"653:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1168,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"653:19:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1169,"nodeType":"ExpressionStatement","src":"653:19:9"}]},"functionSelector":"983b2d56","id":1171,"implemented":true,"kind":"function","modifiers":[{"id":1164,"kind":"modifierInvocation","modifierName":{"id":1163,"name":"onlyMinter","nameLocations":["632:10:9"],"nodeType":"IdentifierPath","referencedDeclaration":1146,"src":"632:10:9"},"nodeType":"ModifierInvocation","src":"632:10:9"}],"name":"addMinter","nameLocation":"598:9:9","nodeType":"FunctionDefinition","parameters":{"id":1162,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1161,"mutability":"mutable","name":"account","nameLocation":"616:7:9","nodeType":"VariableDeclaration","scope":1171,"src":"608:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1160,"name":"address","nodeType":"ElementaryTypeName","src":"608:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"607:17:9"},"returnParameters":{"id":1165,"nodeType":"ParameterList","parameters":[],"src":"643:0:9"},"scope":1213,"src":"589:90:9","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1179,"nodeType":"Block","src":"718:44:9","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1175,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":457,"src":"742:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1176,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"742:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1174,"name":"_removeMinter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1212,"src":"728:13:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"728:27:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1178,"nodeType":"ExpressionStatement","src":"728:27:9"}]},"functionSelector":"98650275","id":1180,"implemented":true,"kind":"function","modifiers":[],"name":"renounceMinter","nameLocation":"694:14:9","nodeType":"FunctionDefinition","parameters":{"id":1172,"nodeType":"ParameterList","parameters":[],"src":"708:2:9"},"returnParameters":{"id":1173,"nodeType":"ParameterList","parameters":[],"src":"718:0:9"},"scope":1213,"src":"685:77:9","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1195,"nodeType":"Block","src":"814:73:9","statements":[{"expression":{"arguments":[{"id":1188,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1182,"src":"837:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1185,"name":"_minters","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1125,"src":"824:8:9","typeDescriptions":{"typeIdentifier":"t_struct$_Role_$1221_storage","typeString":"struct Roles.Role storage ref"}},"id":1187,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"833:3:9","memberName":"add","nodeType":"MemberAccess","referencedDeclaration":1248,"src":"824:12:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Role_$1221_storage_ptr_$_t_address_$returns$__$attached_to$_t_struct$_Role_$1221_storage_ptr_$","typeString":"function (struct Roles.Role storage pointer,address)"}},"id":1189,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"824:21:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1190,"nodeType":"ExpressionStatement","src":"824:21:9"},{"eventCall":{"arguments":[{"id":1192,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1182,"src":"872:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1191,"name":"MinterAdded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1118,"src":"860:11:9","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1193,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"860:20:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1194,"nodeType":"EmitStatement","src":"855:25:9"}]},"id":1196,"implemented":true,"kind":"function","modifiers":[],"name":"_addMinter","nameLocation":"777:10:9","nodeType":"FunctionDefinition","parameters":{"id":1183,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1182,"mutability":"mutable","name":"account","nameLocation":"796:7:9","nodeType":"VariableDeclaration","scope":1196,"src":"788:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1181,"name":"address","nodeType":"ElementaryTypeName","src":"788:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"787:17:9"},"returnParameters":{"id":1184,"nodeType":"ParameterList","parameters":[],"src":"814:0:9"},"scope":1213,"src":"768:119:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1211,"nodeType":"Block","src":"942:78:9","statements":[{"expression":{"arguments":[{"id":1204,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1198,"src":"968:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1201,"name":"_minters","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1125,"src":"952:8:9","typeDescriptions":{"typeIdentifier":"t_struct$_Role_$1221_storage","typeString":"struct Roles.Role storage ref"}},"id":1203,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"961:6:9","memberName":"remove","nodeType":"MemberAccess","referencedDeclaration":1274,"src":"952:15:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Role_$1221_storage_ptr_$_t_address_$returns$__$attached_to$_t_struct$_Role_$1221_storage_ptr_$","typeString":"function (struct Roles.Role storage pointer,address)"}},"id":1205,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"952:24:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1206,"nodeType":"ExpressionStatement","src":"952:24:9"},{"eventCall":{"arguments":[{"id":1208,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1198,"src":"1005:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1207,"name":"MinterRemoved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1122,"src":"991:13:9","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1209,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"991:22:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1210,"nodeType":"EmitStatement","src":"986:27:9"}]},"id":1212,"implemented":true,"kind":"function","modifiers":[],"name":"_removeMinter","nameLocation":"902:13:9","nodeType":"FunctionDefinition","parameters":{"id":1199,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1198,"mutability":"mutable","name":"account","nameLocation":"924:7:9","nodeType":"VariableDeclaration","scope":1212,"src":"916:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1197,"name":"address","nodeType":"ElementaryTypeName","src":"916:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"915:17:9"},"returnParameters":{"id":1200,"nodeType":"ParameterList","parameters":[],"src":"942:0:9"},"scope":1213,"src":"893:127:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":1214,"src":"72:950:9","usedErrors":[]}],"src":"0:1023:9"},"id":9},"contracts/AccessControl/Roles.sol":{"ast":{"absolutePath":"contracts/AccessControl/Roles.sol","exportedSymbols":{"Roles":[1302]},"id":1303,"nodeType":"SourceUnit","nodes":[{"id":1215,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"0:23:10"},{"abstract":false,"baseContracts":[],"canonicalName":"Roles","contractDependencies":[],"contractKind":"library","documentation":{"id":1216,"nodeType":"StructuredDocumentation","src":"25:82:10","text":" @title Roles\n @dev Library for managing addresses assigned to a Role."},"fullyImplemented":true,"id":1302,"linearizedBaseContracts":[1302],"name":"Roles","nameLocation":"116:5:10","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Roles.Role","id":1221,"members":[{"constant":false,"id":1220,"mutability":"mutable","name":"bearer","nameLocation":"176:6:10","nodeType":"VariableDeclaration","scope":1221,"src":"150:32:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":1219,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1217,"name":"address","nodeType":"ElementaryTypeName","src":"159:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"150:25:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1218,"name":"bool","nodeType":"ElementaryTypeName","src":"170:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"internal"}],"name":"Role","nameLocation":"135:4:10","nodeType":"StructDefinition","scope":1302,"src":"128:61:10","visibility":"public"},{"body":{"id":1247,"nodeType":"Block","src":"318:117:10","statements":[{"expression":{"arguments":[{"id":1235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"336:19:10","subExpression":{"arguments":[{"id":1232,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1225,"src":"341:4:10","typeDescriptions":{"typeIdentifier":"t_struct$_Role_$1221_storage_ptr","typeString":"struct Roles.Role storage pointer"}},{"id":1233,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1227,"src":"347:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Role_$1221_storage_ptr","typeString":"struct Roles.Role storage pointer"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1231,"name":"has","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1301,"src":"337:3:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Role_$1221_storage_ptr_$_t_address_$returns$_t_bool_$","typeString":"function (struct Roles.Role storage pointer,address) view returns (bool)"}},"id":1234,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"337:18:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"526f6c65733a206163636f756e7420616c72656164792068617320726f6c65","id":1236,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"357:33:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_0f76c3a3e97a37fcdff532c2741c10933ebf2b769d5475388e30ae4f7155f13a","typeString":"literal_string \"Roles: account already has role\""},"value":"Roles: account already has role"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0f76c3a3e97a37fcdff532c2741c10933ebf2b769d5475388e30ae4f7155f13a","typeString":"literal_string \"Roles: account already has role\""}],"id":1230,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"328:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1237,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"328:63:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1238,"nodeType":"ExpressionStatement","src":"328:63:10"},{"expression":{"id":1245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":1239,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1225,"src":"401:4:10","typeDescriptions":{"typeIdentifier":"t_struct$_Role_$1221_storage_ptr","typeString":"struct Roles.Role storage pointer"}},"id":1242,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"406:6:10","memberName":"bearer","nodeType":"MemberAccess","referencedDeclaration":1220,"src":"401:11:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1243,"indexExpression":{"id":1241,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1227,"src":"413:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"401:20:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":1244,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"424:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"401:27:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1246,"nodeType":"ExpressionStatement","src":"401:27:10"}]},"documentation":{"id":1222,"nodeType":"StructuredDocumentation","src":"195:60:10","text":" @dev Give an account access to this role."},"id":1248,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"269:3:10","nodeType":"FunctionDefinition","parameters":{"id":1228,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1225,"mutability":"mutable","name":"role","nameLocation":"286:4:10","nodeType":"VariableDeclaration","scope":1248,"src":"273:17:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Role_$1221_storage_ptr","typeString":"struct Roles.Role"},"typeName":{"id":1224,"nodeType":"UserDefinedTypeName","pathNode":{"id":1223,"name":"Role","nameLocations":["273:4:10"],"nodeType":"IdentifierPath","referencedDeclaration":1221,"src":"273:4:10"},"referencedDeclaration":1221,"src":"273:4:10","typeDescriptions":{"typeIdentifier":"t_struct$_Role_$1221_storage_ptr","typeString":"struct Roles.Role"}},"visibility":"internal"},{"constant":false,"id":1227,"mutability":"mutable","name":"account","nameLocation":"300:7:10","nodeType":"VariableDeclaration","scope":1248,"src":"292:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1226,"name":"address","nodeType":"ElementaryTypeName","src":"292:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"272:36:10"},"returnParameters":{"id":1229,"nodeType":"ParameterList","parameters":[],"src":"318:0:10"},"scope":1302,"src":"260:175:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1273,"nodeType":"Block","src":"571:119:10","statements":[{"expression":{"arguments":[{"arguments":[{"id":1259,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1252,"src":"593:4:10","typeDescriptions":{"typeIdentifier":"t_struct$_Role_$1221_storage_ptr","typeString":"struct Roles.Role storage pointer"}},{"id":1260,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1254,"src":"599:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Role_$1221_storage_ptr","typeString":"struct Roles.Role storage pointer"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1258,"name":"has","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1301,"src":"589:3:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Role_$1221_storage_ptr_$_t_address_$returns$_t_bool_$","typeString":"function (struct Roles.Role storage pointer,address) view returns (bool)"}},"id":1261,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"589:18:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c65","id":1262,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"609:35:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_7bd893145ac435f339bb7c288622d270324b7033b011f693aca172f5cbc3c257","typeString":"literal_string \"Roles: account does not have role\""},"value":"Roles: account does not have role"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7bd893145ac435f339bb7c288622d270324b7033b011f693aca172f5cbc3c257","typeString":"literal_string \"Roles: account does not have role\""}],"id":1257,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"581:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1263,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"581:64:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1264,"nodeType":"ExpressionStatement","src":"581:64:10"},{"expression":{"id":1271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":1265,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1252,"src":"655:4:10","typeDescriptions":{"typeIdentifier":"t_struct$_Role_$1221_storage_ptr","typeString":"struct Roles.Role storage pointer"}},"id":1268,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"660:6:10","memberName":"bearer","nodeType":"MemberAccess","referencedDeclaration":1220,"src":"655:11:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1269,"indexExpression":{"id":1267,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1254,"src":"667:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"655:20:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":1270,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"678:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"655:28:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1272,"nodeType":"ExpressionStatement","src":"655:28:10"}]},"documentation":{"id":1249,"nodeType":"StructuredDocumentation","src":"441:64:10","text":" @dev Remove an account's access to this role."},"id":1274,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"519:6:10","nodeType":"FunctionDefinition","parameters":{"id":1255,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1252,"mutability":"mutable","name":"role","nameLocation":"539:4:10","nodeType":"VariableDeclaration","scope":1274,"src":"526:17:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Role_$1221_storage_ptr","typeString":"struct Roles.Role"},"typeName":{"id":1251,"nodeType":"UserDefinedTypeName","pathNode":{"id":1250,"name":"Role","nameLocations":["526:4:10"],"nodeType":"IdentifierPath","referencedDeclaration":1221,"src":"526:4:10"},"referencedDeclaration":1221,"src":"526:4:10","typeDescriptions":{"typeIdentifier":"t_struct$_Role_$1221_storage_ptr","typeString":"struct Roles.Role"}},"visibility":"internal"},{"constant":false,"id":1254,"mutability":"mutable","name":"account","nameLocation":"553:7:10","nodeType":"VariableDeclaration","scope":1274,"src":"545:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1253,"name":"address","nodeType":"ElementaryTypeName","src":"545:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"525:36:10"},"returnParameters":{"id":1256,"nodeType":"ParameterList","parameters":[],"src":"571:0:10"},"scope":1302,"src":"510:180:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1300,"nodeType":"Block","src":"857:122:10","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1286,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1280,"src":"875:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"894:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1288,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"886:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1287,"name":"address","nodeType":"ElementaryTypeName","src":"886:7:10","typeDescriptions":{}}},"id":1290,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"886:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"875:21:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"526f6c65733a206163636f756e7420697320746865207a65726f2061646472657373","id":1292,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"898:36:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_9d214fa89563f4e6456a3929327e54500ea1cde2c0ba9fb2035ec106190d682f","typeString":"literal_string \"Roles: account is the zero address\""},"value":"Roles: account is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9d214fa89563f4e6456a3929327e54500ea1cde2c0ba9fb2035ec106190d682f","typeString":"literal_string \"Roles: account is the zero address\""}],"id":1285,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"867:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1293,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"867:68:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1294,"nodeType":"ExpressionStatement","src":"867:68:10"},{"expression":{"baseExpression":{"expression":{"id":1295,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1278,"src":"952:4:10","typeDescriptions":{"typeIdentifier":"t_struct$_Role_$1221_storage_ptr","typeString":"struct Roles.Role storage pointer"}},"id":1296,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"957:6:10","memberName":"bearer","nodeType":"MemberAccess","referencedDeclaration":1220,"src":"952:11:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1298,"indexExpression":{"id":1297,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1280,"src":"964:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"952:20:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1284,"id":1299,"nodeType":"Return","src":"945:27:10"}]},"documentation":{"id":1275,"nodeType":"StructuredDocumentation","src":"696:78:10","text":" @dev Check if an account has this role.\n @return bool"},"id":1301,"implemented":true,"kind":"function","modifiers":[],"name":"has","nameLocation":"788:3:10","nodeType":"FunctionDefinition","parameters":{"id":1281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1278,"mutability":"mutable","name":"role","nameLocation":"805:4:10","nodeType":"VariableDeclaration","scope":1301,"src":"792:17:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Role_$1221_storage_ptr","typeString":"struct Roles.Role"},"typeName":{"id":1277,"nodeType":"UserDefinedTypeName","pathNode":{"id":1276,"name":"Role","nameLocations":["792:4:10"],"nodeType":"IdentifierPath","referencedDeclaration":1221,"src":"792:4:10"},"referencedDeclaration":1221,"src":"792:4:10","typeDescriptions":{"typeIdentifier":"t_struct$_Role_$1221_storage_ptr","typeString":"struct Roles.Role"}},"visibility":"internal"},{"constant":false,"id":1280,"mutability":"mutable","name":"account","nameLocation":"819:7:10","nodeType":"VariableDeclaration","scope":1301,"src":"811:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1279,"name":"address","nodeType":"ElementaryTypeName","src":"811:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"791:36:10"},"returnParameters":{"id":1284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1283,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1301,"src":"851:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1282,"name":"bool","nodeType":"ElementaryTypeName","src":"851:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"850:6:10"},"scope":1302,"src":"779:200:10","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":1303,"src":"108:873:10","usedErrors":[]}],"src":"0:982:10"},"id":10},"contracts/AccessControl/SafeMath.sol":{"ast":{"absolutePath":"contracts/AccessControl/SafeMath.sol","exportedSymbols":{"SafeMath":[1498]},"id":1499,"nodeType":"SourceUnit","nodes":[{"id":1304,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"0:23:11"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeMath","contractDependencies":[],"contractKind":"library","documentation":{"id":1305,"nodeType":"StructuredDocumentation","src":"25:563:11","text":" @dev Wrappers over Solidity's arithmetic operations with added overflow\n checks.\n Arithmetic operations in Solidity wrap on overflow. This can easily result\n in bugs, because programmers usually assume that an overflow raises an\n error, which is the standard behavior in high level programming languages.\n `SafeMath` restores this intuition by reverting the transaction when an\n operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."},"fullyImplemented":true,"id":1498,"linearizedBaseContracts":[1498],"name":"SafeMath","nameLocation":"597:8:11","nodeType":"ContractDefinition","nodes":[{"body":{"id":1330,"nodeType":"Block","src":"901:109:11","statements":[{"assignments":[1316],"declarations":[{"constant":false,"id":1316,"mutability":"mutable","name":"c","nameLocation":"919:1:11","nodeType":"VariableDeclaration","scope":1330,"src":"911:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1315,"name":"uint256","nodeType":"ElementaryTypeName","src":"911:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1320,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1317,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1308,"src":"923:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1318,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1310,"src":"927:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"923:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"911:17:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1322,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1316,"src":"946:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1323,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1308,"src":"951:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"946:6:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"536166654d6174683a206164646974696f6e206f766572666c6f77","id":1325,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"954:29:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a","typeString":"literal_string \"SafeMath: addition overflow\""},"value":"SafeMath: addition overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a","typeString":"literal_string \"SafeMath: addition overflow\""}],"id":1321,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"938:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1326,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"938:46:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1327,"nodeType":"ExpressionStatement","src":"938:46:11"},{"expression":{"id":1328,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1316,"src":"1002:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1314,"id":1329,"nodeType":"Return","src":"995:8:11"}]},"documentation":{"id":1306,"nodeType":"StructuredDocumentation","src":"612:217:11","text":" @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."},"id":1331,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"843:3:11","nodeType":"FunctionDefinition","parameters":{"id":1311,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1308,"mutability":"mutable","name":"a","nameLocation":"855:1:11","nodeType":"VariableDeclaration","scope":1331,"src":"847:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1307,"name":"uint256","nodeType":"ElementaryTypeName","src":"847:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1310,"mutability":"mutable","name":"b","nameLocation":"866:1:11","nodeType":"VariableDeclaration","scope":1331,"src":"858:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1309,"name":"uint256","nodeType":"ElementaryTypeName","src":"858:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"846:22:11"},"returnParameters":{"id":1314,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1313,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1331,"src":"892:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1312,"name":"uint256","nodeType":"ElementaryTypeName","src":"892:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"891:9:11"},"scope":1498,"src":"834:176:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1347,"nodeType":"Block","src":"1341:67:11","statements":[{"expression":{"arguments":[{"id":1342,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1334,"src":"1362:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1343,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1336,"src":"1365:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"536166654d6174683a207375627472616374696f6e206f766572666c6f77","id":1344,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1368:32:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862","typeString":"literal_string \"SafeMath: subtraction overflow\""},"value":"SafeMath: subtraction overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862","typeString":"literal_string \"SafeMath: subtraction overflow\""}],"id":1341,"name":"sub","nodeType":"Identifier","overloadedDeclarations":[1348,1376],"referencedDeclaration":1376,"src":"1358:3:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256,uint256,string memory) pure returns (uint256)"}},"id":1345,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1358:43:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1340,"id":1346,"nodeType":"Return","src":"1351:50:11"}]},"documentation":{"id":1332,"nodeType":"StructuredDocumentation","src":"1016:253:11","text":" @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."},"id":1348,"implemented":true,"kind":"function","modifiers":[],"name":"sub","nameLocation":"1283:3:11","nodeType":"FunctionDefinition","parameters":{"id":1337,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1334,"mutability":"mutable","name":"a","nameLocation":"1295:1:11","nodeType":"VariableDeclaration","scope":1348,"src":"1287:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1333,"name":"uint256","nodeType":"ElementaryTypeName","src":"1287:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1336,"mutability":"mutable","name":"b","nameLocation":"1306:1:11","nodeType":"VariableDeclaration","scope":1348,"src":"1298:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1335,"name":"uint256","nodeType":"ElementaryTypeName","src":"1298:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1286:22:11"},"returnParameters":{"id":1340,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1339,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1348,"src":"1332:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1338,"name":"uint256","nodeType":"ElementaryTypeName","src":"1332:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1331:9:11"},"scope":1498,"src":"1274:134:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1375,"nodeType":"Block","src":"1827:92:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1361,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1353,"src":"1845:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":1362,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1351,"src":"1850:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1845:6:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1364,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1355,"src":"1853:12:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1360,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1837:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1365,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1837:29:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1366,"nodeType":"ExpressionStatement","src":"1837:29:11"},{"assignments":[1368],"declarations":[{"constant":false,"id":1368,"mutability":"mutable","name":"c","nameLocation":"1884:1:11","nodeType":"VariableDeclaration","scope":1375,"src":"1876:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1367,"name":"uint256","nodeType":"ElementaryTypeName","src":"1876:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1372,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1369,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1351,"src":"1888:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1370,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1353,"src":"1892:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1888:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1876:17:11"},{"expression":{"id":1373,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1368,"src":"1911:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1359,"id":1374,"nodeType":"Return","src":"1904:8:11"}]},"documentation":{"id":1349,"nodeType":"StructuredDocumentation","src":"1414:313:11","text":" @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow.\n _Available since v2.4.0._"},"id":1376,"implemented":true,"kind":"function","modifiers":[],"name":"sub","nameLocation":"1741:3:11","nodeType":"FunctionDefinition","parameters":{"id":1356,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1351,"mutability":"mutable","name":"a","nameLocation":"1753:1:11","nodeType":"VariableDeclaration","scope":1376,"src":"1745:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1350,"name":"uint256","nodeType":"ElementaryTypeName","src":"1745:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1353,"mutability":"mutable","name":"b","nameLocation":"1764:1:11","nodeType":"VariableDeclaration","scope":1376,"src":"1756:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1352,"name":"uint256","nodeType":"ElementaryTypeName","src":"1756:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1355,"mutability":"mutable","name":"errorMessage","nameLocation":"1781:12:11","nodeType":"VariableDeclaration","scope":1376,"src":"1767:26:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1354,"name":"string","nodeType":"ElementaryTypeName","src":"1767:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1744:50:11"},"returnParameters":{"id":1359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1358,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1376,"src":"1818:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1357,"name":"uint256","nodeType":"ElementaryTypeName","src":"1818:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1817:9:11"},"scope":1498,"src":"1732:187:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1410,"nodeType":"Block","src":"2226:392:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1386,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1379,"src":"2458:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1387,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2463:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2458:6:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1392,"nodeType":"IfStatement","src":"2454:45:11","trueBody":{"id":1391,"nodeType":"Block","src":"2466:33:11","statements":[{"expression":{"hexValue":"30","id":1389,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2487:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1385,"id":1390,"nodeType":"Return","src":"2480:8:11"}]}},{"assignments":[1394],"declarations":[{"constant":false,"id":1394,"mutability":"mutable","name":"c","nameLocation":"2517:1:11","nodeType":"VariableDeclaration","scope":1410,"src":"2509:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1393,"name":"uint256","nodeType":"ElementaryTypeName","src":"2509:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1398,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1395,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1379,"src":"2521:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1396,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1381,"src":"2525:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2521:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2509:17:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1400,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1394,"src":"2544:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1401,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1379,"src":"2548:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2544:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1403,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1381,"src":"2553:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2544:10:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77","id":1405,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2556:35:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3","typeString":"literal_string \"SafeMath: multiplication overflow\""},"value":"SafeMath: multiplication overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3","typeString":"literal_string \"SafeMath: multiplication overflow\""}],"id":1399,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2536:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1406,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2536:56:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1407,"nodeType":"ExpressionStatement","src":"2536:56:11"},{"expression":{"id":1408,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1394,"src":"2610:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1385,"id":1409,"nodeType":"Return","src":"2603:8:11"}]},"documentation":{"id":1377,"nodeType":"StructuredDocumentation","src":"1925:229:11","text":" @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."},"id":1411,"implemented":true,"kind":"function","modifiers":[],"name":"mul","nameLocation":"2168:3:11","nodeType":"FunctionDefinition","parameters":{"id":1382,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1379,"mutability":"mutable","name":"a","nameLocation":"2180:1:11","nodeType":"VariableDeclaration","scope":1411,"src":"2172:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1378,"name":"uint256","nodeType":"ElementaryTypeName","src":"2172:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1381,"mutability":"mutable","name":"b","nameLocation":"2191:1:11","nodeType":"VariableDeclaration","scope":1411,"src":"2183:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1380,"name":"uint256","nodeType":"ElementaryTypeName","src":"2183:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2171:22:11"},"returnParameters":{"id":1385,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1384,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1411,"src":"2217:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1383,"name":"uint256","nodeType":"ElementaryTypeName","src":"2217:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2216:9:11"},"scope":1498,"src":"2159:459:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1427,"nodeType":"Block","src":"3140:63:11","statements":[{"expression":{"arguments":[{"id":1422,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1414,"src":"3161:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1423,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1416,"src":"3164:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"536166654d6174683a206469766973696f6e206279207a65726f","id":1424,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3167:28:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f","typeString":"literal_string \"SafeMath: division by zero\""},"value":"SafeMath: division by zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f","typeString":"literal_string \"SafeMath: division by zero\""}],"id":1421,"name":"div","nodeType":"Identifier","overloadedDeclarations":[1428,1456],"referencedDeclaration":1456,"src":"3157:3:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256,uint256,string memory) pure returns (uint256)"}},"id":1425,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3157:39:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1420,"id":1426,"nodeType":"Return","src":"3150:46:11"}]},"documentation":{"id":1412,"nodeType":"StructuredDocumentation","src":"2624:444:11","text":" @dev Returns the integer division of two unsigned integers. Reverts on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."},"id":1428,"implemented":true,"kind":"function","modifiers":[],"name":"div","nameLocation":"3082:3:11","nodeType":"FunctionDefinition","parameters":{"id":1417,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1414,"mutability":"mutable","name":"a","nameLocation":"3094:1:11","nodeType":"VariableDeclaration","scope":1428,"src":"3086:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1413,"name":"uint256","nodeType":"ElementaryTypeName","src":"3086:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1416,"mutability":"mutable","name":"b","nameLocation":"3105:1:11","nodeType":"VariableDeclaration","scope":1428,"src":"3097:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1415,"name":"uint256","nodeType":"ElementaryTypeName","src":"3097:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3085:22:11"},"returnParameters":{"id":1420,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1419,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1428,"src":"3131:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1418,"name":"uint256","nodeType":"ElementaryTypeName","src":"3131:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3130:9:11"},"scope":1498,"src":"3073:130:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1455,"nodeType":"Block","src":"3813:243:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1441,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1433,"src":"3897:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1442,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3901:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3897:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1444,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1435,"src":"3904:12:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1440,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3889:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1445,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3889:28:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1446,"nodeType":"ExpressionStatement","src":"3889:28:11"},{"assignments":[1448],"declarations":[{"constant":false,"id":1448,"mutability":"mutable","name":"c","nameLocation":"3935:1:11","nodeType":"VariableDeclaration","scope":1455,"src":"3927:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1447,"name":"uint256","nodeType":"ElementaryTypeName","src":"3927:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1452,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1449,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1431,"src":"3939:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1450,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1433,"src":"3943:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3939:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3927:17:11"},{"expression":{"id":1453,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1448,"src":"4048:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1439,"id":1454,"nodeType":"Return","src":"4041:8:11"}]},"documentation":{"id":1429,"nodeType":"StructuredDocumentation","src":"3209:504:11","text":" @dev Returns the integer division of two unsigned integers. Reverts with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero.\n _Available since v2.4.0._"},"id":1456,"implemented":true,"kind":"function","modifiers":[],"name":"div","nameLocation":"3727:3:11","nodeType":"FunctionDefinition","parameters":{"id":1436,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1431,"mutability":"mutable","name":"a","nameLocation":"3739:1:11","nodeType":"VariableDeclaration","scope":1456,"src":"3731:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1430,"name":"uint256","nodeType":"ElementaryTypeName","src":"3731:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1433,"mutability":"mutable","name":"b","nameLocation":"3750:1:11","nodeType":"VariableDeclaration","scope":1456,"src":"3742:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1432,"name":"uint256","nodeType":"ElementaryTypeName","src":"3742:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1435,"mutability":"mutable","name":"errorMessage","nameLocation":"3767:12:11","nodeType":"VariableDeclaration","scope":1456,"src":"3753:26:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1434,"name":"string","nodeType":"ElementaryTypeName","src":"3753:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3730:50:11"},"returnParameters":{"id":1439,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1438,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1456,"src":"3804:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1437,"name":"uint256","nodeType":"ElementaryTypeName","src":"3804:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3803:9:11"},"scope":1498,"src":"3718:338:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1472,"nodeType":"Block","src":"4567:61:11","statements":[{"expression":{"arguments":[{"id":1467,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1459,"src":"4588:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1468,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1461,"src":"4591:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"536166654d6174683a206d6f64756c6f206279207a65726f","id":1469,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4594:26:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832","typeString":"literal_string \"SafeMath: modulo by zero\""},"value":"SafeMath: modulo by zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832","typeString":"literal_string \"SafeMath: modulo by zero\""}],"id":1466,"name":"mod","nodeType":"Identifier","overloadedDeclarations":[1473,1497],"referencedDeclaration":1497,"src":"4584:3:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256,uint256,string memory) pure returns (uint256)"}},"id":1470,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4584:37:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1465,"id":1471,"nodeType":"Return","src":"4577:44:11"}]},"documentation":{"id":1457,"nodeType":"StructuredDocumentation","src":"4062:433:11","text":" @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."},"id":1473,"implemented":true,"kind":"function","modifiers":[],"name":"mod","nameLocation":"4509:3:11","nodeType":"FunctionDefinition","parameters":{"id":1462,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1459,"mutability":"mutable","name":"a","nameLocation":"4521:1:11","nodeType":"VariableDeclaration","scope":1473,"src":"4513:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1458,"name":"uint256","nodeType":"ElementaryTypeName","src":"4513:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1461,"mutability":"mutable","name":"b","nameLocation":"4532:1:11","nodeType":"VariableDeclaration","scope":1473,"src":"4524:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1460,"name":"uint256","nodeType":"ElementaryTypeName","src":"4524:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4512:22:11"},"returnParameters":{"id":1465,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1464,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1473,"src":"4558:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1463,"name":"uint256","nodeType":"ElementaryTypeName","src":"4558:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4557:9:11"},"scope":1498,"src":"4500:128:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1496,"nodeType":"Block","src":"5227:68:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1486,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1478,"src":"5245:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1487,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5250:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5245:6:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1489,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1480,"src":"5253:12:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1485,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5237:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1490,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5237:29:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1491,"nodeType":"ExpressionStatement","src":"5237:29:11"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1492,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1476,"src":"5283:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":1493,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1478,"src":"5287:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5283:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1484,"id":1495,"nodeType":"Return","src":"5276:12:11"}]},"documentation":{"id":1474,"nodeType":"StructuredDocumentation","src":"4634:493:11","text":" @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts with custom message when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero.\n _Available since v2.4.0._"},"id":1497,"implemented":true,"kind":"function","modifiers":[],"name":"mod","nameLocation":"5141:3:11","nodeType":"FunctionDefinition","parameters":{"id":1481,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1476,"mutability":"mutable","name":"a","nameLocation":"5153:1:11","nodeType":"VariableDeclaration","scope":1497,"src":"5145:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1475,"name":"uint256","nodeType":"ElementaryTypeName","src":"5145:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1478,"mutability":"mutable","name":"b","nameLocation":"5164:1:11","nodeType":"VariableDeclaration","scope":1497,"src":"5156:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1477,"name":"uint256","nodeType":"ElementaryTypeName","src":"5156:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1480,"mutability":"mutable","name":"errorMessage","nameLocation":"5181:12:11","nodeType":"VariableDeclaration","scope":1497,"src":"5167:26:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1479,"name":"string","nodeType":"ElementaryTypeName","src":"5167:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5144:50:11"},"returnParameters":{"id":1484,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1483,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1497,"src":"5218:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1482,"name":"uint256","nodeType":"ElementaryTypeName","src":"5218:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5217:9:11"},"scope":1498,"src":"5132:163:11","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1499,"src":"589:4708:11","usedErrors":[]}],"src":"0:5298:11"},"id":11},"contracts/interfaces/AutoRefactorCoinageI.sol":{"ast":{"absolutePath":"contracts/interfaces/AutoRefactorCoinageI.sol","exportedSymbols":{"AutoRefactorCoinageI":[1559]},"id":1560,"nodeType":"SourceUnit","nodes":[{"id":1500,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"0:23:12"},{"abstract":false,"baseContracts":[],"canonicalName":"AutoRefactorCoinageI","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":1559,"linearizedBaseContracts":[1559],"name":"AutoRefactorCoinageI","nameLocation":"35:20:12","nodeType":"ContractDefinition","nodes":[{"functionSelector":"54f703f8","id":1505,"implemented":false,"kind":"function","modifiers":[],"name":"factor","nameLocation":"69:6:12","nodeType":"FunctionDefinition","parameters":{"id":1501,"nodeType":"ParameterList","parameters":[],"src":"75:2:12"},"returnParameters":{"id":1504,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1503,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1505,"src":"101:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1502,"name":"uint256","nodeType":"ElementaryTypeName","src":"101:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"100:9:12"},"scope":1559,"src":"60:50:12","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"817e9d31","id":1512,"implemented":false,"kind":"function","modifiers":[],"name":"setFactor","nameLocation":"122:9:12","nodeType":"FunctionDefinition","parameters":{"id":1508,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1507,"mutability":"mutable","name":"factor","nameLocation":"140:6:12","nodeType":"VariableDeclaration","scope":1512,"src":"132:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1506,"name":"uint256","nodeType":"ElementaryTypeName","src":"132:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"131:16:12"},"returnParameters":{"id":1511,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1510,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1512,"src":"166:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1509,"name":"bool","nodeType":"ElementaryTypeName","src":"166:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"165:6:12"},"scope":1559,"src":"113:59:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"42966c68","id":1517,"implemented":false,"kind":"function","modifiers":[],"name":"burn","nameLocation":"184:4:12","nodeType":"FunctionDefinition","parameters":{"id":1515,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1514,"mutability":"mutable","name":"amount","nameLocation":"197:6:12","nodeType":"VariableDeclaration","scope":1517,"src":"189:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1513,"name":"uint256","nodeType":"ElementaryTypeName","src":"189:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"188:16:12"},"returnParameters":{"id":1516,"nodeType":"ParameterList","parameters":[],"src":"213:0:12"},"scope":1559,"src":"175:39:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"79cc6790","id":1524,"implemented":false,"kind":"function","modifiers":[],"name":"burnFrom","nameLocation":"226:8:12","nodeType":"FunctionDefinition","parameters":{"id":1522,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1519,"mutability":"mutable","name":"account","nameLocation":"243:7:12","nodeType":"VariableDeclaration","scope":1524,"src":"235:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1518,"name":"address","nodeType":"ElementaryTypeName","src":"235:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1521,"mutability":"mutable","name":"amount","nameLocation":"260:6:12","nodeType":"VariableDeclaration","scope":1524,"src":"252:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1520,"name":"uint256","nodeType":"ElementaryTypeName","src":"252:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"234:33:12"},"returnParameters":{"id":1523,"nodeType":"ParameterList","parameters":[],"src":"276:0:12"},"scope":1559,"src":"217:60:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"40c10f19","id":1533,"implemented":false,"kind":"function","modifiers":[],"name":"mint","nameLocation":"289:4:12","nodeType":"FunctionDefinition","parameters":{"id":1529,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1526,"mutability":"mutable","name":"account","nameLocation":"302:7:12","nodeType":"VariableDeclaration","scope":1533,"src":"294:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1525,"name":"address","nodeType":"ElementaryTypeName","src":"294:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1528,"mutability":"mutable","name":"amount","nameLocation":"319:6:12","nodeType":"VariableDeclaration","scope":1533,"src":"311:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1527,"name":"uint256","nodeType":"ElementaryTypeName","src":"311:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"293:33:12"},"returnParameters":{"id":1532,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1531,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1533,"src":"345:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1530,"name":"bool","nodeType":"ElementaryTypeName","src":"345:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"344:6:12"},"scope":1559,"src":"280:71:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"18160ddd","id":1538,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"363:11:12","nodeType":"FunctionDefinition","parameters":{"id":1534,"nodeType":"ParameterList","parameters":[],"src":"374:2:12"},"returnParameters":{"id":1537,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1536,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1538,"src":"400:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1535,"name":"uint256","nodeType":"ElementaryTypeName","src":"400:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"399:9:12"},"scope":1559,"src":"354:55:12","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"70a08231","id":1545,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"421:9:12","nodeType":"FunctionDefinition","parameters":{"id":1541,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1540,"mutability":"mutable","name":"account","nameLocation":"439:7:12","nodeType":"VariableDeclaration","scope":1545,"src":"431:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1539,"name":"address","nodeType":"ElementaryTypeName","src":"431:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"430:17:12"},"returnParameters":{"id":1544,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1543,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1545,"src":"471:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1542,"name":"uint256","nodeType":"ElementaryTypeName","src":"471:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"470:9:12"},"scope":1559,"src":"412:68:12","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"983b2d56","id":1550,"implemented":false,"kind":"function","modifiers":[],"name":"addMinter","nameLocation":"492:9:12","nodeType":"FunctionDefinition","parameters":{"id":1548,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1547,"mutability":"mutable","name":"account","nameLocation":"510:7:12","nodeType":"VariableDeclaration","scope":1550,"src":"502:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1546,"name":"address","nodeType":"ElementaryTypeName","src":"502:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"501:17:12"},"returnParameters":{"id":1549,"nodeType":"ParameterList","parameters":[],"src":"527:0:12"},"scope":1559,"src":"483:45:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"98650275","id":1553,"implemented":false,"kind":"function","modifiers":[],"name":"renounceMinter","nameLocation":"540:14:12","nodeType":"FunctionDefinition","parameters":{"id":1551,"nodeType":"ParameterList","parameters":[],"src":"554:2:12"},"returnParameters":{"id":1552,"nodeType":"ParameterList","parameters":[],"src":"565:0:12"},"scope":1559,"src":"531:35:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"f2fde38b","id":1558,"implemented":false,"kind":"function","modifiers":[],"name":"transferOwnership","nameLocation":"578:17:12","nodeType":"FunctionDefinition","parameters":{"id":1556,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1555,"mutability":"mutable","name":"newOwner","nameLocation":"604:8:12","nodeType":"VariableDeclaration","scope":1558,"src":"596:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1554,"name":"address","nodeType":"ElementaryTypeName","src":"596:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"595:18:12"},"returnParameters":{"id":1557,"nodeType":"ParameterList","parameters":[],"src":"622:0:12"},"scope":1559,"src":"569:54:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1560,"src":"25:600:12","usedErrors":[]}],"src":"0:626:12"},"id":12},"contracts/interfaces/CoinageFactoryI.sol":{"ast":{"absolutePath":"contracts/interfaces/CoinageFactoryI.sol","exportedSymbols":{"CoinageFactoryI":[1567]},"id":1568,"nodeType":"SourceUnit","nodes":[{"id":1561,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"0:23:13"},{"abstract":false,"baseContracts":[],"canonicalName":"CoinageFactoryI","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":1567,"linearizedBaseContracts":[1567],"name":"CoinageFactoryI","nameLocation":"35:15:13","nodeType":"ContractDefinition","nodes":[{"functionSelector":"775c300c","id":1566,"implemented":false,"kind":"function","modifiers":[],"name":"deploy","nameLocation":"64:6:13","nodeType":"FunctionDefinition","parameters":{"id":1562,"nodeType":"ParameterList","parameters":[],"src":"70:2:13"},"returnParameters":{"id":1565,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1564,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1566,"src":"91:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1563,"name":"address","nodeType":"ElementaryTypeName","src":"91:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"90:9:13"},"scope":1567,"src":"55:45:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1568,"src":"25:77:13","usedErrors":[]}],"src":"0:103:13"},"id":13},"contracts/lib/DSMath.sol":{"ast":{"absolutePath":"contracts/lib/DSMath.sol","exportedSymbols":{"DSMath":[2002]},"id":2003,"license":"GPL-3.0-or-later","nodeType":"SourceUnit","nodes":[{"id":1569,"literals":["solidity",">","0.4",".13"],"nodeType":"PragmaDirective","src":"805:24:14"},{"abstract":false,"baseContracts":[],"canonicalName":"DSMath","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":2002,"linearizedBaseContracts":[2002],"name":"DSMath","nameLocation":"840:6:14","nodeType":"ContractDefinition","nodes":[{"body":{"id":1590,"nodeType":"Block","src":"922:66:14","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"id":1583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1579,"name":"z","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1576,"src":"941:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1580,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1571,"src":"945:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1581,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1573,"src":"949:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"945:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"941:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1584,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"940:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1585,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1571,"src":"955:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"940:16:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"64732d6d6174682d6164642d6f766572666c6f77","id":1587,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"958:22:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_3903056b84ed2aba2be78662dc6c5c99b160cebe9af9bd9493d0fc28ff16f6db","typeString":"literal_string \"ds-math-add-overflow\""},"value":"ds-math-add-overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3903056b84ed2aba2be78662dc6c5c99b160cebe9af9bd9493d0fc28ff16f6db","typeString":"literal_string \"ds-math-add-overflow\""}],"id":1578,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"932:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1588,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"932:49:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1589,"nodeType":"ExpressionStatement","src":"932:49:14"}]},"id":1591,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"862:3:14","nodeType":"FunctionDefinition","parameters":{"id":1574,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1571,"mutability":"mutable","name":"x","nameLocation":"874:1:14","nodeType":"VariableDeclaration","scope":1591,"src":"866:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1570,"name":"uint256","nodeType":"ElementaryTypeName","src":"866:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1573,"mutability":"mutable","name":"y","nameLocation":"885:1:14","nodeType":"VariableDeclaration","scope":1591,"src":"877:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1572,"name":"uint256","nodeType":"ElementaryTypeName","src":"877:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"865:22:14"},"returnParameters":{"id":1577,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1576,"mutability":"mutable","name":"z","nameLocation":"919:1:14","nodeType":"VariableDeclaration","scope":1591,"src":"911:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1575,"name":"uint256","nodeType":"ElementaryTypeName","src":"911:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"910:11:14"},"scope":2002,"src":"853:135:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1612,"nodeType":"Block","src":"1063:67:14","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"id":1605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1601,"name":"z","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1598,"src":"1082:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1602,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1593,"src":"1086:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1603,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1595,"src":"1090:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1086:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1082:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1606,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1081:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":1607,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1593,"src":"1096:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1081:16:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"64732d6d6174682d7375622d756e646572666c6f77","id":1609,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1099:23:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_03b20b9f6e6e7905f077509fd420fb44afc685f254bcefe49147296e1ba25590","typeString":"literal_string \"ds-math-sub-underflow\""},"value":"ds-math-sub-underflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_03b20b9f6e6e7905f077509fd420fb44afc685f254bcefe49147296e1ba25590","typeString":"literal_string \"ds-math-sub-underflow\""}],"id":1600,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1073:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1610,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1073:50:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1611,"nodeType":"ExpressionStatement","src":"1073:50:14"}]},"id":1613,"implemented":true,"kind":"function","modifiers":[],"name":"sub","nameLocation":"1003:3:14","nodeType":"FunctionDefinition","parameters":{"id":1596,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1593,"mutability":"mutable","name":"x","nameLocation":"1015:1:14","nodeType":"VariableDeclaration","scope":1613,"src":"1007:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1592,"name":"uint256","nodeType":"ElementaryTypeName","src":"1007:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1595,"mutability":"mutable","name":"y","nameLocation":"1026:1:14","nodeType":"VariableDeclaration","scope":1613,"src":"1018:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1594,"name":"uint256","nodeType":"ElementaryTypeName","src":"1018:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1006:22:14"},"returnParameters":{"id":1599,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1598,"mutability":"mutable","name":"z","nameLocation":"1060:1:14","nodeType":"VariableDeclaration","scope":1613,"src":"1052:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1597,"name":"uint256","nodeType":"ElementaryTypeName","src":"1052:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1051:11:14"},"scope":2002,"src":"994:136:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1640,"nodeType":"Block","src":"1205:80:14","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1623,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1617,"src":"1223:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1624,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1228:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1223:6:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"id":1630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1626,"name":"z","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1620,"src":"1234:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1627,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1615,"src":"1238:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1628,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1617,"src":"1242:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1238:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1234:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1631,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1233:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1632,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1617,"src":"1247:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1233:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1634,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1615,"src":"1252:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1233:20:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1223:30:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"64732d6d6174682d6d756c2d6f766572666c6f77","id":1637,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1255:22:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_25a0ef6406c6af6852555433653ce478274cd9f03a5dec44d001868a76b3bfdd","typeString":"literal_string \"ds-math-mul-overflow\""},"value":"ds-math-mul-overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_25a0ef6406c6af6852555433653ce478274cd9f03a5dec44d001868a76b3bfdd","typeString":"literal_string \"ds-math-mul-overflow\""}],"id":1622,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1215:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1638,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1215:63:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1639,"nodeType":"ExpressionStatement","src":"1215:63:14"}]},"id":1641,"implemented":true,"kind":"function","modifiers":[],"name":"mul","nameLocation":"1145:3:14","nodeType":"FunctionDefinition","parameters":{"id":1618,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1615,"mutability":"mutable","name":"x","nameLocation":"1157:1:14","nodeType":"VariableDeclaration","scope":1641,"src":"1149:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1614,"name":"uint256","nodeType":"ElementaryTypeName","src":"1149:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1617,"mutability":"mutable","name":"y","nameLocation":"1168:1:14","nodeType":"VariableDeclaration","scope":1641,"src":"1160:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1616,"name":"uint256","nodeType":"ElementaryTypeName","src":"1160:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1148:22:14"},"returnParameters":{"id":1621,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1620,"mutability":"mutable","name":"z","nameLocation":"1202:1:14","nodeType":"VariableDeclaration","scope":1641,"src":"1194:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1619,"name":"uint256","nodeType":"ElementaryTypeName","src":"1194:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1193:11:14"},"scope":2002,"src":"1136:149:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1657,"nodeType":"Block","src":"1360:38:14","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1650,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1643,"src":"1377:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":1651,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1645,"src":"1382:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1377:6:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":1654,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1645,"src":"1390:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1377:14:14","trueExpression":{"id":1653,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1643,"src":"1386:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1649,"id":1656,"nodeType":"Return","src":"1370:21:14"}]},"id":1658,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"1300:3:14","nodeType":"FunctionDefinition","parameters":{"id":1646,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1643,"mutability":"mutable","name":"x","nameLocation":"1312:1:14","nodeType":"VariableDeclaration","scope":1658,"src":"1304:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1642,"name":"uint256","nodeType":"ElementaryTypeName","src":"1304:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1645,"mutability":"mutable","name":"y","nameLocation":"1323:1:14","nodeType":"VariableDeclaration","scope":1658,"src":"1315:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1644,"name":"uint256","nodeType":"ElementaryTypeName","src":"1315:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1303:22:14"},"returnParameters":{"id":1649,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1648,"mutability":"mutable","name":"z","nameLocation":"1357:1:14","nodeType":"VariableDeclaration","scope":1658,"src":"1349:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1647,"name":"uint256","nodeType":"ElementaryTypeName","src":"1349:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1348:11:14"},"scope":2002,"src":"1291:107:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1674,"nodeType":"Block","src":"1473:38:14","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1667,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1660,"src":"1490:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1668,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1662,"src":"1495:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1490:6:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":1671,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1662,"src":"1503:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1490:14:14","trueExpression":{"id":1670,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1660,"src":"1499:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1666,"id":1673,"nodeType":"Return","src":"1483:21:14"}]},"id":1675,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"1413:3:14","nodeType":"FunctionDefinition","parameters":{"id":1663,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1660,"mutability":"mutable","name":"x","nameLocation":"1425:1:14","nodeType":"VariableDeclaration","scope":1675,"src":"1417:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1659,"name":"uint256","nodeType":"ElementaryTypeName","src":"1417:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1662,"mutability":"mutable","name":"y","nameLocation":"1436:1:14","nodeType":"VariableDeclaration","scope":1675,"src":"1428:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1661,"name":"uint256","nodeType":"ElementaryTypeName","src":"1428:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1416:22:14"},"returnParameters":{"id":1666,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1665,"mutability":"mutable","name":"z","nameLocation":"1470:1:14","nodeType":"VariableDeclaration","scope":1675,"src":"1462:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1664,"name":"uint256","nodeType":"ElementaryTypeName","src":"1462:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1461:11:14"},"scope":2002,"src":"1404:107:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1691,"nodeType":"Block","src":"1584:38:14","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1684,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1677,"src":"1601:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":1685,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1679,"src":"1606:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1601:6:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":1688,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1679,"src":"1614:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":1689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1601:14:14","trueExpression":{"id":1687,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1677,"src":"1610:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":1683,"id":1690,"nodeType":"Return","src":"1594:21:14"}]},"id":1692,"implemented":true,"kind":"function","modifiers":[],"name":"imin","nameLocation":"1526:4:14","nodeType":"FunctionDefinition","parameters":{"id":1680,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1677,"mutability":"mutable","name":"x","nameLocation":"1538:1:14","nodeType":"VariableDeclaration","scope":1692,"src":"1531:8:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1676,"name":"int256","nodeType":"ElementaryTypeName","src":"1531:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":1679,"mutability":"mutable","name":"y","nameLocation":"1548:1:14","nodeType":"VariableDeclaration","scope":1692,"src":"1541:8:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1678,"name":"int256","nodeType":"ElementaryTypeName","src":"1541:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1530:20:14"},"returnParameters":{"id":1683,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1682,"mutability":"mutable","name":"z","nameLocation":"1581:1:14","nodeType":"VariableDeclaration","scope":1692,"src":"1574:8:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1681,"name":"int256","nodeType":"ElementaryTypeName","src":"1574:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1573:10:14"},"scope":2002,"src":"1517:105:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1708,"nodeType":"Block","src":"1695:38:14","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1701,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1694,"src":"1712:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1702,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1696,"src":"1717:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1712:6:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":1705,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1696,"src":"1725:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":1706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1712:14:14","trueExpression":{"id":1704,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1694,"src":"1721:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":1700,"id":1707,"nodeType":"Return","src":"1705:21:14"}]},"id":1709,"implemented":true,"kind":"function","modifiers":[],"name":"imax","nameLocation":"1637:4:14","nodeType":"FunctionDefinition","parameters":{"id":1697,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1694,"mutability":"mutable","name":"x","nameLocation":"1649:1:14","nodeType":"VariableDeclaration","scope":1709,"src":"1642:8:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1693,"name":"int256","nodeType":"ElementaryTypeName","src":"1642:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":1696,"mutability":"mutable","name":"y","nameLocation":"1659:1:14","nodeType":"VariableDeclaration","scope":1709,"src":"1652:8:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1695,"name":"int256","nodeType":"ElementaryTypeName","src":"1652:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1641:20:14"},"returnParameters":{"id":1700,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1699,"mutability":"mutable","name":"z","nameLocation":"1692:1:14","nodeType":"VariableDeclaration","scope":1709,"src":"1685:8:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1698,"name":"int256","nodeType":"ElementaryTypeName","src":"1685:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1684:10:14"},"scope":2002,"src":"1628:105:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"constant":true,"id":1714,"mutability":"constant","name":"WAD","nameLocation":"1756:3:14","nodeType":"VariableDeclaration","scope":2002,"src":"1739:29:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1710,"name":"uint256","nodeType":"ElementaryTypeName","src":"1739:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"id":1713,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1711,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1762:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3138","id":1712,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1766:2:14","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"src":"1762:6:14","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}},"visibility":"internal"},{"constant":true,"id":1719,"mutability":"constant","name":"RAY","nameLocation":"1791:3:14","nodeType":"VariableDeclaration","scope":2002,"src":"1774:29:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1715,"name":"uint256","nodeType":"ElementaryTypeName","src":"1774:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_1000000000000000000000000000_by_1","typeString":"int_const 1000000000000000000000000000"},"id":1718,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1716,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1797:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3237","id":1717,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1801:2:14","typeDescriptions":{"typeIdentifier":"t_rational_27_by_1","typeString":"int_const 27"},"value":"27"},"src":"1797:6:14","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000000000000_by_1","typeString":"int_const 1000000000000000000000000000"}},"visibility":"internal"},{"body":{"id":1742,"nodeType":"Block","src":"1880:50:14","statements":[{"expression":{"id":1740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1728,"name":"z","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1726,"src":"1890:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":1731,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1721,"src":"1902:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1732,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1723,"src":"1905:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1730,"name":"mul","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1641,"src":"1898:3:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1733,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1898:9:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1736,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"id":1734,"name":"WAD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1714,"src":"1909:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":1735,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1915:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"1909:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1729,"name":"add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1591,"src":"1894:3:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1737,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1894:23:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1738,"name":"WAD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1714,"src":"1920:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1894:29:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1890:33:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1741,"nodeType":"ExpressionStatement","src":"1890:33:14"}]},"id":1743,"implemented":true,"kind":"function","modifiers":[],"name":"wmul","nameLocation":"1819:4:14","nodeType":"FunctionDefinition","parameters":{"id":1724,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1721,"mutability":"mutable","name":"x","nameLocation":"1832:1:14","nodeType":"VariableDeclaration","scope":1743,"src":"1824:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1720,"name":"uint256","nodeType":"ElementaryTypeName","src":"1824:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1723,"mutability":"mutable","name":"y","nameLocation":"1843:1:14","nodeType":"VariableDeclaration","scope":1743,"src":"1835:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1722,"name":"uint256","nodeType":"ElementaryTypeName","src":"1835:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1823:22:14"},"returnParameters":{"id":1727,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1726,"mutability":"mutable","name":"z","nameLocation":"1877:1:14","nodeType":"VariableDeclaration","scope":1743,"src":"1869:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1725,"name":"uint256","nodeType":"ElementaryTypeName","src":"1869:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1868:11:14"},"scope":2002,"src":"1810:120:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1766,"nodeType":"Block","src":"2006:50:14","statements":[{"expression":{"id":1764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1752,"name":"z","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1750,"src":"2016:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":1755,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1745,"src":"2028:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1756,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1747,"src":"2031:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1754,"name":"mul","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1641,"src":"2024:3:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1757,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2024:9:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1760,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"id":1758,"name":"RAY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1719,"src":"2035:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":1759,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2041:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2035:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1753,"name":"add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1591,"src":"2020:3:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1761,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2020:23:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1762,"name":"RAY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1719,"src":"2046:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2020:29:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2016:33:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1765,"nodeType":"ExpressionStatement","src":"2016:33:14"}]},"id":1767,"implemented":true,"kind":"function","modifiers":[],"name":"rmul","nameLocation":"1945:4:14","nodeType":"FunctionDefinition","parameters":{"id":1748,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1745,"mutability":"mutable","name":"x","nameLocation":"1958:1:14","nodeType":"VariableDeclaration","scope":1767,"src":"1950:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1744,"name":"uint256","nodeType":"ElementaryTypeName","src":"1950:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1747,"mutability":"mutable","name":"y","nameLocation":"1969:1:14","nodeType":"VariableDeclaration","scope":1767,"src":"1961:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1746,"name":"uint256","nodeType":"ElementaryTypeName","src":"1961:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1949:22:14"},"returnParameters":{"id":1751,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1750,"mutability":"mutable","name":"z","nameLocation":"2003:1:14","nodeType":"VariableDeclaration","scope":1767,"src":"1995:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1749,"name":"uint256","nodeType":"ElementaryTypeName","src":"1995:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1994:11:14"},"scope":2002,"src":"1936:120:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1790,"nodeType":"Block","src":"2132:48:14","statements":[{"expression":{"id":1788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1776,"name":"z","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1774,"src":"2142:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":1779,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1769,"src":"2154:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1780,"name":"WAD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1714,"src":"2157:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1778,"name":"mul","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1641,"src":"2150:3:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1781,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2150:11:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1784,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1782,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1771,"src":"2163:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":1783,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2167:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2163:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1777,"name":"add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1591,"src":"2146:3:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1785,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2146:23:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1786,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1771,"src":"2172:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2146:27:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2142:31:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1789,"nodeType":"ExpressionStatement","src":"2142:31:14"}]},"id":1791,"implemented":true,"kind":"function","modifiers":[],"name":"wdiv","nameLocation":"2071:4:14","nodeType":"FunctionDefinition","parameters":{"id":1772,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1769,"mutability":"mutable","name":"x","nameLocation":"2084:1:14","nodeType":"VariableDeclaration","scope":1791,"src":"2076:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1768,"name":"uint256","nodeType":"ElementaryTypeName","src":"2076:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1771,"mutability":"mutable","name":"y","nameLocation":"2095:1:14","nodeType":"VariableDeclaration","scope":1791,"src":"2087:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1770,"name":"uint256","nodeType":"ElementaryTypeName","src":"2087:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2075:22:14"},"returnParameters":{"id":1775,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1774,"mutability":"mutable","name":"z","nameLocation":"2129:1:14","nodeType":"VariableDeclaration","scope":1791,"src":"2121:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1773,"name":"uint256","nodeType":"ElementaryTypeName","src":"2121:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2120:11:14"},"scope":2002,"src":"2062:118:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1814,"nodeType":"Block","src":"2256:48:14","statements":[{"expression":{"id":1812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1800,"name":"z","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1798,"src":"2266:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":1803,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1793,"src":"2278:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1804,"name":"RAY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1719,"src":"2281:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1802,"name":"mul","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1641,"src":"2274:3:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1805,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2274:11:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1806,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1795,"src":"2287:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":1807,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2291:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2287:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1801,"name":"add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1591,"src":"2270:3:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1809,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2270:23:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1810,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1795,"src":"2296:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2270:27:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2266:31:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1813,"nodeType":"ExpressionStatement","src":"2266:31:14"}]},"id":1815,"implemented":true,"kind":"function","modifiers":[],"name":"rdiv","nameLocation":"2195:4:14","nodeType":"FunctionDefinition","parameters":{"id":1796,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1793,"mutability":"mutable","name":"x","nameLocation":"2208:1:14","nodeType":"VariableDeclaration","scope":1815,"src":"2200:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1792,"name":"uint256","nodeType":"ElementaryTypeName","src":"2200:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1795,"mutability":"mutable","name":"y","nameLocation":"2219:1:14","nodeType":"VariableDeclaration","scope":1815,"src":"2211:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1794,"name":"uint256","nodeType":"ElementaryTypeName","src":"2211:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2199:22:14"},"returnParameters":{"id":1799,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1798,"mutability":"mutable","name":"z","nameLocation":"2253:1:14","nodeType":"VariableDeclaration","scope":1815,"src":"2245:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1797,"name":"uint256","nodeType":"ElementaryTypeName","src":"2245:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2244:11:14"},"scope":2002,"src":"2186:118:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1833,"nodeType":"Block","src":"2381:36:14","statements":[{"expression":{"id":1831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1824,"name":"z","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1822,"src":"2391:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1826,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1817,"src":"2399:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1827,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1819,"src":"2402:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1825,"name":"mul","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1641,"src":"2395:3:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1828,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2395:9:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1829,"name":"WAD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1714,"src":"2407:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2395:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2391:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1832,"nodeType":"ExpressionStatement","src":"2391:19:14"}]},"id":1834,"implemented":true,"kind":"function","modifiers":[],"name":"wmul2","nameLocation":"2319:5:14","nodeType":"FunctionDefinition","parameters":{"id":1820,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1817,"mutability":"mutable","name":"x","nameLocation":"2333:1:14","nodeType":"VariableDeclaration","scope":1834,"src":"2325:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1816,"name":"uint256","nodeType":"ElementaryTypeName","src":"2325:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1819,"mutability":"mutable","name":"y","nameLocation":"2344:1:14","nodeType":"VariableDeclaration","scope":1834,"src":"2336:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1818,"name":"uint256","nodeType":"ElementaryTypeName","src":"2336:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2324:22:14"},"returnParameters":{"id":1823,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1822,"mutability":"mutable","name":"z","nameLocation":"2378:1:14","nodeType":"VariableDeclaration","scope":1834,"src":"2370:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1821,"name":"uint256","nodeType":"ElementaryTypeName","src":"2370:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2369:11:14"},"scope":2002,"src":"2310:107:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1852,"nodeType":"Block","src":"2494:36:14","statements":[{"expression":{"id":1850,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1843,"name":"z","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1841,"src":"2504:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1845,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1836,"src":"2512:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1846,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1838,"src":"2515:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1844,"name":"mul","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1641,"src":"2508:3:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1847,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2508:9:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1848,"name":"RAY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1719,"src":"2520:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2508:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2504:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1851,"nodeType":"ExpressionStatement","src":"2504:19:14"}]},"id":1853,"implemented":true,"kind":"function","modifiers":[],"name":"rmul2","nameLocation":"2432:5:14","nodeType":"FunctionDefinition","parameters":{"id":1839,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1836,"mutability":"mutable","name":"x","nameLocation":"2446:1:14","nodeType":"VariableDeclaration","scope":1853,"src":"2438:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1835,"name":"uint256","nodeType":"ElementaryTypeName","src":"2438:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1838,"mutability":"mutable","name":"y","nameLocation":"2457:1:14","nodeType":"VariableDeclaration","scope":1853,"src":"2449:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1837,"name":"uint256","nodeType":"ElementaryTypeName","src":"2449:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2437:22:14"},"returnParameters":{"id":1842,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1841,"mutability":"mutable","name":"z","nameLocation":"2491:1:14","nodeType":"VariableDeclaration","scope":1853,"src":"2483:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1840,"name":"uint256","nodeType":"ElementaryTypeName","src":"2483:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2482:11:14"},"scope":2002,"src":"2423:107:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1871,"nodeType":"Block","src":"2607:36:14","statements":[{"expression":{"id":1869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1862,"name":"z","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1860,"src":"2617:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1864,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1855,"src":"2625:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1865,"name":"WAD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1714,"src":"2628:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1863,"name":"mul","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1641,"src":"2621:3:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1866,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2621:11:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1867,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1857,"src":"2635:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2621:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2617:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1870,"nodeType":"ExpressionStatement","src":"2617:19:14"}]},"id":1872,"implemented":true,"kind":"function","modifiers":[],"name":"wdiv2","nameLocation":"2545:5:14","nodeType":"FunctionDefinition","parameters":{"id":1858,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1855,"mutability":"mutable","name":"x","nameLocation":"2559:1:14","nodeType":"VariableDeclaration","scope":1872,"src":"2551:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1854,"name":"uint256","nodeType":"ElementaryTypeName","src":"2551:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1857,"mutability":"mutable","name":"y","nameLocation":"2570:1:14","nodeType":"VariableDeclaration","scope":1872,"src":"2562:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1856,"name":"uint256","nodeType":"ElementaryTypeName","src":"2562:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2550:22:14"},"returnParameters":{"id":1861,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1860,"mutability":"mutable","name":"z","nameLocation":"2604:1:14","nodeType":"VariableDeclaration","scope":1872,"src":"2596:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1859,"name":"uint256","nodeType":"ElementaryTypeName","src":"2596:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2595:11:14"},"scope":2002,"src":"2536:107:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1890,"nodeType":"Block","src":"2720:36:14","statements":[{"expression":{"id":1888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1881,"name":"z","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1879,"src":"2730:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1883,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1874,"src":"2738:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1884,"name":"RAY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1719,"src":"2741:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1882,"name":"mul","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1641,"src":"2734:3:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1885,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2734:11:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1886,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1876,"src":"2748:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2734:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2730:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1889,"nodeType":"ExpressionStatement","src":"2730:19:14"}]},"id":1891,"implemented":true,"kind":"function","modifiers":[],"name":"rdiv2","nameLocation":"2658:5:14","nodeType":"FunctionDefinition","parameters":{"id":1877,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1874,"mutability":"mutable","name":"x","nameLocation":"2672:1:14","nodeType":"VariableDeclaration","scope":1891,"src":"2664:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1873,"name":"uint256","nodeType":"ElementaryTypeName","src":"2664:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1876,"mutability":"mutable","name":"y","nameLocation":"2683:1:14","nodeType":"VariableDeclaration","scope":1891,"src":"2675:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1875,"name":"uint256","nodeType":"ElementaryTypeName","src":"2675:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2663:22:14"},"returnParameters":{"id":1880,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1879,"mutability":"mutable","name":"z","nameLocation":"2717:1:14","nodeType":"VariableDeclaration","scope":1891,"src":"2709:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1878,"name":"uint256","nodeType":"ElementaryTypeName","src":"2709:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2708:11:14"},"scope":2002,"src":"2649:107:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1945,"nodeType":"Block","src":"3385:196:14","statements":[{"expression":{"id":1909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1900,"name":"z","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1898,"src":"3395:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1905,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1901,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1895,"src":"3399:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":1902,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3403:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"3399:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1904,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3408:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3399:10:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":1907,"name":"WAD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1714,"src":"3416:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"3399:20:14","trueExpression":{"id":1906,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1893,"src":"3412:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3395:24:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1910,"nodeType":"ExpressionStatement","src":"3395:24:14"},{"body":{"id":1943,"nodeType":"Block","src":"3459:116:14","statements":[{"expression":{"id":1927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1922,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1893,"src":"3473:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1924,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1893,"src":"3482:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1925,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1893,"src":"3485:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1923,"name":"wmul","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1743,"src":"3477:4:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1926,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3477:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3473:14:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1928,"nodeType":"ExpressionStatement","src":"3473:14:14"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1929,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1895,"src":"3506:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":1930,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3510:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"3506:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1932,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3515:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3506:10:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1942,"nodeType":"IfStatement","src":"3502:63:14","trueBody":{"id":1941,"nodeType":"Block","src":"3518:47:14","statements":[{"expression":{"id":1939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1934,"name":"z","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1898,"src":"3536:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1936,"name":"z","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1898,"src":"3545:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1937,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1893,"src":"3548:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1935,"name":"wmul","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1743,"src":"3540:4:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1938,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3540:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3536:14:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1940,"nodeType":"ExpressionStatement","src":"3536:14:14"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1915,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1895,"src":"3443:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1916,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3448:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3443:6:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1944,"initializationExpression":{"expression":{"id":1913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1911,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1895,"src":"3435:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"32","id":1912,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3440:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"3435:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1914,"nodeType":"ExpressionStatement","src":"3435:6:14"},"loopExpression":{"expression":{"id":1920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1918,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1895,"src":"3451:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"32","id":1919,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3456:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"3451:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1921,"nodeType":"ExpressionStatement","src":"3451:6:14"},"nodeType":"ForStatement","src":"3430:145:14"}]},"id":1946,"implemented":true,"kind":"function","modifiers":[],"name":"wpow","nameLocation":"3324:4:14","nodeType":"FunctionDefinition","parameters":{"id":1896,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1893,"mutability":"mutable","name":"x","nameLocation":"3337:1:14","nodeType":"VariableDeclaration","scope":1946,"src":"3329:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1892,"name":"uint256","nodeType":"ElementaryTypeName","src":"3329:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1895,"mutability":"mutable","name":"n","nameLocation":"3348:1:14","nodeType":"VariableDeclaration","scope":1946,"src":"3340:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1894,"name":"uint256","nodeType":"ElementaryTypeName","src":"3340:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3328:22:14"},"returnParameters":{"id":1899,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1898,"mutability":"mutable","name":"z","nameLocation":"3382:1:14","nodeType":"VariableDeclaration","scope":1946,"src":"3374:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1897,"name":"uint256","nodeType":"ElementaryTypeName","src":"3374:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3373:11:14"},"scope":2002,"src":"3315:266:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2000,"nodeType":"Block","src":"3657:196:14","statements":[{"expression":{"id":1964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1955,"name":"z","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1953,"src":"3667:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1956,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1950,"src":"3671:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":1957,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3675:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"3671:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1959,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3680:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3671:10:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":1962,"name":"RAY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1719,"src":"3688:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"3671:20:14","trueExpression":{"id":1961,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1948,"src":"3684:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3667:24:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1965,"nodeType":"ExpressionStatement","src":"3667:24:14"},{"body":{"id":1998,"nodeType":"Block","src":"3731:116:14","statements":[{"expression":{"id":1982,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1977,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1948,"src":"3745:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1979,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1948,"src":"3754:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1980,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1948,"src":"3757:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1978,"name":"rmul","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1767,"src":"3749:4:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1981,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3749:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3745:14:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1983,"nodeType":"ExpressionStatement","src":"3745:14:14"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1984,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1950,"src":"3778:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":1985,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3782:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"3778:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1987,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3787:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3778:10:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1997,"nodeType":"IfStatement","src":"3774:63:14","trueBody":{"id":1996,"nodeType":"Block","src":"3790:47:14","statements":[{"expression":{"id":1994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1989,"name":"z","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1953,"src":"3808:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1991,"name":"z","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1953,"src":"3817:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1992,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1948,"src":"3820:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1990,"name":"rmul","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1767,"src":"3812:4:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1993,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3812:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3808:14:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1995,"nodeType":"ExpressionStatement","src":"3808:14:14"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1970,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1950,"src":"3715:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1971,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3720:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3715:6:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1999,"initializationExpression":{"expression":{"id":1968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1966,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1950,"src":"3707:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"32","id":1967,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3712:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"3707:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1969,"nodeType":"ExpressionStatement","src":"3707:6:14"},"loopExpression":{"expression":{"id":1975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1973,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1950,"src":"3723:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"32","id":1974,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3728:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"3723:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1976,"nodeType":"ExpressionStatement","src":"3723:6:14"},"nodeType":"ForStatement","src":"3702:145:14"}]},"id":2001,"implemented":true,"kind":"function","modifiers":[],"name":"rpow","nameLocation":"3596:4:14","nodeType":"FunctionDefinition","parameters":{"id":1951,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1948,"mutability":"mutable","name":"x","nameLocation":"3609:1:14","nodeType":"VariableDeclaration","scope":2001,"src":"3601:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1947,"name":"uint256","nodeType":"ElementaryTypeName","src":"3601:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1950,"mutability":"mutable","name":"n","nameLocation":"3620:1:14","nodeType":"VariableDeclaration","scope":2001,"src":"3612:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1949,"name":"uint256","nodeType":"ElementaryTypeName","src":"3612:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3600:22:14"},"returnParameters":{"id":1954,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1953,"mutability":"mutable","name":"z","nameLocation":"3654:1:14","nodeType":"VariableDeclaration","scope":2001,"src":"3646:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1952,"name":"uint256","nodeType":"ElementaryTypeName","src":"3646:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3645:11:14"},"scope":2002,"src":"3587:266:14","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2003,"src":"831:3024:14","usedErrors":[]}],"src":"805:3051:14"},"id":14},"contracts/test/AutoRefactorCoinage.sol":{"ast":{"absolutePath":"contracts/test/AutoRefactorCoinage.sol","exportedSymbols":{"AutoRefactorCoinage":[2720],"AutoRefactorCoinageI":[1559],"DSMath":[2002],"ERC20Detailed":[996],"Ownable":[112],"Roles":[1302],"SafeMath":[446]},"id":2721,"nodeType":"SourceUnit","nodes":[{"id":2004,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"194:23:15"},{"absolutePath":"contracts/interfaces/AutoRefactorCoinageI.sol","file":"../interfaces/AutoRefactorCoinageI.sol","id":2006,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2721,"sourceUnit":1560,"src":"219:78:15","symbolAliases":[{"foreign":{"id":2005,"name":"AutoRefactorCoinageI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1559,"src":"228:20:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeMath.sol","file":"@openzeppelin/contracts/utils/math/SafeMath.sol","id":2008,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2721,"sourceUnit":447,"src":"298:75:15","symbolAliases":[{"foreign":{"id":2007,"name":"SafeMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":446,"src":"307:8:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":2010,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2721,"sourceUnit":113,"src":"434:69:15","symbolAliases":[{"foreign":{"id":2009,"name":"Ownable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":112,"src":"443:7:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/AccessControl/ERC20Detailed.sol","file":"../AccessControl/ERC20Detailed.sol","id":2012,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2721,"sourceUnit":997,"src":"580:67:15","symbolAliases":[{"foreign":{"id":2011,"name":"ERC20Detailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":996,"src":"589:13:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/AccessControl/Roles.sol","file":"../AccessControl/Roles.sol","id":2013,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2721,"sourceUnit":1303,"src":"790:36:15","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/lib/DSMath.sol","file":"../lib/DSMath.sol","id":2015,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2721,"sourceUnit":2003,"src":"827:43:15","symbolAliases":[{"foreign":{"id":2014,"name":"DSMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2002,"src":"836:6:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2017,"name":"DSMath","nameLocations":["1426:6:15"],"nodeType":"IdentifierPath","referencedDeclaration":2002,"src":"1426:6:15"},"id":2018,"nodeType":"InheritanceSpecifier","src":"1426:6:15"},{"baseName":{"id":2019,"name":"Ownable","nameLocations":["1434:7:15"],"nodeType":"IdentifierPath","referencedDeclaration":112,"src":"1434:7:15"},"id":2020,"nodeType":"InheritanceSpecifier","src":"1434:7:15"},{"baseName":{"id":2021,"name":"ERC20Detailed","nameLocations":["1443:13:15"],"nodeType":"IdentifierPath","referencedDeclaration":996,"src":"1443:13:15"},"id":2022,"nodeType":"InheritanceSpecifier","src":"1443:13:15"}],"canonicalName":"AutoRefactorCoinage","contractDependencies":[],"contractKind":"contract","documentation":{"id":2016,"nodeType":"StructuredDocumentation","src":"873:520:15","text":" @dev Implementation of coin age token based on ERC20 of openzeppelin/-solidity\n AutoRefactorCoinage stores `_totalSupply` and `_balances` as RAY BASED value,\n `_allowances` as RAY FACTORED value.\n This takes public function (including _approve) parameters as RAY FACTORED value\n and internal function (including approve) parameters as RAY BASED value, and emits event in RAY FACTORED value.\n `RAY BASED` = `RAY FACTORED`  / factor\n  factor increases exponentially for each block mined."},"fullyImplemented":true,"id":2720,"linearizedBaseContracts":[2720,996,1104,112,134,2002],"name":"AutoRefactorCoinage","nameLocation":"1403:19:15","nodeType":"ContractDefinition","nodes":[{"global":false,"id":2025,"libraryName":{"id":2023,"name":"SafeMath","nameLocations":["1467:8:15"],"nodeType":"IdentifierPath","referencedDeclaration":446,"src":"1467:8:15"},"nodeType":"UsingForDirective","src":"1461:27:15","typeName":{"id":2024,"name":"uint256","nodeType":"ElementaryTypeName","src":"1480:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"global":false,"id":2029,"libraryName":{"id":2026,"name":"Roles","nameLocations":["1497:5:15"],"nodeType":"IdentifierPath","referencedDeclaration":1302,"src":"1497:5:15"},"nodeType":"UsingForDirective","src":"1491:27:15","typeName":{"id":2028,"nodeType":"UserDefinedTypeName","pathNode":{"id":2027,"name":"Roles.Role","nameLocations":["1507:5:15","1513:4:15"],"nodeType":"IdentifierPath","referencedDeclaration":1221,"src":"1507:10:15"},"referencedDeclaration":1221,"src":"1507:10:15","typeDescriptions":{"typeIdentifier":"t_struct$_Role_$1221_storage_ptr","typeString":"struct Roles.Role"}}},{"canonicalName":"AutoRefactorCoinage.Balance","id":2036,"members":[{"constant":false,"id":2031,"mutability":"mutable","name":"balance","nameLocation":"1551:7:15","nodeType":"VariableDeclaration","scope":2036,"src":"1543:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2030,"name":"uint256","nodeType":"ElementaryTypeName","src":"1543:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2033,"mutability":"mutable","name":"refactoredCount","nameLocation":"1572:15:15","nodeType":"VariableDeclaration","scope":2036,"src":"1564:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2032,"name":"uint256","nodeType":"ElementaryTypeName","src":"1564:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2035,"mutability":"mutable","name":"remain","nameLocation":"1601:6:15","nodeType":"VariableDeclaration","scope":2036,"src":"1593:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2034,"name":"uint256","nodeType":"ElementaryTypeName","src":"1593:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Balance","nameLocation":"1529:7:15","nodeType":"StructDefinition","scope":2720,"src":"1522:90:15","visibility":"public"},{"constant":false,"functionSelector":"b7c246d7","id":2041,"mutability":"mutable","name":"REFACTOR_BOUNDARY","nameLocation":"1631:17:15","nodeType":"VariableDeclaration","scope":2720,"src":"1616:43:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2037,"name":"uint256","nodeType":"ElementaryTypeName","src":"1616:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000_by_1","typeString":"int_const 10000000000000000000000000000"},"id":2040,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2038,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1651:2:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3238","id":2039,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1657:2:15","typeDescriptions":{"typeIdentifier":"t_rational_28_by_1","typeString":"int_const 28"},"value":"28"},"src":"1651:8:15","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000_by_1","typeString":"int_const 10000000000000000000000000000"}},"visibility":"public"},{"constant":false,"functionSelector":"00d87a9c","id":2044,"mutability":"mutable","name":"REFACTOR_DIVIDER","nameLocation":"1678:16:15","nodeType":"VariableDeclaration","scope":2720,"src":"1663:35:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2042,"name":"uint256","nodeType":"ElementaryTypeName","src":"1663:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":2043,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1697:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"public"},{"constant":false,"functionSelector":"a7ac30b0","id":2046,"mutability":"mutable","name":"refactorCount","nameLocation":"1718:13:15","nodeType":"VariableDeclaration","scope":2720,"src":"1703:28:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2045,"name":"uint256","nodeType":"ElementaryTypeName","src":"1703:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"27e235e3","id":2051,"mutability":"mutable","name":"balances","nameLocation":"1772:8:15","nodeType":"VariableDeclaration","scope":2720,"src":"1736:44:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Balance_$2036_storage_$","typeString":"mapping(address => struct AutoRefactorCoinage.Balance)"},"typeName":{"id":2050,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":2047,"name":"address","nodeType":"ElementaryTypeName","src":"1745:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1736:28:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Balance_$2036_storage_$","typeString":"mapping(address => struct AutoRefactorCoinage.Balance)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2049,"nodeType":"UserDefinedTypeName","pathNode":{"id":2048,"name":"Balance","nameLocations":["1756:7:15"],"nodeType":"IdentifierPath","referencedDeclaration":2036,"src":"1756:7:15"},"referencedDeclaration":2036,"src":"1756:7:15","typeDescriptions":{"typeIdentifier":"t_struct$_Balance_$2036_storage_ptr","typeString":"struct AutoRefactorCoinage.Balance"}}},"visibility":"public"},{"constant":false,"functionSelector":"3eaaf86b","id":2054,"mutability":"mutable","name":"_totalSupply","nameLocation":"1800:12:15","nodeType":"VariableDeclaration","scope":2720,"src":"1785:27:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Balance_$2036_storage","typeString":"struct AutoRefactorCoinage.Balance"},"typeName":{"id":2053,"nodeType":"UserDefinedTypeName","pathNode":{"id":2052,"name":"Balance","nameLocations":["1785:7:15"],"nodeType":"IdentifierPath","referencedDeclaration":2036,"src":"1785:7:15"},"referencedDeclaration":2036,"src":"1785:7:15","typeDescriptions":{"typeIdentifier":"t_struct$_Balance_$2036_storage_ptr","typeString":"struct AutoRefactorCoinage.Balance"}},"visibility":"public"},{"constant":false,"functionSelector":"6d150611","id":2056,"mutability":"mutable","name":"_factor","nameLocation":"1832:7:15","nodeType":"VariableDeclaration","scope":2720,"src":"1817:22:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2055,"name":"uint256","nodeType":"ElementaryTypeName","src":"1817:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"id":2058,"mutability":"mutable","name":"_transfersEnabled","nameLocation":"1858:17:15","nodeType":"VariableDeclaration","scope":2720,"src":"1844:31:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2057,"name":"bool","nodeType":"ElementaryTypeName","src":"1844:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"anonymous":false,"eventSelector":"47eb304b27f9efb047a046029f8a279a7cc8fccc6786f1e2f65939639584fbdc","id":2066,"name":"FactorSet","nameLocation":"1886:9:15","nodeType":"EventDefinition","parameters":{"id":2065,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2060,"indexed":false,"mutability":"mutable","name":"previous","nameLocation":"1904:8:15","nodeType":"VariableDeclaration","scope":2066,"src":"1896:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2059,"name":"uint256","nodeType":"ElementaryTypeName","src":"1896:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2062,"indexed":false,"mutability":"mutable","name":"current","nameLocation":"1922:7:15","nodeType":"VariableDeclaration","scope":2066,"src":"1914:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2061,"name":"uint256","nodeType":"ElementaryTypeName","src":"1914:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2064,"indexed":false,"mutability":"mutable","name":"shiftCount","nameLocation":"1939:10:15","nodeType":"VariableDeclaration","scope":2066,"src":"1931:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2063,"name":"uint256","nodeType":"ElementaryTypeName","src":"1931:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1895:55:15"},"src":"1880:71:15"},{"anonymous":false,"eventSelector":"6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f6","id":2070,"name":"MinterAdded","nameLocation":"1961:11:15","nodeType":"EventDefinition","parameters":{"id":2069,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2068,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1989:7:15","nodeType":"VariableDeclaration","scope":2070,"src":"1973:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2067,"name":"address","nodeType":"ElementaryTypeName","src":"1973:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1972:25:15"},"src":"1955:43:15"},{"anonymous":false,"eventSelector":"e94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb66692","id":2074,"name":"MinterRemoved","nameLocation":"2007:13:15","nodeType":"EventDefinition","parameters":{"id":2073,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2072,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"2037:7:15","nodeType":"VariableDeclaration","scope":2074,"src":"2021:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2071,"name":"address","nodeType":"ElementaryTypeName","src":"2021:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2020:25:15"},"src":"2001:45:15"},{"constant":false,"id":2077,"mutability":"mutable","name":"_minters","nameLocation":"2069:8:15","nodeType":"VariableDeclaration","scope":2720,"src":"2050:27:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Role_$1221_storage","typeString":"struct Roles.Role"},"typeName":{"id":2076,"nodeType":"UserDefinedTypeName","pathNode":{"id":2075,"name":"Roles.Role","nameLocations":["2050:5:15","2056:4:15"],"nodeType":"IdentifierPath","referencedDeclaration":1221,"src":"2050:10:15"},"referencedDeclaration":1221,"src":"2050:10:15","typeDescriptions":{"typeIdentifier":"t_struct$_Role_$1221_storage_ptr","typeString":"struct Roles.Role"}},"visibility":"private"},{"body":{"id":2100,"nodeType":"Block","src":"2218:176:15","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2092,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":124,"src":"2235:10:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2093,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2235:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2091,"name":"_addMinter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2163,"src":"2224:10:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2094,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2224:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2095,"nodeType":"ExpressionStatement","src":"2224:24:15"},{"expression":{"id":2098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2096,"name":"_factor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2056,"src":"2254:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2097,"name":"factor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2083,"src":"2264:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2254:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2099,"nodeType":"ExpressionStatement","src":"2254:16:15"}]},"id":2101,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":2086,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2079,"src":"2198:4:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2087,"name":"symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2081,"src":"2204:6:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"3237","id":2088,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2212:2:15","typeDescriptions":{"typeIdentifier":"t_rational_27_by_1","typeString":"int_const 27"},"value":"27"}],"id":2089,"kind":"baseConstructorSpecifier","modifierName":{"id":2085,"name":"ERC20Detailed","nameLocations":["2184:13:15"],"nodeType":"IdentifierPath","referencedDeclaration":996,"src":"2184:13:15"},"nodeType":"ModifierInvocation","src":"2184:31:15"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2084,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2079,"mutability":"mutable","name":"name","nameLocation":"2114:4:15","nodeType":"VariableDeclaration","scope":2101,"src":"2100:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2078,"name":"string","nodeType":"ElementaryTypeName","src":"2100:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2081,"mutability":"mutable","name":"symbol","nameLocation":"2138:6:15","nodeType":"VariableDeclaration","scope":2101,"src":"2124:20:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2080,"name":"string","nodeType":"ElementaryTypeName","src":"2124:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2083,"mutability":"mutable","name":"factor","nameLocation":"2158:6:15","nodeType":"VariableDeclaration","scope":2101,"src":"2150:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2082,"name":"uint256","nodeType":"ElementaryTypeName","src":"2150:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2094:74:15"},"returnParameters":{"id":2090,"nodeType":"ParameterList","parameters":[],"src":"2218:0:15"},"scope":2720,"src":"2082:312:15","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2112,"nodeType":"Block","src":"2420:105:15","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2105,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":124,"src":"2445:10:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2106,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2445:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2104,"name":"isMinter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2126,"src":"2436:8:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":2107,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2436:22:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d696e746572526f6c653a2063616c6c657220646f6573206e6f74206861766520746865204d696e74657220726f6c65","id":2108,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2460:50:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_79ecb50133735b20228dea9d08fe36a462bbc1350f591a146908848db91104cd","typeString":"literal_string \"MinterRole: caller does not have the Minter role\""},"value":"MinterRole: caller does not have the Minter role"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_79ecb50133735b20228dea9d08fe36a462bbc1350f591a146908848db91104cd","typeString":"literal_string \"MinterRole: caller does not have the Minter role\""}],"id":2103,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2428:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2109,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2428:83:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2110,"nodeType":"ExpressionStatement","src":"2428:83:15"},{"id":2111,"nodeType":"PlaceholderStatement","src":"2519:1:15"}]},"id":2113,"name":"onlyMinter","nameLocation":"2407:10:15","nodeType":"ModifierDefinition","parameters":{"id":2102,"nodeType":"ParameterList","parameters":[],"src":"2417:2:15"},"src":"2398:127:15","virtual":false,"visibility":"internal"},{"body":{"id":2125,"nodeType":"Block","src":"2591:41:15","statements":[{"expression":{"arguments":[{"id":2122,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2115,"src":"2619:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2120,"name":"_minters","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2077,"src":"2606:8:15","typeDescriptions":{"typeIdentifier":"t_struct$_Role_$1221_storage","typeString":"struct Roles.Role storage ref"}},"id":2121,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2615:3:15","memberName":"has","nodeType":"MemberAccess","referencedDeclaration":1301,"src":"2606:12:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Role_$1221_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_Role_$1221_storage_ptr_$","typeString":"function (struct Roles.Role storage pointer,address) view returns (bool)"}},"id":2123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2606:21:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2119,"id":2124,"nodeType":"Return","src":"2599:28:15"}]},"functionSelector":"aa271e1a","id":2126,"implemented":true,"kind":"function","modifiers":[],"name":"isMinter","nameLocation":"2538:8:15","nodeType":"FunctionDefinition","parameters":{"id":2116,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2115,"mutability":"mutable","name":"account","nameLocation":"2555:7:15","nodeType":"VariableDeclaration","scope":2126,"src":"2547:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2114,"name":"address","nodeType":"ElementaryTypeName","src":"2547:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2546:17:15"},"returnParameters":{"id":2119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2118,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2126,"src":"2585:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2117,"name":"bool","nodeType":"ElementaryTypeName","src":"2585:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2584:6:15"},"scope":2720,"src":"2529:103:15","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2137,"nodeType":"Block","src":"2690:32:15","statements":[{"expression":{"arguments":[{"id":2134,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2128,"src":"2709:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2133,"name":"_addMinter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2163,"src":"2698:10:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2135,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2698:19:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2136,"nodeType":"ExpressionStatement","src":"2698:19:15"}]},"functionSelector":"983b2d56","id":2138,"implemented":true,"kind":"function","modifiers":[{"id":2131,"kind":"modifierInvocation","modifierName":{"id":2130,"name":"onlyMinter","nameLocations":["2679:10:15"],"nodeType":"IdentifierPath","referencedDeclaration":2113,"src":"2679:10:15"},"nodeType":"ModifierInvocation","src":"2679:10:15"}],"name":"addMinter","nameLocation":"2645:9:15","nodeType":"FunctionDefinition","parameters":{"id":2129,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2128,"mutability":"mutable","name":"account","nameLocation":"2663:7:15","nodeType":"VariableDeclaration","scope":2138,"src":"2655:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2127,"name":"address","nodeType":"ElementaryTypeName","src":"2655:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2654:17:15"},"returnParameters":{"id":2132,"nodeType":"ParameterList","parameters":[],"src":"2690:0:15"},"scope":2720,"src":"2636:86:15","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2146,"nodeType":"Block","src":"2759:40:15","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2142,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":124,"src":"2781:10:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2781:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2141,"name":"_removeMinter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2179,"src":"2767:13:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2144,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2767:27:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2145,"nodeType":"ExpressionStatement","src":"2767:27:15"}]},"functionSelector":"98650275","id":2147,"implemented":true,"kind":"function","modifiers":[],"name":"renounceMinter","nameLocation":"2735:14:15","nodeType":"FunctionDefinition","parameters":{"id":2139,"nodeType":"ParameterList","parameters":[],"src":"2749:2:15"},"returnParameters":{"id":2140,"nodeType":"ParameterList","parameters":[],"src":"2759:0:15"},"scope":2720,"src":"2726:73:15","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2162,"nodeType":"Block","src":"2849:67:15","statements":[{"expression":{"arguments":[{"id":2155,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2149,"src":"2870:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2152,"name":"_minters","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2077,"src":"2857:8:15","typeDescriptions":{"typeIdentifier":"t_struct$_Role_$1221_storage","typeString":"struct Roles.Role storage ref"}},"id":2154,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2866:3:15","memberName":"add","nodeType":"MemberAccess","referencedDeclaration":1248,"src":"2857:12:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Role_$1221_storage_ptr_$_t_address_$returns$__$attached_to$_t_struct$_Role_$1221_storage_ptr_$","typeString":"function (struct Roles.Role storage pointer,address)"}},"id":2156,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2857:21:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2157,"nodeType":"ExpressionStatement","src":"2857:21:15"},{"eventCall":{"arguments":[{"id":2159,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2149,"src":"2903:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2158,"name":"MinterAdded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2070,"src":"2891:11:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2160,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2891:20:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2161,"nodeType":"EmitStatement","src":"2886:25:15"}]},"id":2163,"implemented":true,"kind":"function","modifiers":[],"name":"_addMinter","nameLocation":"2812:10:15","nodeType":"FunctionDefinition","parameters":{"id":2150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2149,"mutability":"mutable","name":"account","nameLocation":"2831:7:15","nodeType":"VariableDeclaration","scope":2163,"src":"2823:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2148,"name":"address","nodeType":"ElementaryTypeName","src":"2823:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2822:17:15"},"returnParameters":{"id":2151,"nodeType":"ParameterList","parameters":[],"src":"2849:0:15"},"scope":2720,"src":"2803:113:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2178,"nodeType":"Block","src":"2969:72:15","statements":[{"expression":{"arguments":[{"id":2171,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2165,"src":"2993:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2168,"name":"_minters","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2077,"src":"2977:8:15","typeDescriptions":{"typeIdentifier":"t_struct$_Role_$1221_storage","typeString":"struct Roles.Role storage ref"}},"id":2170,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2986:6:15","memberName":"remove","nodeType":"MemberAccess","referencedDeclaration":1274,"src":"2977:15:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Role_$1221_storage_ptr_$_t_address_$returns$__$attached_to$_t_struct$_Role_$1221_storage_ptr_$","typeString":"function (struct Roles.Role storage pointer,address)"}},"id":2172,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2977:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2173,"nodeType":"ExpressionStatement","src":"2977:24:15"},{"eventCall":{"arguments":[{"id":2175,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2165,"src":"3028:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2174,"name":"MinterRemoved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2074,"src":"3014:13:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2176,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3014:22:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2177,"nodeType":"EmitStatement","src":"3009:27:15"}]},"id":2179,"implemented":true,"kind":"function","modifiers":[],"name":"_removeMinter","nameLocation":"2929:13:15","nodeType":"FunctionDefinition","parameters":{"id":2166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2165,"mutability":"mutable","name":"account","nameLocation":"2951:7:15","nodeType":"VariableDeclaration","scope":2179,"src":"2943:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2164,"name":"address","nodeType":"ElementaryTypeName","src":"2943:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2942:17:15"},"returnParameters":{"id":2167,"nodeType":"ParameterList","parameters":[],"src":"2969:0:15"},"scope":2720,"src":"2920:121:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2209,"nodeType":"Block","src":"3093:155:15","statements":[{"assignments":[2185],"declarations":[{"constant":false,"id":2185,"mutability":"mutable","name":"result","nameLocation":"3107:6:15","nodeType":"VariableDeclaration","scope":2209,"src":"3099:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2184,"name":"uint256","nodeType":"ElementaryTypeName","src":"3099:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2187,"initialValue":{"id":2186,"name":"_factor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2056,"src":"3116:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3099:24:15"},{"body":{"id":2205,"nodeType":"Block","src":"3173:52:15","statements":[{"expression":{"id":2203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2198,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2185,"src":"3181:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2201,"name":"REFACTOR_DIVIDER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2044,"src":"3201:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2199,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2185,"src":"3190:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3197:3:15","memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":340,"src":"3190:10:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2202,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3190:28:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3181:37:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2204,"nodeType":"ExpressionStatement","src":"3181:37:15"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2192,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2189,"src":"3149:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2193,"name":"refactorCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2046,"src":"3153:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3149:17:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2206,"initializationExpression":{"assignments":[2189],"declarations":[{"constant":false,"id":2189,"mutability":"mutable","name":"i","nameLocation":"3142:1:15","nodeType":"VariableDeclaration","scope":2206,"src":"3134:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2188,"name":"uint256","nodeType":"ElementaryTypeName","src":"3134:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2191,"initialValue":{"hexValue":"30","id":2190,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3146:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"3134:13:15"},"loopExpression":{"expression":{"id":2196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3168:3:15","subExpression":{"id":2195,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2189,"src":"3168:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2197,"nodeType":"ExpressionStatement","src":"3168:3:15"},"nodeType":"ForStatement","src":"3129:96:15"},{"expression":{"id":2207,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2185,"src":"3237:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2183,"id":2208,"nodeType":"Return","src":"3230:13:15"}]},"functionSelector":"54f703f8","id":2210,"implemented":true,"kind":"function","modifiers":[],"name":"factor","nameLocation":"3054:6:15","nodeType":"FunctionDefinition","parameters":{"id":2180,"nodeType":"ParameterList","parameters":[],"src":"3060:2:15"},"returnParameters":{"id":2183,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2182,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2210,"src":"3084:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2181,"name":"uint256","nodeType":"ElementaryTypeName","src":"3084:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3083:9:15"},"scope":2720,"src":"3045:203:15","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[1035],"body":{"id":2227,"nodeType":"Block","src":"3355:107:15","statements":[{"expression":{"arguments":[{"expression":{"id":2223,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2054,"src":"3437:12:15","typeDescriptions":{"typeIdentifier":"t_struct$_Balance_$2036_storage","typeString":"struct AutoRefactorCoinage.Balance storage ref"}},"id":2224,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3450:6:15","memberName":"remain","nodeType":"MemberAccess","referencedDeclaration":2035,"src":"3437:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"expression":{"id":2217,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2054,"src":"3381:12:15","typeDescriptions":{"typeIdentifier":"t_struct$_Balance_$2036_storage","typeString":"struct AutoRefactorCoinage.Balance storage ref"}},"id":2218,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3394:7:15","memberName":"balance","nodeType":"MemberAccess","referencedDeclaration":2031,"src":"3381:20:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2219,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2054,"src":"3403:12:15","typeDescriptions":{"typeIdentifier":"t_struct$_Balance_$2036_storage","typeString":"struct AutoRefactorCoinage.Balance storage ref"}},"id":2220,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3416:15:15","memberName":"refactoredCount","nodeType":"MemberAccess","referencedDeclaration":2033,"src":"3403:28:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2216,"name":"_applyFactor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2503,"src":"3368:12:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) view returns (uint256)"}},"id":2221,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3368:64:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3433:3:15","memberName":"add","nodeType":"MemberAccess","referencedDeclaration":310,"src":"3368:68:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2225,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3368:89:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2215,"id":2226,"nodeType":"Return","src":"3361:96:15"}]},"documentation":{"id":2211,"nodeType":"StructuredDocumentation","src":"3252:47:15","text":" @dev See {IERC20-totalSupply}."},"functionSelector":"18160ddd","id":2228,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"3311:11:15","nodeType":"FunctionDefinition","parameters":{"id":2212,"nodeType":"ParameterList","parameters":[],"src":"3322:2:15"},"returnParameters":{"id":2215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2214,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2228,"src":"3346:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2213,"name":"uint256","nodeType":"ElementaryTypeName","src":"3346:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3345:9:15"},"scope":2720,"src":"3302:160:15","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[1043],"body":{"id":2254,"nodeType":"Block","src":"3581:118:15","statements":[{"assignments":[2238],"declarations":[{"constant":false,"id":2238,"mutability":"mutable","name":"b","nameLocation":"3603:1:15","nodeType":"VariableDeclaration","scope":2254,"src":"3587:17:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Balance_$2036_storage_ptr","typeString":"struct AutoRefactorCoinage.Balance"},"typeName":{"id":2237,"nodeType":"UserDefinedTypeName","pathNode":{"id":2236,"name":"Balance","nameLocations":["3587:7:15"],"nodeType":"IdentifierPath","referencedDeclaration":2036,"src":"3587:7:15"},"referencedDeclaration":2036,"src":"3587:7:15","typeDescriptions":{"typeIdentifier":"t_struct$_Balance_$2036_storage_ptr","typeString":"struct AutoRefactorCoinage.Balance"}},"visibility":"internal"}],"id":2242,"initialValue":{"baseExpression":{"id":2239,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2051,"src":"3607:8:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Balance_$2036_storage_$","typeString":"mapping(address => struct AutoRefactorCoinage.Balance storage ref)"}},"id":2241,"indexExpression":{"id":2240,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2231,"src":"3616:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3607:17:15","typeDescriptions":{"typeIdentifier":"t_struct$_Balance_$2036_storage","typeString":"struct AutoRefactorCoinage.Balance storage ref"}},"nodeType":"VariableDeclarationStatement","src":"3587:37:15"},{"expression":{"arguments":[{"expression":{"id":2250,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2238,"src":"3685:1:15","typeDescriptions":{"typeIdentifier":"t_struct$_Balance_$2036_storage_ptr","typeString":"struct AutoRefactorCoinage.Balance storage pointer"}},"id":2251,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3687:6:15","memberName":"remain","nodeType":"MemberAccess","referencedDeclaration":2035,"src":"3685:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"expression":{"id":2244,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2238,"src":"3651:1:15","typeDescriptions":{"typeIdentifier":"t_struct$_Balance_$2036_storage_ptr","typeString":"struct AutoRefactorCoinage.Balance storage pointer"}},"id":2245,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3653:7:15","memberName":"balance","nodeType":"MemberAccess","referencedDeclaration":2031,"src":"3651:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2246,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2238,"src":"3662:1:15","typeDescriptions":{"typeIdentifier":"t_struct$_Balance_$2036_storage_ptr","typeString":"struct AutoRefactorCoinage.Balance storage pointer"}},"id":2247,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3664:15:15","memberName":"refactoredCount","nodeType":"MemberAccess","referencedDeclaration":2033,"src":"3662:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2243,"name":"_applyFactor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2503,"src":"3638:12:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) view returns (uint256)"}},"id":2248,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3638:42:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3681:3:15","memberName":"add","nodeType":"MemberAccess","referencedDeclaration":310,"src":"3638:46:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2252,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3638:56:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2235,"id":2253,"nodeType":"Return","src":"3631:63:15"}]},"documentation":{"id":2229,"nodeType":"StructuredDocumentation","src":"3467:45:15","text":" @dev See {IERC20-balanceOf}."},"functionSelector":"70a08231","id":2255,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"3524:9:15","nodeType":"FunctionDefinition","parameters":{"id":2232,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2231,"mutability":"mutable","name":"account","nameLocation":"3542:7:15","nodeType":"VariableDeclaration","scope":2255,"src":"3534:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2230,"name":"address","nodeType":"ElementaryTypeName","src":"3534:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3533:17:15"},"returnParameters":{"id":2235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2234,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2255,"src":"3572:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2233,"name":"uint256","nodeType":"ElementaryTypeName","src":"3572:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3571:9:15"},"scope":2720,"src":"3515:184:15","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2274,"nodeType":"Block","src":"4038:50:15","statements":[{"expression":{"arguments":[{"id":2268,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2258,"src":"4050:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2269,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2260,"src":"4059:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2267,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2346,"src":"4044:5:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":2270,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4044:22:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2271,"nodeType":"ExpressionStatement","src":"4044:22:15"},{"expression":{"hexValue":"74727565","id":2272,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4079:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":2266,"id":2273,"nodeType":"Return","src":"4072:11:15"}]},"documentation":{"id":2256,"nodeType":"StructuredDocumentation","src":"3703:251:15","text":"@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements\n - `to` cannot be the zero address."},"functionSelector":"40c10f19","id":2275,"implemented":true,"kind":"function","modifiers":[{"id":2263,"kind":"modifierInvocation","modifierName":{"id":2262,"name":"onlyMinter","nameLocations":["4012:10:15"],"nodeType":"IdentifierPath","referencedDeclaration":2113,"src":"4012:10:15"},"nodeType":"ModifierInvocation","src":"4012:10:15"}],"name":"mint","nameLocation":"3967:4:15","nodeType":"FunctionDefinition","parameters":{"id":2261,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2258,"mutability":"mutable","name":"account","nameLocation":"3980:7:15","nodeType":"VariableDeclaration","scope":2275,"src":"3972:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2257,"name":"address","nodeType":"ElementaryTypeName","src":"3972:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2260,"mutability":"mutable","name":"amount","nameLocation":"3997:6:15","nodeType":"VariableDeclaration","scope":2275,"src":"3989:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2259,"name":"uint256","nodeType":"ElementaryTypeName","src":"3989:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3971:33:15"},"returnParameters":{"id":2266,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2265,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2275,"src":"4032:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2264,"name":"bool","nodeType":"ElementaryTypeName","src":"4032:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4031:6:15"},"scope":2720,"src":"3958:130:15","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2345,"nodeType":"Block","src":"4149:445:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2283,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2277,"src":"4163:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4182:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2285,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4174:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2284,"name":"address","nodeType":"ElementaryTypeName","src":"4174:7:15","typeDescriptions":{}}},"id":2287,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4174:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4163:21:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4175746f5265666163746f72436f696e6167653a206d696e7420746f20746865207a65726f2061646472657373","id":2289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4186:47:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_e5765f5708f945bad06c9dbede47bf595281c7b76bd342f2024357a686a89ca7","typeString":"literal_string \"AutoRefactorCoinage: mint to the zero address\""},"value":"AutoRefactorCoinage: mint to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e5765f5708f945bad06c9dbede47bf595281c7b76bd342f2024357a686a89ca7","typeString":"literal_string \"AutoRefactorCoinage: mint to the zero address\""}],"id":2282,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4155:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2290,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4155:79:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2291,"nodeType":"ExpressionStatement","src":"4155:79:15"},{"assignments":[2294],"declarations":[{"constant":false,"id":2294,"mutability":"mutable","name":"b","nameLocation":"4256:1:15","nodeType":"VariableDeclaration","scope":2345,"src":"4240:17:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Balance_$2036_storage_ptr","typeString":"struct AutoRefactorCoinage.Balance"},"typeName":{"id":2293,"nodeType":"UserDefinedTypeName","pathNode":{"id":2292,"name":"Balance","nameLocations":["4240:7:15"],"nodeType":"IdentifierPath","referencedDeclaration":2036,"src":"4240:7:15"},"referencedDeclaration":2036,"src":"4240:7:15","typeDescriptions":{"typeIdentifier":"t_struct$_Balance_$2036_storage_ptr","typeString":"struct AutoRefactorCoinage.Balance"}},"visibility":"internal"}],"id":2298,"initialValue":{"baseExpression":{"id":2295,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2051,"src":"4260:8:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Balance_$2036_storage_$","typeString":"mapping(address => struct AutoRefactorCoinage.Balance storage ref)"}},"id":2297,"indexExpression":{"id":2296,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2277,"src":"4269:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4260:17:15","typeDescriptions":{"typeIdentifier":"t_struct$_Balance_$2036_storage","typeString":"struct AutoRefactorCoinage.Balance storage ref"}},"nodeType":"VariableDeclarationStatement","src":"4240:37:15"},{"assignments":[2300],"declarations":[{"constant":false,"id":2300,"mutability":"mutable","name":"currentBalance","nameLocation":"4292:14:15","nodeType":"VariableDeclaration","scope":2345,"src":"4284:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2299,"name":"uint256","nodeType":"ElementaryTypeName","src":"4284:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2304,"initialValue":{"arguments":[{"id":2302,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2277,"src":"4319:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2301,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2255,"src":"4309:9:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":2303,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4309:18:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4284:43:15"},{"assignments":[2306],"declarations":[{"constant":false,"id":2306,"mutability":"mutable","name":"newBalance","nameLocation":"4341:10:15","nodeType":"VariableDeclaration","scope":2345,"src":"4333:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2305,"name":"uint256","nodeType":"ElementaryTypeName","src":"4333:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2311,"initialValue":{"arguments":[{"id":2309,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2279,"src":"4373:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2307,"name":"currentBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2300,"src":"4354:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4369:3:15","memberName":"add","nodeType":"MemberAccess","referencedDeclaration":310,"src":"4354:18:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2310,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4354:26:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4333:47:15"},{"assignments":[2313],"declarations":[{"constant":false,"id":2313,"mutability":"mutable","name":"rbAmount","nameLocation":"4395:8:15","nodeType":"VariableDeclaration","scope":2345,"src":"4387:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2312,"name":"uint256","nodeType":"ElementaryTypeName","src":"4387:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2317,"initialValue":{"arguments":[{"id":2315,"name":"newBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2306,"src":"4418:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2314,"name":"_toRAYBased","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2517,"src":"4406:11:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":2316,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4406:23:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4387:42:15"},{"expression":{"id":2322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2318,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2294,"src":"4435:1:15","typeDescriptions":{"typeIdentifier":"t_struct$_Balance_$2036_storage_ptr","typeString":"struct AutoRefactorCoinage.Balance storage pointer"}},"id":2320,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4437:7:15","memberName":"balance","nodeType":"MemberAccess","referencedDeclaration":2031,"src":"4435:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2321,"name":"rbAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2313,"src":"4447:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4435:20:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2323,"nodeType":"ExpressionStatement","src":"4435:20:15"},{"expression":{"id":2328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2324,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2294,"src":"4461:1:15","typeDescriptions":{"typeIdentifier":"t_struct$_Balance_$2036_storage_ptr","typeString":"struct AutoRefactorCoinage.Balance storage pointer"}},"id":2326,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4463:15:15","memberName":"refactoredCount","nodeType":"MemberAccess","referencedDeclaration":2033,"src":"4461:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2327,"name":"refactorCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2046,"src":"4481:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4461:33:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2329,"nodeType":"ExpressionStatement","src":"4461:33:15"},{"expression":{"arguments":[{"id":2331,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2279,"src":"4516:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2330,"name":"addTotalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2626,"src":"4501:14:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":2332,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4501:22:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2333,"nodeType":"ExpressionStatement","src":"4501:22:15"},{"eventCall":{"arguments":[{"arguments":[{"hexValue":"30","id":2337,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4551:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2336,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4543:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2335,"name":"address","nodeType":"ElementaryTypeName","src":"4543:7:15","typeDescriptions":{}}},"id":2338,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4543:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2339,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2277,"src":"4555:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":2341,"name":"rbAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2313,"src":"4579:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2340,"name":"_toRAYFactored","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2531,"src":"4564:14:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":2342,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4564:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2334,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1094,"src":"4534:8:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2343,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4534:55:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2344,"nodeType":"EmitStatement","src":"4529:60:15"}]},"id":2346,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"4101:5:15","nodeType":"FunctionDefinition","parameters":{"id":2280,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2277,"mutability":"mutable","name":"account","nameLocation":"4115:7:15","nodeType":"VariableDeclaration","scope":2346,"src":"4107:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2276,"name":"address","nodeType":"ElementaryTypeName","src":"4107:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2279,"mutability":"mutable","name":"amount","nameLocation":"4132:6:15","nodeType":"VariableDeclaration","scope":2346,"src":"4124:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2278,"name":"uint256","nodeType":"ElementaryTypeName","src":"4124:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4106:33:15"},"returnParameters":{"id":2281,"nodeType":"ParameterList","parameters":[],"src":"4149:0:15"},"scope":2720,"src":"4092:502:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2358,"nodeType":"Block","src":"4939:40:15","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2353,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":124,"src":"4953:10:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2354,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4953:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2355,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2349,"src":"4967:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2352,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2444,"src":"4947:5:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":2356,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4947:27:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2357,"nodeType":"ExpressionStatement","src":"4947:27:15"}]},"documentation":{"id":2347,"nodeType":"StructuredDocumentation","src":"4600:298:15","text":" @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."},"functionSelector":"42966c68","id":2359,"implemented":true,"kind":"function","modifiers":[],"name":"burn","nameLocation":"4911:4:15","nodeType":"FunctionDefinition","parameters":{"id":2350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2349,"mutability":"mutable","name":"amount","nameLocation":"4924:6:15","nodeType":"VariableDeclaration","scope":2359,"src":"4916:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2348,"name":"uint256","nodeType":"ElementaryTypeName","src":"4916:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4915:16:15"},"returnParameters":{"id":2351,"nodeType":"ParameterList","parameters":[],"src":"4939:0:15"},"scope":2720,"src":"4902:77:15","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2372,"nodeType":"Block","src":"5088:39:15","statements":[{"expression":{"arguments":[{"id":2368,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2362,"src":"5106:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2369,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2364,"src":"5115:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2367,"name":"_burnFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2457,"src":"5096:9:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":2370,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5096:26:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2371,"nodeType":"ExpressionStatement","src":"5096:26:15"}]},"documentation":{"id":2360,"nodeType":"StructuredDocumentation","src":"4983:44:15","text":" @dev See {ERC20-_burnFrom}."},"functionSelector":"79cc6790","id":2373,"implemented":true,"kind":"function","modifiers":[],"name":"burnFrom","nameLocation":"5039:8:15","nodeType":"FunctionDefinition","parameters":{"id":2365,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2362,"mutability":"mutable","name":"account","nameLocation":"5056:7:15","nodeType":"VariableDeclaration","scope":2373,"src":"5048:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2361,"name":"address","nodeType":"ElementaryTypeName","src":"5048:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2364,"mutability":"mutable","name":"amount","nameLocation":"5073:6:15","nodeType":"VariableDeclaration","scope":2373,"src":"5065:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2363,"name":"uint256","nodeType":"ElementaryTypeName","src":"5065:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5047:33:15"},"returnParameters":{"id":2366,"nodeType":"ParameterList","parameters":[],"src":"5088:0:15"},"scope":2720,"src":"5030:97:15","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2443,"nodeType":"Block","src":"5188:447:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2381,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2375,"src":"5202:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2384,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5221:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2383,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5213:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2382,"name":"address","nodeType":"ElementaryTypeName","src":"5213:7:15","typeDescriptions":{}}},"id":2385,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5213:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5202:21:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4175746f5265666163746f72436f696e6167653a206275726e2066726f6d20746865207a65726f2061646472657373","id":2387,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5225:49:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_095501c0fa42bab2cacf7f188f8ed4b439a6b52a400a6dbe907211442d17a80a","typeString":"literal_string \"AutoRefactorCoinage: burn from the zero address\""},"value":"AutoRefactorCoinage: burn from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_095501c0fa42bab2cacf7f188f8ed4b439a6b52a400a6dbe907211442d17a80a","typeString":"literal_string \"AutoRefactorCoinage: burn from the zero address\""}],"id":2380,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5194:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2388,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5194:81:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2389,"nodeType":"ExpressionStatement","src":"5194:81:15"},{"assignments":[2392],"declarations":[{"constant":false,"id":2392,"mutability":"mutable","name":"b","nameLocation":"5297:1:15","nodeType":"VariableDeclaration","scope":2443,"src":"5281:17:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Balance_$2036_storage_ptr","typeString":"struct AutoRefactorCoinage.Balance"},"typeName":{"id":2391,"nodeType":"UserDefinedTypeName","pathNode":{"id":2390,"name":"Balance","nameLocations":["5281:7:15"],"nodeType":"IdentifierPath","referencedDeclaration":2036,"src":"5281:7:15"},"referencedDeclaration":2036,"src":"5281:7:15","typeDescriptions":{"typeIdentifier":"t_struct$_Balance_$2036_storage_ptr","typeString":"struct AutoRefactorCoinage.Balance"}},"visibility":"internal"}],"id":2396,"initialValue":{"baseExpression":{"id":2393,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2051,"src":"5301:8:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Balance_$2036_storage_$","typeString":"mapping(address => struct AutoRefactorCoinage.Balance storage ref)"}},"id":2395,"indexExpression":{"id":2394,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2375,"src":"5310:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5301:17:15","typeDescriptions":{"typeIdentifier":"t_struct$_Balance_$2036_storage","typeString":"struct AutoRefactorCoinage.Balance storage ref"}},"nodeType":"VariableDeclarationStatement","src":"5281:37:15"},{"assignments":[2398],"declarations":[{"constant":false,"id":2398,"mutability":"mutable","name":"currentBalance","nameLocation":"5333:14:15","nodeType":"VariableDeclaration","scope":2443,"src":"5325:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2397,"name":"uint256","nodeType":"ElementaryTypeName","src":"5325:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2402,"initialValue":{"arguments":[{"id":2400,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2375,"src":"5360:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2399,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2255,"src":"5350:9:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":2401,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5350:18:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5325:43:15"},{"assignments":[2404],"declarations":[{"constant":false,"id":2404,"mutability":"mutable","name":"newBalance","nameLocation":"5382:10:15","nodeType":"VariableDeclaration","scope":2443,"src":"5374:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2403,"name":"uint256","nodeType":"ElementaryTypeName","src":"5374:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2409,"initialValue":{"arguments":[{"id":2407,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2377,"src":"5414:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2405,"name":"currentBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2398,"src":"5395:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5410:3:15","memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":325,"src":"5395:18:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2408,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5395:26:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5374:47:15"},{"assignments":[2411],"declarations":[{"constant":false,"id":2411,"mutability":"mutable","name":"rbAmount","nameLocation":"5436:8:15","nodeType":"VariableDeclaration","scope":2443,"src":"5428:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2410,"name":"uint256","nodeType":"ElementaryTypeName","src":"5428:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2415,"initialValue":{"arguments":[{"id":2413,"name":"newBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2404,"src":"5459:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2412,"name":"_toRAYBased","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2517,"src":"5447:11:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":2414,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5447:23:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5428:42:15"},{"expression":{"id":2420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2416,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2392,"src":"5476:1:15","typeDescriptions":{"typeIdentifier":"t_struct$_Balance_$2036_storage_ptr","typeString":"struct AutoRefactorCoinage.Balance storage pointer"}},"id":2418,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5478:7:15","memberName":"balance","nodeType":"MemberAccess","referencedDeclaration":2031,"src":"5476:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2419,"name":"rbAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2411,"src":"5488:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5476:20:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2421,"nodeType":"ExpressionStatement","src":"5476:20:15"},{"expression":{"id":2426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2422,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2392,"src":"5502:1:15","typeDescriptions":{"typeIdentifier":"t_struct$_Balance_$2036_storage_ptr","typeString":"struct AutoRefactorCoinage.Balance storage pointer"}},"id":2424,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5504:15:15","memberName":"refactoredCount","nodeType":"MemberAccess","referencedDeclaration":2033,"src":"5502:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2425,"name":"refactorCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2046,"src":"5522:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5502:33:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2427,"nodeType":"ExpressionStatement","src":"5502:33:15"},{"expression":{"arguments":[{"id":2429,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2377,"src":"5557:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2428,"name":"subTotalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"5542:14:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":2430,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5542:22:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2431,"nodeType":"ExpressionStatement","src":"5542:22:15"},{"eventCall":{"arguments":[{"id":2433,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2375,"src":"5584:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":2436,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5601:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2435,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5593:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2434,"name":"address","nodeType":"ElementaryTypeName","src":"5593:7:15","typeDescriptions":{}}},"id":2437,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5593:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":2439,"name":"rbAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2411,"src":"5620:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2438,"name":"_toRAYFactored","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2531,"src":"5605:14:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":2440,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5605:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2432,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1094,"src":"5575:8:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2441,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5575:55:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2442,"nodeType":"EmitStatement","src":"5570:60:15"}]},"id":2444,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"5140:5:15","nodeType":"FunctionDefinition","parameters":{"id":2378,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2375,"mutability":"mutable","name":"account","nameLocation":"5154:7:15","nodeType":"VariableDeclaration","scope":2444,"src":"5146:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2374,"name":"address","nodeType":"ElementaryTypeName","src":"5146:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2377,"mutability":"mutable","name":"amount","nameLocation":"5171:6:15","nodeType":"VariableDeclaration","scope":2444,"src":"5163:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2376,"name":"uint256","nodeType":"ElementaryTypeName","src":"5163:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5145:33:15"},"returnParameters":{"id":2379,"nodeType":"ParameterList","parameters":[],"src":"5188:0:15"},"scope":2720,"src":"5131:504:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2456,"nodeType":"Block","src":"5700:33:15","statements":[{"expression":{"arguments":[{"id":2452,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2446,"src":"5712:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2453,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2448,"src":"5721:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2451,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2444,"src":"5706:5:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":2454,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5706:22:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2455,"nodeType":"ExpressionStatement","src":"5706:22:15"}]},"id":2457,"implemented":true,"kind":"function","modifiers":[],"name":"_burnFrom","nameLocation":"5648:9:15","nodeType":"FunctionDefinition","parameters":{"id":2449,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2446,"mutability":"mutable","name":"account","nameLocation":"5666:7:15","nodeType":"VariableDeclaration","scope":2457,"src":"5658:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2445,"name":"address","nodeType":"ElementaryTypeName","src":"5658:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2448,"mutability":"mutable","name":"amount","nameLocation":"5683:6:15","nodeType":"VariableDeclaration","scope":2457,"src":"5675:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2447,"name":"uint256","nodeType":"ElementaryTypeName","src":"5675:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5657:33:15"},"returnParameters":{"id":2450,"nodeType":"ParameterList","parameters":[],"src":"5700:0:15"},"scope":2720,"src":"5639:94:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2502,"nodeType":"Block","src":"5892:194:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2467,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2460,"src":"5902:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2468,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5907:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5902:6:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2473,"nodeType":"IfStatement","src":"5898:35:15","trueBody":{"id":2472,"nodeType":"Block","src":"5910:23:15","statements":[{"expression":{"hexValue":"30","id":2470,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5925:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2466,"id":2471,"nodeType":"Return","src":"5918:8:15"}]}},{"expression":{"id":2479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2474,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2460,"src":"5939:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2476,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2460,"src":"5949:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2477,"name":"_factor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2056,"src":"5952:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2475,"name":"rmul2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1853,"src":"5943:5:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2478,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5943:17:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5939:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2480,"nodeType":"ExpressionStatement","src":"5939:21:15"},{"body":{"id":2498,"nodeType":"Block","src":"6025:42:15","statements":[{"expression":{"id":2496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2491,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2460,"src":"6033:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2494,"name":"REFACTOR_DIVIDER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2044,"src":"6043:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2492,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2460,"src":"6037:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6039:3:15","memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":340,"src":"6037:5:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2495,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6037:23:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6033:27:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2497,"nodeType":"ExpressionStatement","src":"6033:27:15"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2485,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2482,"src":"6001:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2486,"name":"refactorCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2046,"src":"6005:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6001:17:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2499,"initializationExpression":{"assignments":[2482],"declarations":[{"constant":false,"id":2482,"mutability":"mutable","name":"i","nameLocation":"5980:1:15","nodeType":"VariableDeclaration","scope":2499,"src":"5972:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2481,"name":"uint256","nodeType":"ElementaryTypeName","src":"5972:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2484,"initialValue":{"id":2483,"name":"refactoredCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2462,"src":"5984:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5972:27:15"},"loopExpression":{"expression":{"id":2489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6020:3:15","subExpression":{"id":2488,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2482,"src":"6020:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2490,"nodeType":"ExpressionStatement","src":"6020:3:15"},"nodeType":"ForStatement","src":"5967:100:15"},{"expression":{"id":2500,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2460,"src":"6080:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2466,"id":2501,"nodeType":"Return","src":"6073:8:15"}]},"documentation":{"id":2458,"nodeType":"StructuredDocumentation","src":"5751:48:15","text":" @param v the value to be factored"},"id":2503,"implemented":true,"kind":"function","modifiers":[],"name":"_applyFactor","nameLocation":"5811:12:15","nodeType":"FunctionDefinition","parameters":{"id":2463,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2460,"mutability":"mutable","name":"v","nameLocation":"5832:1:15","nodeType":"VariableDeclaration","scope":2503,"src":"5824:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2459,"name":"uint256","nodeType":"ElementaryTypeName","src":"5824:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2462,"mutability":"mutable","name":"refactoredCount","nameLocation":"5843:15:15","nodeType":"VariableDeclaration","scope":2503,"src":"5835:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2461,"name":"uint256","nodeType":"ElementaryTypeName","src":"5835:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5823:36:15"},"returnParameters":{"id":2466,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2465,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2503,"src":"5883:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2464,"name":"uint256","nodeType":"ElementaryTypeName","src":"5883:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5882:9:15"},"scope":2720,"src":"5802:284:15","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2516,"nodeType":"Block","src":"6218:36:15","statements":[{"expression":{"arguments":[{"id":2512,"name":"rf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2506,"src":"6237:2:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2513,"name":"_factor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2056,"src":"6241:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2511,"name":"rdiv2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1891,"src":"6231:5:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2514,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6231:18:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2510,"id":2515,"nodeType":"Return","src":"6224:25:15"}]},"documentation":{"id":2504,"nodeType":"StructuredDocumentation","src":"6090:57:15","text":" @dev Calculate RAY BASED from RAY FACTORED"},"id":2517,"implemented":true,"kind":"function","modifiers":[],"name":"_toRAYBased","nameLocation":"6159:11:15","nodeType":"FunctionDefinition","parameters":{"id":2507,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2506,"mutability":"mutable","name":"rf","nameLocation":"6179:2:15","nodeType":"VariableDeclaration","scope":2517,"src":"6171:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2505,"name":"uint256","nodeType":"ElementaryTypeName","src":"6171:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6170:12:15"},"returnParameters":{"id":2510,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2509,"mutability":"mutable","name":"rb","nameLocation":"6214:2:15","nodeType":"VariableDeclaration","scope":2517,"src":"6206:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2508,"name":"uint256","nodeType":"ElementaryTypeName","src":"6206:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6205:12:15"},"scope":2720,"src":"6150:104:15","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2530,"nodeType":"Block","src":"6389:36:15","statements":[{"expression":{"arguments":[{"id":2526,"name":"rb","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2520,"src":"6408:2:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2527,"name":"_factor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2056,"src":"6412:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2525,"name":"rmul2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1853,"src":"6402:5:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2528,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6402:18:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2524,"id":2529,"nodeType":"Return","src":"6395:25:15"}]},"documentation":{"id":2518,"nodeType":"StructuredDocumentation","src":"6258:57:15","text":" @dev Calculate RAY FACTORED from RAY BASED"},"id":2531,"implemented":true,"kind":"function","modifiers":[],"name":"_toRAYFactored","nameLocation":"6327:14:15","nodeType":"FunctionDefinition","parameters":{"id":2521,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2520,"mutability":"mutable","name":"rb","nameLocation":"6350:2:15","nodeType":"VariableDeclaration","scope":2531,"src":"6342:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2519,"name":"uint256","nodeType":"ElementaryTypeName","src":"6342:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6341:12:15"},"returnParameters":{"id":2524,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2523,"mutability":"mutable","name":"rf","nameLocation":"6385:2:15","nodeType":"VariableDeclaration","scope":2531,"src":"6377:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2522,"name":"uint256","nodeType":"ElementaryTypeName","src":"6377:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6376:12:15"},"scope":2720,"src":"6318:107:15","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2585,"nodeType":"Block","src":"6509:270:15","statements":[{"assignments":[2541],"declarations":[{"constant":false,"id":2541,"mutability":"mutable","name":"previous","nameLocation":"6523:8:15","nodeType":"VariableDeclaration","scope":2585,"src":"6515:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2540,"name":"uint256","nodeType":"ElementaryTypeName","src":"6515:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2543,"initialValue":{"id":2542,"name":"_factor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2056,"src":"6534:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6515:26:15"},{"assignments":[2545],"declarations":[{"constant":false,"id":2545,"mutability":"mutable","name":"count","nameLocation":"6556:5:15","nodeType":"VariableDeclaration","scope":2585,"src":"6548:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2544,"name":"uint256","nodeType":"ElementaryTypeName","src":"6548:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2547,"initialValue":{"hexValue":"30","id":2546,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6564:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6548:17:15"},{"assignments":[2549],"declarations":[{"constant":false,"id":2549,"mutability":"mutable","name":"f","nameLocation":"6579:1:15","nodeType":"VariableDeclaration","scope":2585,"src":"6571:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2548,"name":"uint256","nodeType":"ElementaryTypeName","src":"6571:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2551,"initialValue":{"id":2550,"name":"factor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2533,"src":"6583:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6571:18:15"},{"body":{"id":2569,"nodeType":"Block","src":"6655:35:15","statements":[{"expression":{"id":2567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2562,"name":"count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2545,"src":"6663:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"31","id":2565,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6681:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"expression":{"id":2563,"name":"count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2545,"src":"6671:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6677:3:15","memberName":"add","nodeType":"MemberAccess","referencedDeclaration":310,"src":"6671:9:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2566,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6671:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6663:20:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2568,"nodeType":"ExpressionStatement","src":"6663:20:15"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2552,"name":"f","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2549,"src":"6602:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2553,"name":"REFACTOR_BOUNDARY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2041,"src":"6607:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6602:22:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2570,"loopExpression":{"expression":{"id":2560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2555,"name":"f","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2549,"src":"6626:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2558,"name":"REFACTOR_DIVIDER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2044,"src":"6636:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2556,"name":"f","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2549,"src":"6630:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6632:3:15","memberName":"div","nodeType":"MemberAccess","referencedDeclaration":355,"src":"6630:5:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2559,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6630:23:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6626:27:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2561,"nodeType":"ExpressionStatement","src":"6626:27:15"},"nodeType":"ForStatement","src":"6595:95:15"},{"expression":{"id":2573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2571,"name":"refactorCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2046,"src":"6696:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2572,"name":"count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2545,"src":"6712:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6696:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2574,"nodeType":"ExpressionStatement","src":"6696:21:15"},{"expression":{"id":2577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2575,"name":"_factor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2056,"src":"6723:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2576,"name":"f","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2549,"src":"6733:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6723:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2578,"nodeType":"ExpressionStatement","src":"6723:11:15"},{"eventCall":{"arguments":[{"id":2580,"name":"previous","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2541,"src":"6755:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2581,"name":"f","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2549,"src":"6765:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2582,"name":"count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2545,"src":"6768:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2579,"name":"FactorSet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2066,"src":"6745:9:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256,uint256)"}},"id":2583,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6745:29:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2584,"nodeType":"EmitStatement","src":"6740:34:15"}]},"functionSelector":"817e9d31","id":2586,"implemented":true,"kind":"function","modifiers":[{"id":2536,"kind":"modifierInvocation","modifierName":{"id":2535,"name":"onlyOwner","nameLocations":["6484:9:15"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"6484:9:15"},"nodeType":"ModifierInvocation","src":"6484:9:15"}],"name":"setFactor","nameLocation":"6449:9:15","nodeType":"FunctionDefinition","parameters":{"id":2534,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2533,"mutability":"mutable","name":"factor","nameLocation":"6467:6:15","nodeType":"VariableDeclaration","scope":2586,"src":"6459:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2532,"name":"uint256","nodeType":"ElementaryTypeName","src":"6459:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6458:16:15"},"returnParameters":{"id":2539,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2538,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2586,"src":"6503:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2537,"name":"bool","nodeType":"ElementaryTypeName","src":"6503:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6502:6:15"},"scope":2720,"src":"6440:339:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2625,"nodeType":"Block","src":"6832:285:15","statements":[{"assignments":[2592],"declarations":[{"constant":false,"id":2592,"mutability":"mutable","name":"currentSupply","nameLocation":"6846:13:15","nodeType":"VariableDeclaration","scope":2625,"src":"6838:21:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2591,"name":"uint256","nodeType":"ElementaryTypeName","src":"6838:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2599,"initialValue":{"arguments":[{"expression":{"id":2594,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2054,"src":"6875:12:15","typeDescriptions":{"typeIdentifier":"t_struct$_Balance_$2036_storage","typeString":"struct AutoRefactorCoinage.Balance storage ref"}},"id":2595,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6888:7:15","memberName":"balance","nodeType":"MemberAccess","referencedDeclaration":2031,"src":"6875:20:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2596,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2054,"src":"6897:12:15","typeDescriptions":{"typeIdentifier":"t_struct$_Balance_$2036_storage","typeString":"struct AutoRefactorCoinage.Balance storage ref"}},"id":2597,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6910:15:15","memberName":"refactoredCount","nodeType":"MemberAccess","referencedDeclaration":2033,"src":"6897:28:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2593,"name":"_applyFactor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2503,"src":"6862:12:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) view returns (uint256)"}},"id":2598,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6862:64:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6838:88:15"},{"assignments":[2601],"declarations":[{"constant":false,"id":2601,"mutability":"mutable","name":"newSupply","nameLocation":"6940:9:15","nodeType":"VariableDeclaration","scope":2625,"src":"6932:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2600,"name":"uint256","nodeType":"ElementaryTypeName","src":"6932:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2606,"initialValue":{"arguments":[{"id":2604,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2588,"src":"6970:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2602,"name":"currentSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2592,"src":"6952:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6966:3:15","memberName":"add","nodeType":"MemberAccess","referencedDeclaration":310,"src":"6952:17:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2605,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6952:25:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6932:45:15"},{"assignments":[2608],"declarations":[{"constant":false,"id":2608,"mutability":"mutable","name":"rbAmount","nameLocation":"6992:8:15","nodeType":"VariableDeclaration","scope":2625,"src":"6984:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2607,"name":"uint256","nodeType":"ElementaryTypeName","src":"6984:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2612,"initialValue":{"arguments":[{"id":2610,"name":"newSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2601,"src":"7015:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2609,"name":"_toRAYBased","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2517,"src":"7003:11:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":2611,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7003:22:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6984:41:15"},{"expression":{"id":2617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2613,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2054,"src":"7031:12:15","typeDescriptions":{"typeIdentifier":"t_struct$_Balance_$2036_storage","typeString":"struct AutoRefactorCoinage.Balance storage ref"}},"id":2615,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7044:7:15","memberName":"balance","nodeType":"MemberAccess","referencedDeclaration":2031,"src":"7031:20:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2616,"name":"rbAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2608,"src":"7054:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7031:31:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2618,"nodeType":"ExpressionStatement","src":"7031:31:15"},{"expression":{"id":2623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2619,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2054,"src":"7068:12:15","typeDescriptions":{"typeIdentifier":"t_struct$_Balance_$2036_storage","typeString":"struct AutoRefactorCoinage.Balance storage ref"}},"id":2621,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7081:15:15","memberName":"refactoredCount","nodeType":"MemberAccess","referencedDeclaration":2033,"src":"7068:28:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2622,"name":"refactorCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2046,"src":"7099:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7068:44:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2624,"nodeType":"ExpressionStatement","src":"7068:44:15"}]},"id":2626,"implemented":true,"kind":"function","modifiers":[],"name":"addTotalSupply","nameLocation":"6792:14:15","nodeType":"FunctionDefinition","parameters":{"id":2589,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2588,"mutability":"mutable","name":"amount","nameLocation":"6815:6:15","nodeType":"VariableDeclaration","scope":2626,"src":"6807:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2587,"name":"uint256","nodeType":"ElementaryTypeName","src":"6807:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6806:16:15"},"returnParameters":{"id":2590,"nodeType":"ParameterList","parameters":[],"src":"6832:0:15"},"scope":2720,"src":"6783:334:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2665,"nodeType":"Block","src":"7170:285:15","statements":[{"assignments":[2632],"declarations":[{"constant":false,"id":2632,"mutability":"mutable","name":"currentSupply","nameLocation":"7184:13:15","nodeType":"VariableDeclaration","scope":2665,"src":"7176:21:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2631,"name":"uint256","nodeType":"ElementaryTypeName","src":"7176:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2639,"initialValue":{"arguments":[{"expression":{"id":2634,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2054,"src":"7213:12:15","typeDescriptions":{"typeIdentifier":"t_struct$_Balance_$2036_storage","typeString":"struct AutoRefactorCoinage.Balance storage ref"}},"id":2635,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7226:7:15","memberName":"balance","nodeType":"MemberAccess","referencedDeclaration":2031,"src":"7213:20:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2636,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2054,"src":"7235:12:15","typeDescriptions":{"typeIdentifier":"t_struct$_Balance_$2036_storage","typeString":"struct AutoRefactorCoinage.Balance storage ref"}},"id":2637,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7248:15:15","memberName":"refactoredCount","nodeType":"MemberAccess","referencedDeclaration":2033,"src":"7235:28:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2633,"name":"_applyFactor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2503,"src":"7200:12:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) view returns (uint256)"}},"id":2638,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7200:64:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7176:88:15"},{"assignments":[2641],"declarations":[{"constant":false,"id":2641,"mutability":"mutable","name":"newSupply","nameLocation":"7278:9:15","nodeType":"VariableDeclaration","scope":2665,"src":"7270:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2640,"name":"uint256","nodeType":"ElementaryTypeName","src":"7270:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2646,"initialValue":{"arguments":[{"id":2644,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2628,"src":"7308:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2642,"name":"currentSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2632,"src":"7290:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7304:3:15","memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":325,"src":"7290:17:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2645,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7290:25:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7270:45:15"},{"assignments":[2648],"declarations":[{"constant":false,"id":2648,"mutability":"mutable","name":"rbAmount","nameLocation":"7330:8:15","nodeType":"VariableDeclaration","scope":2665,"src":"7322:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2647,"name":"uint256","nodeType":"ElementaryTypeName","src":"7322:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2652,"initialValue":{"arguments":[{"id":2650,"name":"newSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2641,"src":"7353:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2649,"name":"_toRAYBased","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2517,"src":"7341:11:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":2651,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7341:22:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7322:41:15"},{"expression":{"id":2657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2653,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2054,"src":"7369:12:15","typeDescriptions":{"typeIdentifier":"t_struct$_Balance_$2036_storage","typeString":"struct AutoRefactorCoinage.Balance storage ref"}},"id":2655,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7382:7:15","memberName":"balance","nodeType":"MemberAccess","referencedDeclaration":2031,"src":"7369:20:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2656,"name":"rbAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2648,"src":"7392:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7369:31:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2658,"nodeType":"ExpressionStatement","src":"7369:31:15"},{"expression":{"id":2663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2659,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2054,"src":"7406:12:15","typeDescriptions":{"typeIdentifier":"t_struct$_Balance_$2036_storage","typeString":"struct AutoRefactorCoinage.Balance storage ref"}},"id":2661,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7419:15:15","memberName":"refactoredCount","nodeType":"MemberAccess","referencedDeclaration":2033,"src":"7406:28:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2662,"name":"refactorCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2046,"src":"7437:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7406:44:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2664,"nodeType":"ExpressionStatement","src":"7406:44:15"}]},"id":2666,"implemented":true,"kind":"function","modifiers":[],"name":"subTotalSupply","nameLocation":"7130:14:15","nodeType":"FunctionDefinition","parameters":{"id":2629,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2628,"mutability":"mutable","name":"amount","nameLocation":"7153:6:15","nodeType":"VariableDeclaration","scope":2666,"src":"7145:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2627,"name":"uint256","nodeType":"ElementaryTypeName","src":"7145:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7144:16:15"},"returnParameters":{"id":2630,"nodeType":"ParameterList","parameters":[],"src":"7170:0:15"},"scope":2720,"src":"7121:334:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1053],"body":{"id":2678,"nodeType":"Block","src":"7562:19:15","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2675,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"7568:6:15","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$__$returns$__$","typeString":"function () pure"}},"id":2676,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7568:8:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2677,"nodeType":"ExpressionStatement","src":"7568:8:15"}]},"functionSelector":"a9059cbb","id":2679,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"7496:8:15","nodeType":"FunctionDefinition","parameters":{"id":2671,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2668,"mutability":"mutable","name":"recipient","nameLocation":"7513:9:15","nodeType":"VariableDeclaration","scope":2679,"src":"7505:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2667,"name":"address","nodeType":"ElementaryTypeName","src":"7505:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2670,"mutability":"mutable","name":"amount","nameLocation":"7532:6:15","nodeType":"VariableDeclaration","scope":2679,"src":"7524:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2669,"name":"uint256","nodeType":"ElementaryTypeName","src":"7524:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7504:35:15"},"returnParameters":{"id":2674,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2673,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2679,"src":"7556:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2672,"name":"bool","nodeType":"ElementaryTypeName","src":"7556:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7555:6:15"},"scope":2720,"src":"7487:94:15","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[1063],"body":{"id":2690,"nodeType":"Block","src":"7666:19:15","statements":[{"expression":{"hexValue":"30","id":2688,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7679:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2687,"id":2689,"nodeType":"Return","src":"7672:8:15"}]},"functionSelector":"dd62ed3e","id":2691,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"7594:9:15","nodeType":"FunctionDefinition","parameters":{"id":2684,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2681,"mutability":"mutable","name":"owner","nameLocation":"7612:5:15","nodeType":"VariableDeclaration","scope":2691,"src":"7604:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2680,"name":"address","nodeType":"ElementaryTypeName","src":"7604:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2683,"mutability":"mutable","name":"spender","nameLocation":"7627:7:15","nodeType":"VariableDeclaration","scope":2691,"src":"7619:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2682,"name":"address","nodeType":"ElementaryTypeName","src":"7619:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7603:32:15"},"returnParameters":{"id":2687,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2686,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2691,"src":"7657:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2685,"name":"uint256","nodeType":"ElementaryTypeName","src":"7657:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7656:9:15"},"scope":2720,"src":"7585:100:15","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[1073],"body":{"id":2703,"nodeType":"Block","src":"7761:19:15","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2700,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"7767:6:15","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$__$returns$__$","typeString":"function () pure"}},"id":2701,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7767:8:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2702,"nodeType":"ExpressionStatement","src":"7767:8:15"}]},"functionSelector":"095ea7b3","id":2704,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"7698:7:15","nodeType":"FunctionDefinition","parameters":{"id":2696,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2693,"mutability":"mutable","name":"spender","nameLocation":"7714:7:15","nodeType":"VariableDeclaration","scope":2704,"src":"7706:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2692,"name":"address","nodeType":"ElementaryTypeName","src":"7706:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2695,"mutability":"mutable","name":"amount","nameLocation":"7731:6:15","nodeType":"VariableDeclaration","scope":2704,"src":"7723:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2694,"name":"uint256","nodeType":"ElementaryTypeName","src":"7723:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7705:33:15"},"returnParameters":{"id":2699,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2698,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2704,"src":"7755:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2697,"name":"bool","nodeType":"ElementaryTypeName","src":"7755:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7754:6:15"},"scope":2720,"src":"7689:91:15","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[1085],"body":{"id":2718,"nodeType":"Block","src":"7879:19:15","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2715,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"7885:6:15","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$__$returns$__$","typeString":"function () pure"}},"id":2716,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7885:8:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2717,"nodeType":"ExpressionStatement","src":"7885:8:15"}]},"functionSelector":"23b872dd","id":2719,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"7793:12:15","nodeType":"FunctionDefinition","parameters":{"id":2711,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2706,"mutability":"mutable","name":"sender","nameLocation":"7814:6:15","nodeType":"VariableDeclaration","scope":2719,"src":"7806:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2705,"name":"address","nodeType":"ElementaryTypeName","src":"7806:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2708,"mutability":"mutable","name":"recipient","nameLocation":"7830:9:15","nodeType":"VariableDeclaration","scope":2719,"src":"7822:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2707,"name":"address","nodeType":"ElementaryTypeName","src":"7822:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2710,"mutability":"mutable","name":"amount","nameLocation":"7849:6:15","nodeType":"VariableDeclaration","scope":2719,"src":"7841:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2709,"name":"uint256","nodeType":"ElementaryTypeName","src":"7841:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7805:51:15"},"returnParameters":{"id":2714,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2713,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2719,"src":"7873:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2712,"name":"bool","nodeType":"ElementaryTypeName","src":"7873:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7872:6:15"},"scope":2720,"src":"7784:114:15","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":2721,"src":"1394:6506:15","usedErrors":[]}],"src":"194:7707:15"},"id":15},"contracts/test/CoinageFactory.sol":{"ast":{"absolutePath":"contracts/test/CoinageFactory.sol","exportedSymbols":{"AutoRefactorCoinage":[2720],"CoinageFactory":[2778],"CoinageFactoryI":[1567]},"id":2779,"nodeType":"SourceUnit","nodes":[{"id":2722,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"0:23:16"},{"absolutePath":"contracts/test/AutoRefactorCoinage.sol","file":"./AutoRefactorCoinage.sol","id":2724,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2779,"sourceUnit":2721,"src":"25:64:16","symbolAliases":[{"foreign":{"id":2723,"name":"AutoRefactorCoinage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2720,"src":"34:19:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/interfaces/CoinageFactoryI.sol","file":"../interfaces/CoinageFactoryI.sol","id":2726,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2779,"sourceUnit":1568,"src":"90:68:16","symbolAliases":[{"foreign":{"id":2725,"name":"CoinageFactoryI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1567,"src":"99:15:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2727,"name":"CoinageFactoryI","nameLocations":["187:15:16"],"nodeType":"IdentifierPath","referencedDeclaration":1567,"src":"187:15:16"},"id":2728,"nodeType":"InheritanceSpecifier","src":"187:15:16"}],"canonicalName":"CoinageFactory","contractDependencies":[2720],"contractKind":"contract","fullyImplemented":true,"id":2778,"linearizedBaseContracts":[2778,1567],"name":"CoinageFactory","nameLocation":"169:14:16","nodeType":"ContractDefinition","nodes":[{"constant":true,"functionSelector":"552033c4","id":2733,"mutability":"constant","name":"RAY","nameLocation":"231:3:16","nodeType":"VariableDeclaration","scope":2778,"src":"207:38:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2729,"name":"uint256","nodeType":"ElementaryTypeName","src":"207:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_1000000000000000000000000000_by_1","typeString":"int_const 1000000000000000000000000000"},"id":2732,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2730,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"237:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3237","id":2731,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"243:2:16","typeDescriptions":{"typeIdentifier":"t_rational_27_by_1","typeString":"int_const 27"},"value":"27"},"src":"237:8:16","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000000000000_by_1","typeString":"int_const 1000000000000000000000000000"}},"visibility":"public"},{"constant":true,"id":2736,"mutability":"constant","name":"_DEFAULT_FACTOR","nameLocation":"284:15:16","nodeType":"VariableDeclaration","scope":2778,"src":"258:47:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2734,"name":"uint256","nodeType":"ElementaryTypeName","src":"258:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"id":2735,"name":"RAY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2733,"src":"302:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"baseFunctions":[1566],"body":{"id":2776,"nodeType":"Block","src":"355:222:16","statements":[{"assignments":[2743],"declarations":[{"constant":false,"id":2743,"mutability":"mutable","name":"c","nameLocation":"381:1:16","nodeType":"VariableDeclaration","scope":2776,"src":"361:21:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_AutoRefactorCoinage_$2720","typeString":"contract AutoRefactorCoinage"},"typeName":{"id":2742,"nodeType":"UserDefinedTypeName","pathNode":{"id":2741,"name":"AutoRefactorCoinage","nameLocations":["361:19:16"],"nodeType":"IdentifierPath","referencedDeclaration":2720,"src":"361:19:16"},"referencedDeclaration":2720,"src":"361:19:16","typeDescriptions":{"typeIdentifier":"t_contract$_AutoRefactorCoinage_$2720","typeString":"contract AutoRefactorCoinage"}},"visibility":"internal"}],"id":2751,"initialValue":{"arguments":[{"hexValue":"","id":2747,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"416:2:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},{"hexValue":"","id":2748,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"426:2:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},{"id":2749,"name":"_DEFAULT_FACTOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2736,"src":"436:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"NewExpression","src":"385:23:16","typeDescriptions":{"typeIdentifier":"t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$returns$_t_contract$_AutoRefactorCoinage_$2720_$","typeString":"function (string memory,string memory,uint256) returns (contract AutoRefactorCoinage)"},"typeName":{"id":2745,"nodeType":"UserDefinedTypeName","pathNode":{"id":2744,"name":"AutoRefactorCoinage","nameLocations":["389:19:16"],"nodeType":"IdentifierPath","referencedDeclaration":2720,"src":"389:19:16"},"referencedDeclaration":2720,"src":"389:19:16","typeDescriptions":{"typeIdentifier":"t_contract$_AutoRefactorCoinage_$2720","typeString":"contract AutoRefactorCoinage"}}},"id":2750,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"385:72:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_AutoRefactorCoinage_$2720","typeString":"contract AutoRefactorCoinage"}},"nodeType":"VariableDeclarationStatement","src":"361:96:16"},{"expression":{"arguments":[{"expression":{"id":2755,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"476:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"480:6:16","memberName":"sender","nodeType":"MemberAccess","src":"476:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2752,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2743,"src":"464:1:16","typeDescriptions":{"typeIdentifier":"t_contract$_AutoRefactorCoinage_$2720","typeString":"contract AutoRefactorCoinage"}},"id":2754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"466:9:16","memberName":"addMinter","nodeType":"MemberAccess","referencedDeclaration":2138,"src":"464:11:16","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$returns$__$","typeString":"function (address) external"}},"id":2757,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"464:23:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2758,"nodeType":"ExpressionStatement","src":"464:23:16"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2759,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2743,"src":"493:1:16","typeDescriptions":{"typeIdentifier":"t_contract$_AutoRefactorCoinage_$2720","typeString":"contract AutoRefactorCoinage"}},"id":2761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"495:14:16","memberName":"renounceMinter","nodeType":"MemberAccess","referencedDeclaration":2147,"src":"493:16:16","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$__$returns$__$","typeString":"function () external"}},"id":2762,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"493:18:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2763,"nodeType":"ExpressionStatement","src":"493:18:16"},{"expression":{"arguments":[{"expression":{"id":2767,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"537:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"541:6:16","memberName":"sender","nodeType":"MemberAccess","src":"537:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2764,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2743,"src":"517:1:16","typeDescriptions":{"typeIdentifier":"t_contract$_AutoRefactorCoinage_$2720","typeString":"contract AutoRefactorCoinage"}},"id":2766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"519:17:16","memberName":"transferOwnership","nodeType":"MemberAccess","referencedDeclaration":91,"src":"517:19:16","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$returns$__$","typeString":"function (address) external"}},"id":2769,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"517:31:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2770,"nodeType":"ExpressionStatement","src":"517:31:16"},{"expression":{"arguments":[{"id":2773,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2743,"src":"570:1:16","typeDescriptions":{"typeIdentifier":"t_contract$_AutoRefactorCoinage_$2720","typeString":"contract AutoRefactorCoinage"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_AutoRefactorCoinage_$2720","typeString":"contract AutoRefactorCoinage"}],"id":2772,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"562:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2771,"name":"address","nodeType":"ElementaryTypeName","src":"562:7:16","typeDescriptions":{}}},"id":2774,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"562:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2740,"id":2775,"nodeType":"Return","src":"555:17:16"}]},"functionSelector":"775c300c","id":2777,"implemented":true,"kind":"function","modifiers":[],"name":"deploy","nameLocation":"319:6:16","nodeType":"FunctionDefinition","parameters":{"id":2737,"nodeType":"ParameterList","parameters":[],"src":"325:2:16"},"returnParameters":{"id":2740,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2739,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2777,"src":"346:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2738,"name":"address","nodeType":"ElementaryTypeName","src":"346:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"345:9:16"},"scope":2778,"src":"310:267:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2779,"src":"160:419:16","usedErrors":[]}],"src":"0:580:16"},"id":16}},"contracts":{"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.","kind":"dev","methods":{"constructor":{"details":"Initializes the contract setting the deployer as the initial owner."},"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":7,"contract":"@openzeppelin/contracts/access/Ownable.sol:Ownable","label":"_owner","offset":0,"slot":"0","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"devdoc":{"details":"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/math/SafeMath.sol":{"SafeMath":{"abi":[],"devdoc":{"details":"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bf8c1b2820c9536bced0988088bbf553a8c543837c0e1f901deb64566dbd923164736f6c63430008120033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBF DUP13 SHL 0x28 KECCAK256 0xC9 MSTORE8 PUSH12 0xCED0988088BBF553A8C54383 PUSH29 0xE1F901DEB64566DBD923164736F6C6343000812003300000000000000 ","sourceMap":"482:6300:2:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;482:6300:2;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bf8c1b2820c9536bced0988088bbf553a8c543837c0e1f901deb64566dbd923164736f6c63430008120033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBF DUP13 SHL 0x28 KECCAK256 0xC9 MSTORE8 PUSH12 0xCED0988088BBF553A8C54383 PUSH29 0xE1F901DEB64566DBD923164736F6C6343000812003300000000000000 ","sourceMap":"482:6300:2:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"},"internal":{"add(uint256,uint256)":"infinite","div(uint256,uint256)":"infinite","div(uint256,uint256,string memory)":"infinite","mod(uint256,uint256)":"infinite","mod(uint256,uint256,string memory)":"infinite","mul(uint256,uint256)":"infinite","sub(uint256,uint256)":"infinite","sub(uint256,uint256,string memory)":"infinite","tryAdd(uint256,uint256)":"infinite","tryDiv(uint256,uint256)":"infinite","tryMod(uint256,uint256)":"infinite","tryMul(uint256,uint256)":"infinite","trySub(uint256,uint256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\\n\\npragma solidity ^0.8.0;\\n\\n// CAUTION\\n// This version of SafeMath should only be used with Solidity 0.8 or later,\\n// because it relies on the compiler's built in overflow checks.\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations.\\n *\\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\\n * now has built in overflow checking.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            uint256 c = a + b;\\n            if (c < a) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b > a) return (false, 0);\\n            return (true, a - b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n            // benefit is lost if 'b' is also tested.\\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n            if (a == 0) return (true, 0);\\n            uint256 c = a * b;\\n            if (c / a != b) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a / b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a % b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a + b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a * b;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a % b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {trySub}.\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b <= a, errorMessage);\\n            return a - b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a / b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting with custom message when dividing by zero.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryMod}.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a % b;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/AccessControl/Context.sol":{"Context":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/AccessControl/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"contracts/AccessControl/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with GSN meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\n        return msg.data;\\n    }\\n}\",\"keccak256\":\"0x24e77a6af76a3c4f61e872bab8ab92a2a27b20d3e6111da351e0aa7ab83a7dc9\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/AccessControl/ERC20.sol":{"ERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20Mintable}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin guidelines: functions revert instead of returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"See {IERC20-allowance}."},"approve(address,uint256)":{"details":"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."},"balanceOf(address)":{"details":"See {IERC20-balanceOf}."},"decreaseAllowance(address,uint256)":{"details":"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."},"increaseAllowance(address,uint256)":{"details":"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."},"totalSupply()":{"details":"See {IERC20-totalSupply}."},"transfer(address,uint256)":{"details":"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."},"transferFrom(address,address,uint256)":{"details":"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"608060405234801561001057600080fd5b506107c7806100206000396000f3fe608060405234801561001057600080fd5b50600436106100785760003560e01c8063095ea7b31461007d57806318160ddd146100a557806323b872dd146100b757806339509351146100ca57806370a08231146100dd578063a457c2d714610106578063a9059cbb14610119578063dd62ed3e1461012c575b600080fd5b61009061008b3660046105e0565b610165565b60405190151581526020015b60405180910390f35b6002545b60405190815260200161009c565b6100906100c536600461060a565b61017c565b6100906100d83660046105e0565b6101e5565b6100a96100eb366004610646565b6001600160a01b031660009081526020819052604090205490565b6100906101143660046105e0565b61021b565b6100906101273660046105e0565b61026a565b6100a961013a366004610661565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6000610172338484610277565b5060015b92915050565b60006101898484846103a1565b6101db84336101d685604051806060016040528060288152602001610745602891396001600160a01b038a1660009081526001602090815260408083203384529091529020549190610524565b610277565b5060019392505050565b3360008181526001602090815260408083206001600160a01b038716845290915281205490916101729185906101d6908661055e565b600061017233846101d68560405180606001604052806025815260200161076d602591393360009081526001602090815260408083206001600160a01b038d1684529091529020549190610524565b60006101723384846103a1565b6001600160a01b0383166102de5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084015b60405180910390fd5b6001600160a01b03821661033f5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016102d5565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b0383166104055760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016102d5565b6001600160a01b0382166104675760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016102d5565b6104a48160405180606001604052806026815260200161071f602691396001600160a01b0386166000908152602081905260409020549190610524565b6001600160a01b0380851660009081526020819052604080822093909355908416815220546104d3908261055e565b6001600160a01b038381166000818152602081815260409182902094909455518481529092918616917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9101610394565b600081848411156105485760405162461bcd60e51b81526004016102d59190610694565b50600061055584866106f8565b95945050505050565b60008061056b838561070b565b9050838110156105bd5760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f77000000000060448201526064016102d5565b9392505050565b80356001600160a01b03811681146105db57600080fd5b919050565b600080604083850312156105f357600080fd5b6105fc836105c4565b946020939093013593505050565b60008060006060848603121561061f57600080fd5b610628846105c4565b9250610636602085016105c4565b9150604084013590509250925092565b60006020828403121561065857600080fd5b6105bd826105c4565b6000806040838503121561067457600080fd5b61067d836105c4565b915061068b602084016105c4565b90509250929050565b600060208083528351808285015260005b818110156106c1578581018301518582016040015282016106a5565b506000604082860101526040601f19601f8301168501019250505092915050565b634e487b7160e01b600052601160045260246000fd5b81810381811115610176576101766106e2565b80820180821115610176576101766106e256fe45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa2646970667358221220e899b4d963a4b12c47035db6688f869a7897061f9b76ce52b20d0135e2aebaa564736f6c63430008120033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7C7 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x78 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x7D JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xA5 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0xB7 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0xCA JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0xDD JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x106 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x119 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x12C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x90 PUSH2 0x8B CALLDATASIZE PUSH1 0x4 PUSH2 0x5E0 JUMP JUMPDEST PUSH2 0x165 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x9C JUMP JUMPDEST PUSH2 0x90 PUSH2 0xC5 CALLDATASIZE PUSH1 0x4 PUSH2 0x60A JUMP JUMPDEST PUSH2 0x17C JUMP JUMPDEST PUSH2 0x90 PUSH2 0xD8 CALLDATASIZE PUSH1 0x4 PUSH2 0x5E0 JUMP JUMPDEST PUSH2 0x1E5 JUMP JUMPDEST PUSH2 0xA9 PUSH2 0xEB CALLDATASIZE PUSH1 0x4 PUSH2 0x646 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x90 PUSH2 0x114 CALLDATASIZE PUSH1 0x4 PUSH2 0x5E0 JUMP JUMPDEST PUSH2 0x21B JUMP JUMPDEST PUSH2 0x90 PUSH2 0x127 CALLDATASIZE PUSH1 0x4 PUSH2 0x5E0 JUMP JUMPDEST PUSH2 0x26A JUMP JUMPDEST PUSH2 0xA9 PUSH2 0x13A CALLDATASIZE PUSH1 0x4 PUSH2 0x661 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x172 CALLER DUP5 DUP5 PUSH2 0x277 JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x189 DUP5 DUP5 DUP5 PUSH2 0x3A1 JUMP JUMPDEST PUSH2 0x1DB DUP5 CALLER PUSH2 0x1D6 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x745 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x524 JUMP JUMPDEST PUSH2 0x277 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x172 SWAP2 DUP6 SWAP1 PUSH2 0x1D6 SWAP1 DUP7 PUSH2 0x55E JUMP JUMPDEST PUSH1 0x0 PUSH2 0x172 CALLER DUP5 PUSH2 0x1D6 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x76D PUSH1 0x25 SWAP2 CODECOPY CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x524 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x172 CALLER DUP5 DUP5 PUSH2 0x3A1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x2DE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x33F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2D5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x405 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2D5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x467 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2D5 JUMP JUMPDEST PUSH2 0x4A4 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x71F PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x524 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x4D3 SWAP1 DUP3 PUSH2 0x55E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE MLOAD DUP5 DUP2 MSTORE SWAP1 SWAP3 SWAP2 DUP7 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH2 0x394 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x548 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D5 SWAP2 SWAP1 PUSH2 0x694 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x555 DUP5 DUP7 PUSH2 0x6F8 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x56B DUP4 DUP6 PUSH2 0x70B JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x5BD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2D5 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x5DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x5F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5FC DUP4 PUSH2 0x5C4 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x61F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x628 DUP5 PUSH2 0x5C4 JUMP JUMPDEST SWAP3 POP PUSH2 0x636 PUSH1 0x20 DUP6 ADD PUSH2 0x5C4 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x658 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5BD DUP3 PUSH2 0x5C4 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x674 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x67D DUP4 PUSH2 0x5C4 JUMP JUMPDEST SWAP2 POP PUSH2 0x68B PUSH1 0x20 DUP5 ADD PUSH2 0x5C4 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x6C1 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x6A5 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x176 JUMPI PUSH2 0x176 PUSH2 0x6E2 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x176 JUMPI PUSH2 0x176 PUSH2 0x6E2 JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x2062616C616E636545524332303A207472616E73 PUSH7 0x657220616D6F75 PUSH15 0x74206578636565647320616C6C6F77 PUSH2 0x6E63 PUSH6 0x45524332303A KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726FA2646970 PUSH7 0x7358221220E899 0xB4 0xD9 PUSH4 0xA4B12C47 SUB 0x5D 0xB6 PUSH9 0x8F869A7897061F9B76 0xCE MSTORE 0xB2 0xD ADD CALLDATALOAD 0xE2 0xAE 0xBA 0xA5 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ","sourceMap":"1251:6823:4:-:0;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_approve_865":{"entryPoint":631,"id":865,"parameterSlots":3,"returnSlots":0},"@_msgSender_457":{"entryPoint":null,"id":457,"parameterSlots":0,"returnSlots":1},"@_transfer_727":{"entryPoint":929,"id":727,"parameterSlots":3,"returnSlots":0},"@add_1331":{"entryPoint":1374,"id":1331,"parameterSlots":2,"returnSlots":1},"@allowance_553":{"entryPoint":null,"id":553,"parameterSlots":2,"returnSlots":1},"@approve_573":{"entryPoint":357,"id":573,"parameterSlots":2,"returnSlots":1},"@balanceOf_516":{"entryPoint":null,"id":516,"parameterSlots":1,"returnSlots":1},"@decreaseAllowance_667":{"entryPoint":539,"id":667,"parameterSlots":2,"returnSlots":1},"@increaseAllowance_638":{"entryPoint":485,"id":638,"parameterSlots":2,"returnSlots":1},"@sub_1376":{"entryPoint":1316,"id":1376,"parameterSlots":3,"returnSlots":1},"@totalSupply_503":{"entryPoint":null,"id":503,"parameterSlots":0,"returnSlots":1},"@transferFrom_610":{"entryPoint":380,"id":610,"parameterSlots":3,"returnSlots":1},"@transfer_536":{"entryPoint":618,"id":536,"parameterSlots":2,"returnSlots":1},"abi_decode_address":{"entryPoint":1476,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":1606,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":1633,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":1546,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":1504,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1684,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":1803,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":1784,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":1762,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:4533:17","statements":[{"nodeType":"YulBlock","src":"6:3:17","statements":[]},{"body":{"nodeType":"YulBlock","src":"63:124:17","statements":[{"nodeType":"YulAssignment","src":"73:29:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"95:6:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"82:12:17"},"nodeType":"YulFunctionCall","src":"82:20:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"73:5:17"}]},{"body":{"nodeType":"YulBlock","src":"165:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"174:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"177:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"167:6:17"},"nodeType":"YulFunctionCall","src":"167:12:17"},"nodeType":"YulExpressionStatement","src":"167:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"124:5:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"135:5:17"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"150:3:17","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"155:1:17","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"146:3:17"},"nodeType":"YulFunctionCall","src":"146:11:17"},{"kind":"number","nodeType":"YulLiteral","src":"159:1:17","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"142:3:17"},"nodeType":"YulFunctionCall","src":"142:19:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"131:3:17"},"nodeType":"YulFunctionCall","src":"131:31:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"121:2:17"},"nodeType":"YulFunctionCall","src":"121:42:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"114:6:17"},"nodeType":"YulFunctionCall","src":"114:50:17"},"nodeType":"YulIf","src":"111:70:17"}]},"name":"abi_decode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"42:6:17","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"53:5:17","type":""}],"src":"14:173:17"},{"body":{"nodeType":"YulBlock","src":"279:167:17","statements":[{"body":{"nodeType":"YulBlock","src":"325:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"334:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"337:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"327:6:17"},"nodeType":"YulFunctionCall","src":"327:12:17"},"nodeType":"YulExpressionStatement","src":"327:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"300:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"309:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"296:3:17"},"nodeType":"YulFunctionCall","src":"296:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"321:2:17","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"292:3:17"},"nodeType":"YulFunctionCall","src":"292:32:17"},"nodeType":"YulIf","src":"289:52:17"},{"nodeType":"YulAssignment","src":"350:39:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"379:9:17"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"360:18:17"},"nodeType":"YulFunctionCall","src":"360:29:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"350:6:17"}]},{"nodeType":"YulAssignment","src":"398:42:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"425:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"436:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"421:3:17"},"nodeType":"YulFunctionCall","src":"421:18:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"408:12:17"},"nodeType":"YulFunctionCall","src":"408:32:17"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"398:6:17"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"237:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"248:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"260:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"268:6:17","type":""}],"src":"192:254:17"},{"body":{"nodeType":"YulBlock","src":"546:92:17","statements":[{"nodeType":"YulAssignment","src":"556:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"568:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"579:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"564:3:17"},"nodeType":"YulFunctionCall","src":"564:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"556:4:17"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"598:9:17"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"623:6:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"616:6:17"},"nodeType":"YulFunctionCall","src":"616:14:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"609:6:17"},"nodeType":"YulFunctionCall","src":"609:22:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"591:6:17"},"nodeType":"YulFunctionCall","src":"591:41:17"},"nodeType":"YulExpressionStatement","src":"591:41:17"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"515:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"526:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"537:4:17","type":""}],"src":"451:187:17"},{"body":{"nodeType":"YulBlock","src":"744:76:17","statements":[{"nodeType":"YulAssignment","src":"754:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"766:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"777:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"762:3:17"},"nodeType":"YulFunctionCall","src":"762:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"754:4:17"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"796:9:17"},{"name":"value0","nodeType":"YulIdentifier","src":"807:6:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"789:6:17"},"nodeType":"YulFunctionCall","src":"789:25:17"},"nodeType":"YulExpressionStatement","src":"789:25:17"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"713:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"724:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"735:4:17","type":""}],"src":"643:177:17"},{"body":{"nodeType":"YulBlock","src":"929:224:17","statements":[{"body":{"nodeType":"YulBlock","src":"975:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"984:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"987:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"977:6:17"},"nodeType":"YulFunctionCall","src":"977:12:17"},"nodeType":"YulExpressionStatement","src":"977:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"950:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"959:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"946:3:17"},"nodeType":"YulFunctionCall","src":"946:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"971:2:17","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"942:3:17"},"nodeType":"YulFunctionCall","src":"942:32:17"},"nodeType":"YulIf","src":"939:52:17"},{"nodeType":"YulAssignment","src":"1000:39:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1029:9:17"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1010:18:17"},"nodeType":"YulFunctionCall","src":"1010:29:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1000:6:17"}]},{"nodeType":"YulAssignment","src":"1048:48:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1081:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"1092:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1077:3:17"},"nodeType":"YulFunctionCall","src":"1077:18:17"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1058:18:17"},"nodeType":"YulFunctionCall","src":"1058:38:17"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1048:6:17"}]},{"nodeType":"YulAssignment","src":"1105:42:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1132:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"1143:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1128:3:17"},"nodeType":"YulFunctionCall","src":"1128:18:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1115:12:17"},"nodeType":"YulFunctionCall","src":"1115:32:17"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1105:6:17"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"879:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"890:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"902:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"910:6:17","type":""},{"name":"value2","nodeType":"YulTypedName","src":"918:6:17","type":""}],"src":"825:328:17"},{"body":{"nodeType":"YulBlock","src":"1228:116:17","statements":[{"body":{"nodeType":"YulBlock","src":"1274:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1283:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1286:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1276:6:17"},"nodeType":"YulFunctionCall","src":"1276:12:17"},"nodeType":"YulExpressionStatement","src":"1276:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1249:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"1258:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1245:3:17"},"nodeType":"YulFunctionCall","src":"1245:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"1270:2:17","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1241:3:17"},"nodeType":"YulFunctionCall","src":"1241:32:17"},"nodeType":"YulIf","src":"1238:52:17"},{"nodeType":"YulAssignment","src":"1299:39:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1328:9:17"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1309:18:17"},"nodeType":"YulFunctionCall","src":"1309:29:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1299:6:17"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1194:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1205:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1217:6:17","type":""}],"src":"1158:186:17"},{"body":{"nodeType":"YulBlock","src":"1436:173:17","statements":[{"body":{"nodeType":"YulBlock","src":"1482:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1491:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1494:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1484:6:17"},"nodeType":"YulFunctionCall","src":"1484:12:17"},"nodeType":"YulExpressionStatement","src":"1484:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1457:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"1466:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1453:3:17"},"nodeType":"YulFunctionCall","src":"1453:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"1478:2:17","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1449:3:17"},"nodeType":"YulFunctionCall","src":"1449:32:17"},"nodeType":"YulIf","src":"1446:52:17"},{"nodeType":"YulAssignment","src":"1507:39:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1536:9:17"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1517:18:17"},"nodeType":"YulFunctionCall","src":"1517:29:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1507:6:17"}]},{"nodeType":"YulAssignment","src":"1555:48:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1588:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"1599:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1584:3:17"},"nodeType":"YulFunctionCall","src":"1584:18:17"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1565:18:17"},"nodeType":"YulFunctionCall","src":"1565:38:17"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1555:6:17"}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1394:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1405:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1417:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1425:6:17","type":""}],"src":"1349:260:17"},{"body":{"nodeType":"YulBlock","src":"1788:226:17","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1805:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"1816:2:17","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1798:6:17"},"nodeType":"YulFunctionCall","src":"1798:21:17"},"nodeType":"YulExpressionStatement","src":"1798:21:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1839:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"1850:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1835:3:17"},"nodeType":"YulFunctionCall","src":"1835:18:17"},{"kind":"number","nodeType":"YulLiteral","src":"1855:2:17","type":"","value":"36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1828:6:17"},"nodeType":"YulFunctionCall","src":"1828:30:17"},"nodeType":"YulExpressionStatement","src":"1828:30:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1878:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"1889:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1874:3:17"},"nodeType":"YulFunctionCall","src":"1874:18:17"},{"hexValue":"45524332303a20617070726f76652066726f6d20746865207a65726f20616464","kind":"string","nodeType":"YulLiteral","src":"1894:34:17","type":"","value":"ERC20: approve from the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1867:6:17"},"nodeType":"YulFunctionCall","src":"1867:62:17"},"nodeType":"YulExpressionStatement","src":"1867:62:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1949:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"1960:2:17","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1945:3:17"},"nodeType":"YulFunctionCall","src":"1945:18:17"},{"hexValue":"72657373","kind":"string","nodeType":"YulLiteral","src":"1965:6:17","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1938:6:17"},"nodeType":"YulFunctionCall","src":"1938:34:17"},"nodeType":"YulExpressionStatement","src":"1938:34:17"},{"nodeType":"YulAssignment","src":"1981:27:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1993:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"2004:3:17","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1989:3:17"},"nodeType":"YulFunctionCall","src":"1989:19:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1981:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1765:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1779:4:17","type":""}],"src":"1614:400:17"},{"body":{"nodeType":"YulBlock","src":"2193:224:17","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2210:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"2221:2:17","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2203:6:17"},"nodeType":"YulFunctionCall","src":"2203:21:17"},"nodeType":"YulExpressionStatement","src":"2203:21:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2244:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"2255:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2240:3:17"},"nodeType":"YulFunctionCall","src":"2240:18:17"},{"kind":"number","nodeType":"YulLiteral","src":"2260:2:17","type":"","value":"34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2233:6:17"},"nodeType":"YulFunctionCall","src":"2233:30:17"},"nodeType":"YulExpressionStatement","src":"2233:30:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2283:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"2294:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2279:3:17"},"nodeType":"YulFunctionCall","src":"2279:18:17"},{"hexValue":"45524332303a20617070726f766520746f20746865207a65726f206164647265","kind":"string","nodeType":"YulLiteral","src":"2299:34:17","type":"","value":"ERC20: approve to the zero addre"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2272:6:17"},"nodeType":"YulFunctionCall","src":"2272:62:17"},"nodeType":"YulExpressionStatement","src":"2272:62:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2354:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"2365:2:17","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2350:3:17"},"nodeType":"YulFunctionCall","src":"2350:18:17"},{"hexValue":"7373","kind":"string","nodeType":"YulLiteral","src":"2370:4:17","type":"","value":"ss"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2343:6:17"},"nodeType":"YulFunctionCall","src":"2343:32:17"},"nodeType":"YulExpressionStatement","src":"2343:32:17"},{"nodeType":"YulAssignment","src":"2384:27:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2396:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"2407:3:17","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2392:3:17"},"nodeType":"YulFunctionCall","src":"2392:19:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2384:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2170:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2184:4:17","type":""}],"src":"2019:398:17"},{"body":{"nodeType":"YulBlock","src":"2596:227:17","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2613:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"2624:2:17","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2606:6:17"},"nodeType":"YulFunctionCall","src":"2606:21:17"},"nodeType":"YulExpressionStatement","src":"2606:21:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2647:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"2658:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2643:3:17"},"nodeType":"YulFunctionCall","src":"2643:18:17"},{"kind":"number","nodeType":"YulLiteral","src":"2663:2:17","type":"","value":"37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2636:6:17"},"nodeType":"YulFunctionCall","src":"2636:30:17"},"nodeType":"YulExpressionStatement","src":"2636:30:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2686:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"2697:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2682:3:17"},"nodeType":"YulFunctionCall","src":"2682:18:17"},{"hexValue":"45524332303a207472616e736665722066726f6d20746865207a65726f206164","kind":"string","nodeType":"YulLiteral","src":"2702:34:17","type":"","value":"ERC20: transfer from the zero ad"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2675:6:17"},"nodeType":"YulFunctionCall","src":"2675:62:17"},"nodeType":"YulExpressionStatement","src":"2675:62:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2757:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"2768:2:17","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2753:3:17"},"nodeType":"YulFunctionCall","src":"2753:18:17"},{"hexValue":"6472657373","kind":"string","nodeType":"YulLiteral","src":"2773:7:17","type":"","value":"dress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2746:6:17"},"nodeType":"YulFunctionCall","src":"2746:35:17"},"nodeType":"YulExpressionStatement","src":"2746:35:17"},{"nodeType":"YulAssignment","src":"2790:27:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2802:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"2813:3:17","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2798:3:17"},"nodeType":"YulFunctionCall","src":"2798:19:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2790:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2573:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2587:4:17","type":""}],"src":"2422:401:17"},{"body":{"nodeType":"YulBlock","src":"3002:225:17","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3019:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"3030:2:17","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3012:6:17"},"nodeType":"YulFunctionCall","src":"3012:21:17"},"nodeType":"YulExpressionStatement","src":"3012:21:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3053:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"3064:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3049:3:17"},"nodeType":"YulFunctionCall","src":"3049:18:17"},{"kind":"number","nodeType":"YulLiteral","src":"3069:2:17","type":"","value":"35"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3042:6:17"},"nodeType":"YulFunctionCall","src":"3042:30:17"},"nodeType":"YulExpressionStatement","src":"3042:30:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3092:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"3103:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3088:3:17"},"nodeType":"YulFunctionCall","src":"3088:18:17"},{"hexValue":"45524332303a207472616e7366657220746f20746865207a65726f2061646472","kind":"string","nodeType":"YulLiteral","src":"3108:34:17","type":"","value":"ERC20: transfer to the zero addr"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3081:6:17"},"nodeType":"YulFunctionCall","src":"3081:62:17"},"nodeType":"YulExpressionStatement","src":"3081:62:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3163:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"3174:2:17","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3159:3:17"},"nodeType":"YulFunctionCall","src":"3159:18:17"},{"hexValue":"657373","kind":"string","nodeType":"YulLiteral","src":"3179:5:17","type":"","value":"ess"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3152:6:17"},"nodeType":"YulFunctionCall","src":"3152:33:17"},"nodeType":"YulExpressionStatement","src":"3152:33:17"},{"nodeType":"YulAssignment","src":"3194:27:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3206:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"3217:3:17","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3202:3:17"},"nodeType":"YulFunctionCall","src":"3202:19:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3194:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2979:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2993:4:17","type":""}],"src":"2828:399:17"},{"body":{"nodeType":"YulBlock","src":"3353:427:17","statements":[{"nodeType":"YulVariableDeclaration","src":"3363:12:17","value":{"kind":"number","nodeType":"YulLiteral","src":"3373:2:17","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"3367:2:17","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3391:9:17"},{"name":"_1","nodeType":"YulIdentifier","src":"3402:2:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3384:6:17"},"nodeType":"YulFunctionCall","src":"3384:21:17"},"nodeType":"YulExpressionStatement","src":"3384:21:17"},{"nodeType":"YulVariableDeclaration","src":"3414:27:17","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3434:6:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3428:5:17"},"nodeType":"YulFunctionCall","src":"3428:13:17"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"3418:6:17","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3461:9:17"},{"name":"_1","nodeType":"YulIdentifier","src":"3472:2:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3457:3:17"},"nodeType":"YulFunctionCall","src":"3457:18:17"},{"name":"length","nodeType":"YulIdentifier","src":"3477:6:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3450:6:17"},"nodeType":"YulFunctionCall","src":"3450:34:17"},"nodeType":"YulExpressionStatement","src":"3450:34:17"},{"nodeType":"YulVariableDeclaration","src":"3493:10:17","value":{"kind":"number","nodeType":"YulLiteral","src":"3502:1:17","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"3497:1:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"3562:90:17","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3591:9:17"},{"name":"i","nodeType":"YulIdentifier","src":"3602:1:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3587:3:17"},"nodeType":"YulFunctionCall","src":"3587:17:17"},{"kind":"number","nodeType":"YulLiteral","src":"3606:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3583:3:17"},"nodeType":"YulFunctionCall","src":"3583:26:17"},{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3625:6:17"},{"name":"i","nodeType":"YulIdentifier","src":"3633:1:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3621:3:17"},"nodeType":"YulFunctionCall","src":"3621:14:17"},{"name":"_1","nodeType":"YulIdentifier","src":"3637:2:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3617:3:17"},"nodeType":"YulFunctionCall","src":"3617:23:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3611:5:17"},"nodeType":"YulFunctionCall","src":"3611:30:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3576:6:17"},"nodeType":"YulFunctionCall","src":"3576:66:17"},"nodeType":"YulExpressionStatement","src":"3576:66:17"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3523:1:17"},{"name":"length","nodeType":"YulIdentifier","src":"3526:6:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3520:2:17"},"nodeType":"YulFunctionCall","src":"3520:13:17"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"3534:19:17","statements":[{"nodeType":"YulAssignment","src":"3536:15:17","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3545:1:17"},{"name":"_1","nodeType":"YulIdentifier","src":"3548:2:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3541:3:17"},"nodeType":"YulFunctionCall","src":"3541:10:17"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"3536:1:17"}]}]},"pre":{"nodeType":"YulBlock","src":"3516:3:17","statements":[]},"src":"3512:140:17"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3676:9:17"},{"name":"length","nodeType":"YulIdentifier","src":"3687:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3672:3:17"},"nodeType":"YulFunctionCall","src":"3672:22:17"},{"kind":"number","nodeType":"YulLiteral","src":"3696:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3668:3:17"},"nodeType":"YulFunctionCall","src":"3668:31:17"},{"kind":"number","nodeType":"YulLiteral","src":"3701:1:17","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3661:6:17"},"nodeType":"YulFunctionCall","src":"3661:42:17"},"nodeType":"YulExpressionStatement","src":"3661:42:17"},{"nodeType":"YulAssignment","src":"3712:62:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3728:9:17"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3747:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"3755:2:17","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3743:3:17"},"nodeType":"YulFunctionCall","src":"3743:15:17"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3764:2:17","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3760:3:17"},"nodeType":"YulFunctionCall","src":"3760:7:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3739:3:17"},"nodeType":"YulFunctionCall","src":"3739:29:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3724:3:17"},"nodeType":"YulFunctionCall","src":"3724:45:17"},{"kind":"number","nodeType":"YulLiteral","src":"3771:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3720:3:17"},"nodeType":"YulFunctionCall","src":"3720:54:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3712:4:17"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3322:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3333:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3344:4:17","type":""}],"src":"3232:548:17"},{"body":{"nodeType":"YulBlock","src":"3817:95:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3834:1:17","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3841:3:17","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"3846:10:17","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3837:3:17"},"nodeType":"YulFunctionCall","src":"3837:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3827:6:17"},"nodeType":"YulFunctionCall","src":"3827:31:17"},"nodeType":"YulExpressionStatement","src":"3827:31:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3874:1:17","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3877:4:17","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3867:6:17"},"nodeType":"YulFunctionCall","src":"3867:15:17"},"nodeType":"YulExpressionStatement","src":"3867:15:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3898:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3901:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3891:6:17"},"nodeType":"YulFunctionCall","src":"3891:15:17"},"nodeType":"YulExpressionStatement","src":"3891:15:17"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"3785:127:17"},{"body":{"nodeType":"YulBlock","src":"3966:79:17","statements":[{"nodeType":"YulAssignment","src":"3976:17:17","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3988:1:17"},{"name":"y","nodeType":"YulIdentifier","src":"3991:1:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3984:3:17"},"nodeType":"YulFunctionCall","src":"3984:9:17"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"3976:4:17"}]},{"body":{"nodeType":"YulBlock","src":"4017:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"4019:16:17"},"nodeType":"YulFunctionCall","src":"4019:18:17"},"nodeType":"YulExpressionStatement","src":"4019:18:17"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"4008:4:17"},{"name":"x","nodeType":"YulIdentifier","src":"4014:1:17"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4005:2:17"},"nodeType":"YulFunctionCall","src":"4005:11:17"},"nodeType":"YulIf","src":"4002:37:17"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"3948:1:17","type":""},{"name":"y","nodeType":"YulTypedName","src":"3951:1:17","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"3957:4:17","type":""}],"src":"3917:128:17"},{"body":{"nodeType":"YulBlock","src":"4098:77:17","statements":[{"nodeType":"YulAssignment","src":"4108:16:17","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"4119:1:17"},{"name":"y","nodeType":"YulIdentifier","src":"4122:1:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4115:3:17"},"nodeType":"YulFunctionCall","src":"4115:9:17"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"4108:3:17"}]},{"body":{"nodeType":"YulBlock","src":"4147:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"4149:16:17"},"nodeType":"YulFunctionCall","src":"4149:18:17"},"nodeType":"YulExpressionStatement","src":"4149:18:17"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"4139:1:17"},{"name":"sum","nodeType":"YulIdentifier","src":"4142:3:17"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4136:2:17"},"nodeType":"YulFunctionCall","src":"4136:10:17"},"nodeType":"YulIf","src":"4133:36:17"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"4081:1:17","type":""},{"name":"y","nodeType":"YulTypedName","src":"4084:1:17","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"4090:3:17","type":""}],"src":"4050:125:17"},{"body":{"nodeType":"YulBlock","src":"4354:177:17","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4371:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"4382:2:17","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4364:6:17"},"nodeType":"YulFunctionCall","src":"4364:21:17"},"nodeType":"YulExpressionStatement","src":"4364:21:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4405:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"4416:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4401:3:17"},"nodeType":"YulFunctionCall","src":"4401:18:17"},{"kind":"number","nodeType":"YulLiteral","src":"4421:2:17","type":"","value":"27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4394:6:17"},"nodeType":"YulFunctionCall","src":"4394:30:17"},"nodeType":"YulExpressionStatement","src":"4394:30:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4444:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"4455:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4440:3:17"},"nodeType":"YulFunctionCall","src":"4440:18:17"},{"hexValue":"536166654d6174683a206164646974696f6e206f766572666c6f77","kind":"string","nodeType":"YulLiteral","src":"4460:29:17","type":"","value":"SafeMath: addition overflow"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4433:6:17"},"nodeType":"YulFunctionCall","src":"4433:57:17"},"nodeType":"YulExpressionStatement","src":"4433:57:17"},{"nodeType":"YulAssignment","src":"4499:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4511:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"4522:2:17","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4507:3:17"},"nodeType":"YulFunctionCall","src":"4507:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4499:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4331:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4345:4:17","type":""}],"src":"4180:351:17"}]},"contents":"{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"SafeMath: addition overflow\")\n        tail := add(headStart, 96)\n    }\n}","id":17,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100785760003560e01c8063095ea7b31461007d57806318160ddd146100a557806323b872dd146100b757806339509351146100ca57806370a08231146100dd578063a457c2d714610106578063a9059cbb14610119578063dd62ed3e1461012c575b600080fd5b61009061008b3660046105e0565b610165565b60405190151581526020015b60405180910390f35b6002545b60405190815260200161009c565b6100906100c536600461060a565b61017c565b6100906100d83660046105e0565b6101e5565b6100a96100eb366004610646565b6001600160a01b031660009081526020819052604090205490565b6100906101143660046105e0565b61021b565b6100906101273660046105e0565b61026a565b6100a961013a366004610661565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6000610172338484610277565b5060015b92915050565b60006101898484846103a1565b6101db84336101d685604051806060016040528060288152602001610745602891396001600160a01b038a1660009081526001602090815260408083203384529091529020549190610524565b610277565b5060019392505050565b3360008181526001602090815260408083206001600160a01b038716845290915281205490916101729185906101d6908661055e565b600061017233846101d68560405180606001604052806025815260200161076d602591393360009081526001602090815260408083206001600160a01b038d1684529091529020549190610524565b60006101723384846103a1565b6001600160a01b0383166102de5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084015b60405180910390fd5b6001600160a01b03821661033f5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016102d5565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b0383166104055760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016102d5565b6001600160a01b0382166104675760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016102d5565b6104a48160405180606001604052806026815260200161071f602691396001600160a01b0386166000908152602081905260409020549190610524565b6001600160a01b0380851660009081526020819052604080822093909355908416815220546104d3908261055e565b6001600160a01b038381166000818152602081815260409182902094909455518481529092918616917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9101610394565b600081848411156105485760405162461bcd60e51b81526004016102d59190610694565b50600061055584866106f8565b95945050505050565b60008061056b838561070b565b9050838110156105bd5760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f77000000000060448201526064016102d5565b9392505050565b80356001600160a01b03811681146105db57600080fd5b919050565b600080604083850312156105f357600080fd5b6105fc836105c4565b946020939093013593505050565b60008060006060848603121561061f57600080fd5b610628846105c4565b9250610636602085016105c4565b9150604084013590509250925092565b60006020828403121561065857600080fd5b6105bd826105c4565b6000806040838503121561067457600080fd5b61067d836105c4565b915061068b602084016105c4565b90509250929050565b600060208083528351808285015260005b818110156106c1578581018301518582016040015282016106a5565b506000604082860101526040601f19601f8301168501019250505092915050565b634e487b7160e01b600052601160045260246000fd5b81810381811115610176576101766106e2565b80820180821115610176576101766106e256fe45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa2646970667358221220e899b4d963a4b12c47035db6688f869a7897061f9b76ce52b20d0135e2aebaa564736f6c63430008120033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x78 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x7D JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xA5 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0xB7 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0xCA JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0xDD JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x106 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x119 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x12C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x90 PUSH2 0x8B CALLDATASIZE PUSH1 0x4 PUSH2 0x5E0 JUMP JUMPDEST PUSH2 0x165 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x9C JUMP JUMPDEST PUSH2 0x90 PUSH2 0xC5 CALLDATASIZE PUSH1 0x4 PUSH2 0x60A JUMP JUMPDEST PUSH2 0x17C JUMP JUMPDEST PUSH2 0x90 PUSH2 0xD8 CALLDATASIZE PUSH1 0x4 PUSH2 0x5E0 JUMP JUMPDEST PUSH2 0x1E5 JUMP JUMPDEST PUSH2 0xA9 PUSH2 0xEB CALLDATASIZE PUSH1 0x4 PUSH2 0x646 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x90 PUSH2 0x114 CALLDATASIZE PUSH1 0x4 PUSH2 0x5E0 JUMP JUMPDEST PUSH2 0x21B JUMP JUMPDEST PUSH2 0x90 PUSH2 0x127 CALLDATASIZE PUSH1 0x4 PUSH2 0x5E0 JUMP JUMPDEST PUSH2 0x26A JUMP JUMPDEST PUSH2 0xA9 PUSH2 0x13A CALLDATASIZE PUSH1 0x4 PUSH2 0x661 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x172 CALLER DUP5 DUP5 PUSH2 0x277 JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x189 DUP5 DUP5 DUP5 PUSH2 0x3A1 JUMP JUMPDEST PUSH2 0x1DB DUP5 CALLER PUSH2 0x1D6 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x745 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x524 JUMP JUMPDEST PUSH2 0x277 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x172 SWAP2 DUP6 SWAP1 PUSH2 0x1D6 SWAP1 DUP7 PUSH2 0x55E JUMP JUMPDEST PUSH1 0x0 PUSH2 0x172 CALLER DUP5 PUSH2 0x1D6 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x76D PUSH1 0x25 SWAP2 CODECOPY CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x524 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x172 CALLER DUP5 DUP5 PUSH2 0x3A1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x2DE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x33F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2D5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x405 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2D5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x467 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2D5 JUMP JUMPDEST PUSH2 0x4A4 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x71F PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x524 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x4D3 SWAP1 DUP3 PUSH2 0x55E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE MLOAD DUP5 DUP2 MSTORE SWAP1 SWAP3 SWAP2 DUP7 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH2 0x394 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x548 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D5 SWAP2 SWAP1 PUSH2 0x694 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x555 DUP5 DUP7 PUSH2 0x6F8 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x56B DUP4 DUP6 PUSH2 0x70B JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x5BD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2D5 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x5DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x5F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5FC DUP4 PUSH2 0x5C4 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x61F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x628 DUP5 PUSH2 0x5C4 JUMP JUMPDEST SWAP3 POP PUSH2 0x636 PUSH1 0x20 DUP6 ADD PUSH2 0x5C4 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x658 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5BD DUP3 PUSH2 0x5C4 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x674 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x67D DUP4 PUSH2 0x5C4 JUMP JUMPDEST SWAP2 POP PUSH2 0x68B PUSH1 0x20 DUP5 ADD PUSH2 0x5C4 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x6C1 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x6A5 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x176 JUMPI PUSH2 0x176 PUSH2 0x6E2 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x176 JUMPI PUSH2 0x176 PUSH2 0x6E2 JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x2062616C616E636545524332303A207472616E73 PUSH7 0x657220616D6F75 PUSH15 0x74206578636565647320616C6C6F77 PUSH2 0x6E63 PUSH6 0x45524332303A KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726FA2646970 PUSH7 0x7358221220E899 0xB4 0xD9 PUSH4 0xA4B12C47 SUB 0x5D 0xB6 PUSH9 0x8F869A7897061F9B76 0xCE MSTORE 0xB2 0xD ADD CALLDATALOAD 0xE2 0xAE 0xBA 0xA5 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ","sourceMap":"1251:6823:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2483:149;;;;;;:::i;:::-;;:::i;:::-;;;616:14:17;;609:22;591:41;;579:2;564:18;2483:149:4;;;;;;;;1542:89;1612:12;;1542:89;;;789:25:17;;;777:2;762:18;1542:89:4;643:177:17;3090:300:4;;;;;;:::i;:::-;;:::i;3785:207::-;;;;;;:::i;:::-;;:::i;1689:108::-;;;;;;:::i;:::-;-1:-1:-1;;;;;1772:18:4;1746:7;1772:18;;;;;;;;;;;;1689:108;4479:258;;;;;;:::i;:::-;;:::i;2000:155::-;;;;;;:::i;:::-;;:::i;2213:132::-;;;;;;:::i;:::-;-1:-1:-1;;;;;2311:18:4;;;2285:7;2311:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;2213:132;2483:149;2549:4;2565:39;669:10:3;2588:7:4;2597:6;2565:8;:39::i;:::-;-1:-1:-1;2621:4:4;2483:149;;;;;:::o;3090:300::-;3179:4;3195:36;3205:6;3213:9;3224:6;3195:9;:36::i;:::-;3241:121;3250:6;669:10:3;3272:89:4;3310:6;3272:89;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3272:19:4;;;;;;:11;:19;;;;;;;;669:10:3;3272:33:4;;;;;;;;;;:37;:89::i;:::-;3241:8;:121::i;:::-;-1:-1:-1;3379:4:4;3090:300;;;;;:::o;3785:207::-;669:10:3;3865:4:4;3913:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;3913:34:4;;;;;;;;;;3865:4;;3881:83;;3904:7;;3913:50;;3952:10;3913:38;:50::i;4479:258::-;4564:4;4580:129;669:10:3;4603:7:4;4612:96;4651:15;4612:96;;;;;;;;;;;;;;;;;669:10:3;4612:25:4;;;;:11;:25;;;;;;;;-1:-1:-1;;;;;4612:34:4;;;;;;;;;;;;:38;:96::i;2000:155::-;2069:4;2085:42;669:10:3;2109:9:4;2120:6;2085:9;:42::i;7333:332::-;-1:-1:-1;;;;;7426:19:4;;7418:68;;;;-1:-1:-1;;;7418:68:4;;1816:2:17;7418:68:4;;;1798:21:17;1855:2;1835:18;;;1828:30;1894:34;1874:18;;;1867:62;-1:-1:-1;;;1945:18:17;;;1938:34;1989:19;;7418:68:4;;;;;;;;;-1:-1:-1;;;;;7504:21:4;;7496:68;;;;-1:-1:-1;;;7496:68:4;;2221:2:17;7496:68:4;;;2203:21:17;2260:2;2240:18;;;2233:30;2299:34;2279:18;;;2272:62;-1:-1:-1;;;2350:18:17;;;2343:32;2392:19;;7496:68:4;2019:398:17;7496:68:4;-1:-1:-1;;;;;7575:18:4;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;7626:32;;789:25:17;;;7626:32:4;;762:18:17;7626:32:4;;;;;;;;7333:332;;;:::o;5211:464::-;-1:-1:-1;;;;;5308:20:4;;5300:70;;;;-1:-1:-1;;;5300:70:4;;2624:2:17;5300:70:4;;;2606:21:17;2663:2;2643:18;;;2636:30;2702:34;2682:18;;;2675:62;-1:-1:-1;;;2753:18:17;;;2746:35;2798:19;;5300:70:4;2422:401:17;5300:70:4;-1:-1:-1;;;;;5388:23:4;;5380:71;;;;-1:-1:-1;;;5380:71:4;;3030:2:17;5380:71:4;;;3012:21:17;3069:2;3049:18;;;3042:30;3108:34;3088:18;;;3081:62;-1:-1:-1;;;3159:18:17;;;3152:33;3202:19;;5380:71:4;2828:399:17;5380:71:4;5482;5504:6;5482:71;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5482:17:4;;:9;:17;;;;;;;;;;;;:71;:21;:71::i;:::-;-1:-1:-1;;;;;5462:17:4;;;:9;:17;;;;;;;;;;;:91;;;;5586:20;;;;;;;:32;;5611:6;5586:24;:32::i;:::-;-1:-1:-1;;;;;5563:20:4;;;:9;:20;;;;;;;;;;;;:55;;;;5633:35;789:25:17;;;5563:20:4;;5633:35;;;;;;762:18:17;5633:35:4;643:177:17;1732:187:11;1818:7;1853:12;1845:6;;;;1837:29;;;;-1:-1:-1;;;1837:29:11;;;;;;;;:::i;:::-;-1:-1:-1;1876:9:11;1888:5;1892:1;1888;:5;:::i;:::-;1876:17;1732:187;-1:-1:-1;;;;;1732:187:11:o;834:176::-;892:7;;923:5;927:1;923;:5;:::i;:::-;911:17;;951:1;946;:6;;938:46;;;;-1:-1:-1;;;938:46:11;;4382:2:17;938:46:11;;;4364:21:17;4421:2;4401:18;;;4394:30;4460:29;4440:18;;;4433:57;4507:18;;938:46:11;4180:351:17;938:46:11;1002:1;834:176;-1:-1:-1;;;834:176:11:o;14:173:17:-;82:20;;-1:-1:-1;;;;;131:31:17;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:254::-;260:6;268;321:2;309:9;300:7;296:23;292:32;289:52;;;337:1;334;327:12;289:52;360:29;379:9;360:29;:::i;:::-;350:39;436:2;421:18;;;;408:32;;-1:-1:-1;;;192:254:17:o;825:328::-;902:6;910;918;971:2;959:9;950:7;946:23;942:32;939:52;;;987:1;984;977:12;939:52;1010:29;1029:9;1010:29;:::i;:::-;1000:39;;1058:38;1092:2;1081:9;1077:18;1058:38;:::i;:::-;1048:48;;1143:2;1132:9;1128:18;1115:32;1105:42;;825:328;;;;;:::o;1158:186::-;1217:6;1270:2;1258:9;1249:7;1245:23;1241:32;1238:52;;;1286:1;1283;1276:12;1238:52;1309:29;1328:9;1309:29;:::i;1349:260::-;1417:6;1425;1478:2;1466:9;1457:7;1453:23;1449:32;1446:52;;;1494:1;1491;1484:12;1446:52;1517:29;1536:9;1517:29;:::i;:::-;1507:39;;1565:38;1599:2;1588:9;1584:18;1565:38;:::i;:::-;1555:48;;1349:260;;;;;:::o;3232:548::-;3344:4;3373:2;3402;3391:9;3384:21;3434:6;3428:13;3477:6;3472:2;3461:9;3457:18;3450:34;3502:1;3512:140;3526:6;3523:1;3520:13;3512:140;;;3621:14;;;3617:23;;3611:30;3587:17;;;3606:2;3583:26;3576:66;3541:10;;3512:140;;;3516:3;3701:1;3696:2;3687:6;3676:9;3672:22;3668:31;3661:42;3771:2;3764;3760:7;3755:2;3747:6;3743:15;3739:29;3728:9;3724:45;3720:54;3712:62;;;;3232:548;;;;:::o;3785:127::-;3846:10;3841:3;3837:20;3834:1;3827:31;3877:4;3874:1;3867:15;3901:4;3898:1;3891:15;3917:128;3984:9;;;4005:11;;;4002:37;;;4019:18;;:::i;4050:125::-;4115:9;;;4136:10;;;4133:36;;;4149:18;;:::i"},"gasEstimates":{"creation":{"codeDepositCost":"398200","executionCost":"436","totalCost":"398636"},"external":{"allowance(address,address)":"infinite","approve(address,uint256)":"24565","balanceOf(address)":"2606","decreaseAllowance(address,uint256)":"infinite","increaseAllowance(address,uint256)":"infinite","totalSupply()":"2281","transfer(address,uint256)":"infinite","transferFrom(address,address,uint256)":"infinite"},"internal":{"_approve(address,address,uint256)":"infinite","_burn(address,uint256)":"infinite","_burnFrom(address,uint256)":"infinite","_mint(address,uint256)":"infinite","_transfer(address,address,uint256)":"infinite"}},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decreaseAllowance(address,uint256)":"a457c2d7","increaseAllowance(address,uint256)":"39509351","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20Mintable}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin guidelines: functions revert instead of returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/AccessControl/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"contracts/AccessControl/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with GSN meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\n        return msg.data;\\n    }\\n}\",\"keccak256\":\"0x24e77a6af76a3c4f61e872bab8ab92a2a27b20d3e6111da351e0aa7ab83a7dc9\",\"license\":\"MIT\"},\"contracts/AccessControl/ERC20.sol\":{\"content\":\"pragma solidity ^0.8.4;\\n\\nimport \\\"./Context.sol\\\";\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"./SafeMath.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20Mintable}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * We have followed general OpenZeppelin guidelines: functions revert instead\\n * of returning `false` on failure. This behavior is nonetheless conventional\\n * and does not conflict with the expectations of ERC20 applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20 is Context, IERC20 {\\n    using SafeMath for uint256;\\n\\n    mapping (address => uint256) private _balances;\\n\\n    mapping (address => mapping (address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `recipient` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(address recipient, uint256 amount) public returns (bool) {\\n        _transfer(_msgSender(), recipient, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 amount) public returns (bool) {\\n        _approve(_msgSender(), spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20};\\n     *\\n     * Requirements:\\n     * - `sender` and `recipient` cannot be the zero address.\\n     * - `sender` must have a balance of at least `amount`.\\n     * - the caller must have allowance for `sender`'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(address sender, address recipient, uint256 amount) public returns (bool) {\\n        _transfer(sender, recipient, amount);\\n        _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \\\"ERC20: transfer amount exceeds allowance\\\"));\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue));\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \\\"ERC20: decreased allowance below zero\\\"));\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves tokens `amount` from `sender` to `recipient`.\\n     *\\n     * This is internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `sender` cannot be the zero address.\\n     * - `recipient` cannot be the zero address.\\n     * - `sender` must have a balance of at least `amount`.\\n     */\\n    function _transfer(address sender, address recipient, uint256 amount) internal {\\n        require(sender != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(recipient != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _balances[sender] = _balances[sender].sub(amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        _balances[recipient] = _balances[recipient].add(amount);\\n        emit Transfer(sender, recipient, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements\\n     *\\n     * - `to` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _totalSupply = _totalSupply.add(amount);\\n        _balances[account] = _balances[account].add(amount);\\n        emit Transfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _balances[account] = _balances[account].sub(amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        _totalSupply = _totalSupply.sub(amount);\\n        emit Transfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.\\n     *\\n     * This is internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(address owner, address spender, uint256 amount) internal {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`.`amount` is then deducted\\n     * from the caller's allowance.\\n     *\\n     * See {_burn} and {_approve}.\\n     */\\n    function _burnFrom(address account, uint256 amount) internal {\\n        _burn(account, amount);\\n        _approve(account, _msgSender(), _allowances[account][_msgSender()].sub(amount, \\\"ERC20: burn amount exceeds allowance\\\"));\\n    }\\n}\\n\",\"keccak256\":\"0xb0dffbfe5c63bc633701eec2d295435f3b18f16d580622e38480671848c428ca\"},\"contracts/AccessControl/IERC20.sol\":{\"content\":\"pragma solidity ^0.8.4;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP. Does not include\\n * the optional functions; to access them see {ERC20Detailed}.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x15f1080f668baa0d47cc70d176bf94cc175256262ed88ac624ea1295cde0eb19\"},\"contracts/AccessControl/SafeMath.sol\":{\"content\":\"pragma solidity ^0.8.4;\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\\n * checks.\\n *\\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\\n * in bugs, because programmers usually assume that an overflow raises an\\n * error, which is the standard behavior in high level programming languages.\\n * `SafeMath` restores this intuition by reverting the transaction when an\\n * operation overflows.\\n *\\n * Using this library instead of the unchecked operations eliminates an entire\\n * class of bugs, so it's recommended to use it always.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        uint256 c = a + b;\\n        require(c >= a, \\\"SafeMath: addition overflow\\\");\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return sub(a, b, \\\"SafeMath: subtraction overflow\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     * - Subtraction cannot overflow.\\n     *\\n     * _Available since v2.4.0._\\n     */\\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b <= a, errorMessage);\\n        uint256 c = a - b;\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n        // benefit is lost if 'b' is also tested.\\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        uint256 c = a * b;\\n        require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers. Reverts on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return div(a, b, \\\"SafeMath: division by zero\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     * - The divisor cannot be zero.\\n     *\\n     * _Available since v2.4.0._\\n     */\\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        // Solidity only automatically asserts when dividing by 0\\n        require(b > 0, errorMessage);\\n        uint256 c = a / b;\\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * Reverts when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return mod(a, b, \\\"SafeMath: modulo by zero\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * Reverts with custom message when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     * - The divisor cannot be zero.\\n     *\\n     * _Available since v2.4.0._\\n     */\\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b != 0, errorMessage);\\n        return a % b;\\n    }\\n}\\n\",\"keccak256\":\"0x9a6c2cad06a56e98a99eae4bfe8cc25b422efea7da4233bb481b32ea498f078f\"}},\"version\":1}","storageLayout":{"storage":[{"astId":486,"contract":"contracts/AccessControl/ERC20.sol:ERC20","label":"_balances","offset":0,"slot":"0","type":"t_mapping(t_address,t_uint256)"},{"astId":492,"contract":"contracts/AccessControl/ERC20.sol:ERC20","label":"_allowances","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":494,"contract":"contracts/AccessControl/ERC20.sol:ERC20","label":"_totalSupply","offset":0,"slot":"2","type":"t_uint256"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/AccessControl/ERC20Burnable.sol":{"ERC20Burnable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"burnFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"See {IERC20-allowance}."},"approve(address,uint256)":{"details":"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."},"balanceOf(address)":{"details":"See {IERC20-balanceOf}."},"burn(uint256)":{"details":"Destroys `amount` tokens from the caller. See {ERC20-_burn}."},"burnFrom(address,uint256)":{"details":"See {ERC20-_burnFrom}."},"decreaseAllowance(address,uint256)":{"details":"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."},"increaseAllowance(address,uint256)":{"details":"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."},"totalSupply()":{"details":"See {IERC20-totalSupply}."},"transfer(address,uint256)":{"details":"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."},"transferFrom(address,address,uint256)":{"details":"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"608060405234801561001057600080fd5b50610a38806100206000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c806370a082311161006657806370a082311461011857806379cc679014610141578063a457c2d714610154578063a9059cbb14610167578063dd62ed3e1461017a57600080fd5b8063095ea7b3146100a357806318160ddd146100cb57806323b872dd146100dd57806339509351146100f057806342966c6814610103575b600080fd5b6100b66100b13660046107f2565b6101b3565b60405190151581526020015b60405180910390f35b6002545b6040519081526020016100c2565b6100b66100eb36600461081c565b6101ca565b6100b66100fe3660046107f2565b610244565b610116610111366004610858565b61027a565b005b6100cf610126366004610871565b6001600160a01b031660009081526020819052604090205490565b61011661014f3660046107f2565b610287565b6100b66101623660046107f2565b610295565b6100b66101753660046107f2565b6102e4565b6100cf61018836600461088c565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b60006101c03384846102f1565b5060015b92915050565b60006101d784848461041b565b61023a843361023585604051806060016040528060288152602001610992602891396001600160a01b038a16600090815260016020526040812090335b6001600160a01b03168152602081019190915260400160002054919061059e565b6102f1565b5060019392505050565b3360008181526001602090815260408083206001600160a01b038716845290915281205490916101c091859061023590866105d8565b610284338261063e565b50565b6102918282610749565b5050565b60006101c03384610235856040518060600160405280602581526020016109de602591393360009081526001602090815260408083206001600160a01b038d168452909152902054919061059e565b60006101c033848461041b565b6001600160a01b0383166103585760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084015b60405180910390fd5b6001600160a01b0382166103b95760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161034f565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b03831661047f5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161034f565b6001600160a01b0382166104e15760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161034f565b61051e8160405180606001604052806026815260200161096c602691396001600160a01b038616600090815260208190526040902054919061059e565b6001600160a01b03808516600090815260208190526040808220939093559084168152205461054d90826105d8565b6001600160a01b038381166000818152602081815260409182902094909455518481529092918616917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910161040e565b600081848411156105c25760405162461bcd60e51b815260040161034f91906108bf565b5060006105cf8486610923565b95945050505050565b6000806105e58385610936565b9050838110156106375760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015260640161034f565b9392505050565b6001600160a01b03821661069e5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b606482015260840161034f565b6106db8160405180606001604052806022815260200161094a602291396001600160a01b038516600090815260208190526040902054919061059e565b6001600160a01b0383166000908152602081905260409020556002546107019082610794565b6002556040518181526000906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b610753828261063e565b6102918233610235846040518060600160405280602481526020016109ba602491396001600160a01b03881660009081526001602052604081209033610214565b600061063783836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525061059e565b80356001600160a01b03811681146107ed57600080fd5b919050565b6000806040838503121561080557600080fd5b61080e836107d6565b946020939093013593505050565b60008060006060848603121561083157600080fd5b61083a846107d6565b9250610848602085016107d6565b9150604084013590509250925092565b60006020828403121561086a57600080fd5b5035919050565b60006020828403121561088357600080fd5b610637826107d6565b6000806040838503121561089f57600080fd5b6108a8836107d6565b91506108b6602084016107d6565b90509250929050565b600060208083528351808285015260005b818110156108ec578581018301518582016040015282016108d0565b506000604082860101526040601f19601f8301168501019250505092915050565b634e487b7160e01b600052601160045260246000fd5b818103818111156101c4576101c461090d565b808201808211156101c4576101c461090d56fe45524332303a206275726e20616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e636545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa2646970667358221220cbaf5500675a51bfcaa588e548598041c29518ce4dc5c62fb6767f4ab4ecc94464736f6c63430008120033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA38 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x118 JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x141 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x154 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x17A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xA3 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xCB JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0xDD JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0xF0 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x103 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0xB1 CALLDATASIZE PUSH1 0x4 PUSH2 0x7F2 JUMP JUMPDEST PUSH2 0x1B3 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC2 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0xEB CALLDATASIZE PUSH1 0x4 PUSH2 0x81C JUMP JUMPDEST PUSH2 0x1CA JUMP JUMPDEST PUSH2 0xB6 PUSH2 0xFE CALLDATASIZE PUSH1 0x4 PUSH2 0x7F2 JUMP JUMPDEST PUSH2 0x244 JUMP JUMPDEST PUSH2 0x116 PUSH2 0x111 CALLDATASIZE PUSH1 0x4 PUSH2 0x858 JUMP JUMPDEST PUSH2 0x27A JUMP JUMPDEST STOP JUMPDEST PUSH2 0xCF PUSH2 0x126 CALLDATASIZE PUSH1 0x4 PUSH2 0x871 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x116 PUSH2 0x14F CALLDATASIZE PUSH1 0x4 PUSH2 0x7F2 JUMP JUMPDEST PUSH2 0x287 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x162 CALLDATASIZE PUSH1 0x4 PUSH2 0x7F2 JUMP JUMPDEST PUSH2 0x295 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x7F2 JUMP JUMPDEST PUSH2 0x2E4 JUMP JUMPDEST PUSH2 0xCF PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0x88C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C0 CALLER DUP5 DUP5 PUSH2 0x2F1 JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D7 DUP5 DUP5 DUP5 PUSH2 0x41B JUMP JUMPDEST PUSH2 0x23A DUP5 CALLER PUSH2 0x235 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x992 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 CALLER JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x59E JUMP JUMPDEST PUSH2 0x2F1 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x1C0 SWAP2 DUP6 SWAP1 PUSH2 0x235 SWAP1 DUP7 PUSH2 0x5D8 JUMP JUMPDEST PUSH2 0x284 CALLER DUP3 PUSH2 0x63E JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x291 DUP3 DUP3 PUSH2 0x749 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C0 CALLER DUP5 PUSH2 0x235 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x9DE PUSH1 0x25 SWAP2 CODECOPY CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x59E JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C0 CALLER DUP5 DUP5 PUSH2 0x41B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x358 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x3B9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x34F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x47F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x34F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x4E1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x34F JUMP JUMPDEST PUSH2 0x51E DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x96C PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x59E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x54D SWAP1 DUP3 PUSH2 0x5D8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE MLOAD DUP5 DUP2 MSTORE SWAP1 SWAP3 SWAP2 DUP7 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH2 0x40E JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x5C2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x34F SWAP2 SWAP1 PUSH2 0x8BF JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x5CF DUP5 DUP7 PUSH2 0x923 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x5E5 DUP4 DUP6 PUSH2 0x936 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x637 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x34F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x69E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x34F JUMP JUMPDEST PUSH2 0x6DB DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x94A PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x59E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x2 SLOAD PUSH2 0x701 SWAP1 DUP3 PUSH2 0x794 JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x753 DUP3 DUP3 PUSH2 0x63E JUMP JUMPDEST PUSH2 0x291 DUP3 CALLER PUSH2 0x235 DUP5 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x9BA PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 CALLER PUSH2 0x214 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x637 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x59E JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x7ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x805 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x80E DUP4 PUSH2 0x7D6 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x831 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x83A DUP5 PUSH2 0x7D6 JUMP JUMPDEST SWAP3 POP PUSH2 0x848 PUSH1 0x20 DUP6 ADD PUSH2 0x7D6 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x86A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x883 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x637 DUP3 PUSH2 0x7D6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x89F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8A8 DUP4 PUSH2 0x7D6 JUMP JUMPDEST SWAP2 POP PUSH2 0x8B6 PUSH1 0x20 DUP5 ADD PUSH2 0x7D6 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x8EC JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x8D0 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x1C4 JUMPI PUSH2 0x1C4 PUSH2 0x90D JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x1C4 JUMPI PUSH2 0x1C4 PUSH2 0x90D JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH3 0x75726E KECCAK256 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732062616C616E636545524332 ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x2062616C616E636545524332303A207472616E73 PUSH7 0x657220616D6F75 PUSH15 0x74206578636565647320616C6C6F77 PUSH2 0x6E63 PUSH6 0x45524332303A KECCAK256 PUSH3 0x75726E KECCAK256 PUSH2 0x6D6F PUSH22 0x6E74206578636565647320616C6C6F77616E63654552 NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726FA2646970 PUSH7 0x7358221220CBAF SSTORE STOP PUSH8 0x5A51BFCAA588E548 MSIZE DUP1 COINBASE 0xC2 SWAP6 XOR 0xCE 0x4D 0xC5 0xC6 0x2F 0xB6 PUSH23 0x7F4AB4ECC94464736F6C63430008120033000000000000 ","sourceMap":"314:391:5:-:0;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_approve_865":{"entryPoint":753,"id":865,"parameterSlots":3,"returnSlots":0},"@_burnFrom_895":{"entryPoint":1865,"id":895,"parameterSlots":2,"returnSlots":0},"@_burn_820":{"entryPoint":1598,"id":820,"parameterSlots":2,"returnSlots":0},"@_msgSender_457":{"entryPoint":null,"id":457,"parameterSlots":0,"returnSlots":1},"@_transfer_727":{"entryPoint":1051,"id":727,"parameterSlots":3,"returnSlots":0},"@add_1331":{"entryPoint":1496,"id":1331,"parameterSlots":2,"returnSlots":1},"@allowance_553":{"entryPoint":null,"id":553,"parameterSlots":2,"returnSlots":1},"@approve_573":{"entryPoint":435,"id":573,"parameterSlots":2,"returnSlots":1},"@balanceOf_516":{"entryPoint":null,"id":516,"parameterSlots":1,"returnSlots":1},"@burnFrom_932":{"entryPoint":647,"id":932,"parameterSlots":2,"returnSlots":0},"@burn_918":{"entryPoint":634,"id":918,"parameterSlots":1,"returnSlots":0},"@decreaseAllowance_667":{"entryPoint":661,"id":667,"parameterSlots":2,"returnSlots":1},"@increaseAllowance_638":{"entryPoint":580,"id":638,"parameterSlots":2,"returnSlots":1},"@sub_1348":{"entryPoint":1940,"id":1348,"parameterSlots":2,"returnSlots":1},"@sub_1376":{"entryPoint":1438,"id":1376,"parameterSlots":3,"returnSlots":1},"@totalSupply_503":{"entryPoint":null,"id":503,"parameterSlots":0,"returnSlots":1},"@transferFrom_610":{"entryPoint":458,"id":610,"parameterSlots":3,"returnSlots":1},"@transfer_536":{"entryPoint":740,"id":536,"parameterSlots":2,"returnSlots":1},"abi_decode_address":{"entryPoint":2006,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":2161,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":2188,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":2076,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":2034,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256":{"entryPoint":2136,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":2239,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":2358,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":2339,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":2317,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:5120:17","statements":[{"nodeType":"YulBlock","src":"6:3:17","statements":[]},{"body":{"nodeType":"YulBlock","src":"63:124:17","statements":[{"nodeType":"YulAssignment","src":"73:29:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"95:6:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"82:12:17"},"nodeType":"YulFunctionCall","src":"82:20:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"73:5:17"}]},{"body":{"nodeType":"YulBlock","src":"165:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"174:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"177:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"167:6:17"},"nodeType":"YulFunctionCall","src":"167:12:17"},"nodeType":"YulExpressionStatement","src":"167:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"124:5:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"135:5:17"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"150:3:17","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"155:1:17","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"146:3:17"},"nodeType":"YulFunctionCall","src":"146:11:17"},{"kind":"number","nodeType":"YulLiteral","src":"159:1:17","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"142:3:17"},"nodeType":"YulFunctionCall","src":"142:19:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"131:3:17"},"nodeType":"YulFunctionCall","src":"131:31:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"121:2:17"},"nodeType":"YulFunctionCall","src":"121:42:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"114:6:17"},"nodeType":"YulFunctionCall","src":"114:50:17"},"nodeType":"YulIf","src":"111:70:17"}]},"name":"abi_decode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"42:6:17","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"53:5:17","type":""}],"src":"14:173:17"},{"body":{"nodeType":"YulBlock","src":"279:167:17","statements":[{"body":{"nodeType":"YulBlock","src":"325:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"334:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"337:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"327:6:17"},"nodeType":"YulFunctionCall","src":"327:12:17"},"nodeType":"YulExpressionStatement","src":"327:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"300:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"309:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"296:3:17"},"nodeType":"YulFunctionCall","src":"296:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"321:2:17","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"292:3:17"},"nodeType":"YulFunctionCall","src":"292:32:17"},"nodeType":"YulIf","src":"289:52:17"},{"nodeType":"YulAssignment","src":"350:39:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"379:9:17"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"360:18:17"},"nodeType":"YulFunctionCall","src":"360:29:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"350:6:17"}]},{"nodeType":"YulAssignment","src":"398:42:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"425:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"436:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"421:3:17"},"nodeType":"YulFunctionCall","src":"421:18:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"408:12:17"},"nodeType":"YulFunctionCall","src":"408:32:17"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"398:6:17"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"237:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"248:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"260:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"268:6:17","type":""}],"src":"192:254:17"},{"body":{"nodeType":"YulBlock","src":"546:92:17","statements":[{"nodeType":"YulAssignment","src":"556:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"568:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"579:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"564:3:17"},"nodeType":"YulFunctionCall","src":"564:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"556:4:17"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"598:9:17"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"623:6:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"616:6:17"},"nodeType":"YulFunctionCall","src":"616:14:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"609:6:17"},"nodeType":"YulFunctionCall","src":"609:22:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"591:6:17"},"nodeType":"YulFunctionCall","src":"591:41:17"},"nodeType":"YulExpressionStatement","src":"591:41:17"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"515:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"526:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"537:4:17","type":""}],"src":"451:187:17"},{"body":{"nodeType":"YulBlock","src":"744:76:17","statements":[{"nodeType":"YulAssignment","src":"754:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"766:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"777:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"762:3:17"},"nodeType":"YulFunctionCall","src":"762:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"754:4:17"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"796:9:17"},{"name":"value0","nodeType":"YulIdentifier","src":"807:6:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"789:6:17"},"nodeType":"YulFunctionCall","src":"789:25:17"},"nodeType":"YulExpressionStatement","src":"789:25:17"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"713:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"724:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"735:4:17","type":""}],"src":"643:177:17"},{"body":{"nodeType":"YulBlock","src":"929:224:17","statements":[{"body":{"nodeType":"YulBlock","src":"975:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"984:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"987:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"977:6:17"},"nodeType":"YulFunctionCall","src":"977:12:17"},"nodeType":"YulExpressionStatement","src":"977:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"950:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"959:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"946:3:17"},"nodeType":"YulFunctionCall","src":"946:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"971:2:17","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"942:3:17"},"nodeType":"YulFunctionCall","src":"942:32:17"},"nodeType":"YulIf","src":"939:52:17"},{"nodeType":"YulAssignment","src":"1000:39:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1029:9:17"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1010:18:17"},"nodeType":"YulFunctionCall","src":"1010:29:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1000:6:17"}]},{"nodeType":"YulAssignment","src":"1048:48:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1081:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"1092:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1077:3:17"},"nodeType":"YulFunctionCall","src":"1077:18:17"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1058:18:17"},"nodeType":"YulFunctionCall","src":"1058:38:17"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1048:6:17"}]},{"nodeType":"YulAssignment","src":"1105:42:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1132:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"1143:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1128:3:17"},"nodeType":"YulFunctionCall","src":"1128:18:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1115:12:17"},"nodeType":"YulFunctionCall","src":"1115:32:17"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1105:6:17"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"879:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"890:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"902:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"910:6:17","type":""},{"name":"value2","nodeType":"YulTypedName","src":"918:6:17","type":""}],"src":"825:328:17"},{"body":{"nodeType":"YulBlock","src":"1228:110:17","statements":[{"body":{"nodeType":"YulBlock","src":"1274:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1283:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1286:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1276:6:17"},"nodeType":"YulFunctionCall","src":"1276:12:17"},"nodeType":"YulExpressionStatement","src":"1276:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1249:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"1258:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1245:3:17"},"nodeType":"YulFunctionCall","src":"1245:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"1270:2:17","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1241:3:17"},"nodeType":"YulFunctionCall","src":"1241:32:17"},"nodeType":"YulIf","src":"1238:52:17"},{"nodeType":"YulAssignment","src":"1299:33:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1322:9:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1309:12:17"},"nodeType":"YulFunctionCall","src":"1309:23:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1299:6:17"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1194:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1205:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1217:6:17","type":""}],"src":"1158:180:17"},{"body":{"nodeType":"YulBlock","src":"1413:116:17","statements":[{"body":{"nodeType":"YulBlock","src":"1459:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1468:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1471:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1461:6:17"},"nodeType":"YulFunctionCall","src":"1461:12:17"},"nodeType":"YulExpressionStatement","src":"1461:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1434:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"1443:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1430:3:17"},"nodeType":"YulFunctionCall","src":"1430:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"1455:2:17","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1426:3:17"},"nodeType":"YulFunctionCall","src":"1426:32:17"},"nodeType":"YulIf","src":"1423:52:17"},{"nodeType":"YulAssignment","src":"1484:39:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1513:9:17"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1494:18:17"},"nodeType":"YulFunctionCall","src":"1494:29:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1484:6:17"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1379:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1390:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1402:6:17","type":""}],"src":"1343:186:17"},{"body":{"nodeType":"YulBlock","src":"1621:173:17","statements":[{"body":{"nodeType":"YulBlock","src":"1667:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1676:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1679:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1669:6:17"},"nodeType":"YulFunctionCall","src":"1669:12:17"},"nodeType":"YulExpressionStatement","src":"1669:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1642:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"1651:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1638:3:17"},"nodeType":"YulFunctionCall","src":"1638:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"1663:2:17","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1634:3:17"},"nodeType":"YulFunctionCall","src":"1634:32:17"},"nodeType":"YulIf","src":"1631:52:17"},{"nodeType":"YulAssignment","src":"1692:39:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1721:9:17"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1702:18:17"},"nodeType":"YulFunctionCall","src":"1702:29:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1692:6:17"}]},{"nodeType":"YulAssignment","src":"1740:48:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1773:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"1784:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1769:3:17"},"nodeType":"YulFunctionCall","src":"1769:18:17"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1750:18:17"},"nodeType":"YulFunctionCall","src":"1750:38:17"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1740:6:17"}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1579:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1590:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1602:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1610:6:17","type":""}],"src":"1534:260:17"},{"body":{"nodeType":"YulBlock","src":"1973:226:17","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1990:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"2001:2:17","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1983:6:17"},"nodeType":"YulFunctionCall","src":"1983:21:17"},"nodeType":"YulExpressionStatement","src":"1983:21:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2024:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"2035:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2020:3:17"},"nodeType":"YulFunctionCall","src":"2020:18:17"},{"kind":"number","nodeType":"YulLiteral","src":"2040:2:17","type":"","value":"36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2013:6:17"},"nodeType":"YulFunctionCall","src":"2013:30:17"},"nodeType":"YulExpressionStatement","src":"2013:30:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2063:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"2074:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2059:3:17"},"nodeType":"YulFunctionCall","src":"2059:18:17"},{"hexValue":"45524332303a20617070726f76652066726f6d20746865207a65726f20616464","kind":"string","nodeType":"YulLiteral","src":"2079:34:17","type":"","value":"ERC20: approve from the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2052:6:17"},"nodeType":"YulFunctionCall","src":"2052:62:17"},"nodeType":"YulExpressionStatement","src":"2052:62:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2134:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"2145:2:17","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2130:3:17"},"nodeType":"YulFunctionCall","src":"2130:18:17"},{"hexValue":"72657373","kind":"string","nodeType":"YulLiteral","src":"2150:6:17","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2123:6:17"},"nodeType":"YulFunctionCall","src":"2123:34:17"},"nodeType":"YulExpressionStatement","src":"2123:34:17"},{"nodeType":"YulAssignment","src":"2166:27:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2178:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"2189:3:17","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2174:3:17"},"nodeType":"YulFunctionCall","src":"2174:19:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2166:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1950:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1964:4:17","type":""}],"src":"1799:400:17"},{"body":{"nodeType":"YulBlock","src":"2378:224:17","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2395:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"2406:2:17","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2388:6:17"},"nodeType":"YulFunctionCall","src":"2388:21:17"},"nodeType":"YulExpressionStatement","src":"2388:21:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2429:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"2440:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2425:3:17"},"nodeType":"YulFunctionCall","src":"2425:18:17"},{"kind":"number","nodeType":"YulLiteral","src":"2445:2:17","type":"","value":"34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2418:6:17"},"nodeType":"YulFunctionCall","src":"2418:30:17"},"nodeType":"YulExpressionStatement","src":"2418:30:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2468:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"2479:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2464:3:17"},"nodeType":"YulFunctionCall","src":"2464:18:17"},{"hexValue":"45524332303a20617070726f766520746f20746865207a65726f206164647265","kind":"string","nodeType":"YulLiteral","src":"2484:34:17","type":"","value":"ERC20: approve to the zero addre"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2457:6:17"},"nodeType":"YulFunctionCall","src":"2457:62:17"},"nodeType":"YulExpressionStatement","src":"2457:62:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2539:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"2550:2:17","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2535:3:17"},"nodeType":"YulFunctionCall","src":"2535:18:17"},{"hexValue":"7373","kind":"string","nodeType":"YulLiteral","src":"2555:4:17","type":"","value":"ss"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2528:6:17"},"nodeType":"YulFunctionCall","src":"2528:32:17"},"nodeType":"YulExpressionStatement","src":"2528:32:17"},{"nodeType":"YulAssignment","src":"2569:27:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2581:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"2592:3:17","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2577:3:17"},"nodeType":"YulFunctionCall","src":"2577:19:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2569:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2355:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2369:4:17","type":""}],"src":"2204:398:17"},{"body":{"nodeType":"YulBlock","src":"2781:227:17","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2798:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"2809:2:17","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2791:6:17"},"nodeType":"YulFunctionCall","src":"2791:21:17"},"nodeType":"YulExpressionStatement","src":"2791:21:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2832:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"2843:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2828:3:17"},"nodeType":"YulFunctionCall","src":"2828:18:17"},{"kind":"number","nodeType":"YulLiteral","src":"2848:2:17","type":"","value":"37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2821:6:17"},"nodeType":"YulFunctionCall","src":"2821:30:17"},"nodeType":"YulExpressionStatement","src":"2821:30:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2871:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"2882:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2867:3:17"},"nodeType":"YulFunctionCall","src":"2867:18:17"},{"hexValue":"45524332303a207472616e736665722066726f6d20746865207a65726f206164","kind":"string","nodeType":"YulLiteral","src":"2887:34:17","type":"","value":"ERC20: transfer from the zero ad"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2860:6:17"},"nodeType":"YulFunctionCall","src":"2860:62:17"},"nodeType":"YulExpressionStatement","src":"2860:62:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2942:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"2953:2:17","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2938:3:17"},"nodeType":"YulFunctionCall","src":"2938:18:17"},{"hexValue":"6472657373","kind":"string","nodeType":"YulLiteral","src":"2958:7:17","type":"","value":"dress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2931:6:17"},"nodeType":"YulFunctionCall","src":"2931:35:17"},"nodeType":"YulExpressionStatement","src":"2931:35:17"},{"nodeType":"YulAssignment","src":"2975:27:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2987:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"2998:3:17","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2983:3:17"},"nodeType":"YulFunctionCall","src":"2983:19:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2975:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2758:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2772:4:17","type":""}],"src":"2607:401:17"},{"body":{"nodeType":"YulBlock","src":"3187:225:17","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3204:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"3215:2:17","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3197:6:17"},"nodeType":"YulFunctionCall","src":"3197:21:17"},"nodeType":"YulExpressionStatement","src":"3197:21:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3238:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"3249:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3234:3:17"},"nodeType":"YulFunctionCall","src":"3234:18:17"},{"kind":"number","nodeType":"YulLiteral","src":"3254:2:17","type":"","value":"35"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3227:6:17"},"nodeType":"YulFunctionCall","src":"3227:30:17"},"nodeType":"YulExpressionStatement","src":"3227:30:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3277:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"3288:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3273:3:17"},"nodeType":"YulFunctionCall","src":"3273:18:17"},{"hexValue":"45524332303a207472616e7366657220746f20746865207a65726f2061646472","kind":"string","nodeType":"YulLiteral","src":"3293:34:17","type":"","value":"ERC20: transfer to the zero addr"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3266:6:17"},"nodeType":"YulFunctionCall","src":"3266:62:17"},"nodeType":"YulExpressionStatement","src":"3266:62:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3348:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"3359:2:17","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3344:3:17"},"nodeType":"YulFunctionCall","src":"3344:18:17"},{"hexValue":"657373","kind":"string","nodeType":"YulLiteral","src":"3364:5:17","type":"","value":"ess"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3337:6:17"},"nodeType":"YulFunctionCall","src":"3337:33:17"},"nodeType":"YulExpressionStatement","src":"3337:33:17"},{"nodeType":"YulAssignment","src":"3379:27:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3391:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"3402:3:17","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3387:3:17"},"nodeType":"YulFunctionCall","src":"3387:19:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3379:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3164:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3178:4:17","type":""}],"src":"3013:399:17"},{"body":{"nodeType":"YulBlock","src":"3538:427:17","statements":[{"nodeType":"YulVariableDeclaration","src":"3548:12:17","value":{"kind":"number","nodeType":"YulLiteral","src":"3558:2:17","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"3552:2:17","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3576:9:17"},{"name":"_1","nodeType":"YulIdentifier","src":"3587:2:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3569:6:17"},"nodeType":"YulFunctionCall","src":"3569:21:17"},"nodeType":"YulExpressionStatement","src":"3569:21:17"},{"nodeType":"YulVariableDeclaration","src":"3599:27:17","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3619:6:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3613:5:17"},"nodeType":"YulFunctionCall","src":"3613:13:17"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"3603:6:17","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3646:9:17"},{"name":"_1","nodeType":"YulIdentifier","src":"3657:2:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3642:3:17"},"nodeType":"YulFunctionCall","src":"3642:18:17"},{"name":"length","nodeType":"YulIdentifier","src":"3662:6:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3635:6:17"},"nodeType":"YulFunctionCall","src":"3635:34:17"},"nodeType":"YulExpressionStatement","src":"3635:34:17"},{"nodeType":"YulVariableDeclaration","src":"3678:10:17","value":{"kind":"number","nodeType":"YulLiteral","src":"3687:1:17","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"3682:1:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"3747:90:17","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3776:9:17"},{"name":"i","nodeType":"YulIdentifier","src":"3787:1:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3772:3:17"},"nodeType":"YulFunctionCall","src":"3772:17:17"},{"kind":"number","nodeType":"YulLiteral","src":"3791:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3768:3:17"},"nodeType":"YulFunctionCall","src":"3768:26:17"},{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3810:6:17"},{"name":"i","nodeType":"YulIdentifier","src":"3818:1:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3806:3:17"},"nodeType":"YulFunctionCall","src":"3806:14:17"},{"name":"_1","nodeType":"YulIdentifier","src":"3822:2:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3802:3:17"},"nodeType":"YulFunctionCall","src":"3802:23:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3796:5:17"},"nodeType":"YulFunctionCall","src":"3796:30:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3761:6:17"},"nodeType":"YulFunctionCall","src":"3761:66:17"},"nodeType":"YulExpressionStatement","src":"3761:66:17"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3708:1:17"},{"name":"length","nodeType":"YulIdentifier","src":"3711:6:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3705:2:17"},"nodeType":"YulFunctionCall","src":"3705:13:17"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"3719:19:17","statements":[{"nodeType":"YulAssignment","src":"3721:15:17","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3730:1:17"},{"name":"_1","nodeType":"YulIdentifier","src":"3733:2:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3726:3:17"},"nodeType":"YulFunctionCall","src":"3726:10:17"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"3721:1:17"}]}]},"pre":{"nodeType":"YulBlock","src":"3701:3:17","statements":[]},"src":"3697:140:17"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3861:9:17"},{"name":"length","nodeType":"YulIdentifier","src":"3872:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3857:3:17"},"nodeType":"YulFunctionCall","src":"3857:22:17"},{"kind":"number","nodeType":"YulLiteral","src":"3881:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3853:3:17"},"nodeType":"YulFunctionCall","src":"3853:31:17"},{"kind":"number","nodeType":"YulLiteral","src":"3886:1:17","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3846:6:17"},"nodeType":"YulFunctionCall","src":"3846:42:17"},"nodeType":"YulExpressionStatement","src":"3846:42:17"},{"nodeType":"YulAssignment","src":"3897:62:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3913:9:17"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3932:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"3940:2:17","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3928:3:17"},"nodeType":"YulFunctionCall","src":"3928:15:17"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3949:2:17","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3945:3:17"},"nodeType":"YulFunctionCall","src":"3945:7:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3924:3:17"},"nodeType":"YulFunctionCall","src":"3924:29:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3909:3:17"},"nodeType":"YulFunctionCall","src":"3909:45:17"},{"kind":"number","nodeType":"YulLiteral","src":"3956:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3905:3:17"},"nodeType":"YulFunctionCall","src":"3905:54:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3897:4:17"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3507:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3518:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3529:4:17","type":""}],"src":"3417:548:17"},{"body":{"nodeType":"YulBlock","src":"4002:95:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4019:1:17","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4026:3:17","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"4031:10:17","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4022:3:17"},"nodeType":"YulFunctionCall","src":"4022:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4012:6:17"},"nodeType":"YulFunctionCall","src":"4012:31:17"},"nodeType":"YulExpressionStatement","src":"4012:31:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4059:1:17","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"4062:4:17","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4052:6:17"},"nodeType":"YulFunctionCall","src":"4052:15:17"},"nodeType":"YulExpressionStatement","src":"4052:15:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4083:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4086:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4076:6:17"},"nodeType":"YulFunctionCall","src":"4076:15:17"},"nodeType":"YulExpressionStatement","src":"4076:15:17"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"3970:127:17"},{"body":{"nodeType":"YulBlock","src":"4151:79:17","statements":[{"nodeType":"YulAssignment","src":"4161:17:17","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"4173:1:17"},{"name":"y","nodeType":"YulIdentifier","src":"4176:1:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4169:3:17"},"nodeType":"YulFunctionCall","src":"4169:9:17"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"4161:4:17"}]},{"body":{"nodeType":"YulBlock","src":"4202:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"4204:16:17"},"nodeType":"YulFunctionCall","src":"4204:18:17"},"nodeType":"YulExpressionStatement","src":"4204:18:17"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"4193:4:17"},{"name":"x","nodeType":"YulIdentifier","src":"4199:1:17"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4190:2:17"},"nodeType":"YulFunctionCall","src":"4190:11:17"},"nodeType":"YulIf","src":"4187:37:17"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"4133:1:17","type":""},{"name":"y","nodeType":"YulTypedName","src":"4136:1:17","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"4142:4:17","type":""}],"src":"4102:128:17"},{"body":{"nodeType":"YulBlock","src":"4283:77:17","statements":[{"nodeType":"YulAssignment","src":"4293:16:17","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"4304:1:17"},{"name":"y","nodeType":"YulIdentifier","src":"4307:1:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4300:3:17"},"nodeType":"YulFunctionCall","src":"4300:9:17"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"4293:3:17"}]},{"body":{"nodeType":"YulBlock","src":"4332:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"4334:16:17"},"nodeType":"YulFunctionCall","src":"4334:18:17"},"nodeType":"YulExpressionStatement","src":"4334:18:17"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"4324:1:17"},{"name":"sum","nodeType":"YulIdentifier","src":"4327:3:17"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4321:2:17"},"nodeType":"YulFunctionCall","src":"4321:10:17"},"nodeType":"YulIf","src":"4318:36:17"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"4266:1:17","type":""},{"name":"y","nodeType":"YulTypedName","src":"4269:1:17","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"4275:3:17","type":""}],"src":"4235:125:17"},{"body":{"nodeType":"YulBlock","src":"4539:177:17","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4556:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"4567:2:17","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4549:6:17"},"nodeType":"YulFunctionCall","src":"4549:21:17"},"nodeType":"YulExpressionStatement","src":"4549:21:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4590:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"4601:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4586:3:17"},"nodeType":"YulFunctionCall","src":"4586:18:17"},{"kind":"number","nodeType":"YulLiteral","src":"4606:2:17","type":"","value":"27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4579:6:17"},"nodeType":"YulFunctionCall","src":"4579:30:17"},"nodeType":"YulExpressionStatement","src":"4579:30:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4629:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"4640:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4625:3:17"},"nodeType":"YulFunctionCall","src":"4625:18:17"},{"hexValue":"536166654d6174683a206164646974696f6e206f766572666c6f77","kind":"string","nodeType":"YulLiteral","src":"4645:29:17","type":"","value":"SafeMath: addition overflow"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4618:6:17"},"nodeType":"YulFunctionCall","src":"4618:57:17"},"nodeType":"YulExpressionStatement","src":"4618:57:17"},{"nodeType":"YulAssignment","src":"4684:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4696:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"4707:2:17","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4692:3:17"},"nodeType":"YulFunctionCall","src":"4692:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4684:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4516:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4530:4:17","type":""}],"src":"4365:351:17"},{"body":{"nodeType":"YulBlock","src":"4895:223:17","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4912:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"4923:2:17","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4905:6:17"},"nodeType":"YulFunctionCall","src":"4905:21:17"},"nodeType":"YulExpressionStatement","src":"4905:21:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4946:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"4957:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4942:3:17"},"nodeType":"YulFunctionCall","src":"4942:18:17"},{"kind":"number","nodeType":"YulLiteral","src":"4962:2:17","type":"","value":"33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4935:6:17"},"nodeType":"YulFunctionCall","src":"4935:30:17"},"nodeType":"YulExpressionStatement","src":"4935:30:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4985:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"4996:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4981:3:17"},"nodeType":"YulFunctionCall","src":"4981:18:17"},{"hexValue":"45524332303a206275726e2066726f6d20746865207a65726f20616464726573","kind":"string","nodeType":"YulLiteral","src":"5001:34:17","type":"","value":"ERC20: burn from the zero addres"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4974:6:17"},"nodeType":"YulFunctionCall","src":"4974:62:17"},"nodeType":"YulExpressionStatement","src":"4974:62:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5056:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"5067:2:17","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5052:3:17"},"nodeType":"YulFunctionCall","src":"5052:18:17"},{"hexValue":"73","kind":"string","nodeType":"YulLiteral","src":"5072:3:17","type":"","value":"s"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5045:6:17"},"nodeType":"YulFunctionCall","src":"5045:31:17"},"nodeType":"YulExpressionStatement","src":"5045:31:17"},{"nodeType":"YulAssignment","src":"5085:27:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5097:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"5108:3:17","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5093:3:17"},"nodeType":"YulFunctionCall","src":"5093:19:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5085:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4872:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4886:4:17","type":""}],"src":"4721:397:17"}]},"contents":"{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"SafeMath: addition overflow\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"ERC20: burn from the zero addres\")\n        mstore(add(headStart, 96), \"s\")\n        tail := add(headStart, 128)\n    }\n}","id":17,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b506004361061009e5760003560e01c806370a082311161006657806370a082311461011857806379cc679014610141578063a457c2d714610154578063a9059cbb14610167578063dd62ed3e1461017a57600080fd5b8063095ea7b3146100a357806318160ddd146100cb57806323b872dd146100dd57806339509351146100f057806342966c6814610103575b600080fd5b6100b66100b13660046107f2565b6101b3565b60405190151581526020015b60405180910390f35b6002545b6040519081526020016100c2565b6100b66100eb36600461081c565b6101ca565b6100b66100fe3660046107f2565b610244565b610116610111366004610858565b61027a565b005b6100cf610126366004610871565b6001600160a01b031660009081526020819052604090205490565b61011661014f3660046107f2565b610287565b6100b66101623660046107f2565b610295565b6100b66101753660046107f2565b6102e4565b6100cf61018836600461088c565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b60006101c03384846102f1565b5060015b92915050565b60006101d784848461041b565b61023a843361023585604051806060016040528060288152602001610992602891396001600160a01b038a16600090815260016020526040812090335b6001600160a01b03168152602081019190915260400160002054919061059e565b6102f1565b5060019392505050565b3360008181526001602090815260408083206001600160a01b038716845290915281205490916101c091859061023590866105d8565b610284338261063e565b50565b6102918282610749565b5050565b60006101c03384610235856040518060600160405280602581526020016109de602591393360009081526001602090815260408083206001600160a01b038d168452909152902054919061059e565b60006101c033848461041b565b6001600160a01b0383166103585760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084015b60405180910390fd5b6001600160a01b0382166103b95760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161034f565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b03831661047f5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161034f565b6001600160a01b0382166104e15760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161034f565b61051e8160405180606001604052806026815260200161096c602691396001600160a01b038616600090815260208190526040902054919061059e565b6001600160a01b03808516600090815260208190526040808220939093559084168152205461054d90826105d8565b6001600160a01b038381166000818152602081815260409182902094909455518481529092918616917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910161040e565b600081848411156105c25760405162461bcd60e51b815260040161034f91906108bf565b5060006105cf8486610923565b95945050505050565b6000806105e58385610936565b9050838110156106375760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015260640161034f565b9392505050565b6001600160a01b03821661069e5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b606482015260840161034f565b6106db8160405180606001604052806022815260200161094a602291396001600160a01b038516600090815260208190526040902054919061059e565b6001600160a01b0383166000908152602081905260409020556002546107019082610794565b6002556040518181526000906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b610753828261063e565b6102918233610235846040518060600160405280602481526020016109ba602491396001600160a01b03881660009081526001602052604081209033610214565b600061063783836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525061059e565b80356001600160a01b03811681146107ed57600080fd5b919050565b6000806040838503121561080557600080fd5b61080e836107d6565b946020939093013593505050565b60008060006060848603121561083157600080fd5b61083a846107d6565b9250610848602085016107d6565b9150604084013590509250925092565b60006020828403121561086a57600080fd5b5035919050565b60006020828403121561088357600080fd5b610637826107d6565b6000806040838503121561089f57600080fd5b6108a8836107d6565b91506108b6602084016107d6565b90509250929050565b600060208083528351808285015260005b818110156108ec578581018301518582016040015282016108d0565b506000604082860101526040601f19601f8301168501019250505092915050565b634e487b7160e01b600052601160045260246000fd5b818103818111156101c4576101c461090d565b808201808211156101c4576101c461090d56fe45524332303a206275726e20616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e636545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa2646970667358221220cbaf5500675a51bfcaa588e548598041c29518ce4dc5c62fb6767f4ab4ecc94464736f6c63430008120033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x118 JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x141 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x154 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x17A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xA3 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xCB JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0xDD JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0xF0 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x103 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0xB1 CALLDATASIZE PUSH1 0x4 PUSH2 0x7F2 JUMP JUMPDEST PUSH2 0x1B3 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC2 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0xEB CALLDATASIZE PUSH1 0x4 PUSH2 0x81C JUMP JUMPDEST PUSH2 0x1CA JUMP JUMPDEST PUSH2 0xB6 PUSH2 0xFE CALLDATASIZE PUSH1 0x4 PUSH2 0x7F2 JUMP JUMPDEST PUSH2 0x244 JUMP JUMPDEST PUSH2 0x116 PUSH2 0x111 CALLDATASIZE PUSH1 0x4 PUSH2 0x858 JUMP JUMPDEST PUSH2 0x27A JUMP JUMPDEST STOP JUMPDEST PUSH2 0xCF PUSH2 0x126 CALLDATASIZE PUSH1 0x4 PUSH2 0x871 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x116 PUSH2 0x14F CALLDATASIZE PUSH1 0x4 PUSH2 0x7F2 JUMP JUMPDEST PUSH2 0x287 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x162 CALLDATASIZE PUSH1 0x4 PUSH2 0x7F2 JUMP JUMPDEST PUSH2 0x295 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x7F2 JUMP JUMPDEST PUSH2 0x2E4 JUMP JUMPDEST PUSH2 0xCF PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0x88C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C0 CALLER DUP5 DUP5 PUSH2 0x2F1 JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D7 DUP5 DUP5 DUP5 PUSH2 0x41B JUMP JUMPDEST PUSH2 0x23A DUP5 CALLER PUSH2 0x235 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x992 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 CALLER JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x59E JUMP JUMPDEST PUSH2 0x2F1 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x1C0 SWAP2 DUP6 SWAP1 PUSH2 0x235 SWAP1 DUP7 PUSH2 0x5D8 JUMP JUMPDEST PUSH2 0x284 CALLER DUP3 PUSH2 0x63E JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x291 DUP3 DUP3 PUSH2 0x749 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C0 CALLER DUP5 PUSH2 0x235 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x9DE PUSH1 0x25 SWAP2 CODECOPY CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x59E JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C0 CALLER DUP5 DUP5 PUSH2 0x41B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x358 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x3B9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x34F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x47F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x34F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x4E1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x34F JUMP JUMPDEST PUSH2 0x51E DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x96C PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x59E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x54D SWAP1 DUP3 PUSH2 0x5D8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE MLOAD DUP5 DUP2 MSTORE SWAP1 SWAP3 SWAP2 DUP7 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH2 0x40E JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x5C2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x34F SWAP2 SWAP1 PUSH2 0x8BF JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x5CF DUP5 DUP7 PUSH2 0x923 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x5E5 DUP4 DUP6 PUSH2 0x936 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x637 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x34F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x69E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x34F JUMP JUMPDEST PUSH2 0x6DB DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x94A PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x59E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x2 SLOAD PUSH2 0x701 SWAP1 DUP3 PUSH2 0x794 JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x753 DUP3 DUP3 PUSH2 0x63E JUMP JUMPDEST PUSH2 0x291 DUP3 CALLER PUSH2 0x235 DUP5 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x9BA PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 CALLER PUSH2 0x214 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x637 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x59E JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x7ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x805 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x80E DUP4 PUSH2 0x7D6 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x831 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x83A DUP5 PUSH2 0x7D6 JUMP JUMPDEST SWAP3 POP PUSH2 0x848 PUSH1 0x20 DUP6 ADD PUSH2 0x7D6 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x86A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x883 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x637 DUP3 PUSH2 0x7D6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x89F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8A8 DUP4 PUSH2 0x7D6 JUMP JUMPDEST SWAP2 POP PUSH2 0x8B6 PUSH1 0x20 DUP5 ADD PUSH2 0x7D6 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x8EC JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x8D0 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x1C4 JUMPI PUSH2 0x1C4 PUSH2 0x90D JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x1C4 JUMPI PUSH2 0x1C4 PUSH2 0x90D JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH3 0x75726E KECCAK256 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732062616C616E636545524332 ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x2062616C616E636545524332303A207472616E73 PUSH7 0x657220616D6F75 PUSH15 0x74206578636565647320616C6C6F77 PUSH2 0x6E63 PUSH6 0x45524332303A KECCAK256 PUSH3 0x75726E KECCAK256 PUSH2 0x6D6F PUSH22 0x6E74206578636565647320616C6C6F77616E63654552 NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726FA2646970 PUSH7 0x7358221220CBAF SSTORE STOP PUSH8 0x5A51BFCAA588E548 MSIZE DUP1 COINBASE 0xC2 SWAP6 XOR 0xCE 0x4D 0xC5 0xC6 0x2F 0xB6 PUSH23 0x7F4AB4ECC94464736F6C63430008120033000000000000 ","sourceMap":"314:391:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2483:149:4;;;;;;:::i;:::-;;:::i;:::-;;;616:14:17;;609:22;591:41;;579:2;564:18;2483:149:4;;;;;;;;1542:89;1612:12;;1542:89;;;789:25:17;;;777:2;762:18;1542:89:4;643:177:17;3090:300:4;;;;;;:::i;:::-;;:::i;3785:207::-;;;;;;:::i;:::-;;:::i;464:81:5:-;;;;;;:::i;:::-;;:::i;:::-;;1689:108:4;;;;;;:::i;:::-;-1:-1:-1;;;;;1772:18:4;1746:7;1772:18;;;;;;;;;;;;1689:108;602:101:5;;;;;;:::i;:::-;;:::i;4479:258:4:-;;;;;;:::i;:::-;;:::i;2000:155::-;;;;;;:::i;:::-;;:::i;2213:132::-;;;;;;:::i;:::-;-1:-1:-1;;;;;2311:18:4;;;2285:7;2311:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;2213:132;2483:149;2549:4;2565:39;669:10:3;2588:7:4;2597:6;2565:8;:39::i;:::-;-1:-1:-1;2621:4:4;2483:149;;;;;:::o;3090:300::-;3179:4;3195:36;3205:6;3213:9;3224:6;3195:9;:36::i;:::-;3241:121;3250:6;669:10:3;3272:89:4;3310:6;3272:89;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3272:19:4;;;;;;:11;:19;;;;;;669:10:3;3292:12:4;-1:-1:-1;;;;;3272:33:4;;;;;;;;;;;;-1:-1:-1;3272:33:4;;;:89;:37;:89::i;:::-;3241:8;:121::i;:::-;-1:-1:-1;3379:4:4;3090:300;;;;;:::o;3785:207::-;669:10:3;3865:4:4;3913:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;3913:34:4;;;;;;;;;;3865:4;;3881:83;;3904:7;;3913:50;;3952:10;3913:38;:50::i;464:81:5:-;511:27;669:10:3;531:6:5;511:5;:27::i;:::-;464:81;:::o;602:101::-;670:26;680:7;689:6;670:9;:26::i;:::-;602:101;;:::o;4479:258:4:-;4564:4;4580:129;669:10:3;4603:7:4;4612:96;4651:15;4612:96;;;;;;;;;;;;;;;;;669:10:3;4612:25:4;;;;:11;:25;;;;;;;;-1:-1:-1;;;;;4612:34:4;;;;;;;;;;;;:38;:96::i;2000:155::-;2069:4;2085:42;669:10:3;2109:9:4;2120:6;2085:9;:42::i;7333:332::-;-1:-1:-1;;;;;7426:19:4;;7418:68;;;;-1:-1:-1;;;7418:68:4;;2001:2:17;7418:68:4;;;1983:21:17;2040:2;2020:18;;;2013:30;2079:34;2059:18;;;2052:62;-1:-1:-1;;;2130:18:17;;;2123:34;2174:19;;7418:68:4;;;;;;;;;-1:-1:-1;;;;;7504:21:4;;7496:68;;;;-1:-1:-1;;;7496:68:4;;2406:2:17;7496:68:4;;;2388:21:17;2445:2;2425:18;;;2418:30;2484:34;2464:18;;;2457:62;-1:-1:-1;;;2535:18:17;;;2528:32;2577:19;;7496:68:4;2204:398:17;7496:68:4;-1:-1:-1;;;;;7575:18:4;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;7626:32;;789:25:17;;;7626:32:4;;762:18:17;7626:32:4;;;;;;;;7333:332;;;:::o;5211:464::-;-1:-1:-1;;;;;5308:20:4;;5300:70;;;;-1:-1:-1;;;5300:70:4;;2809:2:17;5300:70:4;;;2791:21:17;2848:2;2828:18;;;2821:30;2887:34;2867:18;;;2860:62;-1:-1:-1;;;2938:18:17;;;2931:35;2983:19;;5300:70:4;2607:401:17;5300:70:4;-1:-1:-1;;;;;5388:23:4;;5380:71;;;;-1:-1:-1;;;5380:71:4;;3215:2:17;5380:71:4;;;3197:21:17;3254:2;3234:18;;;3227:30;3293:34;3273:18;;;3266:62;-1:-1:-1;;;3344:18:17;;;3337:33;3387:19;;5380:71:4;3013:399:17;5380:71:4;5482;5504:6;5482:71;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5482:17:4;;:9;:17;;;;;;;;;;;;:71;:21;:71::i;:::-;-1:-1:-1;;;;;5462:17:4;;;:9;:17;;;;;;;;;;;:91;;;;5586:20;;;;;;;:32;;5611:6;5586:24;:32::i;:::-;-1:-1:-1;;;;;5563:20:4;;;:9;:20;;;;;;;;;;;;:55;;;;5633:35;789:25:17;;;5563:20:4;;5633:35;;;;;;762:18:17;5633:35:4;643:177:17;1732:187:11;1818:7;1853:12;1845:6;;;;1837:29;;;;-1:-1:-1;;;1837:29:11;;;;;;;;:::i;:::-;-1:-1:-1;1876:9:11;1888:5;1892:1;1888;:5;:::i;:::-;1876:17;1732:187;-1:-1:-1;;;;;1732:187:11:o;834:176::-;892:7;;923:5;927:1;923;:5;:::i;:::-;911:17;;951:1;946;:6;;938:46;;;;-1:-1:-1;;;938:46:11;;4567:2:17;938:46:11;;;4549:21:17;4606:2;4586:18;;;4579:30;4645:29;4625:18;;;4618:57;4692:18;;938:46:11;4365:351:17;938:46:11;1002:1;834:176;-1:-1:-1;;;834:176:11:o;6566:342:4:-;-1:-1:-1;;;;;6641:21:4;;6633:67;;;;-1:-1:-1;;;6633:67:4;;4923:2:17;6633:67:4;;;4905:21:17;4962:2;4942:18;;;4935:30;5001:34;4981:18;;;4974:62;-1:-1:-1;;;5052:18:17;;;5045:31;5093:19;;6633:67:4;4721:397:17;6633:67:4;6732:68;6755:6;6732:68;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6732:18:4;;:9;:18;;;;;;;;;;;;:68;:22;:68::i;:::-;-1:-1:-1;;;;;6711:18:4;;:9;:18;;;;;;;;;;:89;6825:12;;:24;;6842:6;6825:16;:24::i;:::-;6810:12;:39;6864:37;;789:25:17;;;6890:1:4;;-1:-1:-1;;;;;6864:37:4;;;;;777:2:17;762:18;6864:37:4;;;;;;;6566:342;;:::o;7843:229::-;7914:22;7920:7;7929:6;7914:5;:22::i;:::-;7946:119;7955:7;669:10:3;7978:86:4;8017:6;7978:86;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7978:20:4;;;;;;:11;:20;;;;;;669:10:3;7999:12:4;590:96:3;1274:134:11;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;:3;:43::i;14:173:17:-;82:20;;-1:-1:-1;;;;;131:31:17;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:254::-;260:6;268;321:2;309:9;300:7;296:23;292:32;289:52;;;337:1;334;327:12;289:52;360:29;379:9;360:29;:::i;:::-;350:39;436:2;421:18;;;;408:32;;-1:-1:-1;;;192:254:17:o;825:328::-;902:6;910;918;971:2;959:9;950:7;946:23;942:32;939:52;;;987:1;984;977:12;939:52;1010:29;1029:9;1010:29;:::i;:::-;1000:39;;1058:38;1092:2;1081:9;1077:18;1058:38;:::i;:::-;1048:48;;1143:2;1132:9;1128:18;1115:32;1105:42;;825:328;;;;;:::o;1158:180::-;1217:6;1270:2;1258:9;1249:7;1245:23;1241:32;1238:52;;;1286:1;1283;1276:12;1238:52;-1:-1:-1;1309:23:17;;1158:180;-1:-1:-1;1158:180:17:o;1343:186::-;1402:6;1455:2;1443:9;1434:7;1430:23;1426:32;1423:52;;;1471:1;1468;1461:12;1423:52;1494:29;1513:9;1494:29;:::i;1534:260::-;1602:6;1610;1663:2;1651:9;1642:7;1638:23;1634:32;1631:52;;;1679:1;1676;1669:12;1631:52;1702:29;1721:9;1702:29;:::i;:::-;1692:39;;1750:38;1784:2;1773:9;1769:18;1750:38;:::i;:::-;1740:48;;1534:260;;;;;:::o;3417:548::-;3529:4;3558:2;3587;3576:9;3569:21;3619:6;3613:13;3662:6;3657:2;3646:9;3642:18;3635:34;3687:1;3697:140;3711:6;3708:1;3705:13;3697:140;;;3806:14;;;3802:23;;3796:30;3772:17;;;3791:2;3768:26;3761:66;3726:10;;3697:140;;;3701:3;3886:1;3881:2;3872:6;3861:9;3857:22;3853:31;3846:42;3956:2;3949;3945:7;3940:2;3932:6;3928:15;3924:29;3913:9;3909:45;3905:54;3897:62;;;;3417:548;;;;:::o;3970:127::-;4031:10;4026:3;4022:20;4019:1;4012:31;4062:4;4059:1;4052:15;4086:4;4083:1;4076:15;4102:128;4169:9;;;4190:11;;;4187:37;;;4204:18;;:::i;4235:125::-;4300:9;;;4321:10;;;4318:36;;;4334:18;;:::i"},"gasEstimates":{"creation":{"codeDepositCost":"523200","executionCost":"556","totalCost":"523756"},"external":{"allowance(address,address)":"infinite","approve(address,uint256)":"24588","balanceOf(address)":"2540","burn(uint256)":"infinite","burnFrom(address,uint256)":"infinite","decreaseAllowance(address,uint256)":"infinite","increaseAllowance(address,uint256)":"infinite","totalSupply()":"2304","transfer(address,uint256)":"infinite","transferFrom(address,address,uint256)":"infinite"}},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","burn(uint256)":"42966c68","burnFrom(address,uint256)":"79cc6790","decreaseAllowance(address,uint256)":"a457c2d7","increaseAllowance(address,uint256)":"39509351","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys `amount` tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"See {ERC20-_burnFrom}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/AccessControl/ERC20Burnable.sol\":\"ERC20Burnable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"contracts/AccessControl/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with GSN meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\n        return msg.data;\\n    }\\n}\",\"keccak256\":\"0x24e77a6af76a3c4f61e872bab8ab92a2a27b20d3e6111da351e0aa7ab83a7dc9\",\"license\":\"MIT\"},\"contracts/AccessControl/ERC20.sol\":{\"content\":\"pragma solidity ^0.8.4;\\n\\nimport \\\"./Context.sol\\\";\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"./SafeMath.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20Mintable}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * We have followed general OpenZeppelin guidelines: functions revert instead\\n * of returning `false` on failure. This behavior is nonetheless conventional\\n * and does not conflict with the expectations of ERC20 applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20 is Context, IERC20 {\\n    using SafeMath for uint256;\\n\\n    mapping (address => uint256) private _balances;\\n\\n    mapping (address => mapping (address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `recipient` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(address recipient, uint256 amount) public returns (bool) {\\n        _transfer(_msgSender(), recipient, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 amount) public returns (bool) {\\n        _approve(_msgSender(), spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20};\\n     *\\n     * Requirements:\\n     * - `sender` and `recipient` cannot be the zero address.\\n     * - `sender` must have a balance of at least `amount`.\\n     * - the caller must have allowance for `sender`'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(address sender, address recipient, uint256 amount) public returns (bool) {\\n        _transfer(sender, recipient, amount);\\n        _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \\\"ERC20: transfer amount exceeds allowance\\\"));\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue));\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \\\"ERC20: decreased allowance below zero\\\"));\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves tokens `amount` from `sender` to `recipient`.\\n     *\\n     * This is internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `sender` cannot be the zero address.\\n     * - `recipient` cannot be the zero address.\\n     * - `sender` must have a balance of at least `amount`.\\n     */\\n    function _transfer(address sender, address recipient, uint256 amount) internal {\\n        require(sender != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(recipient != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _balances[sender] = _balances[sender].sub(amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        _balances[recipient] = _balances[recipient].add(amount);\\n        emit Transfer(sender, recipient, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements\\n     *\\n     * - `to` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _totalSupply = _totalSupply.add(amount);\\n        _balances[account] = _balances[account].add(amount);\\n        emit Transfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _balances[account] = _balances[account].sub(amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        _totalSupply = _totalSupply.sub(amount);\\n        emit Transfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.\\n     *\\n     * This is internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(address owner, address spender, uint256 amount) internal {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`.`amount` is then deducted\\n     * from the caller's allowance.\\n     *\\n     * See {_burn} and {_approve}.\\n     */\\n    function _burnFrom(address account, uint256 amount) internal {\\n        _burn(account, amount);\\n        _approve(account, _msgSender(), _allowances[account][_msgSender()].sub(amount, \\\"ERC20: burn amount exceeds allowance\\\"));\\n    }\\n}\\n\",\"keccak256\":\"0xb0dffbfe5c63bc633701eec2d295435f3b18f16d580622e38480671848c428ca\"},\"contracts/AccessControl/ERC20Burnable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.4;\\n\\nimport \\\"./Context.sol\\\";\\nimport \\\"./ERC20.sol\\\";\\n\\n/**\\n * @dev Extension of {ERC20} that allows token holders to destroy both their own\\n * tokens and those that they have an allowance for, in a way that can be\\n * recognized off-chain (via event analysis).\\n */\\ncontract ERC20Burnable is Context, ERC20 {\\n    /**\\n     * @dev Destroys `amount` tokens from the caller.\\n     *\\n     * See {ERC20-_burn}.\\n     */\\n    function burn(uint256 amount) public {\\n        _burn(_msgSender(), amount);\\n    }\\n\\n    /**\\n     * @dev See {ERC20-_burnFrom}.\\n     */\\n    function burnFrom(address account, uint256 amount) public {\\n        _burnFrom(account, amount);\\n    }\\n}\\n\",\"keccak256\":\"0x8afb496ecdb32ac15f2c89906fc39cc863161dd78541ed1e79d57144a10eaf2c\",\"license\":\"MIT\"},\"contracts/AccessControl/IERC20.sol\":{\"content\":\"pragma solidity ^0.8.4;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP. Does not include\\n * the optional functions; to access them see {ERC20Detailed}.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x15f1080f668baa0d47cc70d176bf94cc175256262ed88ac624ea1295cde0eb19\"},\"contracts/AccessControl/SafeMath.sol\":{\"content\":\"pragma solidity ^0.8.4;\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\\n * checks.\\n *\\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\\n * in bugs, because programmers usually assume that an overflow raises an\\n * error, which is the standard behavior in high level programming languages.\\n * `SafeMath` restores this intuition by reverting the transaction when an\\n * operation overflows.\\n *\\n * Using this library instead of the unchecked operations eliminates an entire\\n * class of bugs, so it's recommended to use it always.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        uint256 c = a + b;\\n        require(c >= a, \\\"SafeMath: addition overflow\\\");\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return sub(a, b, \\\"SafeMath: subtraction overflow\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     * - Subtraction cannot overflow.\\n     *\\n     * _Available since v2.4.0._\\n     */\\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b <= a, errorMessage);\\n        uint256 c = a - b;\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n        // benefit is lost if 'b' is also tested.\\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        uint256 c = a * b;\\n        require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers. Reverts on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return div(a, b, \\\"SafeMath: division by zero\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     * - The divisor cannot be zero.\\n     *\\n     * _Available since v2.4.0._\\n     */\\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        // Solidity only automatically asserts when dividing by 0\\n        require(b > 0, errorMessage);\\n        uint256 c = a / b;\\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * Reverts when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return mod(a, b, \\\"SafeMath: modulo by zero\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * Reverts with custom message when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     * - The divisor cannot be zero.\\n     *\\n     * _Available since v2.4.0._\\n     */\\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b != 0, errorMessage);\\n        return a % b;\\n    }\\n}\\n\",\"keccak256\":\"0x9a6c2cad06a56e98a99eae4bfe8cc25b422efea7da4233bb481b32ea498f078f\"}},\"version\":1}","storageLayout":{"storage":[{"astId":486,"contract":"contracts/AccessControl/ERC20Burnable.sol:ERC20Burnable","label":"_balances","offset":0,"slot":"0","type":"t_mapping(t_address,t_uint256)"},{"astId":492,"contract":"contracts/AccessControl/ERC20Burnable.sol:ERC20Burnable","label":"_allowances","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":494,"contract":"contracts/AccessControl/ERC20Burnable.sol:ERC20Burnable","label":"_totalSupply","offset":0,"slot":"2","type":"t_uint256"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/AccessControl/ERC20Detailed.sol":{"ERC20Detailed":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Optional functions from the ERC20 standard.","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the amount of tokens owned by `account`."},"constructor":{"details":"Sets the values for `name`, `symbol`, and `decimals`. All three of these values are immutable: they can only be set once during construction."},"decimals()":{"details":"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{"details":"Returns the amount of tokens in existence."},"transfer(address,uint256)":{"details":"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Optional functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"constructor\":{\"details\":\"Sets the values for `name`, `symbol`, and `decimals`. All three of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/AccessControl/ERC20Detailed.sol\":\"ERC20Detailed\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"contracts/AccessControl/ERC20Detailed.sol\":{\"content\":\"pragma solidity ^0.8.4;\\n\\nimport \\\"./IERC20.sol\\\";\\n\\n/**\\n * @dev Optional functions from the ERC20 standard.\\n */\\nabstract contract ERC20Detailed is IERC20 {\\n    string private _name;\\n    string private _symbol;\\n    uint8 private _decimals;\\n\\n    /**\\n     * @dev Sets the values for `name`, `symbol`, and `decimals`. All three of\\n     * these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor (string memory name, string memory symbol, uint8 decimals) {\\n        _name = name;\\n        _symbol = symbol;\\n        _decimals = decimals;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5,05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view returns (uint8) {\\n        return _decimals;\\n    }\\n}\\n\",\"keccak256\":\"0xb5ec874cbe9e9b8e5bb00e9165ff55076392b6de078533d92e8239d3c8340eee\"},\"contracts/AccessControl/IERC20.sol\":{\"content\":\"pragma solidity ^0.8.4;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP. Does not include\\n * the optional functions; to access them see {ERC20Detailed}.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x15f1080f668baa0d47cc70d176bf94cc175256262ed88ac624ea1295cde0eb19\"}},\"version\":1}","storageLayout":{"storage":[{"astId":941,"contract":"contracts/AccessControl/ERC20Detailed.sol:ERC20Detailed","label":"_name","offset":0,"slot":"0","type":"t_string_storage"},{"astId":943,"contract":"contracts/AccessControl/ERC20Detailed.sol:ERC20Detailed","label":"_symbol","offset":0,"slot":"1","type":"t_string_storage"},{"astId":945,"contract":"contracts/AccessControl/ERC20Detailed.sol:ERC20Detailed","label":"_decimals","offset":0,"slot":"2","type":"t_uint8"}],"types":{"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/AccessControl/ERC20Mintable.sol":{"ERC20Mintable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"}],"name":"MinterAdded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"}],"name":"MinterRemoved","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"addMinter","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"isMinter","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"mint","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceMinter","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Extension of {ERC20} that adds a set of accounts with the {MinterRole}, which have permission to mint (create) new tokens as they see fit. At construction, the deployer of the contract is the only minter.","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"See {IERC20-allowance}."},"approve(address,uint256)":{"details":"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."},"balanceOf(address)":{"details":"See {IERC20-balanceOf}."},"decreaseAllowance(address,uint256)":{"details":"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."},"increaseAllowance(address,uint256)":{"details":"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."},"mint(address,uint256)":{"details":"See {ERC20-_mint}. Requirements: - the caller must have the {MinterRole}."},"totalSupply()":{"details":"See {IERC20-totalSupply}."},"transfer(address,uint256)":{"details":"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."},"transferFrom(address,address,uint256)":{"details":"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_1134":{"entryPoint":null,"id":1134,"parameterSlots":0,"returnSlots":0},"@_addMinter_1196":{"entryPoint":31,"id":1196,"parameterSlots":1,"returnSlots":0},"@_msgSender_457":{"entryPoint":null,"id":457,"parameterSlots":0,"returnSlots":1},"@add_1248":{"entryPoint":110,"id":1248,"parameterSlots":2,"returnSlots":0},"@has_1301":{"entryPoint":239,"id":1301,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0f76c3a3e97a37fcdff532c2741c10933ebf2b769d5475388e30ae4f7155f13a__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9d214fa89563f4e6456a3929327e54500ea1cde2c0ba9fb2035ec106190d682f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:774:17","statements":[{"nodeType":"YulBlock","src":"6:3:17","statements":[]},{"body":{"nodeType":"YulBlock","src":"188:181:17","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"205:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"216:2:17","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"198:6:17"},"nodeType":"YulFunctionCall","src":"198:21:17"},"nodeType":"YulExpressionStatement","src":"198:21:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"239:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"250:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"235:3:17"},"nodeType":"YulFunctionCall","src":"235:18:17"},{"kind":"number","nodeType":"YulLiteral","src":"255:2:17","type":"","value":"31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"228:6:17"},"nodeType":"YulFunctionCall","src":"228:30:17"},"nodeType":"YulExpressionStatement","src":"228:30:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"278:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"289:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"274:3:17"},"nodeType":"YulFunctionCall","src":"274:18:17"},{"hexValue":"526f6c65733a206163636f756e7420616c72656164792068617320726f6c65","kind":"string","nodeType":"YulLiteral","src":"294:33:17","type":"","value":"Roles: account already has role"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"267:6:17"},"nodeType":"YulFunctionCall","src":"267:61:17"},"nodeType":"YulExpressionStatement","src":"267:61:17"},{"nodeType":"YulAssignment","src":"337:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"349:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"360:2:17","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"345:3:17"},"nodeType":"YulFunctionCall","src":"345:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"337:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_0f76c3a3e97a37fcdff532c2741c10933ebf2b769d5475388e30ae4f7155f13a__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"165:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"179:4:17","type":""}],"src":"14:355:17"},{"body":{"nodeType":"YulBlock","src":"548:224:17","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"565:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"576:2:17","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"558:6:17"},"nodeType":"YulFunctionCall","src":"558:21:17"},"nodeType":"YulExpressionStatement","src":"558:21:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"599:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"610:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"595:3:17"},"nodeType":"YulFunctionCall","src":"595:18:17"},{"kind":"number","nodeType":"YulLiteral","src":"615:2:17","type":"","value":"34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"588:6:17"},"nodeType":"YulFunctionCall","src":"588:30:17"},"nodeType":"YulExpressionStatement","src":"588:30:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"638:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"649:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"634:3:17"},"nodeType":"YulFunctionCall","src":"634:18:17"},{"hexValue":"526f6c65733a206163636f756e7420697320746865207a65726f206164647265","kind":"string","nodeType":"YulLiteral","src":"654:34:17","type":"","value":"Roles: account is the zero addre"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"627:6:17"},"nodeType":"YulFunctionCall","src":"627:62:17"},"nodeType":"YulExpressionStatement","src":"627:62:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"709:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"720:2:17","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"705:3:17"},"nodeType":"YulFunctionCall","src":"705:18:17"},{"hexValue":"7373","kind":"string","nodeType":"YulLiteral","src":"725:4:17","type":"","value":"ss"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"698:6:17"},"nodeType":"YulFunctionCall","src":"698:32:17"},"nodeType":"YulExpressionStatement","src":"698:32:17"},{"nodeType":"YulAssignment","src":"739:27:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"751:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"762:3:17","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"747:3:17"},"nodeType":"YulFunctionCall","src":"747:19:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"739:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_9d214fa89563f4e6456a3929327e54500ea1cde2c0ba9fb2035ec106190d682f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"525:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"539:4:17","type":""}],"src":"374:398:17"}]},"contents":"{\n    { }\n    function abi_encode_tuple_t_stringliteral_0f76c3a3e97a37fcdff532c2741c10933ebf2b769d5475388e30ae4f7155f13a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"Roles: account already has role\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9d214fa89563f4e6456a3929327e54500ea1cde2c0ba9fb2035ec106190d682f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"Roles: account is the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n}","id":17,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"608060405234801561001057600080fd5b5061001a3361001f565b610172565b61003781600361006e60201b6103791790919060201c565b6040516001600160a01b038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b61007882826100ef565b156100ca5760405162461bcd60e51b815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c650060448201526064015b60405180910390fd5b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b60006001600160a01b0382166101525760405162461bcd60e51b815260206004820152602260248201527f526f6c65733a206163636f756e7420697320746865207a65726f206164647265604482015261737360f01b60648201526084016100c1565b506001600160a01b03166000908152602091909152604090205460ff1690565b610bf7806101816000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c8063983b2d5611610071578063983b2d5614610155578063986502751461016a578063a457c2d714610172578063a9059cbb14610185578063aa271e1a14610198578063dd62ed3e146101ab57600080fd5b8063095ea7b3146100b957806318160ddd146100e157806323b872dd146100f3578063395093511461010657806340c10f191461011957806370a082311461012c575b600080fd5b6100cc6100c73660046109c0565b6101e4565b60405190151581526020015b60405180910390f35b6002545b6040519081526020016100d8565b6100cc6101013660046109ea565b6101fb565b6100cc6101143660046109c0565b610264565b6100cc6101273660046109c0565b61029a565b6100e561013a366004610a26565b6001600160a01b031660009081526020819052604090205490565b610168610163366004610a26565b6102d4565b005b610168610305565b6100cc6101803660046109c0565b610310565b6100cc6101933660046109c0565b61035f565b6100cc6101a6366004610a26565b61036c565b6100e56101b9366004610a41565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b60006101f13384846103f5565b5060015b92915050565b600061020884848461051a565b61025a843361025585604051806060016040528060288152602001610b75602891396001600160a01b038a166000908152600160209081526040808320338452909152902054919061069d565b6103f5565b5060019392505050565b3360008181526001602090815260408083206001600160a01b038716845290915281205490916101f191859061025590866106d7565b60006102a53361036c565b6102ca5760405162461bcd60e51b81526004016102c190610a74565b60405180910390fd5b6101f1838361073d565b6102dd3361036c565b6102f95760405162461bcd60e51b81526004016102c190610a74565b6103028161081b565b50565b61030e3361085d565b565b60006101f1338461025585604051806060016040528060258152602001610b9d602591393360009081526001602090815260408083206001600160a01b038d168452909152902054919061069d565b60006101f133848461051a565b60006101f560038361089f565b610383828261089f565b156103d05760405162461bcd60e51b815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c650060448201526064016102c1565b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b6001600160a01b0383166104575760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016102c1565b6001600160a01b0382166104b85760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016102c1565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b03831661057e5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016102c1565b6001600160a01b0382166105e05760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016102c1565b61061d81604051806060016040528060268152602001610b4f602691396001600160a01b038616600090815260208190526040902054919061069d565b6001600160a01b03808516600090815260208190526040808220939093559084168152205461064c90826106d7565b6001600160a01b038381166000818152602081815260409182902094909455518481529092918616917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910161050d565b600081848411156106c15760405162461bcd60e51b81526004016102c19190610ac4565b5060006106ce8486610b28565b95945050505050565b6000806106e48385610b3b565b9050838110156107365760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f77000000000060448201526064016102c1565b9392505050565b6001600160a01b0382166107935760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016102c1565b6002546107a090826106d7565b6002556001600160a01b0382166000908152602081905260409020546107c690826106d7565b6001600160a01b038316600081815260208181526040808320949094559251848152919290917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b610826600382610379565b6040516001600160a01b038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b610868600382610922565b6040516001600160a01b038216907fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669290600090a250565b60006001600160a01b0382166109025760405162461bcd60e51b815260206004820152602260248201527f526f6c65733a206163636f756e7420697320746865207a65726f206164647265604482015261737360f01b60648201526084016102c1565b506001600160a01b03166000908152602091909152604090205460ff1690565b61092c828261089f565b6109825760405162461bcd60e51b815260206004820152602160248201527f526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c6044820152606560f81b60648201526084016102c1565b6001600160a01b0316600090815260209190915260409020805460ff19169055565b80356001600160a01b03811681146109bb57600080fd5b919050565b600080604083850312156109d357600080fd5b6109dc836109a4565b946020939093013593505050565b6000806000606084860312156109ff57600080fd5b610a08846109a4565b9250610a16602085016109a4565b9150604084013590509250925092565b600060208284031215610a3857600080fd5b610736826109a4565b60008060408385031215610a5457600080fd5b610a5d836109a4565b9150610a6b602084016109a4565b90509250929050565b60208082526030908201527f4d696e746572526f6c653a2063616c6c657220646f6573206e6f74206861766560408201526f20746865204d696e74657220726f6c6560801b606082015260800190565b600060208083528351808285015260005b81811015610af157858101830151858201604001528201610ad5565b506000604082860101526040601f19601f8301168501019250505092915050565b634e487b7160e01b600052601160045260246000fd5b818103818111156101f5576101f5610b12565b808201808211156101f5576101f5610b1256fe45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa2646970667358221220fea7ca9fe24ce0f635f4746434fe7aaf30cacc68c31d2e1a9691fd6899c1012f64736f6c63430008120033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A CALLER PUSH2 0x1F JUMP JUMPDEST PUSH2 0x172 JUMP JUMPDEST PUSH2 0x37 DUP2 PUSH1 0x3 PUSH2 0x6E PUSH1 0x20 SHL PUSH2 0x379 OR SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0x6AE172837EA30B801FBFCDD4108AA1D5BF8FF775444FD70256B44E6BF3DFC3F6 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x78 DUP3 DUP3 PUSH2 0xEF JUMP JUMPDEST ISZERO PUSH2 0xCA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526F6C65733A206163636F756E7420616C72656164792068617320726F6C6500 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x152 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526F6C65733A206163636F756E7420697320746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC1 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0xBF7 DUP1 PUSH2 0x181 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x983B2D56 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x983B2D56 EQ PUSH2 0x155 JUMPI DUP1 PUSH4 0x98650275 EQ PUSH2 0x16A JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x172 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x185 JUMPI DUP1 PUSH4 0xAA271E1A EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xB9 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xE1 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0xF3 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x106 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x119 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x12C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xCC PUSH2 0xC7 CALLDATASIZE PUSH1 0x4 PUSH2 0x9C0 JUMP JUMPDEST PUSH2 0x1E4 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xD8 JUMP JUMPDEST PUSH2 0xCC PUSH2 0x101 CALLDATASIZE PUSH1 0x4 PUSH2 0x9EA JUMP JUMPDEST PUSH2 0x1FB JUMP JUMPDEST PUSH2 0xCC PUSH2 0x114 CALLDATASIZE PUSH1 0x4 PUSH2 0x9C0 JUMP JUMPDEST PUSH2 0x264 JUMP JUMPDEST PUSH2 0xCC PUSH2 0x127 CALLDATASIZE PUSH1 0x4 PUSH2 0x9C0 JUMP JUMPDEST PUSH2 0x29A JUMP JUMPDEST PUSH2 0xE5 PUSH2 0x13A CALLDATASIZE PUSH1 0x4 PUSH2 0xA26 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x168 PUSH2 0x163 CALLDATASIZE PUSH1 0x4 PUSH2 0xA26 JUMP JUMPDEST PUSH2 0x2D4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x168 PUSH2 0x305 JUMP JUMPDEST PUSH2 0xCC PUSH2 0x180 CALLDATASIZE PUSH1 0x4 PUSH2 0x9C0 JUMP JUMPDEST PUSH2 0x310 JUMP JUMPDEST PUSH2 0xCC PUSH2 0x193 CALLDATASIZE PUSH1 0x4 PUSH2 0x9C0 JUMP JUMPDEST PUSH2 0x35F JUMP JUMPDEST PUSH2 0xCC PUSH2 0x1A6 CALLDATASIZE PUSH1 0x4 PUSH2 0xA26 JUMP JUMPDEST PUSH2 0x36C JUMP JUMPDEST PUSH2 0xE5 PUSH2 0x1B9 CALLDATASIZE PUSH1 0x4 PUSH2 0xA41 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F1 CALLER DUP5 DUP5 PUSH2 0x3F5 JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x208 DUP5 DUP5 DUP5 PUSH2 0x51A JUMP JUMPDEST PUSH2 0x25A DUP5 CALLER PUSH2 0x255 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xB75 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x69D JUMP JUMPDEST PUSH2 0x3F5 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x1F1 SWAP2 DUP6 SWAP1 PUSH2 0x255 SWAP1 DUP7 PUSH2 0x6D7 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A5 CALLER PUSH2 0x36C JUMP JUMPDEST PUSH2 0x2CA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C1 SWAP1 PUSH2 0xA74 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1F1 DUP4 DUP4 PUSH2 0x73D JUMP JUMPDEST PUSH2 0x2DD CALLER PUSH2 0x36C JUMP JUMPDEST PUSH2 0x2F9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C1 SWAP1 PUSH2 0xA74 JUMP JUMPDEST PUSH2 0x302 DUP2 PUSH2 0x81B JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x30E CALLER PUSH2 0x85D JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F1 CALLER DUP5 PUSH2 0x255 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xB9D PUSH1 0x25 SWAP2 CODECOPY CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x69D JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F1 CALLER DUP5 DUP5 PUSH2 0x51A JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F5 PUSH1 0x3 DUP4 PUSH2 0x89F JUMP JUMPDEST PUSH2 0x383 DUP3 DUP3 PUSH2 0x89F JUMP JUMPDEST ISZERO PUSH2 0x3D0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526F6C65733A206163636F756E7420616C72656164792068617320726F6C6500 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2C1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x457 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2C1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x4B8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2C1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x57E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2C1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5E0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2C1 JUMP JUMPDEST PUSH2 0x61D DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xB4F PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x69D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x64C SWAP1 DUP3 PUSH2 0x6D7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE MLOAD DUP5 DUP2 MSTORE SWAP1 SWAP3 SWAP2 DUP7 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH2 0x50D JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x6C1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C1 SWAP2 SWAP1 PUSH2 0xAC4 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x6CE DUP5 DUP7 PUSH2 0xB28 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x6E4 DUP4 DUP6 PUSH2 0xB3B JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x736 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2C1 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x793 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2C1 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x7A0 SWAP1 DUP3 PUSH2 0x6D7 JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x7C6 SWAP1 DUP3 PUSH2 0x6D7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE SWAP3 MLOAD DUP5 DUP2 MSTORE SWAP2 SWAP3 SWAP1 SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x826 PUSH1 0x3 DUP3 PUSH2 0x379 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0x6AE172837EA30B801FBFCDD4108AA1D5BF8FF775444FD70256B44E6BF3DFC3F6 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x868 PUSH1 0x3 DUP3 PUSH2 0x922 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0xE94479A9F7E1952CC78F2D6BAAB678ADC1B772D936C6583DEF489E524CB66692 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x902 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526F6C65733A206163636F756E7420697320746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2C1 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x92C DUP3 DUP3 PUSH2 0x89F JUMP JUMPDEST PUSH2 0x982 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526F6C65733A206163636F756E7420646F6573206E6F74206861766520726F6C PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x65 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2C1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x9BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x9D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9DC DUP4 PUSH2 0x9A4 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x9FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA08 DUP5 PUSH2 0x9A4 JUMP JUMPDEST SWAP3 POP PUSH2 0xA16 PUSH1 0x20 DUP6 ADD PUSH2 0x9A4 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA38 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x736 DUP3 PUSH2 0x9A4 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xA54 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA5D DUP4 PUSH2 0x9A4 JUMP JUMPDEST SWAP2 POP PUSH2 0xA6B PUSH1 0x20 DUP5 ADD PUSH2 0x9A4 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x30 SWAP1 DUP3 ADD MSTORE PUSH32 0x4D696E746572526F6C653A2063616C6C657220646F6573206E6F742068617665 PUSH1 0x40 DUP3 ADD MSTORE PUSH16 0x20746865204D696E74657220726F6C65 PUSH1 0x80 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xAF1 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0xAD5 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x1F5 JUMPI PUSH2 0x1F5 PUSH2 0xB12 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x1F5 JUMPI PUSH2 0x1F5 PUSH2 0xB12 JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x2062616C616E636545524332303A207472616E73 PUSH7 0x657220616D6F75 PUSH15 0x74206578636565647320616C6C6F77 PUSH2 0x6E63 PUSH6 0x45524332303A KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726FA2646970 PUSH7 0x7358221220FEA7 0xCA SWAP16 0xE2 0x4C 0xE0 0xF6 CALLDATALOAD DELEGATECALL PUSH21 0x6434FE7AAF30CACC68C31D2E1A9691FD6899C1012F PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ","sourceMap":"305:322:7:-:0;;;;;;;;;;;;-1:-1:-1;300:24:9;669:10:3;300::9;:24::i;:::-;305:322:7;;768:119:9;824:21;837:7;824:8;:12;;;;;;:21;;;;:::i;:::-;860:20;;-1:-1:-1;;;;;860:20:9;;;;;;;;768:119;:::o;260:175:10:-;337:18;341:4;347:7;337:3;:18::i;:::-;336:19;328:63;;;;-1:-1:-1;;;328:63:10;;216:2:17;328:63:10;;;198:21:17;255:2;235:18;;;228:30;294:33;274:18;;;267:61;345:18;;328:63:10;;;;;;;;;-1:-1:-1;;;;;401:20:10;:11;:20;;;;;;;;;;;:27;;-1:-1:-1;;401:27:10;424:4;401:27;;;260:175::o;779:200::-;851:4;-1:-1:-1;;;;;875:21:10;;867:68;;;;-1:-1:-1;;;867:68:10;;576:2:17;867:68:10;;;558:21:17;615:2;595:18;;;588:30;654:34;634:18;;;627:62;-1:-1:-1;;;705:18:17;;;698:32;747:19;;867:68:10;374:398:17;867:68:10;-1:-1:-1;;;;;;952:20:10;:11;:20;;;;;;;;;;;;;;;779:200::o;374:398:17:-;305:322:7;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_addMinter_1196":{"entryPoint":2075,"id":1196,"parameterSlots":1,"returnSlots":0},"@_approve_865":{"entryPoint":1013,"id":865,"parameterSlots":3,"returnSlots":0},"@_mint_773":{"entryPoint":1853,"id":773,"parameterSlots":2,"returnSlots":0},"@_msgSender_457":{"entryPoint":null,"id":457,"parameterSlots":0,"returnSlots":1},"@_removeMinter_1212":{"entryPoint":2141,"id":1212,"parameterSlots":1,"returnSlots":0},"@_transfer_727":{"entryPoint":1306,"id":727,"parameterSlots":3,"returnSlots":0},"@addMinter_1171":{"entryPoint":724,"id":1171,"parameterSlots":1,"returnSlots":0},"@add_1248":{"entryPoint":889,"id":1248,"parameterSlots":2,"returnSlots":0},"@add_1331":{"entryPoint":1751,"id":1331,"parameterSlots":2,"returnSlots":1},"@allowance_553":{"entryPoint":null,"id":553,"parameterSlots":2,"returnSlots":1},"@approve_573":{"entryPoint":484,"id":573,"parameterSlots":2,"returnSlots":1},"@balanceOf_516":{"entryPoint":null,"id":516,"parameterSlots":1,"returnSlots":1},"@decreaseAllowance_667":{"entryPoint":784,"id":667,"parameterSlots":2,"returnSlots":1},"@has_1301":{"entryPoint":2207,"id":1301,"parameterSlots":2,"returnSlots":1},"@increaseAllowance_638":{"entryPoint":612,"id":638,"parameterSlots":2,"returnSlots":1},"@isMinter_1159":{"entryPoint":876,"id":1159,"parameterSlots":1,"returnSlots":1},"@mint_1025":{"entryPoint":666,"id":1025,"parameterSlots":2,"returnSlots":1},"@remove_1274":{"entryPoint":2338,"id":1274,"parameterSlots":2,"returnSlots":0},"@renounceMinter_1180":{"entryPoint":773,"id":1180,"parameterSlots":0,"returnSlots":0},"@sub_1376":{"entryPoint":1693,"id":1376,"parameterSlots":3,"returnSlots":1},"@totalSupply_503":{"entryPoint":null,"id":503,"parameterSlots":0,"returnSlots":1},"@transferFrom_610":{"entryPoint":507,"id":610,"parameterSlots":3,"returnSlots":1},"@transfer_536":{"entryPoint":863,"id":536,"parameterSlots":2,"returnSlots":1},"abi_decode_address":{"entryPoint":2468,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":2598,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":2625,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":2538,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":2496,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":2756,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0f76c3a3e97a37fcdff532c2741c10933ebf2b769d5475388e30ae4f7155f13a__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_79ecb50133735b20228dea9d08fe36a462bbc1350f591a146908848db91104cd__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":2676,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_7bd893145ac435f339bb7c288622d270324b7033b011f693aca172f5cbc3c257__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9d214fa89563f4e6456a3929327e54500ea1cde2c0ba9fb2035ec106190d682f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":2875,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":2856,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":2834,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:6475:17","statements":[{"nodeType":"YulBlock","src":"6:3:17","statements":[]},{"body":{"nodeType":"YulBlock","src":"63:124:17","statements":[{"nodeType":"YulAssignment","src":"73:29:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"95:6:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"82:12:17"},"nodeType":"YulFunctionCall","src":"82:20:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"73:5:17"}]},{"body":{"nodeType":"YulBlock","src":"165:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"174:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"177:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"167:6:17"},"nodeType":"YulFunctionCall","src":"167:12:17"},"nodeType":"YulExpressionStatement","src":"167:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"124:5:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"135:5:17"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"150:3:17","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"155:1:17","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"146:3:17"},"nodeType":"YulFunctionCall","src":"146:11:17"},{"kind":"number","nodeType":"YulLiteral","src":"159:1:17","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"142:3:17"},"nodeType":"YulFunctionCall","src":"142:19:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"131:3:17"},"nodeType":"YulFunctionCall","src":"131:31:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"121:2:17"},"nodeType":"YulFunctionCall","src":"121:42:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"114:6:17"},"nodeType":"YulFunctionCall","src":"114:50:17"},"nodeType":"YulIf","src":"111:70:17"}]},"name":"abi_decode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"42:6:17","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"53:5:17","type":""}],"src":"14:173:17"},{"body":{"nodeType":"YulBlock","src":"279:167:17","statements":[{"body":{"nodeType":"YulBlock","src":"325:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"334:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"337:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"327:6:17"},"nodeType":"YulFunctionCall","src":"327:12:17"},"nodeType":"YulExpressionStatement","src":"327:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"300:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"309:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"296:3:17"},"nodeType":"YulFunctionCall","src":"296:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"321:2:17","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"292:3:17"},"nodeType":"YulFunctionCall","src":"292:32:17"},"nodeType":"YulIf","src":"289:52:17"},{"nodeType":"YulAssignment","src":"350:39:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"379:9:17"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"360:18:17"},"nodeType":"YulFunctionCall","src":"360:29:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"350:6:17"}]},{"nodeType":"YulAssignment","src":"398:42:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"425:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"436:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"421:3:17"},"nodeType":"YulFunctionCall","src":"421:18:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"408:12:17"},"nodeType":"YulFunctionCall","src":"408:32:17"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"398:6:17"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"237:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"248:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"260:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"268:6:17","type":""}],"src":"192:254:17"},{"body":{"nodeType":"YulBlock","src":"546:92:17","statements":[{"nodeType":"YulAssignment","src":"556:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"568:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"579:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"564:3:17"},"nodeType":"YulFunctionCall","src":"564:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"556:4:17"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"598:9:17"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"623:6:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"616:6:17"},"nodeType":"YulFunctionCall","src":"616:14:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"609:6:17"},"nodeType":"YulFunctionCall","src":"609:22:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"591:6:17"},"nodeType":"YulFunctionCall","src":"591:41:17"},"nodeType":"YulExpressionStatement","src":"591:41:17"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"515:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"526:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"537:4:17","type":""}],"src":"451:187:17"},{"body":{"nodeType":"YulBlock","src":"744:76:17","statements":[{"nodeType":"YulAssignment","src":"754:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"766:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"777:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"762:3:17"},"nodeType":"YulFunctionCall","src":"762:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"754:4:17"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"796:9:17"},{"name":"value0","nodeType":"YulIdentifier","src":"807:6:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"789:6:17"},"nodeType":"YulFunctionCall","src":"789:25:17"},"nodeType":"YulExpressionStatement","src":"789:25:17"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"713:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"724:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"735:4:17","type":""}],"src":"643:177:17"},{"body":{"nodeType":"YulBlock","src":"929:224:17","statements":[{"body":{"nodeType":"YulBlock","src":"975:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"984:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"987:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"977:6:17"},"nodeType":"YulFunctionCall","src":"977:12:17"},"nodeType":"YulExpressionStatement","src":"977:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"950:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"959:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"946:3:17"},"nodeType":"YulFunctionCall","src":"946:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"971:2:17","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"942:3:17"},"nodeType":"YulFunctionCall","src":"942:32:17"},"nodeType":"YulIf","src":"939:52:17"},{"nodeType":"YulAssignment","src":"1000:39:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1029:9:17"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1010:18:17"},"nodeType":"YulFunctionCall","src":"1010:29:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1000:6:17"}]},{"nodeType":"YulAssignment","src":"1048:48:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1081:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"1092:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1077:3:17"},"nodeType":"YulFunctionCall","src":"1077:18:17"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1058:18:17"},"nodeType":"YulFunctionCall","src":"1058:38:17"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1048:6:17"}]},{"nodeType":"YulAssignment","src":"1105:42:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1132:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"1143:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1128:3:17"},"nodeType":"YulFunctionCall","src":"1128:18:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1115:12:17"},"nodeType":"YulFunctionCall","src":"1115:32:17"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1105:6:17"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"879:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"890:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"902:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"910:6:17","type":""},{"name":"value2","nodeType":"YulTypedName","src":"918:6:17","type":""}],"src":"825:328:17"},{"body":{"nodeType":"YulBlock","src":"1228:116:17","statements":[{"body":{"nodeType":"YulBlock","src":"1274:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1283:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1286:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1276:6:17"},"nodeType":"YulFunctionCall","src":"1276:12:17"},"nodeType":"YulExpressionStatement","src":"1276:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1249:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"1258:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1245:3:17"},"nodeType":"YulFunctionCall","src":"1245:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"1270:2:17","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1241:3:17"},"nodeType":"YulFunctionCall","src":"1241:32:17"},"nodeType":"YulIf","src":"1238:52:17"},{"nodeType":"YulAssignment","src":"1299:39:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1328:9:17"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1309:18:17"},"nodeType":"YulFunctionCall","src":"1309:29:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1299:6:17"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1194:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1205:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1217:6:17","type":""}],"src":"1158:186:17"},{"body":{"nodeType":"YulBlock","src":"1436:173:17","statements":[{"body":{"nodeType":"YulBlock","src":"1482:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1491:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1494:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1484:6:17"},"nodeType":"YulFunctionCall","src":"1484:12:17"},"nodeType":"YulExpressionStatement","src":"1484:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1457:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"1466:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1453:3:17"},"nodeType":"YulFunctionCall","src":"1453:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"1478:2:17","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1449:3:17"},"nodeType":"YulFunctionCall","src":"1449:32:17"},"nodeType":"YulIf","src":"1446:52:17"},{"nodeType":"YulAssignment","src":"1507:39:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1536:9:17"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1517:18:17"},"nodeType":"YulFunctionCall","src":"1517:29:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1507:6:17"}]},{"nodeType":"YulAssignment","src":"1555:48:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1588:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"1599:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1584:3:17"},"nodeType":"YulFunctionCall","src":"1584:18:17"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1565:18:17"},"nodeType":"YulFunctionCall","src":"1565:38:17"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1555:6:17"}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1394:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1405:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1417:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1425:6:17","type":""}],"src":"1349:260:17"},{"body":{"nodeType":"YulBlock","src":"1788:238:17","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1805:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"1816:2:17","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1798:6:17"},"nodeType":"YulFunctionCall","src":"1798:21:17"},"nodeType":"YulExpressionStatement","src":"1798:21:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1839:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"1850:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1835:3:17"},"nodeType":"YulFunctionCall","src":"1835:18:17"},{"kind":"number","nodeType":"YulLiteral","src":"1855:2:17","type":"","value":"48"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1828:6:17"},"nodeType":"YulFunctionCall","src":"1828:30:17"},"nodeType":"YulExpressionStatement","src":"1828:30:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1878:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"1889:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1874:3:17"},"nodeType":"YulFunctionCall","src":"1874:18:17"},{"hexValue":"4d696e746572526f6c653a2063616c6c657220646f6573206e6f742068617665","kind":"string","nodeType":"YulLiteral","src":"1894:34:17","type":"","value":"MinterRole: caller does not have"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1867:6:17"},"nodeType":"YulFunctionCall","src":"1867:62:17"},"nodeType":"YulExpressionStatement","src":"1867:62:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1949:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"1960:2:17","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1945:3:17"},"nodeType":"YulFunctionCall","src":"1945:18:17"},{"hexValue":"20746865204d696e74657220726f6c65","kind":"string","nodeType":"YulLiteral","src":"1965:18:17","type":"","value":" the Minter role"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1938:6:17"},"nodeType":"YulFunctionCall","src":"1938:46:17"},"nodeType":"YulExpressionStatement","src":"1938:46:17"},{"nodeType":"YulAssignment","src":"1993:27:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2005:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"2016:3:17","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2001:3:17"},"nodeType":"YulFunctionCall","src":"2001:19:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1993:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_79ecb50133735b20228dea9d08fe36a462bbc1350f591a146908848db91104cd__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1765:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1779:4:17","type":""}],"src":"1614:412:17"},{"body":{"nodeType":"YulBlock","src":"2205:181:17","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2222:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"2233:2:17","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2215:6:17"},"nodeType":"YulFunctionCall","src":"2215:21:17"},"nodeType":"YulExpressionStatement","src":"2215:21:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2256:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"2267:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2252:3:17"},"nodeType":"YulFunctionCall","src":"2252:18:17"},{"kind":"number","nodeType":"YulLiteral","src":"2272:2:17","type":"","value":"31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2245:6:17"},"nodeType":"YulFunctionCall","src":"2245:30:17"},"nodeType":"YulExpressionStatement","src":"2245:30:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2295:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"2306:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2291:3:17"},"nodeType":"YulFunctionCall","src":"2291:18:17"},{"hexValue":"526f6c65733a206163636f756e7420616c72656164792068617320726f6c65","kind":"string","nodeType":"YulLiteral","src":"2311:33:17","type":"","value":"Roles: account already has role"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2284:6:17"},"nodeType":"YulFunctionCall","src":"2284:61:17"},"nodeType":"YulExpressionStatement","src":"2284:61:17"},{"nodeType":"YulAssignment","src":"2354:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2366:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"2377:2:17","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2362:3:17"},"nodeType":"YulFunctionCall","src":"2362:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2354:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_0f76c3a3e97a37fcdff532c2741c10933ebf2b769d5475388e30ae4f7155f13a__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2182:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2196:4:17","type":""}],"src":"2031:355:17"},{"body":{"nodeType":"YulBlock","src":"2565:226:17","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2582:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"2593:2:17","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2575:6:17"},"nodeType":"YulFunctionCall","src":"2575:21:17"},"nodeType":"YulExpressionStatement","src":"2575:21:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2616:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"2627:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2612:3:17"},"nodeType":"YulFunctionCall","src":"2612:18:17"},{"kind":"number","nodeType":"YulLiteral","src":"2632:2:17","type":"","value":"36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2605:6:17"},"nodeType":"YulFunctionCall","src":"2605:30:17"},"nodeType":"YulExpressionStatement","src":"2605:30:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2655:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"2666:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2651:3:17"},"nodeType":"YulFunctionCall","src":"2651:18:17"},{"hexValue":"45524332303a20617070726f76652066726f6d20746865207a65726f20616464","kind":"string","nodeType":"YulLiteral","src":"2671:34:17","type":"","value":"ERC20: approve from the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2644:6:17"},"nodeType":"YulFunctionCall","src":"2644:62:17"},"nodeType":"YulExpressionStatement","src":"2644:62:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2726:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"2737:2:17","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2722:3:17"},"nodeType":"YulFunctionCall","src":"2722:18:17"},{"hexValue":"72657373","kind":"string","nodeType":"YulLiteral","src":"2742:6:17","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2715:6:17"},"nodeType":"YulFunctionCall","src":"2715:34:17"},"nodeType":"YulExpressionStatement","src":"2715:34:17"},{"nodeType":"YulAssignment","src":"2758:27:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2770:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"2781:3:17","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2766:3:17"},"nodeType":"YulFunctionCall","src":"2766:19:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2758:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2542:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2556:4:17","type":""}],"src":"2391:400:17"},{"body":{"nodeType":"YulBlock","src":"2970:224:17","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2987:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"2998:2:17","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2980:6:17"},"nodeType":"YulFunctionCall","src":"2980:21:17"},"nodeType":"YulExpressionStatement","src":"2980:21:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3021:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"3032:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3017:3:17"},"nodeType":"YulFunctionCall","src":"3017:18:17"},{"kind":"number","nodeType":"YulLiteral","src":"3037:2:17","type":"","value":"34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3010:6:17"},"nodeType":"YulFunctionCall","src":"3010:30:17"},"nodeType":"YulExpressionStatement","src":"3010:30:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3060:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"3071:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3056:3:17"},"nodeType":"YulFunctionCall","src":"3056:18:17"},{"hexValue":"45524332303a20617070726f766520746f20746865207a65726f206164647265","kind":"string","nodeType":"YulLiteral","src":"3076:34:17","type":"","value":"ERC20: approve to the zero addre"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3049:6:17"},"nodeType":"YulFunctionCall","src":"3049:62:17"},"nodeType":"YulExpressionStatement","src":"3049:62:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3131:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"3142:2:17","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3127:3:17"},"nodeType":"YulFunctionCall","src":"3127:18:17"},{"hexValue":"7373","kind":"string","nodeType":"YulLiteral","src":"3147:4:17","type":"","value":"ss"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3120:6:17"},"nodeType":"YulFunctionCall","src":"3120:32:17"},"nodeType":"YulExpressionStatement","src":"3120:32:17"},{"nodeType":"YulAssignment","src":"3161:27:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3173:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"3184:3:17","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3169:3:17"},"nodeType":"YulFunctionCall","src":"3169:19:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3161:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2947:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2961:4:17","type":""}],"src":"2796:398:17"},{"body":{"nodeType":"YulBlock","src":"3373:227:17","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3390:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"3401:2:17","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3383:6:17"},"nodeType":"YulFunctionCall","src":"3383:21:17"},"nodeType":"YulExpressionStatement","src":"3383:21:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3424:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"3435:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3420:3:17"},"nodeType":"YulFunctionCall","src":"3420:18:17"},{"kind":"number","nodeType":"YulLiteral","src":"3440:2:17","type":"","value":"37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3413:6:17"},"nodeType":"YulFunctionCall","src":"3413:30:17"},"nodeType":"YulExpressionStatement","src":"3413:30:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3463:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"3474:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3459:3:17"},"nodeType":"YulFunctionCall","src":"3459:18:17"},{"hexValue":"45524332303a207472616e736665722066726f6d20746865207a65726f206164","kind":"string","nodeType":"YulLiteral","src":"3479:34:17","type":"","value":"ERC20: transfer from the zero ad"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3452:6:17"},"nodeType":"YulFunctionCall","src":"3452:62:17"},"nodeType":"YulExpressionStatement","src":"3452:62:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3534:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"3545:2:17","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3530:3:17"},"nodeType":"YulFunctionCall","src":"3530:18:17"},{"hexValue":"6472657373","kind":"string","nodeType":"YulLiteral","src":"3550:7:17","type":"","value":"dress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3523:6:17"},"nodeType":"YulFunctionCall","src":"3523:35:17"},"nodeType":"YulExpressionStatement","src":"3523:35:17"},{"nodeType":"YulAssignment","src":"3567:27:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3579:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"3590:3:17","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3575:3:17"},"nodeType":"YulFunctionCall","src":"3575:19:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3567:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3350:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3364:4:17","type":""}],"src":"3199:401:17"},{"body":{"nodeType":"YulBlock","src":"3779:225:17","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3796:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"3807:2:17","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3789:6:17"},"nodeType":"YulFunctionCall","src":"3789:21:17"},"nodeType":"YulExpressionStatement","src":"3789:21:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3830:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"3841:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3826:3:17"},"nodeType":"YulFunctionCall","src":"3826:18:17"},{"kind":"number","nodeType":"YulLiteral","src":"3846:2:17","type":"","value":"35"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3819:6:17"},"nodeType":"YulFunctionCall","src":"3819:30:17"},"nodeType":"YulExpressionStatement","src":"3819:30:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3869:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"3880:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3865:3:17"},"nodeType":"YulFunctionCall","src":"3865:18:17"},{"hexValue":"45524332303a207472616e7366657220746f20746865207a65726f2061646472","kind":"string","nodeType":"YulLiteral","src":"3885:34:17","type":"","value":"ERC20: transfer to the zero addr"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3858:6:17"},"nodeType":"YulFunctionCall","src":"3858:62:17"},"nodeType":"YulExpressionStatement","src":"3858:62:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3940:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"3951:2:17","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3936:3:17"},"nodeType":"YulFunctionCall","src":"3936:18:17"},{"hexValue":"657373","kind":"string","nodeType":"YulLiteral","src":"3956:5:17","type":"","value":"ess"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3929:6:17"},"nodeType":"YulFunctionCall","src":"3929:33:17"},"nodeType":"YulExpressionStatement","src":"3929:33:17"},{"nodeType":"YulAssignment","src":"3971:27:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3983:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"3994:3:17","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3979:3:17"},"nodeType":"YulFunctionCall","src":"3979:19:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3971:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3756:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3770:4:17","type":""}],"src":"3605:399:17"},{"body":{"nodeType":"YulBlock","src":"4130:427:17","statements":[{"nodeType":"YulVariableDeclaration","src":"4140:12:17","value":{"kind":"number","nodeType":"YulLiteral","src":"4150:2:17","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"4144:2:17","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4168:9:17"},{"name":"_1","nodeType":"YulIdentifier","src":"4179:2:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4161:6:17"},"nodeType":"YulFunctionCall","src":"4161:21:17"},"nodeType":"YulExpressionStatement","src":"4161:21:17"},{"nodeType":"YulVariableDeclaration","src":"4191:27:17","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4211:6:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4205:5:17"},"nodeType":"YulFunctionCall","src":"4205:13:17"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"4195:6:17","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4238:9:17"},{"name":"_1","nodeType":"YulIdentifier","src":"4249:2:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4234:3:17"},"nodeType":"YulFunctionCall","src":"4234:18:17"},{"name":"length","nodeType":"YulIdentifier","src":"4254:6:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4227:6:17"},"nodeType":"YulFunctionCall","src":"4227:34:17"},"nodeType":"YulExpressionStatement","src":"4227:34:17"},{"nodeType":"YulVariableDeclaration","src":"4270:10:17","value":{"kind":"number","nodeType":"YulLiteral","src":"4279:1:17","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"4274:1:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"4339:90:17","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4368:9:17"},{"name":"i","nodeType":"YulIdentifier","src":"4379:1:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4364:3:17"},"nodeType":"YulFunctionCall","src":"4364:17:17"},{"kind":"number","nodeType":"YulLiteral","src":"4383:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4360:3:17"},"nodeType":"YulFunctionCall","src":"4360:26:17"},{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4402:6:17"},{"name":"i","nodeType":"YulIdentifier","src":"4410:1:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4398:3:17"},"nodeType":"YulFunctionCall","src":"4398:14:17"},{"name":"_1","nodeType":"YulIdentifier","src":"4414:2:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4394:3:17"},"nodeType":"YulFunctionCall","src":"4394:23:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4388:5:17"},"nodeType":"YulFunctionCall","src":"4388:30:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4353:6:17"},"nodeType":"YulFunctionCall","src":"4353:66:17"},"nodeType":"YulExpressionStatement","src":"4353:66:17"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4300:1:17"},{"name":"length","nodeType":"YulIdentifier","src":"4303:6:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4297:2:17"},"nodeType":"YulFunctionCall","src":"4297:13:17"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"4311:19:17","statements":[{"nodeType":"YulAssignment","src":"4313:15:17","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4322:1:17"},{"name":"_1","nodeType":"YulIdentifier","src":"4325:2:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4318:3:17"},"nodeType":"YulFunctionCall","src":"4318:10:17"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"4313:1:17"}]}]},"pre":{"nodeType":"YulBlock","src":"4293:3:17","statements":[]},"src":"4289:140:17"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4453:9:17"},{"name":"length","nodeType":"YulIdentifier","src":"4464:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4449:3:17"},"nodeType":"YulFunctionCall","src":"4449:22:17"},{"kind":"number","nodeType":"YulLiteral","src":"4473:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4445:3:17"},"nodeType":"YulFunctionCall","src":"4445:31:17"},{"kind":"number","nodeType":"YulLiteral","src":"4478:1:17","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4438:6:17"},"nodeType":"YulFunctionCall","src":"4438:42:17"},"nodeType":"YulExpressionStatement","src":"4438:42:17"},{"nodeType":"YulAssignment","src":"4489:62:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4505:9:17"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4524:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"4532:2:17","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4520:3:17"},"nodeType":"YulFunctionCall","src":"4520:15:17"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4541:2:17","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4537:3:17"},"nodeType":"YulFunctionCall","src":"4537:7:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4516:3:17"},"nodeType":"YulFunctionCall","src":"4516:29:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4501:3:17"},"nodeType":"YulFunctionCall","src":"4501:45:17"},{"kind":"number","nodeType":"YulLiteral","src":"4548:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4497:3:17"},"nodeType":"YulFunctionCall","src":"4497:54:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4489:4:17"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4099:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4110:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4121:4:17","type":""}],"src":"4009:548:17"},{"body":{"nodeType":"YulBlock","src":"4594:95:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4611:1:17","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4618:3:17","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"4623:10:17","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4614:3:17"},"nodeType":"YulFunctionCall","src":"4614:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4604:6:17"},"nodeType":"YulFunctionCall","src":"4604:31:17"},"nodeType":"YulExpressionStatement","src":"4604:31:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4651:1:17","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"4654:4:17","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4644:6:17"},"nodeType":"YulFunctionCall","src":"4644:15:17"},"nodeType":"YulExpressionStatement","src":"4644:15:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4675:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4678:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4668:6:17"},"nodeType":"YulFunctionCall","src":"4668:15:17"},"nodeType":"YulExpressionStatement","src":"4668:15:17"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"4562:127:17"},{"body":{"nodeType":"YulBlock","src":"4743:79:17","statements":[{"nodeType":"YulAssignment","src":"4753:17:17","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"4765:1:17"},{"name":"y","nodeType":"YulIdentifier","src":"4768:1:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4761:3:17"},"nodeType":"YulFunctionCall","src":"4761:9:17"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"4753:4:17"}]},{"body":{"nodeType":"YulBlock","src":"4794:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"4796:16:17"},"nodeType":"YulFunctionCall","src":"4796:18:17"},"nodeType":"YulExpressionStatement","src":"4796:18:17"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"4785:4:17"},{"name":"x","nodeType":"YulIdentifier","src":"4791:1:17"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4782:2:17"},"nodeType":"YulFunctionCall","src":"4782:11:17"},"nodeType":"YulIf","src":"4779:37:17"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"4725:1:17","type":""},{"name":"y","nodeType":"YulTypedName","src":"4728:1:17","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"4734:4:17","type":""}],"src":"4694:128:17"},{"body":{"nodeType":"YulBlock","src":"4875:77:17","statements":[{"nodeType":"YulAssignment","src":"4885:16:17","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"4896:1:17"},{"name":"y","nodeType":"YulIdentifier","src":"4899:1:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4892:3:17"},"nodeType":"YulFunctionCall","src":"4892:9:17"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"4885:3:17"}]},{"body":{"nodeType":"YulBlock","src":"4924:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"4926:16:17"},"nodeType":"YulFunctionCall","src":"4926:18:17"},"nodeType":"YulExpressionStatement","src":"4926:18:17"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"4916:1:17"},{"name":"sum","nodeType":"YulIdentifier","src":"4919:3:17"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4913:2:17"},"nodeType":"YulFunctionCall","src":"4913:10:17"},"nodeType":"YulIf","src":"4910:36:17"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"4858:1:17","type":""},{"name":"y","nodeType":"YulTypedName","src":"4861:1:17","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"4867:3:17","type":""}],"src":"4827:125:17"},{"body":{"nodeType":"YulBlock","src":"5131:177:17","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5148:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"5159:2:17","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5141:6:17"},"nodeType":"YulFunctionCall","src":"5141:21:17"},"nodeType":"YulExpressionStatement","src":"5141:21:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5182:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"5193:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5178:3:17"},"nodeType":"YulFunctionCall","src":"5178:18:17"},{"kind":"number","nodeType":"YulLiteral","src":"5198:2:17","type":"","value":"27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5171:6:17"},"nodeType":"YulFunctionCall","src":"5171:30:17"},"nodeType":"YulExpressionStatement","src":"5171:30:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5221:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"5232:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5217:3:17"},"nodeType":"YulFunctionCall","src":"5217:18:17"},{"hexValue":"536166654d6174683a206164646974696f6e206f766572666c6f77","kind":"string","nodeType":"YulLiteral","src":"5237:29:17","type":"","value":"SafeMath: addition overflow"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5210:6:17"},"nodeType":"YulFunctionCall","src":"5210:57:17"},"nodeType":"YulExpressionStatement","src":"5210:57:17"},{"nodeType":"YulAssignment","src":"5276:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5288:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"5299:2:17","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5284:3:17"},"nodeType":"YulFunctionCall","src":"5284:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5276:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5108:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5122:4:17","type":""}],"src":"4957:351:17"},{"body":{"nodeType":"YulBlock","src":"5487:181:17","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5504:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"5515:2:17","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5497:6:17"},"nodeType":"YulFunctionCall","src":"5497:21:17"},"nodeType":"YulExpressionStatement","src":"5497:21:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5538:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"5549:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5534:3:17"},"nodeType":"YulFunctionCall","src":"5534:18:17"},{"kind":"number","nodeType":"YulLiteral","src":"5554:2:17","type":"","value":"31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5527:6:17"},"nodeType":"YulFunctionCall","src":"5527:30:17"},"nodeType":"YulExpressionStatement","src":"5527:30:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5577:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"5588:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5573:3:17"},"nodeType":"YulFunctionCall","src":"5573:18:17"},{"hexValue":"45524332303a206d696e7420746f20746865207a65726f2061646472657373","kind":"string","nodeType":"YulLiteral","src":"5593:33:17","type":"","value":"ERC20: mint to the zero address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5566:6:17"},"nodeType":"YulFunctionCall","src":"5566:61:17"},"nodeType":"YulExpressionStatement","src":"5566:61:17"},{"nodeType":"YulAssignment","src":"5636:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5648:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"5659:2:17","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5644:3:17"},"nodeType":"YulFunctionCall","src":"5644:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5636:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5464:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5478:4:17","type":""}],"src":"5313:355:17"},{"body":{"nodeType":"YulBlock","src":"5847:224:17","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5864:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"5875:2:17","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5857:6:17"},"nodeType":"YulFunctionCall","src":"5857:21:17"},"nodeType":"YulExpressionStatement","src":"5857:21:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5898:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"5909:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5894:3:17"},"nodeType":"YulFunctionCall","src":"5894:18:17"},{"kind":"number","nodeType":"YulLiteral","src":"5914:2:17","type":"","value":"34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5887:6:17"},"nodeType":"YulFunctionCall","src":"5887:30:17"},"nodeType":"YulExpressionStatement","src":"5887:30:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5937:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"5948:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5933:3:17"},"nodeType":"YulFunctionCall","src":"5933:18:17"},{"hexValue":"526f6c65733a206163636f756e7420697320746865207a65726f206164647265","kind":"string","nodeType":"YulLiteral","src":"5953:34:17","type":"","value":"Roles: account is the zero addre"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5926:6:17"},"nodeType":"YulFunctionCall","src":"5926:62:17"},"nodeType":"YulExpressionStatement","src":"5926:62:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6008:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"6019:2:17","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6004:3:17"},"nodeType":"YulFunctionCall","src":"6004:18:17"},{"hexValue":"7373","kind":"string","nodeType":"YulLiteral","src":"6024:4:17","type":"","value":"ss"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5997:6:17"},"nodeType":"YulFunctionCall","src":"5997:32:17"},"nodeType":"YulExpressionStatement","src":"5997:32:17"},{"nodeType":"YulAssignment","src":"6038:27:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6050:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"6061:3:17","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6046:3:17"},"nodeType":"YulFunctionCall","src":"6046:19:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6038:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_9d214fa89563f4e6456a3929327e54500ea1cde2c0ba9fb2035ec106190d682f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5824:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5838:4:17","type":""}],"src":"5673:398:17"},{"body":{"nodeType":"YulBlock","src":"6250:223:17","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6267:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"6278:2:17","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6260:6:17"},"nodeType":"YulFunctionCall","src":"6260:21:17"},"nodeType":"YulExpressionStatement","src":"6260:21:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6301:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"6312:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6297:3:17"},"nodeType":"YulFunctionCall","src":"6297:18:17"},{"kind":"number","nodeType":"YulLiteral","src":"6317:2:17","type":"","value":"33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6290:6:17"},"nodeType":"YulFunctionCall","src":"6290:30:17"},"nodeType":"YulExpressionStatement","src":"6290:30:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6340:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"6351:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6336:3:17"},"nodeType":"YulFunctionCall","src":"6336:18:17"},{"hexValue":"526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c","kind":"string","nodeType":"YulLiteral","src":"6356:34:17","type":"","value":"Roles: account does not have rol"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6329:6:17"},"nodeType":"YulFunctionCall","src":"6329:62:17"},"nodeType":"YulExpressionStatement","src":"6329:62:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6411:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"6422:2:17","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6407:3:17"},"nodeType":"YulFunctionCall","src":"6407:18:17"},{"hexValue":"65","kind":"string","nodeType":"YulLiteral","src":"6427:3:17","type":"","value":"e"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6400:6:17"},"nodeType":"YulFunctionCall","src":"6400:31:17"},"nodeType":"YulExpressionStatement","src":"6400:31:17"},{"nodeType":"YulAssignment","src":"6440:27:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6452:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"6463:3:17","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6448:3:17"},"nodeType":"YulFunctionCall","src":"6448:19:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6440:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_7bd893145ac435f339bb7c288622d270324b7033b011f693aca172f5cbc3c257__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6227:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6241:4:17","type":""}],"src":"6076:397:17"}]},"contents":"{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_79ecb50133735b20228dea9d08fe36a462bbc1350f591a146908848db91104cd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 48)\n        mstore(add(headStart, 64), \"MinterRole: caller does not have\")\n        mstore(add(headStart, 96), \" the Minter role\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0f76c3a3e97a37fcdff532c2741c10933ebf2b769d5475388e30ae4f7155f13a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"Roles: account already has role\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"SafeMath: addition overflow\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ERC20: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9d214fa89563f4e6456a3929327e54500ea1cde2c0ba9fb2035ec106190d682f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"Roles: account is the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_7bd893145ac435f339bb7c288622d270324b7033b011f693aca172f5cbc3c257__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"Roles: account does not have rol\")\n        mstore(add(headStart, 96), \"e\")\n        tail := add(headStart, 128)\n    }\n}","id":17,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100b45760003560e01c8063983b2d5611610071578063983b2d5614610155578063986502751461016a578063a457c2d714610172578063a9059cbb14610185578063aa271e1a14610198578063dd62ed3e146101ab57600080fd5b8063095ea7b3146100b957806318160ddd146100e157806323b872dd146100f3578063395093511461010657806340c10f191461011957806370a082311461012c575b600080fd5b6100cc6100c73660046109c0565b6101e4565b60405190151581526020015b60405180910390f35b6002545b6040519081526020016100d8565b6100cc6101013660046109ea565b6101fb565b6100cc6101143660046109c0565b610264565b6100cc6101273660046109c0565b61029a565b6100e561013a366004610a26565b6001600160a01b031660009081526020819052604090205490565b610168610163366004610a26565b6102d4565b005b610168610305565b6100cc6101803660046109c0565b610310565b6100cc6101933660046109c0565b61035f565b6100cc6101a6366004610a26565b61036c565b6100e56101b9366004610a41565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b60006101f13384846103f5565b5060015b92915050565b600061020884848461051a565b61025a843361025585604051806060016040528060288152602001610b75602891396001600160a01b038a166000908152600160209081526040808320338452909152902054919061069d565b6103f5565b5060019392505050565b3360008181526001602090815260408083206001600160a01b038716845290915281205490916101f191859061025590866106d7565b60006102a53361036c565b6102ca5760405162461bcd60e51b81526004016102c190610a74565b60405180910390fd5b6101f1838361073d565b6102dd3361036c565b6102f95760405162461bcd60e51b81526004016102c190610a74565b6103028161081b565b50565b61030e3361085d565b565b60006101f1338461025585604051806060016040528060258152602001610b9d602591393360009081526001602090815260408083206001600160a01b038d168452909152902054919061069d565b60006101f133848461051a565b60006101f560038361089f565b610383828261089f565b156103d05760405162461bcd60e51b815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c650060448201526064016102c1565b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b6001600160a01b0383166104575760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016102c1565b6001600160a01b0382166104b85760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016102c1565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b03831661057e5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016102c1565b6001600160a01b0382166105e05760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016102c1565b61061d81604051806060016040528060268152602001610b4f602691396001600160a01b038616600090815260208190526040902054919061069d565b6001600160a01b03808516600090815260208190526040808220939093559084168152205461064c90826106d7565b6001600160a01b038381166000818152602081815260409182902094909455518481529092918616917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910161050d565b600081848411156106c15760405162461bcd60e51b81526004016102c19190610ac4565b5060006106ce8486610b28565b95945050505050565b6000806106e48385610b3b565b9050838110156107365760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f77000000000060448201526064016102c1565b9392505050565b6001600160a01b0382166107935760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016102c1565b6002546107a090826106d7565b6002556001600160a01b0382166000908152602081905260409020546107c690826106d7565b6001600160a01b038316600081815260208181526040808320949094559251848152919290917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b610826600382610379565b6040516001600160a01b038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b610868600382610922565b6040516001600160a01b038216907fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669290600090a250565b60006001600160a01b0382166109025760405162461bcd60e51b815260206004820152602260248201527f526f6c65733a206163636f756e7420697320746865207a65726f206164647265604482015261737360f01b60648201526084016102c1565b506001600160a01b03166000908152602091909152604090205460ff1690565b61092c828261089f565b6109825760405162461bcd60e51b815260206004820152602160248201527f526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c6044820152606560f81b60648201526084016102c1565b6001600160a01b0316600090815260209190915260409020805460ff19169055565b80356001600160a01b03811681146109bb57600080fd5b919050565b600080604083850312156109d357600080fd5b6109dc836109a4565b946020939093013593505050565b6000806000606084860312156109ff57600080fd5b610a08846109a4565b9250610a16602085016109a4565b9150604084013590509250925092565b600060208284031215610a3857600080fd5b610736826109a4565b60008060408385031215610a5457600080fd5b610a5d836109a4565b9150610a6b602084016109a4565b90509250929050565b60208082526030908201527f4d696e746572526f6c653a2063616c6c657220646f6573206e6f74206861766560408201526f20746865204d696e74657220726f6c6560801b606082015260800190565b600060208083528351808285015260005b81811015610af157858101830151858201604001528201610ad5565b506000604082860101526040601f19601f8301168501019250505092915050565b634e487b7160e01b600052601160045260246000fd5b818103818111156101f5576101f5610b12565b808201808211156101f5576101f5610b1256fe45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa2646970667358221220fea7ca9fe24ce0f635f4746434fe7aaf30cacc68c31d2e1a9691fd6899c1012f64736f6c63430008120033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x983B2D56 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x983B2D56 EQ PUSH2 0x155 JUMPI DUP1 PUSH4 0x98650275 EQ PUSH2 0x16A JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x172 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x185 JUMPI DUP1 PUSH4 0xAA271E1A EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xB9 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xE1 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0xF3 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x106 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x119 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x12C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xCC PUSH2 0xC7 CALLDATASIZE PUSH1 0x4 PUSH2 0x9C0 JUMP JUMPDEST PUSH2 0x1E4 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xD8 JUMP JUMPDEST PUSH2 0xCC PUSH2 0x101 CALLDATASIZE PUSH1 0x4 PUSH2 0x9EA JUMP JUMPDEST PUSH2 0x1FB JUMP JUMPDEST PUSH2 0xCC PUSH2 0x114 CALLDATASIZE PUSH1 0x4 PUSH2 0x9C0 JUMP JUMPDEST PUSH2 0x264 JUMP JUMPDEST PUSH2 0xCC PUSH2 0x127 CALLDATASIZE PUSH1 0x4 PUSH2 0x9C0 JUMP JUMPDEST PUSH2 0x29A JUMP JUMPDEST PUSH2 0xE5 PUSH2 0x13A CALLDATASIZE PUSH1 0x4 PUSH2 0xA26 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x168 PUSH2 0x163 CALLDATASIZE PUSH1 0x4 PUSH2 0xA26 JUMP JUMPDEST PUSH2 0x2D4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x168 PUSH2 0x305 JUMP JUMPDEST PUSH2 0xCC PUSH2 0x180 CALLDATASIZE PUSH1 0x4 PUSH2 0x9C0 JUMP JUMPDEST PUSH2 0x310 JUMP JUMPDEST PUSH2 0xCC PUSH2 0x193 CALLDATASIZE PUSH1 0x4 PUSH2 0x9C0 JUMP JUMPDEST PUSH2 0x35F JUMP JUMPDEST PUSH2 0xCC PUSH2 0x1A6 CALLDATASIZE PUSH1 0x4 PUSH2 0xA26 JUMP JUMPDEST PUSH2 0x36C JUMP JUMPDEST PUSH2 0xE5 PUSH2 0x1B9 CALLDATASIZE PUSH1 0x4 PUSH2 0xA41 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F1 CALLER DUP5 DUP5 PUSH2 0x3F5 JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x208 DUP5 DUP5 DUP5 PUSH2 0x51A JUMP JUMPDEST PUSH2 0x25A DUP5 CALLER PUSH2 0x255 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xB75 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x69D JUMP JUMPDEST PUSH2 0x3F5 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x1F1 SWAP2 DUP6 SWAP1 PUSH2 0x255 SWAP1 DUP7 PUSH2 0x6D7 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A5 CALLER PUSH2 0x36C JUMP JUMPDEST PUSH2 0x2CA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C1 SWAP1 PUSH2 0xA74 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1F1 DUP4 DUP4 PUSH2 0x73D JUMP JUMPDEST PUSH2 0x2DD CALLER PUSH2 0x36C JUMP JUMPDEST PUSH2 0x2F9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C1 SWAP1 PUSH2 0xA74 JUMP JUMPDEST PUSH2 0x302 DUP2 PUSH2 0x81B JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x30E CALLER PUSH2 0x85D JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F1 CALLER DUP5 PUSH2 0x255 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xB9D PUSH1 0x25 SWAP2 CODECOPY CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x69D JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F1 CALLER DUP5 DUP5 PUSH2 0x51A JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F5 PUSH1 0x3 DUP4 PUSH2 0x89F JUMP JUMPDEST PUSH2 0x383 DUP3 DUP3 PUSH2 0x89F JUMP JUMPDEST ISZERO PUSH2 0x3D0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526F6C65733A206163636F756E7420616C72656164792068617320726F6C6500 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2C1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x457 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2C1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x4B8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2C1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x57E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2C1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5E0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2C1 JUMP JUMPDEST PUSH2 0x61D DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xB4F PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x69D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x64C SWAP1 DUP3 PUSH2 0x6D7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE MLOAD DUP5 DUP2 MSTORE SWAP1 SWAP3 SWAP2 DUP7 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH2 0x50D JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x6C1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C1 SWAP2 SWAP1 PUSH2 0xAC4 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x6CE DUP5 DUP7 PUSH2 0xB28 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x6E4 DUP4 DUP6 PUSH2 0xB3B JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x736 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2C1 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x793 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2C1 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x7A0 SWAP1 DUP3 PUSH2 0x6D7 JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x7C6 SWAP1 DUP3 PUSH2 0x6D7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE SWAP3 MLOAD DUP5 DUP2 MSTORE SWAP2 SWAP3 SWAP1 SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x826 PUSH1 0x3 DUP3 PUSH2 0x379 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0x6AE172837EA30B801FBFCDD4108AA1D5BF8FF775444FD70256B44E6BF3DFC3F6 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x868 PUSH1 0x3 DUP3 PUSH2 0x922 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0xE94479A9F7E1952CC78F2D6BAAB678ADC1B772D936C6583DEF489E524CB66692 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x902 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526F6C65733A206163636F756E7420697320746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2C1 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x92C DUP3 DUP3 PUSH2 0x89F JUMP JUMPDEST PUSH2 0x982 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526F6C65733A206163636F756E7420646F6573206E6F74206861766520726F6C PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x65 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2C1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x9BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x9D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9DC DUP4 PUSH2 0x9A4 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x9FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA08 DUP5 PUSH2 0x9A4 JUMP JUMPDEST SWAP3 POP PUSH2 0xA16 PUSH1 0x20 DUP6 ADD PUSH2 0x9A4 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA38 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x736 DUP3 PUSH2 0x9A4 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xA54 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA5D DUP4 PUSH2 0x9A4 JUMP JUMPDEST SWAP2 POP PUSH2 0xA6B PUSH1 0x20 DUP5 ADD PUSH2 0x9A4 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x30 SWAP1 DUP3 ADD MSTORE PUSH32 0x4D696E746572526F6C653A2063616C6C657220646F6573206E6F742068617665 PUSH1 0x40 DUP3 ADD MSTORE PUSH16 0x20746865204D696E74657220726F6C65 PUSH1 0x80 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xAF1 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0xAD5 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x1F5 JUMPI PUSH2 0x1F5 PUSH2 0xB12 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x1F5 JUMPI PUSH2 0x1F5 PUSH2 0xB12 JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x2062616C616E636545524332303A207472616E73 PUSH7 0x657220616D6F75 PUSH15 0x74206578636565647320616C6C6F77 PUSH2 0x6E63 PUSH6 0x45524332303A KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726FA2646970 PUSH7 0x7358221220FEA7 0xCA SWAP16 0xE2 0x4C 0xE0 0xF6 CALLDATALOAD DELEGATECALL PUSH21 0x6434FE7AAF30CACC68C31D2E1A9691FD6899C1012F PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ","sourceMap":"305:322:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2483:149:4;;;;;;:::i;:::-;;:::i;:::-;;;616:14:17;;609:22;591:41;;579:2;564:18;2483:149:4;;;;;;;;1542:89;1612:12;;1542:89;;;789:25:17;;;777:2;762:18;1542:89:4;643:177:17;3090:300:4;;;;;;:::i;:::-;;:::i;3785:207::-;;;;;;:::i;:::-;;:::i;485:140:7:-;;;;;;:::i;:::-;;:::i;1689:108:4:-;;;;;;:::i;:::-;-1:-1:-1;;;;;1772:18:4;1746:7;1772:18;;;;;;;;;;;;1689:108;589:90:9;;;;;;:::i;:::-;;:::i;:::-;;685:77;;;:::i;4479:258:4:-;;;;;;:::i;:::-;;:::i;2000:155::-;;;;;;:::i;:::-;;:::i;476:107:9:-;;;;;;:::i;:::-;;:::i;2213:132:4:-;;;;;;:::i;:::-;-1:-1:-1;;;;;2311:18:4;;;2285:7;2311:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;2213:132;2483:149;2549:4;2565:39;669:10:3;2588:7:4;2597:6;2565:8;:39::i;:::-;-1:-1:-1;2621:4:4;2483:149;;;;;:::o;3090:300::-;3179:4;3195:36;3205:6;3213:9;3224:6;3195:9;:36::i;:::-;3241:121;3250:6;669:10:3;3272:89:4;3310:6;3272:89;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3272:19:4;;;;;;:11;:19;;;;;;;;669:10:3;3272:33:4;;;;;;;;;;:37;:89::i;:::-;3241:8;:121::i;:::-;-1:-1:-1;3379:4:4;3090:300;;;;;:::o;3785:207::-;669:10:3;3865:4:4;3913:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;3913:34:4;;;;;;;;;;3865:4;;3881:83;;3904:7;;3913:50;;3952:10;3913:38;:50::i;485:140:7:-;559:4;377:22:9;669:10:3;476:107:9;:::i;377:22::-;369:83;;;;-1:-1:-1;;;369:83:9;;;;;;;:::i;:::-;;;;;;;;;575:22:7::1;581:7;590:6;575:5;:22::i;589:90:9:-:0;377:22;669:10:3;476:107:9;:::i;377:22::-;369:83;;;;-1:-1:-1;;;369:83:9;;;;;;;:::i;:::-;653:19:::1;664:7;653:10;:19::i;:::-;589:90:::0;:::o;685:77::-;728:27;669:10:3;728:13:9;:27::i;:::-;685:77::o;4479:258:4:-;4564:4;4580:129;669:10:3;4603:7:4;4612:96;4651:15;4612:96;;;;;;;;;;;;;;;;;669:10:3;4612:25:4;;;;:11;:25;;;;;;;;-1:-1:-1;;;;;4612:34:4;;;;;;;;;;;;:38;:96::i;2000:155::-;2069:4;2085:42;669:10:3;2109:9:4;2120:6;2085:9;:42::i;476:107:9:-;532:4;555:21;:8;568:7;555:12;:21::i;260:175:10:-;337:18;341:4;347:7;337:3;:18::i;:::-;336:19;328:63;;;;-1:-1:-1;;;328:63:10;;2233:2:17;328:63:10;;;2215:21:17;2272:2;2252:18;;;2245:30;2311:33;2291:18;;;2284:61;2362:18;;328:63:10;2031:355:17;328:63:10;-1:-1:-1;;;;;401:20:10;:11;:20;;;;;;;;;;;:27;;-1:-1:-1;;401:27:10;424:4;401:27;;;260:175::o;7333:332:4:-;-1:-1:-1;;;;;7426:19:4;;7418:68;;;;-1:-1:-1;;;7418:68:4;;2593:2:17;7418:68:4;;;2575:21:17;2632:2;2612:18;;;2605:30;2671:34;2651:18;;;2644:62;-1:-1:-1;;;2722:18:17;;;2715:34;2766:19;;7418:68:4;2391:400:17;7418:68:4;-1:-1:-1;;;;;7504:21:4;;7496:68;;;;-1:-1:-1;;;7496:68:4;;2998:2:17;7496:68:4;;;2980:21:17;3037:2;3017:18;;;3010:30;3076:34;3056:18;;;3049:62;-1:-1:-1;;;3127:18:17;;;3120:32;3169:19;;7496:68:4;2796:398:17;7496:68:4;-1:-1:-1;;;;;7575:18:4;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;7626:32;;789:25:17;;;7626:32:4;;762:18:17;7626:32:4;;;;;;;;7333:332;;;:::o;5211:464::-;-1:-1:-1;;;;;5308:20:4;;5300:70;;;;-1:-1:-1;;;5300:70:4;;3401:2:17;5300:70:4;;;3383:21:17;3440:2;3420:18;;;3413:30;3479:34;3459:18;;;3452:62;-1:-1:-1;;;3530:18:17;;;3523:35;3575:19;;5300:70:4;3199:401:17;5300:70:4;-1:-1:-1;;;;;5388:23:4;;5380:71;;;;-1:-1:-1;;;5380:71:4;;3807:2:17;5380:71:4;;;3789:21:17;3846:2;3826:18;;;3819:30;3885:34;3865:18;;;3858:62;-1:-1:-1;;;3936:18:17;;;3929:33;3979:19;;5380:71:4;3605:399:17;5380:71:4;5482;5504:6;5482:71;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5482:17:4;;:9;:17;;;;;;;;;;;;:71;:21;:71::i;:::-;-1:-1:-1;;;;;5462:17:4;;;:9;:17;;;;;;;;;;;:91;;;;5586:20;;;;;;;:32;;5611:6;5586:24;:32::i;:::-;-1:-1:-1;;;;;5563:20:4;;;:9;:20;;;;;;;;;;;;:55;;;;5633:35;789:25:17;;;5563:20:4;;5633:35;;;;;;762:18:17;5633:35:4;643:177:17;1732:187:11;1818:7;1853:12;1845:6;;;;1837:29;;;;-1:-1:-1;;;1837:29:11;;;;;;;;:::i;:::-;-1:-1:-1;1876:9:11;1888:5;1892:1;1888;:5;:::i;:::-;1876:17;1732:187;-1:-1:-1;;;;;1732:187:11:o;834:176::-;892:7;;923:5;927:1;923;:5;:::i;:::-;911:17;;951:1;946;:6;;938:46;;;;-1:-1:-1;;;938:46:11;;5159:2:17;938:46:11;;;5141:21:17;5198:2;5178:18;;;5171:30;5237:29;5217:18;;;5210:57;5284:18;;938:46:11;4957:351:17;938:46:11;1002:1;834:176;-1:-1:-1;;;834:176:11:o;5945:302:4:-;-1:-1:-1;;;;;6020:21:4;;6012:65;;;;-1:-1:-1;;;6012:65:4;;5515:2:17;6012:65:4;;;5497:21:17;5554:2;5534:18;;;5527:30;5593:33;5573:18;;;5566:61;5644:18;;6012:65:4;5313:355:17;6012:65:4;6103:12;;:24;;6120:6;6103:16;:24::i;:::-;6088:12;:39;-1:-1:-1;;;;;6158:18:4;;:9;:18;;;;;;;;;;;:30;;6181:6;6158:22;:30::i;:::-;-1:-1:-1;;;;;6137:18:4;;:9;:18;;;;;;;;;;;:51;;;;6203:37;;789:25:17;;;6137:18:4;;:9;;6203:37;;762:18:17;6203:37:4;;;;;;;5945:302;;:::o;768:119:9:-;824:21;:8;837:7;824:12;:21::i;:::-;860:20;;-1:-1:-1;;;;;860:20:9;;;;;;;;768:119;:::o;893:127::-;952:24;:8;968:7;952:15;:24::i;:::-;991:22;;-1:-1:-1;;;;;991:22:9;;;;;;;;893:127;:::o;779:200:10:-;851:4;-1:-1:-1;;;;;875:21:10;;867:68;;;;-1:-1:-1;;;867:68:10;;5875:2:17;867:68:10;;;5857:21:17;5914:2;5894:18;;;5887:30;5953:34;5933:18;;;5926:62;-1:-1:-1;;;6004:18:17;;;5997:32;6046:19;;867:68:10;5673:398:17;867:68:10;-1:-1:-1;;;;;;952:20:10;:11;:20;;;;;;;;;;;;;;;779:200::o;510:180::-;589:18;593:4;599:7;589:3;:18::i;:::-;581:64;;;;-1:-1:-1;;;581:64:10;;6278:2:17;581:64:10;;;6260:21:17;6317:2;6297:18;;;6290:30;6356:34;6336:18;;;6329:62;-1:-1:-1;;;6407:18:17;;;6400:31;6448:19;;581:64:10;6076:397:17;581:64:10;-1:-1:-1;;;;;655:20:10;678:5;655:20;;;;;;;;;;;:28;;-1:-1:-1;;655:28:10;;;510:180::o;14:173:17:-;82:20;;-1:-1:-1;;;;;131:31:17;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:254::-;260:6;268;321:2;309:9;300:7;296:23;292:32;289:52;;;337:1;334;327:12;289:52;360:29;379:9;360:29;:::i;:::-;350:39;436:2;421:18;;;;408:32;;-1:-1:-1;;;192:254:17:o;825:328::-;902:6;910;918;971:2;959:9;950:7;946:23;942:32;939:52;;;987:1;984;977:12;939:52;1010:29;1029:9;1010:29;:::i;:::-;1000:39;;1058:38;1092:2;1081:9;1077:18;1058:38;:::i;:::-;1048:48;;1143:2;1132:9;1128:18;1115:32;1105:42;;825:328;;;;;:::o;1158:186::-;1217:6;1270:2;1258:9;1249:7;1245:23;1241:32;1238:52;;;1286:1;1283;1276:12;1238:52;1309:29;1328:9;1309:29;:::i;1349:260::-;1417:6;1425;1478:2;1466:9;1457:7;1453:23;1449:32;1446:52;;;1494:1;1491;1484:12;1446:52;1517:29;1536:9;1517:29;:::i;:::-;1507:39;;1565:38;1599:2;1588:9;1584:18;1565:38;:::i;:::-;1555:48;;1349:260;;;;;:::o;1614:412::-;1816:2;1798:21;;;1855:2;1835:18;;;1828:30;1894:34;1889:2;1874:18;;1867:62;-1:-1:-1;;;1960:2:17;1945:18;;1938:46;2016:3;2001:19;;1614:412::o;4009:548::-;4121:4;4150:2;4179;4168:9;4161:21;4211:6;4205:13;4254:6;4249:2;4238:9;4234:18;4227:34;4279:1;4289:140;4303:6;4300:1;4297:13;4289:140;;;4398:14;;;4394:23;;4388:30;4364:17;;;4383:2;4360:26;4353:66;4318:10;;4289:140;;;4293:3;4478:1;4473:2;4464:6;4453:9;4449:22;4445:31;4438:42;4548:2;4541;4537:7;4532:2;4524:6;4520:15;4516:29;4505:9;4501:45;4497:54;4489:62;;;;4009:548;;;;:::o;4562:127::-;4623:10;4618:3;4614:20;4611:1;4604:31;4654:4;4651:1;4644:15;4678:4;4675:1;4668:15;4694:128;4761:9;;;4782:11;;;4779:37;;;4796:18;;:::i;4827:125::-;4892:9;;;4913:10;;;4910:36;;;4926:18;;:::i"},"gasEstimates":{"creation":{"codeDepositCost":"612600","executionCost":"infinite","totalCost":"infinite"},"external":{"addMinter(address)":"infinite","allowance(address,address)":"infinite","approve(address,uint256)":"24588","balanceOf(address)":"2651","decreaseAllowance(address,uint256)":"infinite","increaseAllowance(address,uint256)":"infinite","isMinter(address)":"2727","mint(address,uint256)":"infinite","renounceMinter()":"27985","totalSupply()":"2304","transfer(address,uint256)":"infinite","transferFrom(address,address,uint256)":"infinite"}},"methodIdentifiers":{"addMinter(address)":"983b2d56","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decreaseAllowance(address,uint256)":"a457c2d7","increaseAllowance(address,uint256)":"39509351","isMinter(address)":"aa271e1a","mint(address,uint256)":"40c10f19","renounceMinter()":"98650275","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"MinterAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"MinterRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addMinter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isMinter\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceMinter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {ERC20} that adds a set of accounts with the {MinterRole}, which have permission to mint (create) new tokens as they see fit. At construction, the deployer of the contract is the only minter.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"mint(address,uint256)\":{\"details\":\"See {ERC20-_mint}. Requirements: - the caller must have the {MinterRole}.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/AccessControl/ERC20Mintable.sol\":\"ERC20Mintable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"contracts/AccessControl/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with GSN meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\n        return msg.data;\\n    }\\n}\",\"keccak256\":\"0x24e77a6af76a3c4f61e872bab8ab92a2a27b20d3e6111da351e0aa7ab83a7dc9\",\"license\":\"MIT\"},\"contracts/AccessControl/ERC20.sol\":{\"content\":\"pragma solidity ^0.8.4;\\n\\nimport \\\"./Context.sol\\\";\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"./SafeMath.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20Mintable}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * We have followed general OpenZeppelin guidelines: functions revert instead\\n * of returning `false` on failure. This behavior is nonetheless conventional\\n * and does not conflict with the expectations of ERC20 applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20 is Context, IERC20 {\\n    using SafeMath for uint256;\\n\\n    mapping (address => uint256) private _balances;\\n\\n    mapping (address => mapping (address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `recipient` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(address recipient, uint256 amount) public returns (bool) {\\n        _transfer(_msgSender(), recipient, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 amount) public returns (bool) {\\n        _approve(_msgSender(), spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20};\\n     *\\n     * Requirements:\\n     * - `sender` and `recipient` cannot be the zero address.\\n     * - `sender` must have a balance of at least `amount`.\\n     * - the caller must have allowance for `sender`'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(address sender, address recipient, uint256 amount) public returns (bool) {\\n        _transfer(sender, recipient, amount);\\n        _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \\\"ERC20: transfer amount exceeds allowance\\\"));\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue));\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \\\"ERC20: decreased allowance below zero\\\"));\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves tokens `amount` from `sender` to `recipient`.\\n     *\\n     * This is internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `sender` cannot be the zero address.\\n     * - `recipient` cannot be the zero address.\\n     * - `sender` must have a balance of at least `amount`.\\n     */\\n    function _transfer(address sender, address recipient, uint256 amount) internal {\\n        require(sender != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(recipient != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _balances[sender] = _balances[sender].sub(amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        _balances[recipient] = _balances[recipient].add(amount);\\n        emit Transfer(sender, recipient, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements\\n     *\\n     * - `to` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _totalSupply = _totalSupply.add(amount);\\n        _balances[account] = _balances[account].add(amount);\\n        emit Transfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _balances[account] = _balances[account].sub(amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        _totalSupply = _totalSupply.sub(amount);\\n        emit Transfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.\\n     *\\n     * This is internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(address owner, address spender, uint256 amount) internal {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`.`amount` is then deducted\\n     * from the caller's allowance.\\n     *\\n     * See {_burn} and {_approve}.\\n     */\\n    function _burnFrom(address account, uint256 amount) internal {\\n        _burn(account, amount);\\n        _approve(account, _msgSender(), _allowances[account][_msgSender()].sub(amount, \\\"ERC20: burn amount exceeds allowance\\\"));\\n    }\\n}\\n\",\"keccak256\":\"0xb0dffbfe5c63bc633701eec2d295435f3b18f16d580622e38480671848c428ca\"},\"contracts/AccessControl/ERC20Mintable.sol\":{\"content\":\"pragma solidity ^0.8.4;\\n\\nimport \\\"./ERC20.sol\\\";\\nimport \\\"./MinterRole.sol\\\";\\n\\n/**\\n * @dev Extension of {ERC20} that adds a set of accounts with the {MinterRole},\\n * which have permission to mint (create) new tokens as they see fit.\\n *\\n * At construction, the deployer of the contract is the only minter.\\n */\\ncontract ERC20Mintable is ERC20, MinterRole {\\n    /**\\n     * @dev See {ERC20-_mint}.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have the {MinterRole}.\\n     */\\n    function mint(address account, uint256 amount) public onlyMinter returns (bool) {\\n        _mint(account, amount);\\n        return true;\\n    }\\n}\\n\",\"keccak256\":\"0x47983f304a88dc82861d6363a98ef49942e8bc6bad317d1d79a0203a338419f4\"},\"contracts/AccessControl/IERC20.sol\":{\"content\":\"pragma solidity ^0.8.4;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP. Does not include\\n * the optional functions; to access them see {ERC20Detailed}.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x15f1080f668baa0d47cc70d176bf94cc175256262ed88ac624ea1295cde0eb19\"},\"contracts/AccessControl/MinterRole.sol\":{\"content\":\"pragma solidity ^0.8.4;\\n\\nimport \\\"./Context.sol\\\";\\nimport \\\"./Roles.sol\\\";\\n\\ncontract MinterRole is Context {\\n    using Roles for Roles.Role;\\n\\n    event MinterAdded(address indexed account);\\n    event MinterRemoved(address indexed account);\\n\\n    Roles.Role private _minters;\\n\\n    constructor () {\\n        _addMinter(_msgSender());\\n    }\\n\\n    modifier onlyMinter() {\\n        require(isMinter(_msgSender()), \\\"MinterRole: caller does not have the Minter role\\\");\\n        _;\\n    }\\n\\n    function isMinter(address account) public view returns (bool) {\\n        return _minters.has(account);\\n    }\\n\\n    function addMinter(address account) public onlyMinter {\\n        _addMinter(account);\\n    }\\n\\n    function renounceMinter() public {\\n        _removeMinter(_msgSender());\\n    }\\n\\n    function _addMinter(address account) internal {\\n        _minters.add(account);\\n        emit MinterAdded(account);\\n    }\\n\\n    function _removeMinter(address account) internal {\\n        _minters.remove(account);\\n        emit MinterRemoved(account);\\n    }\\n}\\n\",\"keccak256\":\"0xe29a9fd3829635897738bcda4e6cf7464cff1630002ea904315599b37d63ea3e\"},\"contracts/AccessControl/Roles.sol\":{\"content\":\"pragma solidity ^0.8.4;\\n\\n/**\\n * @title Roles\\n * @dev Library for managing addresses assigned to a Role.\\n */\\nlibrary Roles {\\n    struct Role {\\n        mapping (address => bool) bearer;\\n    }\\n\\n    /**\\n     * @dev Give an account access to this role.\\n     */\\n    function add(Role storage role, address account) internal {\\n        require(!has(role, account), \\\"Roles: account already has role\\\");\\n        role.bearer[account] = true;\\n    }\\n\\n    /**\\n     * @dev Remove an account's access to this role.\\n     */\\n    function remove(Role storage role, address account) internal {\\n        require(has(role, account), \\\"Roles: account does not have role\\\");\\n        role.bearer[account] = false;\\n    }\\n\\n    /**\\n     * @dev Check if an account has this role.\\n     * @return bool\\n     */\\n    function has(Role storage role, address account) internal view returns (bool) {\\n        require(account != address(0), \\\"Roles: account is the zero address\\\");\\n        return role.bearer[account];\\n    }\\n}\\n\",\"keccak256\":\"0x9cc0f220ec4f4e9ff47823597384e9ab28df6d854640eb1cd6950e7fef5de3fd\"},\"contracts/AccessControl/SafeMath.sol\":{\"content\":\"pragma solidity ^0.8.4;\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\\n * checks.\\n *\\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\\n * in bugs, because programmers usually assume that an overflow raises an\\n * error, which is the standard behavior in high level programming languages.\\n * `SafeMath` restores this intuition by reverting the transaction when an\\n * operation overflows.\\n *\\n * Using this library instead of the unchecked operations eliminates an entire\\n * class of bugs, so it's recommended to use it always.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        uint256 c = a + b;\\n        require(c >= a, \\\"SafeMath: addition overflow\\\");\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return sub(a, b, \\\"SafeMath: subtraction overflow\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     * - Subtraction cannot overflow.\\n     *\\n     * _Available since v2.4.0._\\n     */\\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b <= a, errorMessage);\\n        uint256 c = a - b;\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n        // benefit is lost if 'b' is also tested.\\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        uint256 c = a * b;\\n        require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers. Reverts on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return div(a, b, \\\"SafeMath: division by zero\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     * - The divisor cannot be zero.\\n     *\\n     * _Available since v2.4.0._\\n     */\\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        // Solidity only automatically asserts when dividing by 0\\n        require(b > 0, errorMessage);\\n        uint256 c = a / b;\\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * Reverts when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return mod(a, b, \\\"SafeMath: modulo by zero\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * Reverts with custom message when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     * - The divisor cannot be zero.\\n     *\\n     * _Available since v2.4.0._\\n     */\\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b != 0, errorMessage);\\n        return a % b;\\n    }\\n}\\n\",\"keccak256\":\"0x9a6c2cad06a56e98a99eae4bfe8cc25b422efea7da4233bb481b32ea498f078f\"}},\"version\":1}","storageLayout":{"storage":[{"astId":486,"contract":"contracts/AccessControl/ERC20Mintable.sol:ERC20Mintable","label":"_balances","offset":0,"slot":"0","type":"t_mapping(t_address,t_uint256)"},{"astId":492,"contract":"contracts/AccessControl/ERC20Mintable.sol:ERC20Mintable","label":"_allowances","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":494,"contract":"contracts/AccessControl/ERC20Mintable.sol:ERC20Mintable","label":"_totalSupply","offset":0,"slot":"2","type":"t_uint256"},{"astId":1125,"contract":"contracts/AccessControl/ERC20Mintable.sol:ERC20Mintable","label":"_minters","offset":0,"slot":"3","type":"t_struct(Role)1221_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_struct(Role)1221_storage":{"encoding":"inplace","label":"struct Roles.Role","members":[{"astId":1220,"contract":"contracts/AccessControl/ERC20Mintable.sol:ERC20Mintable","label":"bearer","offset":0,"slot":"0","type":"t_mapping(t_address,t_bool)"}],"numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/AccessControl/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface of the ERC20 standard as defined in the EIP. Does not include the optional functions; to access them see {ERC20Detailed}.","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the amount of tokens owned by `account`."},"totalSupply()":{"details":"Returns the amount of tokens in existence."},"transfer(address,uint256)":{"details":"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP. Does not include the optional functions; to access them see {ERC20Detailed}.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/AccessControl/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"contracts/AccessControl/IERC20.sol\":{\"content\":\"pragma solidity ^0.8.4;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP. Does not include\\n * the optional functions; to access them see {ERC20Detailed}.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x15f1080f668baa0d47cc70d176bf94cc175256262ed88ac624ea1295cde0eb19\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/AccessControl/MinterRole.sol":{"MinterRole":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"}],"name":"MinterAdded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"}],"name":"MinterRemoved","type":"event"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"addMinter","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"isMinter","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceMinter","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_1134":{"entryPoint":null,"id":1134,"parameterSlots":0,"returnSlots":0},"@_addMinter_1196":{"entryPoint":31,"id":1196,"parameterSlots":1,"returnSlots":0},"@_msgSender_457":{"entryPoint":null,"id":457,"parameterSlots":0,"returnSlots":1},"@add_1248":{"entryPoint":110,"id":1248,"parameterSlots":2,"returnSlots":0},"@has_1301":{"entryPoint":239,"id":1301,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0f76c3a3e97a37fcdff532c2741c10933ebf2b769d5475388e30ae4f7155f13a__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9d214fa89563f4e6456a3929327e54500ea1cde2c0ba9fb2035ec106190d682f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:774:17","statements":[{"nodeType":"YulBlock","src":"6:3:17","statements":[]},{"body":{"nodeType":"YulBlock","src":"188:181:17","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"205:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"216:2:17","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"198:6:17"},"nodeType":"YulFunctionCall","src":"198:21:17"},"nodeType":"YulExpressionStatement","src":"198:21:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"239:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"250:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"235:3:17"},"nodeType":"YulFunctionCall","src":"235:18:17"},{"kind":"number","nodeType":"YulLiteral","src":"255:2:17","type":"","value":"31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"228:6:17"},"nodeType":"YulFunctionCall","src":"228:30:17"},"nodeType":"YulExpressionStatement","src":"228:30:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"278:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"289:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"274:3:17"},"nodeType":"YulFunctionCall","src":"274:18:17"},{"hexValue":"526f6c65733a206163636f756e7420616c72656164792068617320726f6c65","kind":"string","nodeType":"YulLiteral","src":"294:33:17","type":"","value":"Roles: account already has role"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"267:6:17"},"nodeType":"YulFunctionCall","src":"267:61:17"},"nodeType":"YulExpressionStatement","src":"267:61:17"},{"nodeType":"YulAssignment","src":"337:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"349:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"360:2:17","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"345:3:17"},"nodeType":"YulFunctionCall","src":"345:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"337:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_0f76c3a3e97a37fcdff532c2741c10933ebf2b769d5475388e30ae4f7155f13a__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"165:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"179:4:17","type":""}],"src":"14:355:17"},{"body":{"nodeType":"YulBlock","src":"548:224:17","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"565:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"576:2:17","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"558:6:17"},"nodeType":"YulFunctionCall","src":"558:21:17"},"nodeType":"YulExpressionStatement","src":"558:21:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"599:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"610:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"595:3:17"},"nodeType":"YulFunctionCall","src":"595:18:17"},{"kind":"number","nodeType":"YulLiteral","src":"615:2:17","type":"","value":"34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"588:6:17"},"nodeType":"YulFunctionCall","src":"588:30:17"},"nodeType":"YulExpressionStatement","src":"588:30:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"638:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"649:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"634:3:17"},"nodeType":"YulFunctionCall","src":"634:18:17"},{"hexValue":"526f6c65733a206163636f756e7420697320746865207a65726f206164647265","kind":"string","nodeType":"YulLiteral","src":"654:34:17","type":"","value":"Roles: account is the zero addre"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"627:6:17"},"nodeType":"YulFunctionCall","src":"627:62:17"},"nodeType":"YulExpressionStatement","src":"627:62:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"709:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"720:2:17","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"705:3:17"},"nodeType":"YulFunctionCall","src":"705:18:17"},{"hexValue":"7373","kind":"string","nodeType":"YulLiteral","src":"725:4:17","type":"","value":"ss"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"698:6:17"},"nodeType":"YulFunctionCall","src":"698:32:17"},"nodeType":"YulExpressionStatement","src":"698:32:17"},{"nodeType":"YulAssignment","src":"739:27:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"751:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"762:3:17","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"747:3:17"},"nodeType":"YulFunctionCall","src":"747:19:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"739:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_9d214fa89563f4e6456a3929327e54500ea1cde2c0ba9fb2035ec106190d682f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"525:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"539:4:17","type":""}],"src":"374:398:17"}]},"contents":"{\n    { }\n    function abi_encode_tuple_t_stringliteral_0f76c3a3e97a37fcdff532c2741c10933ebf2b769d5475388e30ae4f7155f13a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"Roles: account already has role\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9d214fa89563f4e6456a3929327e54500ea1cde2c0ba9fb2035ec106190d682f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"Roles: account is the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n}","id":17,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"608060405234801561001057600080fd5b5061001a3361001f565b610172565b61003781600061006e60201b6101261790919060201c565b6040516001600160a01b038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b61007882826100ef565b156100ca5760405162461bcd60e51b815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c650060448201526064015b60405180910390fd5b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b60006001600160a01b0382166101525760405162461bcd60e51b815260206004820152602260248201527f526f6c65733a206163636f756e7420697320746865207a65726f206164647265604482015261737360f01b60648201526084016100c1565b506001600160a01b03166000908152602091909152604090205460ff1690565b610391806101816000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063983b2d5614610046578063986502751461005b578063aa271e1a14610063575b600080fd5b61005961005436600461032b565b61008a565b005b610059610109565b61007661007136600461032b565b610114565b604051901515815260200160405180910390f35b61009333610114565b6100fd5760405162461bcd60e51b815260206004820152603060248201527f4d696e746572526f6c653a2063616c6c657220646f6573206e6f74206861766560448201526f20746865204d696e74657220726f6c6560801b60648201526084015b60405180910390fd5b610106816101a2565b50565b610112336101e4565b565b60006101208183610226565b92915050565b6101308282610226565b1561017d5760405162461bcd60e51b815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c650060448201526064016100f4565b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b6101ad600082610126565b6040516001600160a01b038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b6101ef6000826102a9565b6040516001600160a01b038216907fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669290600090a250565b60006001600160a01b0382166102895760405162461bcd60e51b815260206004820152602260248201527f526f6c65733a206163636f756e7420697320746865207a65726f206164647265604482015261737360f01b60648201526084016100f4565b506001600160a01b03166000908152602091909152604090205460ff1690565b6102b38282610226565b6103095760405162461bcd60e51b815260206004820152602160248201527f526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c6044820152606560f81b60648201526084016100f4565b6001600160a01b0316600090815260209190915260409020805460ff19169055565b60006020828403121561033d57600080fd5b81356001600160a01b038116811461035457600080fd5b939250505056fea2646970667358221220edd5e4a0a80c2f3c26219cde8e0fd4b8130b1619804060966945ac5ceee4a18f64736f6c63430008120033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A CALLER PUSH2 0x1F JUMP JUMPDEST PUSH2 0x172 JUMP JUMPDEST PUSH2 0x37 DUP2 PUSH1 0x0 PUSH2 0x6E PUSH1 0x20 SHL PUSH2 0x126 OR SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0x6AE172837EA30B801FBFCDD4108AA1D5BF8FF775444FD70256B44E6BF3DFC3F6 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x78 DUP3 DUP3 PUSH2 0xEF JUMP JUMPDEST ISZERO PUSH2 0xCA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526F6C65733A206163636F756E7420616C72656164792068617320726F6C6500 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x152 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526F6C65733A206163636F756E7420697320746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC1 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x391 DUP1 PUSH2 0x181 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x983B2D56 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x98650275 EQ PUSH2 0x5B JUMPI DUP1 PUSH4 0xAA271E1A EQ PUSH2 0x63 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x59 PUSH2 0x54 CALLDATASIZE PUSH1 0x4 PUSH2 0x32B JUMP JUMPDEST PUSH2 0x8A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x59 PUSH2 0x109 JUMP JUMPDEST PUSH2 0x76 PUSH2 0x71 CALLDATASIZE PUSH1 0x4 PUSH2 0x32B JUMP JUMPDEST PUSH2 0x114 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x93 CALLER PUSH2 0x114 JUMP JUMPDEST PUSH2 0xFD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D696E746572526F6C653A2063616C6C657220646F6573206E6F742068617665 PUSH1 0x44 DUP3 ADD MSTORE PUSH16 0x20746865204D696E74657220726F6C65 PUSH1 0x80 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x106 DUP2 PUSH2 0x1A2 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x112 CALLER PUSH2 0x1E4 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x120 DUP2 DUP4 PUSH2 0x226 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x130 DUP3 DUP3 PUSH2 0x226 JUMP JUMPDEST ISZERO PUSH2 0x17D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526F6C65733A206163636F756E7420616C72656164792068617320726F6C6500 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xF4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x1AD PUSH1 0x0 DUP3 PUSH2 0x126 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0x6AE172837EA30B801FBFCDD4108AA1D5BF8FF775444FD70256B44E6BF3DFC3F6 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x1EF PUSH1 0x0 DUP3 PUSH2 0x2A9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0xE94479A9F7E1952CC78F2D6BAAB678ADC1B772D936C6583DEF489E524CB66692 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x289 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526F6C65733A206163636F756E7420697320746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xF4 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x2B3 DUP3 DUP3 PUSH2 0x226 JUMP JUMPDEST PUSH2 0x309 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526F6C65733A206163636F756E7420646F6573206E6F74206861766520726F6C PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x65 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xF4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x33D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x354 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xED 0xD5 0xE4 LOG0 0xA8 0xC 0x2F EXTCODECOPY 0x26 0x21 SWAP13 0xDE DUP15 0xF 0xD4 0xB8 SGT SIGNEXTEND AND NOT DUP1 BLOCKHASH PUSH1 0x96 PUSH10 0x45AC5CEEE4A18F64736F PUSH13 0x63430008120033000000000000 ","sourceMap":"72:950:9:-:0;;;275:56;;;;;;;;;-1:-1:-1;300:24:9;669:10:3;300::9;:24::i;:::-;72:950;;768:119;824:21;837:7;824:8;:12;;;;;;:21;;;;:::i;:::-;860:20;;-1:-1:-1;;;;;860:20:9;;;;;;;;768:119;:::o;260:175:10:-;337:18;341:4;347:7;337:3;:18::i;:::-;336:19;328:63;;;;-1:-1:-1;;;328:63:10;;216:2:17;328:63:10;;;198:21:17;255:2;235:18;;;228:30;294:33;274:18;;;267:61;345:18;;328:63:10;;;;;;;;;-1:-1:-1;;;;;401:20:10;:11;:20;;;;;;;;;;;:27;;-1:-1:-1;;401:27:10;424:4;401:27;;;260:175::o;779:200::-;851:4;-1:-1:-1;;;;;875:21:10;;867:68;;;;-1:-1:-1;;;867:68:10;;576:2:17;867:68:10;;;558:21:17;615:2;595:18;;;588:30;654:34;634:18;;;627:62;-1:-1:-1;;;705:18:17;;;698:32;747:19;;867:68:10;374:398:17;867:68:10;-1:-1:-1;;;;;;952:20:10;:11;:20;;;;;;;;;;;;;;;779:200::o;374:398:17:-;72:950:9;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_addMinter_1196":{"entryPoint":418,"id":1196,"parameterSlots":1,"returnSlots":0},"@_msgSender_457":{"entryPoint":null,"id":457,"parameterSlots":0,"returnSlots":1},"@_removeMinter_1212":{"entryPoint":484,"id":1212,"parameterSlots":1,"returnSlots":0},"@addMinter_1171":{"entryPoint":138,"id":1171,"parameterSlots":1,"returnSlots":0},"@add_1248":{"entryPoint":294,"id":1248,"parameterSlots":2,"returnSlots":0},"@has_1301":{"entryPoint":550,"id":1301,"parameterSlots":2,"returnSlots":1},"@isMinter_1159":{"entryPoint":276,"id":1159,"parameterSlots":1,"returnSlots":1},"@remove_1274":{"entryPoint":681,"id":1274,"parameterSlots":2,"returnSlots":0},"@renounceMinter_1180":{"entryPoint":265,"id":1180,"parameterSlots":0,"returnSlots":0},"abi_decode_tuple_t_address":{"entryPoint":811,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0f76c3a3e97a37fcdff532c2741c10933ebf2b769d5475388e30ae4f7155f13a__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_79ecb50133735b20228dea9d08fe36a462bbc1350f591a146908848db91104cd__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_7bd893145ac435f339bb7c288622d270324b7033b011f693aca172f5cbc3c257__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9d214fa89563f4e6456a3929327e54500ea1cde2c0ba9fb2035ec106190d682f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:2076:17","statements":[{"nodeType":"YulBlock","src":"6:3:17","statements":[]},{"body":{"nodeType":"YulBlock","src":"84:216:17","statements":[{"body":{"nodeType":"YulBlock","src":"130:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"139:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"142:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"132:6:17"},"nodeType":"YulFunctionCall","src":"132:12:17"},"nodeType":"YulExpressionStatement","src":"132:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"105:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"114:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"101:3:17"},"nodeType":"YulFunctionCall","src":"101:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"126:2:17","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"97:3:17"},"nodeType":"YulFunctionCall","src":"97:32:17"},"nodeType":"YulIf","src":"94:52:17"},{"nodeType":"YulVariableDeclaration","src":"155:36:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"181:9:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"168:12:17"},"nodeType":"YulFunctionCall","src":"168:23:17"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"159:5:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"254:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"263:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"266:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"256:6:17"},"nodeType":"YulFunctionCall","src":"256:12:17"},"nodeType":"YulExpressionStatement","src":"256:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"213:5:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"224:5:17"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"239:3:17","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"244:1:17","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"235:3:17"},"nodeType":"YulFunctionCall","src":"235:11:17"},{"kind":"number","nodeType":"YulLiteral","src":"248:1:17","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"231:3:17"},"nodeType":"YulFunctionCall","src":"231:19:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"220:3:17"},"nodeType":"YulFunctionCall","src":"220:31:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"210:2:17"},"nodeType":"YulFunctionCall","src":"210:42:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"203:6:17"},"nodeType":"YulFunctionCall","src":"203:50:17"},"nodeType":"YulIf","src":"200:70:17"},{"nodeType":"YulAssignment","src":"279:15:17","value":{"name":"value","nodeType":"YulIdentifier","src":"289:5:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"279:6:17"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"50:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"61:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"73:6:17","type":""}],"src":"14:286:17"},{"body":{"nodeType":"YulBlock","src":"400:92:17","statements":[{"nodeType":"YulAssignment","src":"410:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"422:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"433:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"418:3:17"},"nodeType":"YulFunctionCall","src":"418:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"410:4:17"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"452:9:17"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"477:6:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"470:6:17"},"nodeType":"YulFunctionCall","src":"470:14:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"463:6:17"},"nodeType":"YulFunctionCall","src":"463:22:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"445:6:17"},"nodeType":"YulFunctionCall","src":"445:41:17"},"nodeType":"YulExpressionStatement","src":"445:41:17"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"369:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"380:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"391:4:17","type":""}],"src":"305:187:17"},{"body":{"nodeType":"YulBlock","src":"671:238:17","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"688:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"699:2:17","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"681:6:17"},"nodeType":"YulFunctionCall","src":"681:21:17"},"nodeType":"YulExpressionStatement","src":"681:21:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"722:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"733:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"718:3:17"},"nodeType":"YulFunctionCall","src":"718:18:17"},{"kind":"number","nodeType":"YulLiteral","src":"738:2:17","type":"","value":"48"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"711:6:17"},"nodeType":"YulFunctionCall","src":"711:30:17"},"nodeType":"YulExpressionStatement","src":"711:30:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"761:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"772:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"757:3:17"},"nodeType":"YulFunctionCall","src":"757:18:17"},{"hexValue":"4d696e746572526f6c653a2063616c6c657220646f6573206e6f742068617665","kind":"string","nodeType":"YulLiteral","src":"777:34:17","type":"","value":"MinterRole: caller does not have"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"750:6:17"},"nodeType":"YulFunctionCall","src":"750:62:17"},"nodeType":"YulExpressionStatement","src":"750:62:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"832:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"843:2:17","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"828:3:17"},"nodeType":"YulFunctionCall","src":"828:18:17"},{"hexValue":"20746865204d696e74657220726f6c65","kind":"string","nodeType":"YulLiteral","src":"848:18:17","type":"","value":" the Minter role"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"821:6:17"},"nodeType":"YulFunctionCall","src":"821:46:17"},"nodeType":"YulExpressionStatement","src":"821:46:17"},{"nodeType":"YulAssignment","src":"876:27:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"888:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"899:3:17","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"884:3:17"},"nodeType":"YulFunctionCall","src":"884:19:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"876:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_79ecb50133735b20228dea9d08fe36a462bbc1350f591a146908848db91104cd__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"648:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"662:4:17","type":""}],"src":"497:412:17"},{"body":{"nodeType":"YulBlock","src":"1088:181:17","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1105:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"1116:2:17","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1098:6:17"},"nodeType":"YulFunctionCall","src":"1098:21:17"},"nodeType":"YulExpressionStatement","src":"1098:21:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1139:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"1150:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1135:3:17"},"nodeType":"YulFunctionCall","src":"1135:18:17"},{"kind":"number","nodeType":"YulLiteral","src":"1155:2:17","type":"","value":"31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1128:6:17"},"nodeType":"YulFunctionCall","src":"1128:30:17"},"nodeType":"YulExpressionStatement","src":"1128:30:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1178:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"1189:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1174:3:17"},"nodeType":"YulFunctionCall","src":"1174:18:17"},{"hexValue":"526f6c65733a206163636f756e7420616c72656164792068617320726f6c65","kind":"string","nodeType":"YulLiteral","src":"1194:33:17","type":"","value":"Roles: account already has role"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1167:6:17"},"nodeType":"YulFunctionCall","src":"1167:61:17"},"nodeType":"YulExpressionStatement","src":"1167:61:17"},{"nodeType":"YulAssignment","src":"1237:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1249:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"1260:2:17","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1245:3:17"},"nodeType":"YulFunctionCall","src":"1245:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1237:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_0f76c3a3e97a37fcdff532c2741c10933ebf2b769d5475388e30ae4f7155f13a__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1065:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1079:4:17","type":""}],"src":"914:355:17"},{"body":{"nodeType":"YulBlock","src":"1448:224:17","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1465:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"1476:2:17","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1458:6:17"},"nodeType":"YulFunctionCall","src":"1458:21:17"},"nodeType":"YulExpressionStatement","src":"1458:21:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1499:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"1510:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1495:3:17"},"nodeType":"YulFunctionCall","src":"1495:18:17"},{"kind":"number","nodeType":"YulLiteral","src":"1515:2:17","type":"","value":"34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1488:6:17"},"nodeType":"YulFunctionCall","src":"1488:30:17"},"nodeType":"YulExpressionStatement","src":"1488:30:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1538:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"1549:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1534:3:17"},"nodeType":"YulFunctionCall","src":"1534:18:17"},{"hexValue":"526f6c65733a206163636f756e7420697320746865207a65726f206164647265","kind":"string","nodeType":"YulLiteral","src":"1554:34:17","type":"","value":"Roles: account is the zero addre"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1527:6:17"},"nodeType":"YulFunctionCall","src":"1527:62:17"},"nodeType":"YulExpressionStatement","src":"1527:62:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1609:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"1620:2:17","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1605:3:17"},"nodeType":"YulFunctionCall","src":"1605:18:17"},{"hexValue":"7373","kind":"string","nodeType":"YulLiteral","src":"1625:4:17","type":"","value":"ss"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1598:6:17"},"nodeType":"YulFunctionCall","src":"1598:32:17"},"nodeType":"YulExpressionStatement","src":"1598:32:17"},{"nodeType":"YulAssignment","src":"1639:27:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1651:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"1662:3:17","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1647:3:17"},"nodeType":"YulFunctionCall","src":"1647:19:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1639:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_9d214fa89563f4e6456a3929327e54500ea1cde2c0ba9fb2035ec106190d682f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1425:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1439:4:17","type":""}],"src":"1274:398:17"},{"body":{"nodeType":"YulBlock","src":"1851:223:17","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1868:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"1879:2:17","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1861:6:17"},"nodeType":"YulFunctionCall","src":"1861:21:17"},"nodeType":"YulExpressionStatement","src":"1861:21:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1902:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"1913:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1898:3:17"},"nodeType":"YulFunctionCall","src":"1898:18:17"},{"kind":"number","nodeType":"YulLiteral","src":"1918:2:17","type":"","value":"33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1891:6:17"},"nodeType":"YulFunctionCall","src":"1891:30:17"},"nodeType":"YulExpressionStatement","src":"1891:30:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1941:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"1952:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1937:3:17"},"nodeType":"YulFunctionCall","src":"1937:18:17"},{"hexValue":"526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c","kind":"string","nodeType":"YulLiteral","src":"1957:34:17","type":"","value":"Roles: account does not have rol"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1930:6:17"},"nodeType":"YulFunctionCall","src":"1930:62:17"},"nodeType":"YulExpressionStatement","src":"1930:62:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2012:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"2023:2:17","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2008:3:17"},"nodeType":"YulFunctionCall","src":"2008:18:17"},{"hexValue":"65","kind":"string","nodeType":"YulLiteral","src":"2028:3:17","type":"","value":"e"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2001:6:17"},"nodeType":"YulFunctionCall","src":"2001:31:17"},"nodeType":"YulExpressionStatement","src":"2001:31:17"},{"nodeType":"YulAssignment","src":"2041:27:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2053:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"2064:3:17","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2049:3:17"},"nodeType":"YulFunctionCall","src":"2049:19:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2041:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_7bd893145ac435f339bb7c288622d270324b7033b011f693aca172f5cbc3c257__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1828:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1842:4:17","type":""}],"src":"1677:397:17"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_stringliteral_79ecb50133735b20228dea9d08fe36a462bbc1350f591a146908848db91104cd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 48)\n        mstore(add(headStart, 64), \"MinterRole: caller does not have\")\n        mstore(add(headStart, 96), \" the Minter role\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0f76c3a3e97a37fcdff532c2741c10933ebf2b769d5475388e30ae4f7155f13a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"Roles: account already has role\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9d214fa89563f4e6456a3929327e54500ea1cde2c0ba9fb2035ec106190d682f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"Roles: account is the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_7bd893145ac435f339bb7c288622d270324b7033b011f693aca172f5cbc3c257__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"Roles: account does not have rol\")\n        mstore(add(headStart, 96), \"e\")\n        tail := add(headStart, 128)\n    }\n}","id":17,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100415760003560e01c8063983b2d5614610046578063986502751461005b578063aa271e1a14610063575b600080fd5b61005961005436600461032b565b61008a565b005b610059610109565b61007661007136600461032b565b610114565b604051901515815260200160405180910390f35b61009333610114565b6100fd5760405162461bcd60e51b815260206004820152603060248201527f4d696e746572526f6c653a2063616c6c657220646f6573206e6f74206861766560448201526f20746865204d696e74657220726f6c6560801b60648201526084015b60405180910390fd5b610106816101a2565b50565b610112336101e4565b565b60006101208183610226565b92915050565b6101308282610226565b1561017d5760405162461bcd60e51b815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c650060448201526064016100f4565b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b6101ad600082610126565b6040516001600160a01b038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b6101ef6000826102a9565b6040516001600160a01b038216907fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669290600090a250565b60006001600160a01b0382166102895760405162461bcd60e51b815260206004820152602260248201527f526f6c65733a206163636f756e7420697320746865207a65726f206164647265604482015261737360f01b60648201526084016100f4565b506001600160a01b03166000908152602091909152604090205460ff1690565b6102b38282610226565b6103095760405162461bcd60e51b815260206004820152602160248201527f526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c6044820152606560f81b60648201526084016100f4565b6001600160a01b0316600090815260209190915260409020805460ff19169055565b60006020828403121561033d57600080fd5b81356001600160a01b038116811461035457600080fd5b939250505056fea2646970667358221220edd5e4a0a80c2f3c26219cde8e0fd4b8130b1619804060966945ac5ceee4a18f64736f6c63430008120033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x983B2D56 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x98650275 EQ PUSH2 0x5B JUMPI DUP1 PUSH4 0xAA271E1A EQ PUSH2 0x63 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x59 PUSH2 0x54 CALLDATASIZE PUSH1 0x4 PUSH2 0x32B JUMP JUMPDEST PUSH2 0x8A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x59 PUSH2 0x109 JUMP JUMPDEST PUSH2 0x76 PUSH2 0x71 CALLDATASIZE PUSH1 0x4 PUSH2 0x32B JUMP JUMPDEST PUSH2 0x114 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x93 CALLER PUSH2 0x114 JUMP JUMPDEST PUSH2 0xFD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D696E746572526F6C653A2063616C6C657220646F6573206E6F742068617665 PUSH1 0x44 DUP3 ADD MSTORE PUSH16 0x20746865204D696E74657220726F6C65 PUSH1 0x80 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x106 DUP2 PUSH2 0x1A2 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x112 CALLER PUSH2 0x1E4 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x120 DUP2 DUP4 PUSH2 0x226 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x130 DUP3 DUP3 PUSH2 0x226 JUMP JUMPDEST ISZERO PUSH2 0x17D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526F6C65733A206163636F756E7420616C72656164792068617320726F6C6500 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xF4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x1AD PUSH1 0x0 DUP3 PUSH2 0x126 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0x6AE172837EA30B801FBFCDD4108AA1D5BF8FF775444FD70256B44E6BF3DFC3F6 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x1EF PUSH1 0x0 DUP3 PUSH2 0x2A9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0xE94479A9F7E1952CC78F2D6BAAB678ADC1B772D936C6583DEF489E524CB66692 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x289 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526F6C65733A206163636F756E7420697320746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xF4 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x2B3 DUP3 DUP3 PUSH2 0x226 JUMP JUMPDEST PUSH2 0x309 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526F6C65733A206163636F756E7420646F6573206E6F74206861766520726F6C PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x65 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xF4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x33D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x354 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xED 0xD5 0xE4 LOG0 0xA8 0xC 0x2F EXTCODECOPY 0x26 0x21 SWAP13 0xDE DUP15 0xF 0xD4 0xB8 SGT SIGNEXTEND AND NOT DUP1 BLOCKHASH PUSH1 0x96 PUSH10 0x45AC5CEEE4A18F64736F PUSH13 0x63430008120033000000000000 ","sourceMap":"72:950:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;589:90;;;;;;:::i;:::-;;:::i;:::-;;685:77;;;:::i;476:107::-;;;;;;:::i;:::-;;:::i;:::-;;;470:14:17;;463:22;445:41;;433:2;418:18;476:107:9;;;;;;;589:90;377:22;669:10:3;476:107:9;:::i;377:22::-;369:83;;;;-1:-1:-1;;;369:83:9;;699:2:17;369:83:9;;;681:21:17;738:2;718:18;;;711:30;777:34;757:18;;;750:62;-1:-1:-1;;;828:18:17;;;821:46;884:19;;369:83:9;;;;;;;;;653:19:::1;664:7;653:10;:19::i;:::-;589:90:::0;:::o;685:77::-;728:27;669:10:3;728:13:9;:27::i;:::-;685:77::o;476:107::-;532:4;555:21;532:4;568:7;555:12;:21::i;:::-;548:28;476:107;-1:-1:-1;;476:107:9:o;260:175:10:-;337:18;341:4;347:7;337:3;:18::i;:::-;336:19;328:63;;;;-1:-1:-1;;;328:63:10;;1116:2:17;328:63:10;;;1098:21:17;1155:2;1135:18;;;1128:30;1194:33;1174:18;;;1167:61;1245:18;;328:63:10;914:355:17;328:63:10;-1:-1:-1;;;;;401:20:10;:11;:20;;;;;;;;;;;:27;;-1:-1:-1;;401:27:10;424:4;401:27;;;260:175::o;768:119:9:-;824:21;:8;837:7;824:12;:21::i;:::-;860:20;;-1:-1:-1;;;;;860:20:9;;;;;;;;768:119;:::o;893:127::-;952:24;:8;968:7;952:15;:24::i;:::-;991:22;;-1:-1:-1;;;;;991:22:9;;;;;;;;893:127;:::o;779:200:10:-;851:4;-1:-1:-1;;;;;875:21:10;;867:68;;;;-1:-1:-1;;;867:68:10;;1476:2:17;867:68:10;;;1458:21:17;1515:2;1495:18;;;1488:30;1554:34;1534:18;;;1527:62;-1:-1:-1;;;1605:18:17;;;1598:32;1647:19;;867:68:10;1274:398:17;867:68:10;-1:-1:-1;;;;;;952:20:10;:11;:20;;;;;;;;;;;;;;;779:200::o;510:180::-;589:18;593:4;599:7;589:3;:18::i;:::-;581:64;;;;-1:-1:-1;;;581:64:10;;1879:2:17;581:64:10;;;1861:21:17;1918:2;1898:18;;;1891:30;1957:34;1937:18;;;1930:62;-1:-1:-1;;;2008:18:17;;;2001:31;2049:19;;581:64:10;1677:397:17;581:64:10;-1:-1:-1;;;;;655:20:10;678:5;655:20;;;;;;;;;;;:28;;-1:-1:-1;;655:28:10;;;510:180::o;14:286:17:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;168:23;;-1:-1:-1;;;;;220:31:17;;210:42;;200:70;;266:1;263;256:12;200:70;289:5;14:286;-1:-1:-1;;;14:286:17:o"},"gasEstimates":{"creation":{"codeDepositCost":"182600","executionCost":"infinite","totalCost":"infinite"},"external":{"addMinter(address)":"infinite","isMinter(address)":"2625","renounceMinter()":"27963"},"internal":{"_addMinter(address)":"infinite","_removeMinter(address)":"infinite"}},"methodIdentifiers":{"addMinter(address)":"983b2d56","isMinter(address)":"aa271e1a","renounceMinter()":"98650275"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"MinterAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"MinterRemoved\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addMinter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isMinter\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceMinter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/AccessControl/MinterRole.sol\":\"MinterRole\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"contracts/AccessControl/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with GSN meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\n        return msg.data;\\n    }\\n}\",\"keccak256\":\"0x24e77a6af76a3c4f61e872bab8ab92a2a27b20d3e6111da351e0aa7ab83a7dc9\",\"license\":\"MIT\"},\"contracts/AccessControl/MinterRole.sol\":{\"content\":\"pragma solidity ^0.8.4;\\n\\nimport \\\"./Context.sol\\\";\\nimport \\\"./Roles.sol\\\";\\n\\ncontract MinterRole is Context {\\n    using Roles for Roles.Role;\\n\\n    event MinterAdded(address indexed account);\\n    event MinterRemoved(address indexed account);\\n\\n    Roles.Role private _minters;\\n\\n    constructor () {\\n        _addMinter(_msgSender());\\n    }\\n\\n    modifier onlyMinter() {\\n        require(isMinter(_msgSender()), \\\"MinterRole: caller does not have the Minter role\\\");\\n        _;\\n    }\\n\\n    function isMinter(address account) public view returns (bool) {\\n        return _minters.has(account);\\n    }\\n\\n    function addMinter(address account) public onlyMinter {\\n        _addMinter(account);\\n    }\\n\\n    function renounceMinter() public {\\n        _removeMinter(_msgSender());\\n    }\\n\\n    function _addMinter(address account) internal {\\n        _minters.add(account);\\n        emit MinterAdded(account);\\n    }\\n\\n    function _removeMinter(address account) internal {\\n        _minters.remove(account);\\n        emit MinterRemoved(account);\\n    }\\n}\\n\",\"keccak256\":\"0xe29a9fd3829635897738bcda4e6cf7464cff1630002ea904315599b37d63ea3e\"},\"contracts/AccessControl/Roles.sol\":{\"content\":\"pragma solidity ^0.8.4;\\n\\n/**\\n * @title Roles\\n * @dev Library for managing addresses assigned to a Role.\\n */\\nlibrary Roles {\\n    struct Role {\\n        mapping (address => bool) bearer;\\n    }\\n\\n    /**\\n     * @dev Give an account access to this role.\\n     */\\n    function add(Role storage role, address account) internal {\\n        require(!has(role, account), \\\"Roles: account already has role\\\");\\n        role.bearer[account] = true;\\n    }\\n\\n    /**\\n     * @dev Remove an account's access to this role.\\n     */\\n    function remove(Role storage role, address account) internal {\\n        require(has(role, account), \\\"Roles: account does not have role\\\");\\n        role.bearer[account] = false;\\n    }\\n\\n    /**\\n     * @dev Check if an account has this role.\\n     * @return bool\\n     */\\n    function has(Role storage role, address account) internal view returns (bool) {\\n        require(account != address(0), \\\"Roles: account is the zero address\\\");\\n        return role.bearer[account];\\n    }\\n}\\n\",\"keccak256\":\"0x9cc0f220ec4f4e9ff47823597384e9ab28df6d854640eb1cd6950e7fef5de3fd\"}},\"version\":1}","storageLayout":{"storage":[{"astId":1125,"contract":"contracts/AccessControl/MinterRole.sol:MinterRole","label":"_minters","offset":0,"slot":"0","type":"t_struct(Role)1221_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_struct(Role)1221_storage":{"encoding":"inplace","label":"struct Roles.Role","members":[{"astId":1220,"contract":"contracts/AccessControl/MinterRole.sol:MinterRole","label":"bearer","offset":0,"slot":"0","type":"t_mapping(t_address,t_bool)"}],"numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/AccessControl/Roles.sol":{"Roles":{"abi":[],"devdoc":{"details":"Library for managing addresses assigned to a Role.","kind":"dev","methods":{},"title":"Roles","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220092e54e8a79876362cd16138b33701f0e49b0635672f9bef74cd1becd0ed36c564736f6c63430008120033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MULMOD 0x2E SLOAD 0xE8 0xA7 SWAP9 PUSH23 0x362CD16138B33701F0E49B0635672F9BEF74CD1BECD0ED CALLDATASIZE 0xC5 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ","sourceMap":"108:873:10:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;108:873:10;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220092e54e8a79876362cd16138b33701f0e49b0635672f9bef74cd1becd0ed36c564736f6c63430008120033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MULMOD 0x2E SLOAD 0xE8 0xA7 SWAP9 PUSH23 0x362CD16138B33701F0E49B0635672F9BEF74CD1BECD0ED CALLDATASIZE 0xC5 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ","sourceMap":"108:873:10:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"},"internal":{"add(struct Roles.Role storage pointer,address)":"infinite","has(struct Roles.Role storage pointer,address)":"infinite","remove(struct Roles.Role storage pointer,address)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for managing addresses assigned to a Role.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Roles\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/AccessControl/Roles.sol\":\"Roles\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"contracts/AccessControl/Roles.sol\":{\"content\":\"pragma solidity ^0.8.4;\\n\\n/**\\n * @title Roles\\n * @dev Library for managing addresses assigned to a Role.\\n */\\nlibrary Roles {\\n    struct Role {\\n        mapping (address => bool) bearer;\\n    }\\n\\n    /**\\n     * @dev Give an account access to this role.\\n     */\\n    function add(Role storage role, address account) internal {\\n        require(!has(role, account), \\\"Roles: account already has role\\\");\\n        role.bearer[account] = true;\\n    }\\n\\n    /**\\n     * @dev Remove an account's access to this role.\\n     */\\n    function remove(Role storage role, address account) internal {\\n        require(has(role, account), \\\"Roles: account does not have role\\\");\\n        role.bearer[account] = false;\\n    }\\n\\n    /**\\n     * @dev Check if an account has this role.\\n     * @return bool\\n     */\\n    function has(Role storage role, address account) internal view returns (bool) {\\n        require(account != address(0), \\\"Roles: account is the zero address\\\");\\n        return role.bearer[account];\\n    }\\n}\\n\",\"keccak256\":\"0x9cc0f220ec4f4e9ff47823597384e9ab28df6d854640eb1cd6950e7fef5de3fd\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/AccessControl/SafeMath.sol":{"SafeMath":{"abi":[],"devdoc":{"details":"Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207e25119bfffd17def13e84f67c0646daabaa2b2a4b83a9d91a81bc0f53a5aff264736f6c63430008120033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH31 0x25119BFFFD17DEF13E84F67C0646DAABAA2B2A4B83A9D91A81BC0F53A5AFF2 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ","sourceMap":"589:4708:11:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;589:4708:11;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207e25119bfffd17def13e84f67c0646daabaa2b2a4b83a9d91a81bc0f53a5aff264736f6c63430008120033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH31 0x25119BFFFD17DEF13E84F67C0646DAABAA2B2A4B83A9D91A81BC0F53A5AFF2 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ","sourceMap":"589:4708:11:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"},"internal":{"add(uint256,uint256)":"infinite","div(uint256,uint256)":"infinite","div(uint256,uint256,string memory)":"infinite","mod(uint256,uint256)":"infinite","mod(uint256,uint256,string memory)":"infinite","mul(uint256,uint256)":"infinite","sub(uint256,uint256)":"infinite","sub(uint256,uint256,string memory)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/AccessControl/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"contracts/AccessControl/SafeMath.sol\":{\"content\":\"pragma solidity ^0.8.4;\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\\n * checks.\\n *\\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\\n * in bugs, because programmers usually assume that an overflow raises an\\n * error, which is the standard behavior in high level programming languages.\\n * `SafeMath` restores this intuition by reverting the transaction when an\\n * operation overflows.\\n *\\n * Using this library instead of the unchecked operations eliminates an entire\\n * class of bugs, so it's recommended to use it always.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        uint256 c = a + b;\\n        require(c >= a, \\\"SafeMath: addition overflow\\\");\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return sub(a, b, \\\"SafeMath: subtraction overflow\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     * - Subtraction cannot overflow.\\n     *\\n     * _Available since v2.4.0._\\n     */\\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b <= a, errorMessage);\\n        uint256 c = a - b;\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n        // benefit is lost if 'b' is also tested.\\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        uint256 c = a * b;\\n        require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers. Reverts on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return div(a, b, \\\"SafeMath: division by zero\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     * - The divisor cannot be zero.\\n     *\\n     * _Available since v2.4.0._\\n     */\\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        // Solidity only automatically asserts when dividing by 0\\n        require(b > 0, errorMessage);\\n        uint256 c = a / b;\\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * Reverts when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return mod(a, b, \\\"SafeMath: modulo by zero\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * Reverts with custom message when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     * - The divisor cannot be zero.\\n     *\\n     * _Available since v2.4.0._\\n     */\\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b != 0, errorMessage);\\n        return a % b;\\n    }\\n}\\n\",\"keccak256\":\"0x9a6c2cad06a56e98a99eae4bfe8cc25b422efea7da4233bb481b32ea498f078f\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/interfaces/AutoRefactorCoinageI.sol":{"AutoRefactorCoinageI":{"abi":[{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"addMinter","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"burnFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"factor","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"mint","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceMinter","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"factor","type":"uint256"}],"name":"setFactor","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"addMinter(address)":"983b2d56","balanceOf(address)":"70a08231","burn(uint256)":"42966c68","burnFrom(address,uint256)":"79cc6790","factor()":"54f703f8","mint(address,uint256)":"40c10f19","renounceMinter()":"98650275","setFactor(uint256)":"817e9d31","totalSupply()":"18160ddd","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addMinter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceMinter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"factor\",\"type\":\"uint256\"}],\"name\":\"setFactor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/AutoRefactorCoinageI.sol\":\"AutoRefactorCoinageI\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"contracts/interfaces/AutoRefactorCoinageI.sol\":{\"content\":\"pragma solidity ^0.8.4;\\n\\ninterface AutoRefactorCoinageI {\\n  function factor() external view returns (uint256);\\n  function setFactor(uint256 factor) external returns (bool);\\n  function burn(uint256 amount) external;\\n  function burnFrom(address account, uint256 amount) external;\\n  function mint(address account, uint256 amount) external returns (bool);\\n  function totalSupply() external view returns (uint256);\\n  function balanceOf(address account) external view returns (uint256);\\n  function addMinter(address account) external;\\n  function renounceMinter() external;\\n  function transferOwnership(address newOwner) external;\\n}\\n\",\"keccak256\":\"0xdecaf358ce9773c212861d34d59c6774f549052961b26ac3760c2b41927b1354\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/interfaces/CoinageFactoryI.sol":{"CoinageFactoryI":{"abi":[{"inputs":[],"name":"deploy","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"deploy()":"775c300c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"deploy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/CoinageFactoryI.sol\":\"CoinageFactoryI\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"contracts/interfaces/CoinageFactoryI.sol\":{\"content\":\"pragma solidity ^0.8.4;\\n\\ninterface CoinageFactoryI {\\n  function deploy() external returns (address);\\n}\\n\",\"keccak256\":\"0xc4c7b3d2abf07feb6802dc3fb510f9537968d4df32da39790fe946e6b4b84e7b\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/lib/DSMath.sol":{"DSMath":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea264697066735822122016e882b9084c337cc8fdcaf9be632f16e10bd5de30ff0947437516a4f009279664736f6c63430008120033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 AND 0xE8 DUP3 0xB9 ADDMOD 0x4C CALLER PUSH29 0xC8FDCAF9BE632F16E10BD5DE30FF0947437516A4F009279664736F6C63 NUMBER STOP ADDMOD SLT STOP CALLER ","sourceMap":"831:3024:14:-:0;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"6080604052600080fdfea264697066735822122016e882b9084c337cc8fdcaf9be632f16e10bd5de30ff0947437516a4f009279664736f6c63430008120033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 AND 0xE8 DUP3 0xB9 ADDMOD 0x4C CALLER PUSH29 0xC8FDCAF9BE632F16E10BD5DE30FF0947437516A4F009279664736F6C63 NUMBER STOP ADDMOD SLT STOP CALLER ","sourceMap":"831:3024:14:-:0;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"12600","executionCost":"66","totalCost":"12666"},"internal":{"add(uint256,uint256)":"infinite","imax(int256,int256)":"infinite","imin(int256,int256)":"infinite","max(uint256,uint256)":"infinite","min(uint256,uint256)":"infinite","mul(uint256,uint256)":"infinite","rdiv(uint256,uint256)":"infinite","rdiv2(uint256,uint256)":"infinite","rmul(uint256,uint256)":"infinite","rmul2(uint256,uint256)":"infinite","rpow(uint256,uint256)":"infinite","sub(uint256,uint256)":"infinite","wdiv(uint256,uint256)":"infinite","wdiv2(uint256,uint256)":"infinite","wmul(uint256,uint256)":"infinite","wmul2(uint256,uint256)":"infinite","wpow(uint256,uint256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/lib/DSMath.sol\":\"DSMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"contracts/lib/DSMath.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-or-later\\n// https://github.com/dapphub/ds-math/blob/de45767/src/math.sol\\n/// math.sol -- mixin for inline numerical wizardry\\n\\n// This program is free software: you can redistribute it and/or modify\\n// it under the terms of the GNU General Public License as published by\\n// the Free Software Foundation, either version 3 of the License, or\\n// (at your option) any later version.\\n\\n// This program is distributed in the hope that it will be useful,\\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n// GNU General Public License for more details.\\n\\n// You should have received a copy of the GNU General Public License\\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\\n\\npragma solidity >0.4.13;\\n\\ncontract DSMath {\\n    function add(uint256 x, uint256 y) internal pure returns (uint256 z) {\\n        require((z = x + y) >= x, \\\"ds-math-add-overflow\\\");\\n    }\\n\\n    function sub(uint256 x, uint256 y) internal pure returns (uint256 z) {\\n        require((z = x - y) <= x, \\\"ds-math-sub-underflow\\\");\\n    }\\n\\n    function mul(uint256 x, uint256 y) internal pure returns (uint256 z) {\\n        require(y == 0 || (z = x * y) / y == x, \\\"ds-math-mul-overflow\\\");\\n    }\\n\\n    function min(uint256 x, uint256 y) internal pure returns (uint256 z) {\\n        return x <= y ? x : y;\\n    }\\n\\n    function max(uint256 x, uint256 y) internal pure returns (uint256 z) {\\n        return x >= y ? x : y;\\n    }\\n\\n    function imin(int256 x, int256 y) internal pure returns (int256 z) {\\n        return x <= y ? x : y;\\n    }\\n\\n    function imax(int256 x, int256 y) internal pure returns (int256 z) {\\n        return x >= y ? x : y;\\n    }\\n\\n    uint256 constant WAD = 10**18;\\n    uint256 constant RAY = 10**27;\\n\\n    function wmul(uint256 x, uint256 y) internal pure returns (uint256 z) {\\n        z = add(mul(x, y), WAD / 2) / WAD;\\n    }\\n\\n    function rmul(uint256 x, uint256 y) internal pure returns (uint256 z) {\\n        z = add(mul(x, y), RAY / 2) / RAY;\\n    }\\n\\n    function wdiv(uint256 x, uint256 y) internal pure returns (uint256 z) {\\n        z = add(mul(x, WAD), y / 2) / y;\\n    }\\n\\n    function rdiv(uint256 x, uint256 y) internal pure returns (uint256 z) {\\n        z = add(mul(x, RAY), y / 2) / y;\\n    }\\n\\n    function wmul2(uint256 x, uint256 y) internal pure returns (uint256 z) {\\n        z = mul(x, y) / WAD;\\n    }\\n\\n    function rmul2(uint256 x, uint256 y) internal pure returns (uint256 z) {\\n        z = mul(x, y) / RAY;\\n    }\\n\\n    function wdiv2(uint256 x, uint256 y) internal pure returns (uint256 z) {\\n        z = mul(x, WAD) / y;\\n    }\\n\\n    function rdiv2(uint256 x, uint256 y) internal pure returns (uint256 z) {\\n        z = mul(x, RAY) / y;\\n    }\\n\\n    // This famous algorithm is called \\\"exponentiation by squaring\\\"\\n    // and calculates x^n with x as fixed-point and n as regular unsigned.\\n    //\\n    // It's O(log n), instead of O(n) for naive repeated multiplication.\\n    //\\n    // These facts are why it works:\\n    //\\n    //  If n is even, then x^n = (x^2)^(n/2).\\n    //  If n is odd,  then x^n = x * x^(n-1),\\n    //   and applying the equation for even x gives\\n    //  x^n = x * (x^2)^((n-1) / 2).\\n    //\\n    //  Also, EVM division is flooring and\\n    //  floor[(n-1) / 2] = floor[n / 2].\\n    //\\n    function wpow(uint256 x, uint256 n) internal pure returns (uint256 z) {\\n        z = n % 2 != 0 ? x : WAD;\\n\\n        for (n /= 2; n != 0; n /= 2) {\\n            x = wmul(x, x);\\n\\n            if (n % 2 != 0) {\\n                z = wmul(z, x);\\n            }\\n        }\\n    }\\n\\n    function rpow(uint256 x, uint256 n) internal pure returns (uint256 z) {\\n        z = n % 2 != 0 ? x : RAY;\\n\\n        for (n /= 2; n != 0; n /= 2) {\\n            x = rmul(x, x);\\n\\n            if (n % 2 != 0) {\\n                z = rmul(z, x);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xa7cbbf8cc883d53eb96b44f2d459ac295e31362aa335098fc5042d5a14985415\",\"license\":\"GPL-3.0-or-later\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/test/AutoRefactorCoinage.sol":{"AutoRefactorCoinage":{"abi":[{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"symbol","type":"string"},{"internalType":"uint256","name":"factor","type":"uint256"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"previous","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"current","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"shiftCount","type":"uint256"}],"name":"FactorSet","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"}],"name":"MinterAdded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"}],"name":"MinterRemoved","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"REFACTOR_BOUNDARY","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"REFACTOR_DIVIDER","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"_factor","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"_totalSupply","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"refactoredCount","type":"uint256"},{"internalType":"uint256","name":"remain","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"addMinter","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"balances","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"refactoredCount","type":"uint256"},{"internalType":"uint256","name":"remain","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"burnFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"factor","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"isMinter","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"mint","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"refactorCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceMinter","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"factor","type":"uint256"}],"name":"setFactor","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Implementation of coin age token based on ERC20 of openzeppelin/-solidity AutoRefactorCoinage stores `_totalSupply` and `_balances` as RAY BASED value, `_allowances` as RAY FACTORED value. This takes public function (including _approve) parameters as RAY FACTORED value and internal function (including approve) parameters as RAY BASED value, and emits event in RAY FACTORED value. `RAY BASED` = `RAY FACTORED`  / factor  factor increases exponentially for each block mined.","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"See {IERC20-balanceOf}."},"burn(uint256)":{"details":"Destroys `amount` tokens from `account`, reducing the total supply. Emits a {Transfer} event with `to` set to the zero address. Requirements - `account` cannot be the zero address. - `account` must have at least `amount` tokens."},"burnFrom(address,uint256)":{"details":"See {ERC20-_burnFrom}."},"decimals()":{"details":"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"mint(address,uint256)":{"details":"Creates `amount` tokens and assigns them to `account`, increasing the total supply. Emits a {Transfer} event with `from` set to the zero address. Requirements - `to` cannot be the zero address."},"name()":{"details":"Returns the name of the token."},"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"symbol()":{"details":"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{"details":"See {IERC20-totalSupply}."},"transfer(address,uint256)":{"details":"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_2101":{"entryPoint":null,"id":2101,"parameterSlots":3,"returnSlots":0},"@_23":{"entryPoint":null,"id":23,"parameterSlots":0,"returnSlots":0},"@_968":{"entryPoint":null,"id":968,"parameterSlots":3,"returnSlots":0},"@_addMinter_2163":{"entryPoint":251,"id":2163,"parameterSlots":1,"returnSlots":0},"@_msgSender_124":{"entryPoint":null,"id":124,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_111":{"entryPoint":171,"id":111,"parameterSlots":1,"returnSlots":0},"@add_1248":{"entryPoint":333,"id":1248,"parameterSlots":2,"returnSlots":0},"@has_1301":{"entryPoint":465,"id":1301,"parameterSlots":2,"returnSlots":1},"abi_decode_string_fromMemory":{"entryPoint":620,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256_fromMemory":{"entryPoint":795,"id":null,"parameterSlots":2,"returnSlots":3},"abi_encode_tuple_t_stringliteral_0f76c3a3e97a37fcdff532c2741c10933ebf2b769d5475388e30ae4f7155f13a__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9d214fa89563f4e6456a3929327e54500ea1cde2c0ba9fb2035ec106190d682f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":970,"id":null,"parameterSlots":3,"returnSlots":0},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":1053,"id":null,"parameterSlots":2,"returnSlots":0},"extract_byte_array_length":{"entryPoint":910,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x41":{"entryPoint":598,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:4968:17","statements":[{"nodeType":"YulBlock","src":"6:3:17","statements":[]},{"body":{"nodeType":"YulBlock","src":"46:95:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"63:1:17","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"70:3:17","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"75:10:17","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"66:3:17"},"nodeType":"YulFunctionCall","src":"66:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"56:6:17"},"nodeType":"YulFunctionCall","src":"56:31:17"},"nodeType":"YulExpressionStatement","src":"56:31:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"103:1:17","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"106:4:17","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"96:6:17"},"nodeType":"YulFunctionCall","src":"96:15:17"},"nodeType":"YulExpressionStatement","src":"96:15:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"127:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"130:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"120:6:17"},"nodeType":"YulFunctionCall","src":"120:15:17"},"nodeType":"YulExpressionStatement","src":"120:15:17"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"14:127:17"},{"body":{"nodeType":"YulBlock","src":"210:776:17","statements":[{"body":{"nodeType":"YulBlock","src":"259:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"268:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"271:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"261:6:17"},"nodeType":"YulFunctionCall","src":"261:12:17"},"nodeType":"YulExpressionStatement","src":"261:12:17"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"238:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"246:4:17","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"234:3:17"},"nodeType":"YulFunctionCall","src":"234:17:17"},{"name":"end","nodeType":"YulIdentifier","src":"253:3:17"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"230:3:17"},"nodeType":"YulFunctionCall","src":"230:27:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"223:6:17"},"nodeType":"YulFunctionCall","src":"223:35:17"},"nodeType":"YulIf","src":"220:55:17"},{"nodeType":"YulVariableDeclaration","src":"284:23:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"300:6:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"294:5:17"},"nodeType":"YulFunctionCall","src":"294:13:17"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"288:2:17","type":""}]},{"nodeType":"YulVariableDeclaration","src":"316:28:17","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"334:2:17","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"338:1:17","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"330:3:17"},"nodeType":"YulFunctionCall","src":"330:10:17"},{"kind":"number","nodeType":"YulLiteral","src":"342:1:17","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"326:3:17"},"nodeType":"YulFunctionCall","src":"326:18:17"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"320:2:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"367:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"369:16:17"},"nodeType":"YulFunctionCall","src":"369:18:17"},"nodeType":"YulExpressionStatement","src":"369:18:17"}]},"condition":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"359:2:17"},{"name":"_2","nodeType":"YulIdentifier","src":"363:2:17"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"356:2:17"},"nodeType":"YulFunctionCall","src":"356:10:17"},"nodeType":"YulIf","src":"353:36:17"},{"nodeType":"YulVariableDeclaration","src":"398:17:17","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"412:2:17","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"408:3:17"},"nodeType":"YulFunctionCall","src":"408:7:17"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"402:2:17","type":""}]},{"nodeType":"YulVariableDeclaration","src":"424:23:17","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"444:2:17","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"438:5:17"},"nodeType":"YulFunctionCall","src":"438:9:17"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"428:6:17","type":""}]},{"nodeType":"YulVariableDeclaration","src":"456:71:17","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"478:6:17"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"502:2:17"},{"kind":"number","nodeType":"YulLiteral","src":"506:4:17","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"498:3:17"},"nodeType":"YulFunctionCall","src":"498:13:17"},{"name":"_3","nodeType":"YulIdentifier","src":"513:2:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"494:3:17"},"nodeType":"YulFunctionCall","src":"494:22:17"},{"kind":"number","nodeType":"YulLiteral","src":"518:2:17","type":"","value":"63"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"490:3:17"},"nodeType":"YulFunctionCall","src":"490:31:17"},{"name":"_3","nodeType":"YulIdentifier","src":"523:2:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"486:3:17"},"nodeType":"YulFunctionCall","src":"486:40:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"474:3:17"},"nodeType":"YulFunctionCall","src":"474:53:17"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"460:10:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"586:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"588:16:17"},"nodeType":"YulFunctionCall","src":"588:18:17"},"nodeType":"YulExpressionStatement","src":"588:18:17"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"545:10:17"},{"name":"_2","nodeType":"YulIdentifier","src":"557:2:17"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"542:2:17"},"nodeType":"YulFunctionCall","src":"542:18:17"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"565:10:17"},{"name":"memPtr","nodeType":"YulIdentifier","src":"577:6:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"562:2:17"},"nodeType":"YulFunctionCall","src":"562:22:17"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"539:2:17"},"nodeType":"YulFunctionCall","src":"539:46:17"},"nodeType":"YulIf","src":"536:72:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"624:2:17","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"628:10:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"617:6:17"},"nodeType":"YulFunctionCall","src":"617:22:17"},"nodeType":"YulExpressionStatement","src":"617:22:17"},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"655:6:17"},{"name":"_1","nodeType":"YulIdentifier","src":"663:2:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"648:6:17"},"nodeType":"YulFunctionCall","src":"648:18:17"},"nodeType":"YulExpressionStatement","src":"648:18:17"},{"nodeType":"YulVariableDeclaration","src":"675:14:17","value":{"kind":"number","nodeType":"YulLiteral","src":"685:4:17","type":"","value":"0x20"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"679:2:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"735:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"744:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"747:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"737:6:17"},"nodeType":"YulFunctionCall","src":"737:12:17"},"nodeType":"YulExpressionStatement","src":"737:12:17"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"712:6:17"},{"name":"_1","nodeType":"YulIdentifier","src":"720:2:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"708:3:17"},"nodeType":"YulFunctionCall","src":"708:15:17"},{"name":"_4","nodeType":"YulIdentifier","src":"725:2:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"704:3:17"},"nodeType":"YulFunctionCall","src":"704:24:17"},{"name":"end","nodeType":"YulIdentifier","src":"730:3:17"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"701:2:17"},"nodeType":"YulFunctionCall","src":"701:33:17"},"nodeType":"YulIf","src":"698:53:17"},{"nodeType":"YulVariableDeclaration","src":"760:10:17","value":{"kind":"number","nodeType":"YulLiteral","src":"769:1:17","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"764:1:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"825:87:17","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"854:6:17"},{"name":"i","nodeType":"YulIdentifier","src":"862:1:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"850:3:17"},"nodeType":"YulFunctionCall","src":"850:14:17"},{"name":"_4","nodeType":"YulIdentifier","src":"866:2:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"846:3:17"},"nodeType":"YulFunctionCall","src":"846:23:17"},{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"885:6:17"},{"name":"i","nodeType":"YulIdentifier","src":"893:1:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"881:3:17"},"nodeType":"YulFunctionCall","src":"881:14:17"},{"name":"_4","nodeType":"YulIdentifier","src":"897:2:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"877:3:17"},"nodeType":"YulFunctionCall","src":"877:23:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"871:5:17"},"nodeType":"YulFunctionCall","src":"871:30:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"839:6:17"},"nodeType":"YulFunctionCall","src":"839:63:17"},"nodeType":"YulExpressionStatement","src":"839:63:17"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"790:1:17"},{"name":"_1","nodeType":"YulIdentifier","src":"793:2:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"787:2:17"},"nodeType":"YulFunctionCall","src":"787:9:17"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"797:19:17","statements":[{"nodeType":"YulAssignment","src":"799:15:17","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"808:1:17"},{"name":"_4","nodeType":"YulIdentifier","src":"811:2:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"804:3:17"},"nodeType":"YulFunctionCall","src":"804:10:17"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"799:1:17"}]}]},"pre":{"nodeType":"YulBlock","src":"783:3:17","statements":[]},"src":"779:133:17"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"936:6:17"},{"name":"_1","nodeType":"YulIdentifier","src":"944:2:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"932:3:17"},"nodeType":"YulFunctionCall","src":"932:15:17"},{"name":"_4","nodeType":"YulIdentifier","src":"949:2:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"928:3:17"},"nodeType":"YulFunctionCall","src":"928:24:17"},{"kind":"number","nodeType":"YulLiteral","src":"954:1:17","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"921:6:17"},"nodeType":"YulFunctionCall","src":"921:35:17"},"nodeType":"YulExpressionStatement","src":"921:35:17"},{"nodeType":"YulAssignment","src":"965:15:17","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"974:6:17"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"965:5:17"}]}]},"name":"abi_decode_string_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"184:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"192:3:17","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"200:5:17","type":""}],"src":"146:840:17"},{"body":{"nodeType":"YulBlock","src":"1126:488:17","statements":[{"body":{"nodeType":"YulBlock","src":"1172:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1181:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1184:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1174:6:17"},"nodeType":"YulFunctionCall","src":"1174:12:17"},"nodeType":"YulExpressionStatement","src":"1174:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1147:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"1156:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1143:3:17"},"nodeType":"YulFunctionCall","src":"1143:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"1168:2:17","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1139:3:17"},"nodeType":"YulFunctionCall","src":"1139:32:17"},"nodeType":"YulIf","src":"1136:52:17"},{"nodeType":"YulVariableDeclaration","src":"1197:30:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1217:9:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1211:5:17"},"nodeType":"YulFunctionCall","src":"1211:16:17"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1201:6:17","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1236:28:17","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1254:2:17","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"1258:1:17","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1250:3:17"},"nodeType":"YulFunctionCall","src":"1250:10:17"},{"kind":"number","nodeType":"YulLiteral","src":"1262:1:17","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1246:3:17"},"nodeType":"YulFunctionCall","src":"1246:18:17"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1240:2:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"1291:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1300:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1303:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1293:6:17"},"nodeType":"YulFunctionCall","src":"1293:12:17"},"nodeType":"YulExpressionStatement","src":"1293:12:17"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1279:6:17"},{"name":"_1","nodeType":"YulIdentifier","src":"1287:2:17"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1276:2:17"},"nodeType":"YulFunctionCall","src":"1276:14:17"},"nodeType":"YulIf","src":"1273:34:17"},{"nodeType":"YulAssignment","src":"1316:71:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1359:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"1370:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1355:3:17"},"nodeType":"YulFunctionCall","src":"1355:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1379:7:17"}],"functionName":{"name":"abi_decode_string_fromMemory","nodeType":"YulIdentifier","src":"1326:28:17"},"nodeType":"YulFunctionCall","src":"1326:61:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1316:6:17"}]},{"nodeType":"YulVariableDeclaration","src":"1396:41:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1422:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"1433:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1418:3:17"},"nodeType":"YulFunctionCall","src":"1418:18:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1412:5:17"},"nodeType":"YulFunctionCall","src":"1412:25:17"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"1400:8:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"1466:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1475:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1478:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1468:6:17"},"nodeType":"YulFunctionCall","src":"1468:12:17"},"nodeType":"YulExpressionStatement","src":"1468:12:17"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"1452:8:17"},{"name":"_1","nodeType":"YulIdentifier","src":"1462:2:17"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1449:2:17"},"nodeType":"YulFunctionCall","src":"1449:16:17"},"nodeType":"YulIf","src":"1446:36:17"},{"nodeType":"YulAssignment","src":"1491:73:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1534:9:17"},{"name":"offset_1","nodeType":"YulIdentifier","src":"1545:8:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1530:3:17"},"nodeType":"YulFunctionCall","src":"1530:24:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1556:7:17"}],"functionName":{"name":"abi_decode_string_fromMemory","nodeType":"YulIdentifier","src":"1501:28:17"},"nodeType":"YulFunctionCall","src":"1501:63:17"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1491:6:17"}]},{"nodeType":"YulAssignment","src":"1573:35:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1593:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"1604:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1589:3:17"},"nodeType":"YulFunctionCall","src":"1589:18:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1583:5:17"},"nodeType":"YulFunctionCall","src":"1583:25:17"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1573:6:17"}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1076:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1087:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1099:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1107:6:17","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1115:6:17","type":""}],"src":"991:623:17"},{"body":{"nodeType":"YulBlock","src":"1674:325:17","statements":[{"nodeType":"YulAssignment","src":"1684:22:17","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1698:1:17","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"1701:4:17"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"1694:3:17"},"nodeType":"YulFunctionCall","src":"1694:12:17"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1684:6:17"}]},{"nodeType":"YulVariableDeclaration","src":"1715:38:17","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1745:4:17"},{"kind":"number","nodeType":"YulLiteral","src":"1751:1:17","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1741:3:17"},"nodeType":"YulFunctionCall","src":"1741:12:17"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"1719:18:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"1792:31:17","statements":[{"nodeType":"YulAssignment","src":"1794:27:17","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1808:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"1816:4:17","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1804:3:17"},"nodeType":"YulFunctionCall","src":"1804:17:17"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1794:6:17"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"1772:18:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1765:6:17"},"nodeType":"YulFunctionCall","src":"1765:26:17"},"nodeType":"YulIf","src":"1762:61:17"},{"body":{"nodeType":"YulBlock","src":"1882:111:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1903:1:17","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1910:3:17","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"1915:10:17","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1906:3:17"},"nodeType":"YulFunctionCall","src":"1906:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1896:6:17"},"nodeType":"YulFunctionCall","src":"1896:31:17"},"nodeType":"YulExpressionStatement","src":"1896:31:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1947:1:17","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1950:4:17","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1940:6:17"},"nodeType":"YulFunctionCall","src":"1940:15:17"},"nodeType":"YulExpressionStatement","src":"1940:15:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1975:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1978:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1968:6:17"},"nodeType":"YulFunctionCall","src":"1968:15:17"},"nodeType":"YulExpressionStatement","src":"1968:15:17"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"1838:18:17"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1861:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"1869:2:17","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1858:2:17"},"nodeType":"YulFunctionCall","src":"1858:14:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1835:2:17"},"nodeType":"YulFunctionCall","src":"1835:38:17"},"nodeType":"YulIf","src":"1832:161:17"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"1654:4:17","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"1663:6:17","type":""}],"src":"1619:380:17"},{"body":{"nodeType":"YulBlock","src":"2060:65:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2077:1:17","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"2080:3:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2070:6:17"},"nodeType":"YulFunctionCall","src":"2070:14:17"},"nodeType":"YulExpressionStatement","src":"2070:14:17"},{"nodeType":"YulAssignment","src":"2093:26:17","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2111:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2114:4:17","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"2101:9:17"},"nodeType":"YulFunctionCall","src":"2101:18:17"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"2093:4:17"}]}]},"name":"array_dataslot_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"2043:3:17","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"2051:4:17","type":""}],"src":"2004:121:17"},{"body":{"nodeType":"YulBlock","src":"2211:464:17","statements":[{"body":{"nodeType":"YulBlock","src":"2244:425:17","statements":[{"nodeType":"YulVariableDeclaration","src":"2258:11:17","value":{"kind":"number","nodeType":"YulLiteral","src":"2268:1:17","type":"","value":"0"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"2262:2:17","type":""}]},{"expression":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"2289:2:17"},{"name":"array","nodeType":"YulIdentifier","src":"2293:5:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2282:6:17"},"nodeType":"YulFunctionCall","src":"2282:17:17"},"nodeType":"YulExpressionStatement","src":"2282:17:17"},{"nodeType":"YulVariableDeclaration","src":"2312:31:17","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"2334:2:17"},{"kind":"number","nodeType":"YulLiteral","src":"2338:4:17","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"2324:9:17"},"nodeType":"YulFunctionCall","src":"2324:19:17"},"variables":[{"name":"data","nodeType":"YulTypedName","src":"2316:4:17","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2356:57:17","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2379:4:17"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2389:1:17","type":"","value":"5"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"2396:10:17"},{"kind":"number","nodeType":"YulLiteral","src":"2408:2:17","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2392:3:17"},"nodeType":"YulFunctionCall","src":"2392:19:17"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2385:3:17"},"nodeType":"YulFunctionCall","src":"2385:27:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2375:3:17"},"nodeType":"YulFunctionCall","src":"2375:38:17"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"2360:11:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"2450:23:17","statements":[{"nodeType":"YulAssignment","src":"2452:19:17","value":{"name":"data","nodeType":"YulIdentifier","src":"2467:4:17"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"2452:11:17"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"2432:10:17"},{"kind":"number","nodeType":"YulLiteral","src":"2444:4:17","type":"","value":"0x20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2429:2:17"},"nodeType":"YulFunctionCall","src":"2429:20:17"},"nodeType":"YulIf","src":"2426:47:17"},{"nodeType":"YulVariableDeclaration","src":"2486:41:17","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2500:4:17"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2510:1:17","type":"","value":"5"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"2517:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"2522:2:17","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2513:3:17"},"nodeType":"YulFunctionCall","src":"2513:12:17"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2506:3:17"},"nodeType":"YulFunctionCall","src":"2506:20:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2496:3:17"},"nodeType":"YulFunctionCall","src":"2496:31:17"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"2490:2:17","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2540:24:17","value":{"name":"deleteStart","nodeType":"YulIdentifier","src":"2553:11:17"},"variables":[{"name":"start","nodeType":"YulTypedName","src":"2544:5:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"2638:21:17","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2647:5:17"},{"name":"_1","nodeType":"YulIdentifier","src":"2654:2:17"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2640:6:17"},"nodeType":"YulFunctionCall","src":"2640:17:17"},"nodeType":"YulExpressionStatement","src":"2640:17:17"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2588:5:17"},{"name":"_2","nodeType":"YulIdentifier","src":"2595:2:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2585:2:17"},"nodeType":"YulFunctionCall","src":"2585:13:17"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2599:26:17","statements":[{"nodeType":"YulAssignment","src":"2601:22:17","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2614:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"2621:1:17","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2610:3:17"},"nodeType":"YulFunctionCall","src":"2610:13:17"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"2601:5:17"}]}]},"pre":{"nodeType":"YulBlock","src":"2581:3:17","statements":[]},"src":"2577:82:17"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"2227:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"2232:2:17","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2224:2:17"},"nodeType":"YulFunctionCall","src":"2224:11:17"},"nodeType":"YulIf","src":"2221:448:17"}]},"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"2183:5:17","type":""},{"name":"len","nodeType":"YulTypedName","src":"2190:3:17","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"2195:10:17","type":""}],"src":"2130:545:17"},{"body":{"nodeType":"YulBlock","src":"2765:81:17","statements":[{"nodeType":"YulAssignment","src":"2775:65:17","value":{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2790:4:17"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2808:1:17","type":"","value":"3"},{"name":"len","nodeType":"YulIdentifier","src":"2811:3:17"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2804:3:17"},"nodeType":"YulFunctionCall","src":"2804:11:17"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2821:1:17","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2817:3:17"},"nodeType":"YulFunctionCall","src":"2817:6:17"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2800:3:17"},"nodeType":"YulFunctionCall","src":"2800:24:17"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2796:3:17"},"nodeType":"YulFunctionCall","src":"2796:29:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2786:3:17"},"nodeType":"YulFunctionCall","src":"2786:40:17"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2832:1:17","type":"","value":"1"},{"name":"len","nodeType":"YulIdentifier","src":"2835:3:17"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2828:3:17"},"nodeType":"YulFunctionCall","src":"2828:11:17"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"2783:2:17"},"nodeType":"YulFunctionCall","src":"2783:57:17"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"2775:4:17"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"2742:4:17","type":""},{"name":"len","nodeType":"YulTypedName","src":"2748:3:17","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"2756:4:17","type":""}],"src":"2680:166:17"},{"body":{"nodeType":"YulBlock","src":"2947:1256:17","statements":[{"nodeType":"YulVariableDeclaration","src":"2957:24:17","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2977:3:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2971:5:17"},"nodeType":"YulFunctionCall","src":"2971:10:17"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"2961:6:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"3024:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"3026:16:17"},"nodeType":"YulFunctionCall","src":"3026:18:17"},"nodeType":"YulExpressionStatement","src":"3026:18:17"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"2996:6:17"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3012:2:17","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"3016:1:17","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3008:3:17"},"nodeType":"YulFunctionCall","src":"3008:10:17"},{"kind":"number","nodeType":"YulLiteral","src":"3020:1:17","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3004:3:17"},"nodeType":"YulFunctionCall","src":"3004:18:17"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2993:2:17"},"nodeType":"YulFunctionCall","src":"2993:30:17"},"nodeType":"YulIf","src":"2990:56:17"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3099:4:17"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3137:4:17"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"3131:5:17"},"nodeType":"YulFunctionCall","src":"3131:11:17"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"3105:25:17"},"nodeType":"YulFunctionCall","src":"3105:38:17"},{"name":"newLen","nodeType":"YulIdentifier","src":"3145:6:17"}],"functionName":{"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulIdentifier","src":"3055:43:17"},"nodeType":"YulFunctionCall","src":"3055:97:17"},"nodeType":"YulExpressionStatement","src":"3055:97:17"},{"nodeType":"YulVariableDeclaration","src":"3161:18:17","value":{"kind":"number","nodeType":"YulLiteral","src":"3178:1:17","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"3165:9:17","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3188:23:17","value":{"kind":"number","nodeType":"YulLiteral","src":"3207:4:17","type":"","value":"0x20"},"variables":[{"name":"srcOffset_1","nodeType":"YulTypedName","src":"3192:11:17","type":""}]},{"nodeType":"YulAssignment","src":"3220:24:17","value":{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"3233:11:17"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"3220:9:17"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"3290:656:17","statements":[{"nodeType":"YulVariableDeclaration","src":"3304:35:17","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"3323:6:17"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3335:2:17","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3331:3:17"},"nodeType":"YulFunctionCall","src":"3331:7:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3319:3:17"},"nodeType":"YulFunctionCall","src":"3319:20:17"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"3308:7:17","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3352:49:17","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3396:4:17"}],"functionName":{"name":"array_dataslot_string_storage","nodeType":"YulIdentifier","src":"3366:29:17"},"nodeType":"YulFunctionCall","src":"3366:35:17"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"3356:6:17","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3414:10:17","value":{"kind":"number","nodeType":"YulLiteral","src":"3423:1:17","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"3418:1:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"3501:172:17","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"3526:6:17"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3544:3:17"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"3549:9:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3540:3:17"},"nodeType":"YulFunctionCall","src":"3540:19:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3534:5:17"},"nodeType":"YulFunctionCall","src":"3534:26:17"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"3519:6:17"},"nodeType":"YulFunctionCall","src":"3519:42:17"},"nodeType":"YulExpressionStatement","src":"3519:42:17"},{"nodeType":"YulAssignment","src":"3578:24:17","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"3592:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"3600:1:17","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3588:3:17"},"nodeType":"YulFunctionCall","src":"3588:14:17"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"3578:6:17"}]},{"nodeType":"YulAssignment","src":"3619:40:17","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"3636:9:17"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"3647:11:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3632:3:17"},"nodeType":"YulFunctionCall","src":"3632:27:17"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"3619:9:17"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3448:1:17"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"3451:7:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3445:2:17"},"nodeType":"YulFunctionCall","src":"3445:14:17"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"3460:28:17","statements":[{"nodeType":"YulAssignment","src":"3462:24:17","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3471:1:17"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"3474:11:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3467:3:17"},"nodeType":"YulFunctionCall","src":"3467:19:17"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"3462:1:17"}]}]},"pre":{"nodeType":"YulBlock","src":"3441:3:17","statements":[]},"src":"3437:236:17"},{"body":{"nodeType":"YulBlock","src":"3721:166:17","statements":[{"nodeType":"YulVariableDeclaration","src":"3739:43:17","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3766:3:17"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"3771:9:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3762:3:17"},"nodeType":"YulFunctionCall","src":"3762:19:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3756:5:17"},"nodeType":"YulFunctionCall","src":"3756:26:17"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"3743:9:17","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"3806:6:17"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"3818:9:17"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3845:1:17","type":"","value":"3"},{"name":"newLen","nodeType":"YulIdentifier","src":"3848:6:17"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3841:3:17"},"nodeType":"YulFunctionCall","src":"3841:14:17"},{"kind":"number","nodeType":"YulLiteral","src":"3857:3:17","type":"","value":"248"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3837:3:17"},"nodeType":"YulFunctionCall","src":"3837:24:17"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3867:1:17","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3863:3:17"},"nodeType":"YulFunctionCall","src":"3863:6:17"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"3833:3:17"},"nodeType":"YulFunctionCall","src":"3833:37:17"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3829:3:17"},"nodeType":"YulFunctionCall","src":"3829:42:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3814:3:17"},"nodeType":"YulFunctionCall","src":"3814:58:17"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"3799:6:17"},"nodeType":"YulFunctionCall","src":"3799:74:17"},"nodeType":"YulExpressionStatement","src":"3799:74:17"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"3692:7:17"},{"name":"newLen","nodeType":"YulIdentifier","src":"3701:6:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3689:2:17"},"nodeType":"YulFunctionCall","src":"3689:19:17"},"nodeType":"YulIf","src":"3686:201:17"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3907:4:17"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3921:1:17","type":"","value":"1"},{"name":"newLen","nodeType":"YulIdentifier","src":"3924:6:17"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3917:3:17"},"nodeType":"YulFunctionCall","src":"3917:14:17"},{"kind":"number","nodeType":"YulLiteral","src":"3933:1:17","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3913:3:17"},"nodeType":"YulFunctionCall","src":"3913:22:17"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"3900:6:17"},"nodeType":"YulFunctionCall","src":"3900:36:17"},"nodeType":"YulExpressionStatement","src":"3900:36:17"}]},"nodeType":"YulCase","src":"3283:663:17","value":{"kind":"number","nodeType":"YulLiteral","src":"3288:1:17","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"3963:234:17","statements":[{"nodeType":"YulVariableDeclaration","src":"3977:14:17","value":{"kind":"number","nodeType":"YulLiteral","src":"3990:1:17","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"3981:5:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"4026:67:17","statements":[{"nodeType":"YulAssignment","src":"4044:35:17","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4063:3:17"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"4068:9:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4059:3:17"},"nodeType":"YulFunctionCall","src":"4059:19:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4053:5:17"},"nodeType":"YulFunctionCall","src":"4053:26:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"4044:5:17"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"4007:6:17"},"nodeType":"YulIf","src":"4004:89:17"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4113:4:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4172:5:17"},{"name":"newLen","nodeType":"YulIdentifier","src":"4179:6:17"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"4119:52:17"},"nodeType":"YulFunctionCall","src":"4119:67:17"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"4106:6:17"},"nodeType":"YulFunctionCall","src":"4106:81:17"},"nodeType":"YulExpressionStatement","src":"4106:81:17"}]},"nodeType":"YulCase","src":"3955:242:17","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"3263:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"3271:2:17","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3260:2:17"},"nodeType":"YulFunctionCall","src":"3260:14:17"},"nodeType":"YulSwitch","src":"3253:944:17"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"2932:4:17","type":""},{"name":"src","nodeType":"YulTypedName","src":"2938:3:17","type":""}],"src":"2851:1352:17"},{"body":{"nodeType":"YulBlock","src":"4382:181:17","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4399:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"4410:2:17","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4392:6:17"},"nodeType":"YulFunctionCall","src":"4392:21:17"},"nodeType":"YulExpressionStatement","src":"4392:21:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4433:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"4444:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4429:3:17"},"nodeType":"YulFunctionCall","src":"4429:18:17"},{"kind":"number","nodeType":"YulLiteral","src":"4449:2:17","type":"","value":"31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4422:6:17"},"nodeType":"YulFunctionCall","src":"4422:30:17"},"nodeType":"YulExpressionStatement","src":"4422:30:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4472:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"4483:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4468:3:17"},"nodeType":"YulFunctionCall","src":"4468:18:17"},{"hexValue":"526f6c65733a206163636f756e7420616c72656164792068617320726f6c65","kind":"string","nodeType":"YulLiteral","src":"4488:33:17","type":"","value":"Roles: account already has role"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4461:6:17"},"nodeType":"YulFunctionCall","src":"4461:61:17"},"nodeType":"YulExpressionStatement","src":"4461:61:17"},{"nodeType":"YulAssignment","src":"4531:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4543:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"4554:2:17","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4539:3:17"},"nodeType":"YulFunctionCall","src":"4539:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4531:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_0f76c3a3e97a37fcdff532c2741c10933ebf2b769d5475388e30ae4f7155f13a__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4359:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4373:4:17","type":""}],"src":"4208:355:17"},{"body":{"nodeType":"YulBlock","src":"4742:224:17","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4759:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"4770:2:17","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4752:6:17"},"nodeType":"YulFunctionCall","src":"4752:21:17"},"nodeType":"YulExpressionStatement","src":"4752:21:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4793:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"4804:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4789:3:17"},"nodeType":"YulFunctionCall","src":"4789:18:17"},{"kind":"number","nodeType":"YulLiteral","src":"4809:2:17","type":"","value":"34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4782:6:17"},"nodeType":"YulFunctionCall","src":"4782:30:17"},"nodeType":"YulExpressionStatement","src":"4782:30:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4832:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"4843:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4828:3:17"},"nodeType":"YulFunctionCall","src":"4828:18:17"},{"hexValue":"526f6c65733a206163636f756e7420697320746865207a65726f206164647265","kind":"string","nodeType":"YulLiteral","src":"4848:34:17","type":"","value":"Roles: account is the zero addre"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4821:6:17"},"nodeType":"YulFunctionCall","src":"4821:62:17"},"nodeType":"YulExpressionStatement","src":"4821:62:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4903:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"4914:2:17","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4899:3:17"},"nodeType":"YulFunctionCall","src":"4899:18:17"},{"hexValue":"7373","kind":"string","nodeType":"YulLiteral","src":"4919:4:17","type":"","value":"ss"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4892:6:17"},"nodeType":"YulFunctionCall","src":"4892:32:17"},"nodeType":"YulExpressionStatement","src":"4892:32:17"},{"nodeType":"YulAssignment","src":"4933:27:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4945:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"4956:3:17","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4941:3:17"},"nodeType":"YulFunctionCall","src":"4941:19:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4933:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_9d214fa89563f4e6456a3929327e54500ea1cde2c0ba9fb2035ec106190d682f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4719:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4733:4:17","type":""}],"src":"4568:398:17"}]},"contents":"{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), _4), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        mstore(add(add(memPtr, _1), _4), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n        value2 := mload(add(headStart, 64))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_0f76c3a3e97a37fcdff532c2741c10933ebf2b769d5475388e30ae4f7155f13a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"Roles: account already has role\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9d214fa89563f4e6456a3929327e54500ea1cde2c0ba9fb2035ec106190d682f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"Roles: account is the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n}","id":17,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH12 0x204FCE5E3E25026110000000 PUSH1 0x4 SSTORE PUSH1 0x2 PUSH1 0x5 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x26 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1426 CODESIZE SUB DUP1 PUSH3 0x1426 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x49 SWAP2 PUSH3 0x31B JUMP JUMPDEST DUP3 DUP3 PUSH1 0x1B PUSH3 0x58 CALLER PUSH3 0xAB JUMP JUMPDEST PUSH1 0x1 PUSH3 0x66 DUP5 DUP3 PUSH3 0x41D JUMP JUMPDEST POP PUSH1 0x2 PUSH3 0x75 DUP4 DUP3 PUSH3 0x41D JUMP JUMPDEST POP PUSH1 0x3 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0xFF SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP PUSH3 0x9F SWAP1 POP PUSH3 0x99 CALLER SWAP1 JUMP JUMPDEST PUSH3 0xFB JUMP JUMPDEST PUSH1 0xB SSTORE POP PUSH3 0x4E9 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH3 0x116 DUP2 PUSH1 0xD PUSH3 0x14D PUSH1 0x20 SHL PUSH3 0x64F OR SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0x6AE172837EA30B801FBFCDD4108AA1D5BF8FF775444FD70256B44E6BF3DFC3F6 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH3 0x159 DUP3 DUP3 PUSH3 0x1D1 JUMP JUMPDEST ISZERO PUSH3 0x1AC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526F6C65733A206163636F756E7420616C72656164792068617320726F6C6500 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH3 0x236 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526F6C65733A206163636F756E7420697320746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH3 0x1A3 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x27E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x29B JUMPI PUSH3 0x29B PUSH3 0x256 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x2C6 JUMPI PUSH3 0x2C6 PUSH3 0x256 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 DUP4 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0x2E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x307 JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0x2E8 JUMP JUMPDEST PUSH1 0x0 SWAP4 DUP2 ADD SWAP1 SWAP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x331 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x349 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x357 DUP8 DUP4 DUP9 ADD PUSH3 0x26C JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x36E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x37D DUP7 DUP3 DUP8 ADD PUSH3 0x26C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD MLOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x3A3 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x3C4 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x418 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x3F3 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x414 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x3FF JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x439 JUMPI PUSH3 0x439 PUSH3 0x256 JUMP JUMPDEST PUSH3 0x451 DUP2 PUSH3 0x44A DUP5 SLOAD PUSH3 0x38E JUMP JUMPDEST DUP5 PUSH3 0x3CA JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x489 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x470 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x414 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x4BA JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x499 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x4D9 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0xF2D DUP1 PUSH3 0x4F9 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x16D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xCE JUMPI DUP1 PUSH4 0x98650275 GT PUSH2 0x87 JUMPI DUP1 PUSH4 0x98650275 EQ PUSH2 0x2F8 JUMPI DUP1 PUSH4 0xA7AC30B0 EQ PUSH2 0x300 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1A3 JUMPI DUP1 PUSH4 0xAA271E1A EQ PUSH2 0x309 JUMPI DUP1 PUSH4 0xB7C246D7 EQ PUSH2 0x31C JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x325 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x33B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x294 JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x29C JUMPI DUP1 PUSH4 0x817E9D31 EQ PUSH2 0x2AF JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2C2 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2DD JUMPI DUP1 PUSH4 0x983B2D56 EQ PUSH2 0x2E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0x12B JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x221 JUMPI DUP1 PUSH4 0x3EAAF86B EQ PUSH2 0x236 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x248 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x25B JUMPI DUP1 PUSH4 0x54F703F8 EQ PUSH2 0x270 JUMPI DUP1 PUSH4 0x6D150611 EQ PUSH2 0x278 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x281 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0xD87A9C EQ PUSH2 0x172 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x18E JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1A3 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1C1 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1C9 JUMPI DUP1 PUSH4 0x27E235E3 EQ PUSH2 0x1D7 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x17B PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x196 PUSH2 0x34E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x185 SWAP2 SWAP1 PUSH2 0xCAE JUMP JUMPDEST PUSH2 0x1B1 PUSH2 0x16D CALLDATASIZE PUSH1 0x4 PUSH2 0xD18 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x185 JUMP JUMPDEST PUSH2 0x17B PUSH2 0x3E0 JUMP JUMPDEST PUSH2 0x1B1 PUSH2 0x16D CALLDATASIZE PUSH1 0x4 PUSH2 0xD42 JUMP JUMPDEST PUSH2 0x206 PUSH2 0x1E5 CALLDATASIZE PUSH1 0x4 PUSH2 0xD7E JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD SWAP1 SWAP2 SWAP1 DUP4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x185 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x185 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x9 SLOAD PUSH1 0xA SLOAD PUSH2 0x206 SWAP3 SWAP2 SWAP1 DUP4 JUMP JUMPDEST PUSH2 0x1B1 PUSH2 0x256 CALLDATASIZE PUSH1 0x4 PUSH2 0xD18 JUMP JUMPDEST PUSH2 0x40A JUMP JUMPDEST PUSH2 0x26E PUSH2 0x269 CALLDATASIZE PUSH1 0x4 PUSH2 0xD99 JUMP JUMPDEST PUSH2 0x44E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x17B PUSH2 0x45B JUMP JUMPDEST PUSH2 0x17B PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH2 0x17B PUSH2 0x28F CALLDATASIZE PUSH1 0x4 PUSH2 0xD7E JUMP JUMPDEST PUSH2 0x495 JUMP JUMPDEST PUSH2 0x26E PUSH2 0x4CE JUMP JUMPDEST PUSH2 0x26E PUSH2 0x2AA CALLDATASIZE PUSH1 0x4 PUSH2 0xD18 JUMP JUMPDEST PUSH2 0x4E2 JUMP JUMPDEST PUSH2 0x1B1 PUSH2 0x2BD CALLDATASIZE PUSH1 0x4 PUSH2 0xD99 JUMP JUMPDEST PUSH2 0x4F0 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x185 JUMP JUMPDEST PUSH2 0x196 PUSH2 0x586 JUMP JUMPDEST PUSH2 0x26E PUSH2 0x2F3 CALLDATASIZE PUSH1 0x4 PUSH2 0xD7E JUMP JUMPDEST PUSH2 0x595 JUMP JUMPDEST PUSH2 0x26E PUSH2 0x5C3 JUMP JUMPDEST PUSH2 0x17B PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1B1 PUSH2 0x317 CALLDATASIZE PUSH1 0x4 PUSH2 0xD7E JUMP JUMPDEST PUSH2 0x5CC JUMP JUMPDEST PUSH2 0x17B PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x17B PUSH2 0x333 CALLDATASIZE PUSH1 0x4 PUSH2 0xDB2 JUMP JUMPDEST PUSH1 0x0 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x26E PUSH2 0x349 CALLDATASIZE PUSH1 0x4 PUSH2 0xD7E JUMP JUMPDEST PUSH2 0x5D9 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x35D SWAP1 PUSH2 0xDE5 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x389 SWAP1 PUSH2 0xDE5 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3D6 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3AB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3D6 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3B9 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x405 PUSH1 0x8 PUSH1 0x2 ADD SLOAD PUSH2 0x3FF PUSH1 0x8 PUSH1 0x0 ADD SLOAD PUSH1 0x8 PUSH1 0x1 ADD SLOAD PUSH2 0x6CB JUMP JUMPDEST SWAP1 PUSH2 0x721 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x415 CALLER PUSH2 0x5CC JUMP JUMPDEST PUSH2 0x43A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x431 SWAP1 PUSH2 0xE19 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x444 DUP4 DUP4 PUSH2 0x72D JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x458 CALLER DUP3 PUSH2 0x83B JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x0 SWAP1 DUP2 JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x48F JUMPI PUSH1 0x5 SLOAD PUSH2 0x47B SWAP1 DUP4 SWAP1 PUSH2 0x932 JUMP JUMPDEST SWAP2 POP DUP1 PUSH2 0x487 DUP2 PUSH2 0xE7F JUMP JUMPDEST SWAP2 POP POP PUSH2 0x463 JUMP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 DUP2 ADD SLOAD DUP2 SLOAD PUSH1 0x1 DUP4 ADD SLOAD PUSH2 0x4C7 SWAP3 SWAP2 PUSH2 0x3FF SWAP2 PUSH2 0x6CB JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x4D6 PUSH2 0x93E JUMP JUMPDEST PUSH2 0x4E0 PUSH1 0x0 PUSH2 0x998 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x4EC DUP3 DUP3 PUSH2 0x9E8 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4FA PUSH2 0x93E JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x0 DUP4 JUMPDEST PUSH1 0x4 SLOAD DUP2 LT PUSH2 0x533 JUMPI PUSH2 0x515 DUP3 PUSH1 0x1 PUSH2 0x721 JUMP JUMPDEST SWAP2 POP PUSH2 0x52C PUSH1 0x5 SLOAD DUP3 PUSH2 0x9F2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x501 JUMP JUMPDEST PUSH1 0x6 DUP3 SWAP1 SSTORE PUSH1 0xB DUP2 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE SWAP1 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0x47EB304B27F9EFB047A046029F8A279A7CC8FCCC6786F1E2F65939639584FBDC SWAP1 PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x35D SWAP1 PUSH2 0xDE5 JUMP JUMPDEST PUSH2 0x59E CALLER PUSH2 0x5CC JUMP JUMPDEST PUSH2 0x5BA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x431 SWAP1 PUSH2 0xE19 JUMP JUMPDEST PUSH2 0x458 DUP2 PUSH2 0x9FE JUMP JUMPDEST PUSH2 0x4E0 CALLER PUSH2 0xA40 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x448 PUSH1 0xD DUP4 PUSH2 0xA82 JUMP JUMPDEST PUSH2 0x5E1 PUSH2 0x93E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x646 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x431 JUMP JUMPDEST PUSH2 0x458 DUP2 PUSH2 0x998 JUMP JUMPDEST PUSH2 0x659 DUP3 DUP3 PUSH2 0xA82 JUMP JUMPDEST ISZERO PUSH2 0x6A6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526F6C65733A206163636F756E7420616C72656164792068617320726F6C6500 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x431 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 SUB PUSH2 0x6DD JUMPI POP PUSH1 0x0 PUSH2 0x448 JUMP JUMPDEST PUSH2 0x6E9 DUP4 PUSH1 0xB SLOAD PUSH2 0xB05 JUMP JUMPDEST SWAP3 POP DUP2 JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x719 JUMPI PUSH1 0x5 SLOAD PUSH2 0x705 SWAP1 DUP6 SWAP1 PUSH2 0x932 JUMP JUMPDEST SWAP4 POP DUP1 PUSH2 0x711 DUP2 PUSH2 0xE7F JUMP JUMPDEST SWAP2 POP POP PUSH2 0x6ED JUMP JUMPDEST POP SWAP2 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C7 DUP3 DUP5 PUSH2 0xE98 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x799 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4175746F5265666163746F72436F696E6167653A206D696E7420746F20746865 PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x207A65726F2061646472657373 PUSH1 0x98 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x431 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x7BB DUP5 PUSH2 0x495 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x7C9 DUP3 DUP6 PUSH2 0x721 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x7D6 DUP3 PUSH2 0xB28 JUMP JUMPDEST DUP1 DUP6 SSTORE PUSH1 0x6 SLOAD PUSH1 0x1 DUP7 ADD SSTORE SWAP1 POP PUSH2 0x7EC DUP6 PUSH2 0xB36 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH2 0x822 DUP5 PUSH2 0xB72 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x8A9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4175746F5265666163746F72436F696E6167653A206275726E2066726F6D2074 PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x6865207A65726F2061646472657373 PUSH1 0x88 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x431 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x8CB DUP5 PUSH2 0x495 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x8D9 DUP3 DUP6 PUSH2 0xB80 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x8E6 DUP3 PUSH2 0xB28 JUMP JUMPDEST DUP1 DUP6 SSTORE PUSH1 0x6 SLOAD PUSH1 0x1 DUP7 ADD SSTORE SWAP1 POP PUSH2 0x8FC DUP6 PUSH2 0xB8C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH2 0x822 DUP5 PUSH2 0xB72 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C7 DUP3 DUP5 PUSH2 0xEAB JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x4E0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x431 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x4EC DUP3 DUP3 PUSH2 0x83B JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C7 DUP3 DUP5 PUSH2 0xEC2 JUMP JUMPDEST PUSH2 0xA09 PUSH1 0xD DUP3 PUSH2 0x64F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0x6AE172837EA30B801FBFCDD4108AA1D5BF8FF775444FD70256B44E6BF3DFC3F6 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0xA4B PUSH1 0xD DUP3 PUSH2 0xBAC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0xE94479A9F7E1952CC78F2D6BAAB678ADC1B772D936C6583DEF489E524CB66692 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xAE5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526F6C65733A206163636F756E7420697320746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x431 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH12 0x33B2E3C9FD0803CE8000000 PUSH2 0xB1E DUP5 DUP5 PUSH2 0xC2E JUMP JUMPDEST PUSH2 0x4C7 SWAP2 SWAP1 PUSH2 0xEC2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x448 DUP3 PUSH1 0xB SLOAD PUSH2 0xC95 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x9 SLOAD PUSH1 0x0 SWAP2 PUSH2 0xB48 SWAP2 PUSH2 0x6CB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xB56 DUP3 DUP5 PUSH2 0x721 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xB63 DUP3 PUSH2 0xB28 JUMP JUMPDEST PUSH1 0x8 SSTORE POP POP PUSH1 0x6 SLOAD PUSH1 0x9 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x448 DUP3 PUSH1 0xB SLOAD PUSH2 0xB05 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C7 DUP3 DUP5 PUSH2 0xEE4 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x9 SLOAD PUSH1 0x0 SWAP2 PUSH2 0xB9E SWAP2 PUSH2 0x6CB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xB56 DUP3 DUP5 PUSH2 0xB80 JUMP JUMPDEST PUSH2 0xBB6 DUP3 DUP3 PUSH2 0xA82 JUMP JUMPDEST PUSH2 0xC0C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526F6C65733A206163636F756E7420646F6573206E6F74206861766520726F6C PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x65 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x431 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO DUP1 PUSH2 0xC52 JUMPI POP DUP3 DUP3 PUSH2 0xC44 DUP2 DUP4 PUSH2 0xEAB JUMP JUMPDEST SWAP3 POP PUSH2 0xC50 SWAP1 DUP4 PUSH2 0xEC2 JUMP JUMPDEST EQ JUMPDEST PUSH2 0x448 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x64732D6D6174682D6D756C2D6F766572666C6F77 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x431 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0xB1E DUP5 PUSH12 0x33B2E3C9FD0803CE8000000 PUSH2 0xC2E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xCDB JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0xCBF JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xD13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD2B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD34 DUP4 PUSH2 0xCFC JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xD57 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD60 DUP5 PUSH2 0xCFC JUMP JUMPDEST SWAP3 POP PUSH2 0xD6E PUSH1 0x20 DUP6 ADD PUSH2 0xCFC JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4C7 DUP3 PUSH2 0xCFC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDAB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDC5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDCE DUP4 PUSH2 0xCFC JUMP JUMPDEST SWAP2 POP PUSH2 0xDDC PUSH1 0x20 DUP5 ADD PUSH2 0xCFC JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xDF9 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x48F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x30 SWAP1 DUP3 ADD MSTORE PUSH32 0x4D696E746572526F6C653A2063616C6C657220646F6573206E6F742068617665 PUSH1 0x40 DUP3 ADD MSTORE PUSH16 0x20746865204D696E74657220726F6C65 PUSH1 0x80 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0xE91 JUMPI PUSH2 0xE91 PUSH2 0xE69 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x448 JUMPI PUSH2 0x448 PUSH2 0xE69 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x448 JUMPI PUSH2 0x448 PUSH2 0xE69 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xEDF JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x448 JUMPI PUSH2 0x448 PUSH2 0xE69 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP1 SWAP4 GT 0x2B SWAP14 0xB0 0xB5 0xDB PUSH18 0x4B3A42F5266C201F24297D7071C6DF5474F4 PUSH20 0x5BDA0E3264736F6C634300081200330000000000 ","sourceMap":"1394:6506:15:-:0;;;1651:8;1616:43;;1697:1;1663:35;;2082:312;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2198:4;2204:6;2212:2;936:32:0;719:10:1;936:18:0;:32::i;:::-;506:5:6;:12;514:4;506:5;:12;:::i;:::-;-1:-1:-1;528:7:6;:16;538:6;528:7;:16;:::i;:::-;-1:-1:-1;554:9:6;:20;;-1:-1:-1;;554:20:6;;;;;;;;;;;;-1:-1:-1;2224:24:15::1;::::0;-1:-1:-1;2235:12:15::1;719:10:1::0;;640:96;2235:12:15::1;2224:10;:24::i;:::-;2254:7;:16:::0;-1:-1:-1;1394:6506:15;;-1:-1:-1;1394:6506:15;2433:187:0;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:0;;;-1:-1:-1;;;;;;2541:17:0;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;2803:113:15:-;2857:21;2870:7;2857:8;:12;;;;;;:21;;;;:::i;:::-;2891:20;;-1:-1:-1;;;;;2891:20:15;;;;;;;;2803:113;:::o;260:175:10:-;337:18;341:4;347:7;337:3;:18::i;:::-;336:19;328:63;;;;-1:-1:-1;;;328:63:10;;4410:2:17;328:63:10;;;4392:21:17;4449:2;4429:18;;;4422:30;4488:33;4468:18;;;4461:61;4539:18;;328:63:10;;;;;;;;;-1:-1:-1;;;;;401:20:10;:11;:20;;;;;;;;;;;:27;;-1:-1:-1;;401:27:10;424:4;401:27;;;260:175::o;779:200::-;851:4;-1:-1:-1;;;;;875:21:10;;867:68;;;;-1:-1:-1;;;867:68:10;;4770:2:17;867:68:10;;;4752:21:17;4809:2;4789:18;;;4782:30;4848:34;4828:18;;;4821:62;-1:-1:-1;;;4899:18:17;;;4892:32;4941:19;;867:68:10;4568:398:17;867:68:10;-1:-1:-1;;;;;;952:20:10;:11;:20;;;;;;;;;;;;;;;779:200::o;14:127:17:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:840;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:17;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:17;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;954:1;932:15;;;928:24;;;921:35;;;;936:6;146:840;-1:-1:-1;;;;146:840:17:o;991:623::-;1099:6;1107;1115;1168:2;1156:9;1147:7;1143:23;1139:32;1136:52;;;1184:1;1181;1174:12;1136:52;1211:16;;-1:-1:-1;;;;;1276:14:17;;;1273:34;;;1303:1;1300;1293:12;1273:34;1326:61;1379:7;1370:6;1359:9;1355:22;1326:61;:::i;:::-;1316:71;;1433:2;1422:9;1418:18;1412:25;1396:41;;1462:2;1452:8;1449:16;1446:36;;;1478:1;1475;1468:12;1446:36;;1501:63;1556:7;1545:8;1534:9;1530:24;1501:63;:::i;:::-;1491:73;;;1604:2;1593:9;1589:18;1583:25;1573:35;;991:623;;;;;:::o;1619:380::-;1698:1;1694:12;;;;1741;;;1762:61;;1816:4;1808:6;1804:17;1794:27;;1762:61;1869:2;1861:6;1858:14;1838:18;1835:38;1832:161;;1915:10;1910:3;1906:20;1903:1;1896:31;1950:4;1947:1;1940:15;1978:4;1975:1;1968:15;1832:161;;1619:380;;;:::o;2130:545::-;2232:2;2227:3;2224:11;2221:448;;;2268:1;2293:5;2289:2;2282:17;2338:4;2334:2;2324:19;2408:2;2396:10;2392:19;2389:1;2385:27;2379:4;2375:38;2444:4;2432:10;2429:20;2426:47;;;-1:-1:-1;2467:4:17;2426:47;2522:2;2517:3;2513:12;2510:1;2506:20;2500:4;2496:31;2486:41;;2577:82;2595:2;2588:5;2585:13;2577:82;;;2640:17;;;2621:1;2610:13;2577:82;;;2581:3;;;2221:448;2130:545;;;:::o;2851:1352::-;2971:10;;-1:-1:-1;;;;;2993:30:17;;2990:56;;;3026:18;;:::i;:::-;3055:97;3145:6;3105:38;3137:4;3131:11;3105:38;:::i;:::-;3099:4;3055:97;:::i;:::-;3207:4;;3271:2;3260:14;;3288:1;3283:663;;;;3990:1;4007:6;4004:89;;;-1:-1:-1;4059:19:17;;;4053:26;4004:89;-1:-1:-1;;2808:1:17;2804:11;;;2800:24;2796:29;2786:40;2832:1;2828:11;;;2783:57;4106:81;;3253:944;;3283:663;2077:1;2070:14;;;2114:4;2101:18;;-1:-1:-1;;3319:20:17;;;3437:236;3451:7;3448:1;3445:14;3437:236;;;3540:19;;;3534:26;3519:42;;3632:27;;;;3600:1;3588:14;;;;3467:19;;3437:236;;;3441:3;3701:6;3692:7;3689:19;3686:201;;;3762:19;;;3756:26;-1:-1:-1;;3845:1:17;3841:14;;;3857:3;3837:24;3833:37;3829:42;3814:58;3799:74;;3686:201;-1:-1:-1;;;;;3933:1:17;3917:14;;;3913:22;3900:36;;-1:-1:-1;2851:1352:17:o;4568:398::-;1394:6506:15;;;;;;"},"deployedBytecode":{"functionDebugData":{"@REFACTOR_BOUNDARY_2041":{"entryPoint":null,"id":2041,"parameterSlots":0,"returnSlots":0},"@REFACTOR_DIVIDER_2044":{"entryPoint":null,"id":2044,"parameterSlots":0,"returnSlots":0},"@_addMinter_2163":{"entryPoint":2558,"id":2163,"parameterSlots":1,"returnSlots":0},"@_applyFactor_2503":{"entryPoint":1739,"id":2503,"parameterSlots":2,"returnSlots":1},"@_burnFrom_2457":{"entryPoint":2536,"id":2457,"parameterSlots":2,"returnSlots":0},"@_burn_2444":{"entryPoint":2107,"id":2444,"parameterSlots":2,"returnSlots":0},"@_checkOwner_54":{"entryPoint":2366,"id":54,"parameterSlots":0,"returnSlots":0},"@_factor_2056":{"entryPoint":null,"id":2056,"parameterSlots":0,"returnSlots":0},"@_mint_2346":{"entryPoint":1837,"id":2346,"parameterSlots":2,"returnSlots":0},"@_msgSender_124":{"entryPoint":null,"id":124,"parameterSlots":0,"returnSlots":1},"@_removeMinter_2179":{"entryPoint":2624,"id":2179,"parameterSlots":1,"returnSlots":0},"@_toRAYBased_2517":{"entryPoint":2856,"id":2517,"parameterSlots":1,"returnSlots":1},"@_toRAYFactored_2531":{"entryPoint":2930,"id":2531,"parameterSlots":1,"returnSlots":1},"@_totalSupply_2054":{"entryPoint":null,"id":2054,"parameterSlots":0,"returnSlots":0},"@_transferOwnership_111":{"entryPoint":2456,"id":111,"parameterSlots":1,"returnSlots":0},"@addMinter_2138":{"entryPoint":1429,"id":2138,"parameterSlots":1,"returnSlots":0},"@addTotalSupply_2626":{"entryPoint":2870,"id":2626,"parameterSlots":1,"returnSlots":0},"@add_1248":{"entryPoint":1615,"id":1248,"parameterSlots":2,"returnSlots":0},"@add_310":{"entryPoint":1825,"id":310,"parameterSlots":2,"returnSlots":1},"@allowance_2691":{"entryPoint":null,"id":2691,"parameterSlots":2,"returnSlots":1},"@approve_2704":{"entryPoint":null,"id":2704,"parameterSlots":2,"returnSlots":1},"@balanceOf_2255":{"entryPoint":1173,"id":2255,"parameterSlots":1,"returnSlots":1},"@balances_2051":{"entryPoint":null,"id":2051,"parameterSlots":0,"returnSlots":0},"@burnFrom_2373":{"entryPoint":1250,"id":2373,"parameterSlots":2,"returnSlots":0},"@burn_2359":{"entryPoint":1102,"id":2359,"parameterSlots":1,"returnSlots":0},"@decimals_995":{"entryPoint":null,"id":995,"parameterSlots":0,"returnSlots":1},"@div_355":{"entryPoint":2546,"id":355,"parameterSlots":2,"returnSlots":1},"@factor_2210":{"entryPoint":1115,"id":2210,"parameterSlots":0,"returnSlots":1},"@has_1301":{"entryPoint":2690,"id":1301,"parameterSlots":2,"returnSlots":1},"@isMinter_2126":{"entryPoint":1484,"id":2126,"parameterSlots":1,"returnSlots":1},"@mint_2275":{"entryPoint":1034,"id":2275,"parameterSlots":2,"returnSlots":1},"@mul_1641":{"entryPoint":3118,"id":1641,"parameterSlots":2,"returnSlots":1},"@mul_340":{"entryPoint":2354,"id":340,"parameterSlots":2,"returnSlots":1},"@name_977":{"entryPoint":846,"id":977,"parameterSlots":0,"returnSlots":1},"@owner_40":{"entryPoint":null,"id":40,"parameterSlots":0,"returnSlots":1},"@rdiv2_1891":{"entryPoint":3221,"id":1891,"parameterSlots":2,"returnSlots":1},"@refactorCount_2046":{"entryPoint":null,"id":2046,"parameterSlots":0,"returnSlots":0},"@remove_1274":{"entryPoint":2988,"id":1274,"parameterSlots":2,"returnSlots":0},"@renounceMinter_2147":{"entryPoint":1475,"id":2147,"parameterSlots":0,"returnSlots":0},"@renounceOwnership_68":{"entryPoint":1230,"id":68,"parameterSlots":0,"returnSlots":0},"@rmul2_1853":{"entryPoint":2821,"id":1853,"parameterSlots":2,"returnSlots":1},"@setFactor_2586":{"entryPoint":1264,"id":2586,"parameterSlots":1,"returnSlots":1},"@subTotalSupply_2666":{"entryPoint":2956,"id":2666,"parameterSlots":1,"returnSlots":0},"@sub_325":{"entryPoint":2944,"id":325,"parameterSlots":2,"returnSlots":1},"@symbol_986":{"entryPoint":1414,"id":986,"parameterSlots":0,"returnSlots":1},"@totalSupply_2228":{"entryPoint":992,"id":2228,"parameterSlots":0,"returnSlots":1},"@transferFrom_2719":{"entryPoint":null,"id":2719,"parameterSlots":3,"returnSlots":1},"@transferOwnership_91":{"entryPoint":1497,"id":91,"parameterSlots":1,"returnSlots":0},"@transfer_2679":{"entryPoint":null,"id":2679,"parameterSlots":2,"returnSlots":1},"abi_decode_address":{"entryPoint":3324,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":3454,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":3506,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":3394,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":3352,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256":{"entryPoint":3481,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3246,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_095501c0fa42bab2cacf7f188f8ed4b439a6b52a400a6dbe907211442d17a80a__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0f76c3a3e97a37fcdff532c2741c10933ebf2b769d5475388e30ae4f7155f13a__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_25a0ef6406c6af6852555433653ce478274cd9f03a5dec44d001868a76b3bfdd__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_79ecb50133735b20228dea9d08fe36a462bbc1350f591a146908848db91104cd__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3609,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_7bd893145ac435f339bb7c288622d270324b7033b011f693aca172f5cbc3c257__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9d214fa89563f4e6456a3929327e54500ea1cde2c0ba9fb2035ec106190d682f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_e5765f5708f945bad06c9dbede47bf595281c7b76bd342f2024357a686a89ca7__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":3736,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":3778,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":3755,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":3812,"id":null,"parameterSlots":2,"returnSlots":1},"extract_byte_array_length":{"entryPoint":3557,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint256":{"entryPoint":3711,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":3689,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:7914:17","statements":[{"nodeType":"YulBlock","src":"6:3:17","statements":[]},{"body":{"nodeType":"YulBlock","src":"115:76:17","statements":[{"nodeType":"YulAssignment","src":"125:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"137:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"148:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"133:3:17"},"nodeType":"YulFunctionCall","src":"133:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"125:4:17"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"167:9:17"},{"name":"value0","nodeType":"YulIdentifier","src":"178:6:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"160:6:17"},"nodeType":"YulFunctionCall","src":"160:25:17"},"nodeType":"YulExpressionStatement","src":"160:25:17"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"84:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"95:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"106:4:17","type":""}],"src":"14:177:17"},{"body":{"nodeType":"YulBlock","src":"317:427:17","statements":[{"nodeType":"YulVariableDeclaration","src":"327:12:17","value":{"kind":"number","nodeType":"YulLiteral","src":"337:2:17","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"331:2:17","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"355:9:17"},{"name":"_1","nodeType":"YulIdentifier","src":"366:2:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"348:6:17"},"nodeType":"YulFunctionCall","src":"348:21:17"},"nodeType":"YulExpressionStatement","src":"348:21:17"},{"nodeType":"YulVariableDeclaration","src":"378:27:17","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"398:6:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"392:5:17"},"nodeType":"YulFunctionCall","src":"392:13:17"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"382:6:17","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"425:9:17"},{"name":"_1","nodeType":"YulIdentifier","src":"436:2:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"421:3:17"},"nodeType":"YulFunctionCall","src":"421:18:17"},{"name":"length","nodeType":"YulIdentifier","src":"441:6:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"414:6:17"},"nodeType":"YulFunctionCall","src":"414:34:17"},"nodeType":"YulExpressionStatement","src":"414:34:17"},{"nodeType":"YulVariableDeclaration","src":"457:10:17","value":{"kind":"number","nodeType":"YulLiteral","src":"466:1:17","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"461:1:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"526:90:17","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"555:9:17"},{"name":"i","nodeType":"YulIdentifier","src":"566:1:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"551:3:17"},"nodeType":"YulFunctionCall","src":"551:17:17"},{"kind":"number","nodeType":"YulLiteral","src":"570:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"547:3:17"},"nodeType":"YulFunctionCall","src":"547:26:17"},{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"589:6:17"},{"name":"i","nodeType":"YulIdentifier","src":"597:1:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"585:3:17"},"nodeType":"YulFunctionCall","src":"585:14:17"},{"name":"_1","nodeType":"YulIdentifier","src":"601:2:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"581:3:17"},"nodeType":"YulFunctionCall","src":"581:23:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"575:5:17"},"nodeType":"YulFunctionCall","src":"575:30:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"540:6:17"},"nodeType":"YulFunctionCall","src":"540:66:17"},"nodeType":"YulExpressionStatement","src":"540:66:17"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"487:1:17"},{"name":"length","nodeType":"YulIdentifier","src":"490:6:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"484:2:17"},"nodeType":"YulFunctionCall","src":"484:13:17"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"498:19:17","statements":[{"nodeType":"YulAssignment","src":"500:15:17","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"509:1:17"},{"name":"_1","nodeType":"YulIdentifier","src":"512:2:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"505:3:17"},"nodeType":"YulFunctionCall","src":"505:10:17"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"500:1:17"}]}]},"pre":{"nodeType":"YulBlock","src":"480:3:17","statements":[]},"src":"476:140:17"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"640:9:17"},{"name":"length","nodeType":"YulIdentifier","src":"651:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"636:3:17"},"nodeType":"YulFunctionCall","src":"636:22:17"},{"kind":"number","nodeType":"YulLiteral","src":"660:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"632:3:17"},"nodeType":"YulFunctionCall","src":"632:31:17"},{"kind":"number","nodeType":"YulLiteral","src":"665:1:17","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"625:6:17"},"nodeType":"YulFunctionCall","src":"625:42:17"},"nodeType":"YulExpressionStatement","src":"625:42:17"},{"nodeType":"YulAssignment","src":"676:62:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"692:9:17"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"711:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"719:2:17","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"707:3:17"},"nodeType":"YulFunctionCall","src":"707:15:17"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"728:2:17","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"724:3:17"},"nodeType":"YulFunctionCall","src":"724:7:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"703:3:17"},"nodeType":"YulFunctionCall","src":"703:29:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"688:3:17"},"nodeType":"YulFunctionCall","src":"688:45:17"},{"kind":"number","nodeType":"YulLiteral","src":"735:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"684:3:17"},"nodeType":"YulFunctionCall","src":"684:54:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"676:4:17"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"286:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"297:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"308:4:17","type":""}],"src":"196:548:17"},{"body":{"nodeType":"YulBlock","src":"798:124:17","statements":[{"nodeType":"YulAssignment","src":"808:29:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"830:6:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"817:12:17"},"nodeType":"YulFunctionCall","src":"817:20:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"808:5:17"}]},{"body":{"nodeType":"YulBlock","src":"900:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"909:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"912:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"902:6:17"},"nodeType":"YulFunctionCall","src":"902:12:17"},"nodeType":"YulExpressionStatement","src":"902:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"859:5:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"870:5:17"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"885:3:17","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"890:1:17","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"881:3:17"},"nodeType":"YulFunctionCall","src":"881:11:17"},{"kind":"number","nodeType":"YulLiteral","src":"894:1:17","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"877:3:17"},"nodeType":"YulFunctionCall","src":"877:19:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"866:3:17"},"nodeType":"YulFunctionCall","src":"866:31:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"856:2:17"},"nodeType":"YulFunctionCall","src":"856:42:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"849:6:17"},"nodeType":"YulFunctionCall","src":"849:50:17"},"nodeType":"YulIf","src":"846:70:17"}]},"name":"abi_decode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"777:6:17","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"788:5:17","type":""}],"src":"749:173:17"},{"body":{"nodeType":"YulBlock","src":"1014:167:17","statements":[{"body":{"nodeType":"YulBlock","src":"1060:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1069:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1072:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1062:6:17"},"nodeType":"YulFunctionCall","src":"1062:12:17"},"nodeType":"YulExpressionStatement","src":"1062:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1035:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"1044:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1031:3:17"},"nodeType":"YulFunctionCall","src":"1031:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"1056:2:17","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1027:3:17"},"nodeType":"YulFunctionCall","src":"1027:32:17"},"nodeType":"YulIf","src":"1024:52:17"},{"nodeType":"YulAssignment","src":"1085:39:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1114:9:17"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1095:18:17"},"nodeType":"YulFunctionCall","src":"1095:29:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1085:6:17"}]},{"nodeType":"YulAssignment","src":"1133:42:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1160:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"1171:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1156:3:17"},"nodeType":"YulFunctionCall","src":"1156:18:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1143:12:17"},"nodeType":"YulFunctionCall","src":"1143:32:17"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1133:6:17"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"972:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"983:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"995:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1003:6:17","type":""}],"src":"927:254:17"},{"body":{"nodeType":"YulBlock","src":"1281:92:17","statements":[{"nodeType":"YulAssignment","src":"1291:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1303:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"1314:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1299:3:17"},"nodeType":"YulFunctionCall","src":"1299:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1291:4:17"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1333:9:17"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1358:6:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1351:6:17"},"nodeType":"YulFunctionCall","src":"1351:14:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1344:6:17"},"nodeType":"YulFunctionCall","src":"1344:22:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1326:6:17"},"nodeType":"YulFunctionCall","src":"1326:41:17"},"nodeType":"YulExpressionStatement","src":"1326:41:17"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1250:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1261:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1272:4:17","type":""}],"src":"1186:187:17"},{"body":{"nodeType":"YulBlock","src":"1482:224:17","statements":[{"body":{"nodeType":"YulBlock","src":"1528:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1537:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1540:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1530:6:17"},"nodeType":"YulFunctionCall","src":"1530:12:17"},"nodeType":"YulExpressionStatement","src":"1530:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1503:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"1512:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1499:3:17"},"nodeType":"YulFunctionCall","src":"1499:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"1524:2:17","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1495:3:17"},"nodeType":"YulFunctionCall","src":"1495:32:17"},"nodeType":"YulIf","src":"1492:52:17"},{"nodeType":"YulAssignment","src":"1553:39:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1582:9:17"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1563:18:17"},"nodeType":"YulFunctionCall","src":"1563:29:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1553:6:17"}]},{"nodeType":"YulAssignment","src":"1601:48:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1634:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"1645:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1630:3:17"},"nodeType":"YulFunctionCall","src":"1630:18:17"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1611:18:17"},"nodeType":"YulFunctionCall","src":"1611:38:17"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1601:6:17"}]},{"nodeType":"YulAssignment","src":"1658:42:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1685:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"1696:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1681:3:17"},"nodeType":"YulFunctionCall","src":"1681:18:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1668:12:17"},"nodeType":"YulFunctionCall","src":"1668:32:17"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1658:6:17"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1432:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1443:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1455:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1463:6:17","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1471:6:17","type":""}],"src":"1378:328:17"},{"body":{"nodeType":"YulBlock","src":"1781:116:17","statements":[{"body":{"nodeType":"YulBlock","src":"1827:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1836:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1839:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1829:6:17"},"nodeType":"YulFunctionCall","src":"1829:12:17"},"nodeType":"YulExpressionStatement","src":"1829:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1802:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"1811:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1798:3:17"},"nodeType":"YulFunctionCall","src":"1798:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"1823:2:17","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1794:3:17"},"nodeType":"YulFunctionCall","src":"1794:32:17"},"nodeType":"YulIf","src":"1791:52:17"},{"nodeType":"YulAssignment","src":"1852:39:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1881:9:17"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1862:18:17"},"nodeType":"YulFunctionCall","src":"1862:29:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1852:6:17"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1747:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1758:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1770:6:17","type":""}],"src":"1711:186:17"},{"body":{"nodeType":"YulBlock","src":"2059:162:17","statements":[{"nodeType":"YulAssignment","src":"2069:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2081:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"2092:2:17","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2077:3:17"},"nodeType":"YulFunctionCall","src":"2077:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2069:4:17"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2111:9:17"},{"name":"value0","nodeType":"YulIdentifier","src":"2122:6:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2104:6:17"},"nodeType":"YulFunctionCall","src":"2104:25:17"},"nodeType":"YulExpressionStatement","src":"2104:25:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2149:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"2160:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2145:3:17"},"nodeType":"YulFunctionCall","src":"2145:18:17"},{"name":"value1","nodeType":"YulIdentifier","src":"2165:6:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2138:6:17"},"nodeType":"YulFunctionCall","src":"2138:34:17"},"nodeType":"YulExpressionStatement","src":"2138:34:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2192:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"2203:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2188:3:17"},"nodeType":"YulFunctionCall","src":"2188:18:17"},{"name":"value2","nodeType":"YulIdentifier","src":"2208:6:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2181:6:17"},"nodeType":"YulFunctionCall","src":"2181:34:17"},"nodeType":"YulExpressionStatement","src":"2181:34:17"}]},"name":"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2012:9:17","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2023:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2031:6:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2039:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2050:4:17","type":""}],"src":"1902:319:17"},{"body":{"nodeType":"YulBlock","src":"2323:87:17","statements":[{"nodeType":"YulAssignment","src":"2333:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2345:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"2356:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2341:3:17"},"nodeType":"YulFunctionCall","src":"2341:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2333:4:17"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2375:9:17"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2390:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"2398:4:17","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2386:3:17"},"nodeType":"YulFunctionCall","src":"2386:17:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2368:6:17"},"nodeType":"YulFunctionCall","src":"2368:36:17"},"nodeType":"YulExpressionStatement","src":"2368:36:17"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2292:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2303:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2314:4:17","type":""}],"src":"2226:184:17"},{"body":{"nodeType":"YulBlock","src":"2485:110:17","statements":[{"body":{"nodeType":"YulBlock","src":"2531:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2540:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2543:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2533:6:17"},"nodeType":"YulFunctionCall","src":"2533:12:17"},"nodeType":"YulExpressionStatement","src":"2533:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2506:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"2515:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2502:3:17"},"nodeType":"YulFunctionCall","src":"2502:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"2527:2:17","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2498:3:17"},"nodeType":"YulFunctionCall","src":"2498:32:17"},"nodeType":"YulIf","src":"2495:52:17"},{"nodeType":"YulAssignment","src":"2556:33:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2579:9:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2566:12:17"},"nodeType":"YulFunctionCall","src":"2566:23:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2556:6:17"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2451:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2462:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2474:6:17","type":""}],"src":"2415:180:17"},{"body":{"nodeType":"YulBlock","src":"2701:102:17","statements":[{"nodeType":"YulAssignment","src":"2711:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2723:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"2734:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2719:3:17"},"nodeType":"YulFunctionCall","src":"2719:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2711:4:17"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2753:9:17"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2768:6:17"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2784:3:17","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"2789:1:17","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2780:3:17"},"nodeType":"YulFunctionCall","src":"2780:11:17"},{"kind":"number","nodeType":"YulLiteral","src":"2793:1:17","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2776:3:17"},"nodeType":"YulFunctionCall","src":"2776:19:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2764:3:17"},"nodeType":"YulFunctionCall","src":"2764:32:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2746:6:17"},"nodeType":"YulFunctionCall","src":"2746:51:17"},"nodeType":"YulExpressionStatement","src":"2746:51:17"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2670:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2681:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2692:4:17","type":""}],"src":"2600:203:17"},{"body":{"nodeType":"YulBlock","src":"2895:173:17","statements":[{"body":{"nodeType":"YulBlock","src":"2941:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2950:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2953:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2943:6:17"},"nodeType":"YulFunctionCall","src":"2943:12:17"},"nodeType":"YulExpressionStatement","src":"2943:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2916:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"2925:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2912:3:17"},"nodeType":"YulFunctionCall","src":"2912:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"2937:2:17","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2908:3:17"},"nodeType":"YulFunctionCall","src":"2908:32:17"},"nodeType":"YulIf","src":"2905:52:17"},{"nodeType":"YulAssignment","src":"2966:39:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2995:9:17"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2976:18:17"},"nodeType":"YulFunctionCall","src":"2976:29:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2966:6:17"}]},{"nodeType":"YulAssignment","src":"3014:48:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3047:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"3058:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3043:3:17"},"nodeType":"YulFunctionCall","src":"3043:18:17"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"3024:18:17"},"nodeType":"YulFunctionCall","src":"3024:38:17"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3014:6:17"}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2853:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2864:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2876:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2884:6:17","type":""}],"src":"2808:260:17"},{"body":{"nodeType":"YulBlock","src":"3128:325:17","statements":[{"nodeType":"YulAssignment","src":"3138:22:17","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3152:1:17","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"3155:4:17"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"3148:3:17"},"nodeType":"YulFunctionCall","src":"3148:12:17"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3138:6:17"}]},{"nodeType":"YulVariableDeclaration","src":"3169:38:17","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3199:4:17"},{"kind":"number","nodeType":"YulLiteral","src":"3205:1:17","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3195:3:17"},"nodeType":"YulFunctionCall","src":"3195:12:17"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"3173:18:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"3246:31:17","statements":[{"nodeType":"YulAssignment","src":"3248:27:17","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3262:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"3270:4:17","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3258:3:17"},"nodeType":"YulFunctionCall","src":"3258:17:17"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3248:6:17"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"3226:18:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3219:6:17"},"nodeType":"YulFunctionCall","src":"3219:26:17"},"nodeType":"YulIf","src":"3216:61:17"},{"body":{"nodeType":"YulBlock","src":"3336:111:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3357:1:17","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3364:3:17","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"3369:10:17","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3360:3:17"},"nodeType":"YulFunctionCall","src":"3360:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3350:6:17"},"nodeType":"YulFunctionCall","src":"3350:31:17"},"nodeType":"YulExpressionStatement","src":"3350:31:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3401:1:17","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3404:4:17","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3394:6:17"},"nodeType":"YulFunctionCall","src":"3394:15:17"},"nodeType":"YulExpressionStatement","src":"3394:15:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3429:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3432:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3422:6:17"},"nodeType":"YulFunctionCall","src":"3422:15:17"},"nodeType":"YulExpressionStatement","src":"3422:15:17"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"3292:18:17"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3315:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"3323:2:17","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3312:2:17"},"nodeType":"YulFunctionCall","src":"3312:14:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3289:2:17"},"nodeType":"YulFunctionCall","src":"3289:38:17"},"nodeType":"YulIf","src":"3286:161:17"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"3108:4:17","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"3117:6:17","type":""}],"src":"3073:380:17"},{"body":{"nodeType":"YulBlock","src":"3632:238:17","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3649:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"3660:2:17","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3642:6:17"},"nodeType":"YulFunctionCall","src":"3642:21:17"},"nodeType":"YulExpressionStatement","src":"3642:21:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3683:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"3694:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3679:3:17"},"nodeType":"YulFunctionCall","src":"3679:18:17"},{"kind":"number","nodeType":"YulLiteral","src":"3699:2:17","type":"","value":"48"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3672:6:17"},"nodeType":"YulFunctionCall","src":"3672:30:17"},"nodeType":"YulExpressionStatement","src":"3672:30:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3722:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"3733:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3718:3:17"},"nodeType":"YulFunctionCall","src":"3718:18:17"},{"hexValue":"4d696e746572526f6c653a2063616c6c657220646f6573206e6f742068617665","kind":"string","nodeType":"YulLiteral","src":"3738:34:17","type":"","value":"MinterRole: caller does not have"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3711:6:17"},"nodeType":"YulFunctionCall","src":"3711:62:17"},"nodeType":"YulExpressionStatement","src":"3711:62:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3793:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"3804:2:17","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3789:3:17"},"nodeType":"YulFunctionCall","src":"3789:18:17"},{"hexValue":"20746865204d696e74657220726f6c65","kind":"string","nodeType":"YulLiteral","src":"3809:18:17","type":"","value":" the Minter role"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3782:6:17"},"nodeType":"YulFunctionCall","src":"3782:46:17"},"nodeType":"YulExpressionStatement","src":"3782:46:17"},{"nodeType":"YulAssignment","src":"3837:27:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3849:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"3860:3:17","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3845:3:17"},"nodeType":"YulFunctionCall","src":"3845:19:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3837:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_79ecb50133735b20228dea9d08fe36a462bbc1350f591a146908848db91104cd__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3609:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3623:4:17","type":""}],"src":"3458:412:17"},{"body":{"nodeType":"YulBlock","src":"3907:95:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3924:1:17","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3931:3:17","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"3936:10:17","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3927:3:17"},"nodeType":"YulFunctionCall","src":"3927:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3917:6:17"},"nodeType":"YulFunctionCall","src":"3917:31:17"},"nodeType":"YulExpressionStatement","src":"3917:31:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3964:1:17","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3967:4:17","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3957:6:17"},"nodeType":"YulFunctionCall","src":"3957:15:17"},"nodeType":"YulExpressionStatement","src":"3957:15:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3988:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3991:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3981:6:17"},"nodeType":"YulFunctionCall","src":"3981:15:17"},"nodeType":"YulExpressionStatement","src":"3981:15:17"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"3875:127:17"},{"body":{"nodeType":"YulBlock","src":"4054:88:17","statements":[{"body":{"nodeType":"YulBlock","src":"4085:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"4087:16:17"},"nodeType":"YulFunctionCall","src":"4087:18:17"},"nodeType":"YulExpressionStatement","src":"4087:18:17"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4070:5:17"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4081:1:17","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4077:3:17"},"nodeType":"YulFunctionCall","src":"4077:6:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4067:2:17"},"nodeType":"YulFunctionCall","src":"4067:17:17"},"nodeType":"YulIf","src":"4064:43:17"},{"nodeType":"YulAssignment","src":"4116:20:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4127:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"4134:1:17","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4123:3:17"},"nodeType":"YulFunctionCall","src":"4123:13:17"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"4116:3:17"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4036:5:17","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"4046:3:17","type":""}],"src":"4007:135:17"},{"body":{"nodeType":"YulBlock","src":"4321:228:17","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4338:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"4349:2:17","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4331:6:17"},"nodeType":"YulFunctionCall","src":"4331:21:17"},"nodeType":"YulExpressionStatement","src":"4331:21:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4372:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"4383:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4368:3:17"},"nodeType":"YulFunctionCall","src":"4368:18:17"},{"kind":"number","nodeType":"YulLiteral","src":"4388:2:17","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4361:6:17"},"nodeType":"YulFunctionCall","src":"4361:30:17"},"nodeType":"YulExpressionStatement","src":"4361:30:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4411:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"4422:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4407:3:17"},"nodeType":"YulFunctionCall","src":"4407:18:17"},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061","kind":"string","nodeType":"YulLiteral","src":"4427:34:17","type":"","value":"Ownable: new owner is the zero a"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4400:6:17"},"nodeType":"YulFunctionCall","src":"4400:62:17"},"nodeType":"YulExpressionStatement","src":"4400:62:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4482:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"4493:2:17","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4478:3:17"},"nodeType":"YulFunctionCall","src":"4478:18:17"},{"hexValue":"646472657373","kind":"string","nodeType":"YulLiteral","src":"4498:8:17","type":"","value":"ddress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4471:6:17"},"nodeType":"YulFunctionCall","src":"4471:36:17"},"nodeType":"YulExpressionStatement","src":"4471:36:17"},{"nodeType":"YulAssignment","src":"4516:27:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4528:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"4539:3:17","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4524:3:17"},"nodeType":"YulFunctionCall","src":"4524:19:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4516:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4298:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4312:4:17","type":""}],"src":"4147:402:17"},{"body":{"nodeType":"YulBlock","src":"4728:181:17","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4745:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"4756:2:17","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4738:6:17"},"nodeType":"YulFunctionCall","src":"4738:21:17"},"nodeType":"YulExpressionStatement","src":"4738:21:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4779:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"4790:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4775:3:17"},"nodeType":"YulFunctionCall","src":"4775:18:17"},{"kind":"number","nodeType":"YulLiteral","src":"4795:2:17","type":"","value":"31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4768:6:17"},"nodeType":"YulFunctionCall","src":"4768:30:17"},"nodeType":"YulExpressionStatement","src":"4768:30:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4818:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"4829:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4814:3:17"},"nodeType":"YulFunctionCall","src":"4814:18:17"},{"hexValue":"526f6c65733a206163636f756e7420616c72656164792068617320726f6c65","kind":"string","nodeType":"YulLiteral","src":"4834:33:17","type":"","value":"Roles: account already has role"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4807:6:17"},"nodeType":"YulFunctionCall","src":"4807:61:17"},"nodeType":"YulExpressionStatement","src":"4807:61:17"},{"nodeType":"YulAssignment","src":"4877:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4889:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"4900:2:17","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4885:3:17"},"nodeType":"YulFunctionCall","src":"4885:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4877:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_0f76c3a3e97a37fcdff532c2741c10933ebf2b769d5475388e30ae4f7155f13a__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4705:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4719:4:17","type":""}],"src":"4554:355:17"},{"body":{"nodeType":"YulBlock","src":"4962:77:17","statements":[{"nodeType":"YulAssignment","src":"4972:16:17","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"4983:1:17"},{"name":"y","nodeType":"YulIdentifier","src":"4986:1:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4979:3:17"},"nodeType":"YulFunctionCall","src":"4979:9:17"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"4972:3:17"}]},{"body":{"nodeType":"YulBlock","src":"5011:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"5013:16:17"},"nodeType":"YulFunctionCall","src":"5013:18:17"},"nodeType":"YulExpressionStatement","src":"5013:18:17"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"5003:1:17"},{"name":"sum","nodeType":"YulIdentifier","src":"5006:3:17"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5000:2:17"},"nodeType":"YulFunctionCall","src":"5000:10:17"},"nodeType":"YulIf","src":"4997:36:17"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"4945:1:17","type":""},{"name":"y","nodeType":"YulTypedName","src":"4948:1:17","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"4954:3:17","type":""}],"src":"4914:125:17"},{"body":{"nodeType":"YulBlock","src":"5218:235:17","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5235:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"5246:2:17","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5228:6:17"},"nodeType":"YulFunctionCall","src":"5228:21:17"},"nodeType":"YulExpressionStatement","src":"5228:21:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5269:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"5280:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5265:3:17"},"nodeType":"YulFunctionCall","src":"5265:18:17"},{"kind":"number","nodeType":"YulLiteral","src":"5285:2:17","type":"","value":"45"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5258:6:17"},"nodeType":"YulFunctionCall","src":"5258:30:17"},"nodeType":"YulExpressionStatement","src":"5258:30:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5308:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"5319:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5304:3:17"},"nodeType":"YulFunctionCall","src":"5304:18:17"},{"hexValue":"4175746f5265666163746f72436f696e6167653a206d696e7420746f20746865","kind":"string","nodeType":"YulLiteral","src":"5324:34:17","type":"","value":"AutoRefactorCoinage: mint to the"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5297:6:17"},"nodeType":"YulFunctionCall","src":"5297:62:17"},"nodeType":"YulExpressionStatement","src":"5297:62:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5379:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"5390:2:17","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5375:3:17"},"nodeType":"YulFunctionCall","src":"5375:18:17"},{"hexValue":"207a65726f2061646472657373","kind":"string","nodeType":"YulLiteral","src":"5395:15:17","type":"","value":" zero address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5368:6:17"},"nodeType":"YulFunctionCall","src":"5368:43:17"},"nodeType":"YulExpressionStatement","src":"5368:43:17"},{"nodeType":"YulAssignment","src":"5420:27:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5432:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"5443:3:17","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5428:3:17"},"nodeType":"YulFunctionCall","src":"5428:19:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5420:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_e5765f5708f945bad06c9dbede47bf595281c7b76bd342f2024357a686a89ca7__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5195:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5209:4:17","type":""}],"src":"5044:409:17"},{"body":{"nodeType":"YulBlock","src":"5632:237:17","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5649:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"5660:2:17","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5642:6:17"},"nodeType":"YulFunctionCall","src":"5642:21:17"},"nodeType":"YulExpressionStatement","src":"5642:21:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5683:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"5694:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5679:3:17"},"nodeType":"YulFunctionCall","src":"5679:18:17"},{"kind":"number","nodeType":"YulLiteral","src":"5699:2:17","type":"","value":"47"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5672:6:17"},"nodeType":"YulFunctionCall","src":"5672:30:17"},"nodeType":"YulExpressionStatement","src":"5672:30:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5722:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"5733:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5718:3:17"},"nodeType":"YulFunctionCall","src":"5718:18:17"},{"hexValue":"4175746f5265666163746f72436f696e6167653a206275726e2066726f6d2074","kind":"string","nodeType":"YulLiteral","src":"5738:34:17","type":"","value":"AutoRefactorCoinage: burn from t"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5711:6:17"},"nodeType":"YulFunctionCall","src":"5711:62:17"},"nodeType":"YulExpressionStatement","src":"5711:62:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5793:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"5804:2:17","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5789:3:17"},"nodeType":"YulFunctionCall","src":"5789:18:17"},{"hexValue":"6865207a65726f2061646472657373","kind":"string","nodeType":"YulLiteral","src":"5809:17:17","type":"","value":"he zero address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5782:6:17"},"nodeType":"YulFunctionCall","src":"5782:45:17"},"nodeType":"YulExpressionStatement","src":"5782:45:17"},{"nodeType":"YulAssignment","src":"5836:27:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5848:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"5859:3:17","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5844:3:17"},"nodeType":"YulFunctionCall","src":"5844:19:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5836:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_095501c0fa42bab2cacf7f188f8ed4b439a6b52a400a6dbe907211442d17a80a__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5609:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5623:4:17","type":""}],"src":"5458:411:17"},{"body":{"nodeType":"YulBlock","src":"5926:116:17","statements":[{"nodeType":"YulAssignment","src":"5936:20:17","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"5951:1:17"},{"name":"y","nodeType":"YulIdentifier","src":"5954:1:17"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"5947:3:17"},"nodeType":"YulFunctionCall","src":"5947:9:17"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"5936:7:17"}]},{"body":{"nodeType":"YulBlock","src":"6014:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"6016:16:17"},"nodeType":"YulFunctionCall","src":"6016:18:17"},"nodeType":"YulExpressionStatement","src":"6016:18:17"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"5985:1:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5978:6:17"},"nodeType":"YulFunctionCall","src":"5978:9:17"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"5992:1:17"},{"arguments":[{"name":"product","nodeType":"YulIdentifier","src":"5999:7:17"},{"name":"x","nodeType":"YulIdentifier","src":"6008:1:17"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"5995:3:17"},"nodeType":"YulFunctionCall","src":"5995:15:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"5989:2:17"},"nodeType":"YulFunctionCall","src":"5989:22:17"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"5975:2:17"},"nodeType":"YulFunctionCall","src":"5975:37:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5968:6:17"},"nodeType":"YulFunctionCall","src":"5968:45:17"},"nodeType":"YulIf","src":"5965:71:17"}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"5905:1:17","type":""},{"name":"y","nodeType":"YulTypedName","src":"5908:1:17","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"5914:7:17","type":""}],"src":"5874:168:17"},{"body":{"nodeType":"YulBlock","src":"6221:182:17","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6238:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"6249:2:17","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6231:6:17"},"nodeType":"YulFunctionCall","src":"6231:21:17"},"nodeType":"YulExpressionStatement","src":"6231:21:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6272:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"6283:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6268:3:17"},"nodeType":"YulFunctionCall","src":"6268:18:17"},{"kind":"number","nodeType":"YulLiteral","src":"6288:2:17","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6261:6:17"},"nodeType":"YulFunctionCall","src":"6261:30:17"},"nodeType":"YulExpressionStatement","src":"6261:30:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6311:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"6322:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6307:3:17"},"nodeType":"YulFunctionCall","src":"6307:18:17"},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","kind":"string","nodeType":"YulLiteral","src":"6327:34:17","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6300:6:17"},"nodeType":"YulFunctionCall","src":"6300:62:17"},"nodeType":"YulExpressionStatement","src":"6300:62:17"},{"nodeType":"YulAssignment","src":"6371:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6383:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"6394:2:17","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6379:3:17"},"nodeType":"YulFunctionCall","src":"6379:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6371:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6198:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6212:4:17","type":""}],"src":"6047:356:17"},{"body":{"nodeType":"YulBlock","src":"6454:171:17","statements":[{"body":{"nodeType":"YulBlock","src":"6485:111:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6506:1:17","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6513:3:17","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"6518:10:17","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"6509:3:17"},"nodeType":"YulFunctionCall","src":"6509:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6499:6:17"},"nodeType":"YulFunctionCall","src":"6499:31:17"},"nodeType":"YulExpressionStatement","src":"6499:31:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6550:1:17","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"6553:4:17","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6543:6:17"},"nodeType":"YulFunctionCall","src":"6543:15:17"},"nodeType":"YulExpressionStatement","src":"6543:15:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6578:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6581:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6571:6:17"},"nodeType":"YulFunctionCall","src":"6571:15:17"},"nodeType":"YulExpressionStatement","src":"6571:15:17"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"6474:1:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6467:6:17"},"nodeType":"YulFunctionCall","src":"6467:9:17"},"nodeType":"YulIf","src":"6464:132:17"},{"nodeType":"YulAssignment","src":"6605:14:17","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6614:1:17"},{"name":"y","nodeType":"YulIdentifier","src":"6617:1:17"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"6610:3:17"},"nodeType":"YulFunctionCall","src":"6610:9:17"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"6605:1:17"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"6439:1:17","type":""},{"name":"y","nodeType":"YulTypedName","src":"6442:1:17","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"6448:1:17","type":""}],"src":"6408:217:17"},{"body":{"nodeType":"YulBlock","src":"6804:224:17","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6821:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"6832:2:17","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6814:6:17"},"nodeType":"YulFunctionCall","src":"6814:21:17"},"nodeType":"YulExpressionStatement","src":"6814:21:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6855:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"6866:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6851:3:17"},"nodeType":"YulFunctionCall","src":"6851:18:17"},{"kind":"number","nodeType":"YulLiteral","src":"6871:2:17","type":"","value":"34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6844:6:17"},"nodeType":"YulFunctionCall","src":"6844:30:17"},"nodeType":"YulExpressionStatement","src":"6844:30:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6894:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"6905:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6890:3:17"},"nodeType":"YulFunctionCall","src":"6890:18:17"},{"hexValue":"526f6c65733a206163636f756e7420697320746865207a65726f206164647265","kind":"string","nodeType":"YulLiteral","src":"6910:34:17","type":"","value":"Roles: account is the zero addre"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6883:6:17"},"nodeType":"YulFunctionCall","src":"6883:62:17"},"nodeType":"YulExpressionStatement","src":"6883:62:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6965:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"6976:2:17","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6961:3:17"},"nodeType":"YulFunctionCall","src":"6961:18:17"},{"hexValue":"7373","kind":"string","nodeType":"YulLiteral","src":"6981:4:17","type":"","value":"ss"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6954:6:17"},"nodeType":"YulFunctionCall","src":"6954:32:17"},"nodeType":"YulExpressionStatement","src":"6954:32:17"},{"nodeType":"YulAssignment","src":"6995:27:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7007:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"7018:3:17","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7003:3:17"},"nodeType":"YulFunctionCall","src":"7003:19:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6995:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_9d214fa89563f4e6456a3929327e54500ea1cde2c0ba9fb2035ec106190d682f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6781:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6795:4:17","type":""}],"src":"6630:398:17"},{"body":{"nodeType":"YulBlock","src":"7082:79:17","statements":[{"nodeType":"YulAssignment","src":"7092:17:17","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"7104:1:17"},{"name":"y","nodeType":"YulIdentifier","src":"7107:1:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7100:3:17"},"nodeType":"YulFunctionCall","src":"7100:9:17"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"7092:4:17"}]},{"body":{"nodeType":"YulBlock","src":"7133:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"7135:16:17"},"nodeType":"YulFunctionCall","src":"7135:18:17"},"nodeType":"YulExpressionStatement","src":"7135:18:17"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"7124:4:17"},{"name":"x","nodeType":"YulIdentifier","src":"7130:1:17"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7121:2:17"},"nodeType":"YulFunctionCall","src":"7121:11:17"},"nodeType":"YulIf","src":"7118:37:17"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"7064:1:17","type":""},{"name":"y","nodeType":"YulTypedName","src":"7067:1:17","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"7073:4:17","type":""}],"src":"7033:128:17"},{"body":{"nodeType":"YulBlock","src":"7340:223:17","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7357:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"7368:2:17","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7350:6:17"},"nodeType":"YulFunctionCall","src":"7350:21:17"},"nodeType":"YulExpressionStatement","src":"7350:21:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7391:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"7402:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7387:3:17"},"nodeType":"YulFunctionCall","src":"7387:18:17"},{"kind":"number","nodeType":"YulLiteral","src":"7407:2:17","type":"","value":"33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7380:6:17"},"nodeType":"YulFunctionCall","src":"7380:30:17"},"nodeType":"YulExpressionStatement","src":"7380:30:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7430:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"7441:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7426:3:17"},"nodeType":"YulFunctionCall","src":"7426:18:17"},{"hexValue":"526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c","kind":"string","nodeType":"YulLiteral","src":"7446:34:17","type":"","value":"Roles: account does not have rol"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7419:6:17"},"nodeType":"YulFunctionCall","src":"7419:62:17"},"nodeType":"YulExpressionStatement","src":"7419:62:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7501:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"7512:2:17","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7497:3:17"},"nodeType":"YulFunctionCall","src":"7497:18:17"},{"hexValue":"65","kind":"string","nodeType":"YulLiteral","src":"7517:3:17","type":"","value":"e"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7490:6:17"},"nodeType":"YulFunctionCall","src":"7490:31:17"},"nodeType":"YulExpressionStatement","src":"7490:31:17"},{"nodeType":"YulAssignment","src":"7530:27:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7542:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"7553:3:17","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7538:3:17"},"nodeType":"YulFunctionCall","src":"7538:19:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7530:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_7bd893145ac435f339bb7c288622d270324b7033b011f693aca172f5cbc3c257__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7317:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7331:4:17","type":""}],"src":"7166:397:17"},{"body":{"nodeType":"YulBlock","src":"7742:170:17","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7759:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"7770:2:17","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7752:6:17"},"nodeType":"YulFunctionCall","src":"7752:21:17"},"nodeType":"YulExpressionStatement","src":"7752:21:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7793:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"7804:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7789:3:17"},"nodeType":"YulFunctionCall","src":"7789:18:17"},{"kind":"number","nodeType":"YulLiteral","src":"7809:2:17","type":"","value":"20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7782:6:17"},"nodeType":"YulFunctionCall","src":"7782:30:17"},"nodeType":"YulExpressionStatement","src":"7782:30:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7832:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"7843:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7828:3:17"},"nodeType":"YulFunctionCall","src":"7828:18:17"},{"hexValue":"64732d6d6174682d6d756c2d6f766572666c6f77","kind":"string","nodeType":"YulLiteral","src":"7848:22:17","type":"","value":"ds-math-mul-overflow"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7821:6:17"},"nodeType":"YulFunctionCall","src":"7821:50:17"},"nodeType":"YulExpressionStatement","src":"7821:50:17"},{"nodeType":"YulAssignment","src":"7880:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7892:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"7903:2:17","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7888:3:17"},"nodeType":"YulFunctionCall","src":"7888:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7880:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_25a0ef6406c6af6852555433653ce478274cd9f03a5dec44d001868a76b3bfdd__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7719:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7733:4:17","type":""}],"src":"7568:344:17"}]},"contents":"{\n    { }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_79ecb50133735b20228dea9d08fe36a462bbc1350f591a146908848db91104cd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 48)\n        mstore(add(headStart, 64), \"MinterRole: caller does not have\")\n        mstore(add(headStart, 96), \" the Minter role\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0f76c3a3e97a37fcdff532c2741c10933ebf2b769d5475388e30ae4f7155f13a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"Roles: account already has role\")\n        tail := add(headStart, 96)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_e5765f5708f945bad06c9dbede47bf595281c7b76bd342f2024357a686a89ca7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 45)\n        mstore(add(headStart, 64), \"AutoRefactorCoinage: mint to the\")\n        mstore(add(headStart, 96), \" zero address\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_095501c0fa42bab2cacf7f188f8ed4b439a6b52a400a6dbe907211442d17a80a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 47)\n        mstore(add(headStart, 64), \"AutoRefactorCoinage: burn from t\")\n        mstore(add(headStart, 96), \"he zero address\")\n        tail := add(headStart, 128)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_9d214fa89563f4e6456a3929327e54500ea1cde2c0ba9fb2035ec106190d682f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"Roles: account is the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_7bd893145ac435f339bb7c288622d270324b7033b011f693aca172f5cbc3c257__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"Roles: account does not have rol\")\n        mstore(add(headStart, 96), \"e\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_25a0ef6406c6af6852555433653ce478274cd9f03a5dec44d001868a76b3bfdd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"ds-math-mul-overflow\")\n        tail := add(headStart, 96)\n    }\n}","id":17,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b506004361061016d5760003560e01c8063715018a6116100ce578063986502751161008757806398650275146102f8578063a7ac30b014610300578063a9059cbb146101a3578063aa271e1a14610309578063b7c246d71461031c578063dd62ed3e14610325578063f2fde38b1461033b57600080fd5b8063715018a61461029457806379cc67901461029c578063817e9d31146102af5780638da5cb5b146102c257806395d89b41146102dd578063983b2d56146102e557600080fd5b8063313ce5671161012b578063313ce567146102215780633eaaf86b1461023657806340c10f191461024857806342966c681461025b57806354f703f8146102705780636d1506111461027857806370a082311461028157600080fd5b8062d87a9c1461017257806306fdde031461018e578063095ea7b3146101a357806318160ddd146101c157806323b872dd146101c957806327e235e3146101d7575b600080fd5b61017b60055481565b6040519081526020015b60405180910390f35b61019661034e565b6040516101859190610cae565b6101b161016d366004610d18565b6040519015158152602001610185565b61017b6103e0565b6101b161016d366004610d42565b6102066101e5366004610d7e565b60076020526000908152604090208054600182015460029092015490919083565b60408051938452602084019290925290820152606001610185565b60035460405160ff9091168152602001610185565b600854600954600a5461020692919083565b6101b1610256366004610d18565b61040a565b61026e610269366004610d99565b61044e565b005b61017b61045b565b61017b600b5481565b61017b61028f366004610d7e565b610495565b61026e6104ce565b61026e6102aa366004610d18565b6104e2565b6101b16102bd366004610d99565b6104f0565b6000546040516001600160a01b039091168152602001610185565b610196610586565b61026e6102f3366004610d7e565b610595565b61026e6105c3565b61017b60065481565b6101b1610317366004610d7e565b6105cc565b61017b60045481565b61017b610333366004610db2565b600092915050565b61026e610349366004610d7e565b6105d9565b60606001805461035d90610de5565b80601f016020809104026020016040519081016040528092919081815260200182805461038990610de5565b80156103d65780601f106103ab576101008083540402835291602001916103d6565b820191906000526020600020905b8154815290600101906020018083116103b957829003601f168201915b5050505050905090565b60006104056008600201546103ff6008600001546008600101546106cb565b90610721565b905090565b6000610415336105cc565b61043a5760405162461bcd60e51b815260040161043190610e19565b60405180910390fd5b610444838361072d565b5060015b92915050565b610458338261083b565b50565b600b54600090815b60065481101561048f5760055461047b908390610932565b91508061048781610e7f565b915050610463565b50919050565b6001600160a01b03811660009081526007602052604081206002810154815460018301546104c792916103ff916106cb565b9392505050565b6104d661093e565b6104e06000610998565b565b6104ec82826109e8565b5050565b60006104fa61093e565b600b546000835b600454811061053357610515826001610721565b915061052c600554826109f290919063ffffffff16565b9050610501565b6006829055600b81905560408051848152602081018390529081018390527f47eb304b27f9efb047a046029f8a279a7cc8fccc6786f1e2f65939639584fbdc9060600160405180910390a1505050919050565b60606002805461035d90610de5565b61059e336105cc565b6105ba5760405162461bcd60e51b815260040161043190610e19565b610458816109fe565b6104e033610a40565b6000610448600d83610a82565b6105e161093e565b6001600160a01b0381166106465760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610431565b61045881610998565b6106598282610a82565b156106a65760405162461bcd60e51b815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c65006044820152606401610431565b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b6000826000036106dd57506000610448565b6106e983600b54610b05565b9250815b60065481101561071957600554610705908590610932565b93508061071181610e7f565b9150506106ed565b509192915050565b60006104c78284610e98565b6001600160a01b0382166107995760405162461bcd60e51b815260206004820152602d60248201527f4175746f5265666163746f72436f696e6167653a206d696e7420746f2074686560448201526c207a65726f206164647265737360981b6064820152608401610431565b6001600160a01b0382166000908152600760205260408120906107bb84610495565b905060006107c98285610721565b905060006107d682610b28565b808555600654600186015590506107ec85610b36565b6001600160a01b03861660007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef61082284610b72565b60405190815260200160405180910390a3505050505050565b6001600160a01b0382166108a95760405162461bcd60e51b815260206004820152602f60248201527f4175746f5265666163746f72436f696e6167653a206275726e2066726f6d207460448201526e6865207a65726f206164647265737360881b6064820152608401610431565b6001600160a01b0382166000908152600760205260408120906108cb84610495565b905060006108d98285610b80565b905060006108e682610b28565b808555600654600186015590506108fc85610b8c565b60006001600160a01b0387167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef61082284610b72565b60006104c78284610eab565b6000546001600160a01b031633146104e05760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610431565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6104ec828261083b565b60006104c78284610ec2565b610a09600d8261064f565b6040516001600160a01b038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b610a4b600d82610bac565b6040516001600160a01b038216907fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669290600090a250565b60006001600160a01b038216610ae55760405162461bcd60e51b815260206004820152602260248201527f526f6c65733a206163636f756e7420697320746865207a65726f206164647265604482015261737360f01b6064820152608401610431565b506001600160a01b03166000908152602091909152604090205460ff1690565b60006b033b2e3c9fd0803ce8000000610b1e8484610c2e565b6104c79190610ec2565b600061044882600b54610c95565b600854600954600091610b48916106cb565b90506000610b568284610721565b90506000610b6382610b28565b60085550506006546009555050565b600061044882600b54610b05565b60006104c78284610ee4565b600854600954600091610b9e916106cb565b90506000610b568284610b80565b610bb68282610a82565b610c0c5760405162461bcd60e51b815260206004820152602160248201527f526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c6044820152606560f81b6064820152608401610431565b6001600160a01b0316600090815260209190915260409020805460ff19169055565b6000811580610c5257508282610c448183610eab565b9250610c509083610ec2565b145b6104485760405162461bcd60e51b815260206004820152601460248201527364732d6d6174682d6d756c2d6f766572666c6f7760601b6044820152606401610431565b600081610b1e846b033b2e3c9fd0803ce8000000610c2e565b600060208083528351808285015260005b81811015610cdb57858101830151858201604001528201610cbf565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b0381168114610d1357600080fd5b919050565b60008060408385031215610d2b57600080fd5b610d3483610cfc565b946020939093013593505050565b600080600060608486031215610d5757600080fd5b610d6084610cfc565b9250610d6e60208501610cfc565b9150604084013590509250925092565b600060208284031215610d9057600080fd5b6104c782610cfc565b600060208284031215610dab57600080fd5b5035919050565b60008060408385031215610dc557600080fd5b610dce83610cfc565b9150610ddc60208401610cfc565b90509250929050565b600181811c90821680610df957607f821691505b60208210810361048f57634e487b7160e01b600052602260045260246000fd5b60208082526030908201527f4d696e746572526f6c653a2063616c6c657220646f6573206e6f74206861766560408201526f20746865204d696e74657220726f6c6560801b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b600060018201610e9157610e91610e69565b5060010190565b8082018082111561044857610448610e69565b808202811582820484141761044857610448610e69565b600082610edf57634e487b7160e01b600052601260045260246000fd5b500490565b8181038181111561044857610448610e6956fea26469706673582212208093112b9db0b5db714b3a42f5266c201f24297d7071c6df5474f4735bda0e3264736f6c63430008120033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x16D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xCE JUMPI DUP1 PUSH4 0x98650275 GT PUSH2 0x87 JUMPI DUP1 PUSH4 0x98650275 EQ PUSH2 0x2F8 JUMPI DUP1 PUSH4 0xA7AC30B0 EQ PUSH2 0x300 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1A3 JUMPI DUP1 PUSH4 0xAA271E1A EQ PUSH2 0x309 JUMPI DUP1 PUSH4 0xB7C246D7 EQ PUSH2 0x31C JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x325 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x33B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x294 JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x29C JUMPI DUP1 PUSH4 0x817E9D31 EQ PUSH2 0x2AF JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2C2 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2DD JUMPI DUP1 PUSH4 0x983B2D56 EQ PUSH2 0x2E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0x12B JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x221 JUMPI DUP1 PUSH4 0x3EAAF86B EQ PUSH2 0x236 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x248 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x25B JUMPI DUP1 PUSH4 0x54F703F8 EQ PUSH2 0x270 JUMPI DUP1 PUSH4 0x6D150611 EQ PUSH2 0x278 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x281 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0xD87A9C EQ PUSH2 0x172 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x18E JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1A3 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1C1 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1C9 JUMPI DUP1 PUSH4 0x27E235E3 EQ PUSH2 0x1D7 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x17B PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x196 PUSH2 0x34E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x185 SWAP2 SWAP1 PUSH2 0xCAE JUMP JUMPDEST PUSH2 0x1B1 PUSH2 0x16D CALLDATASIZE PUSH1 0x4 PUSH2 0xD18 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x185 JUMP JUMPDEST PUSH2 0x17B PUSH2 0x3E0 JUMP JUMPDEST PUSH2 0x1B1 PUSH2 0x16D CALLDATASIZE PUSH1 0x4 PUSH2 0xD42 JUMP JUMPDEST PUSH2 0x206 PUSH2 0x1E5 CALLDATASIZE PUSH1 0x4 PUSH2 0xD7E JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD SWAP1 SWAP2 SWAP1 DUP4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x185 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x185 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x9 SLOAD PUSH1 0xA SLOAD PUSH2 0x206 SWAP3 SWAP2 SWAP1 DUP4 JUMP JUMPDEST PUSH2 0x1B1 PUSH2 0x256 CALLDATASIZE PUSH1 0x4 PUSH2 0xD18 JUMP JUMPDEST PUSH2 0x40A JUMP JUMPDEST PUSH2 0x26E PUSH2 0x269 CALLDATASIZE PUSH1 0x4 PUSH2 0xD99 JUMP JUMPDEST PUSH2 0x44E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x17B PUSH2 0x45B JUMP JUMPDEST PUSH2 0x17B PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH2 0x17B PUSH2 0x28F CALLDATASIZE PUSH1 0x4 PUSH2 0xD7E JUMP JUMPDEST PUSH2 0x495 JUMP JUMPDEST PUSH2 0x26E PUSH2 0x4CE JUMP JUMPDEST PUSH2 0x26E PUSH2 0x2AA CALLDATASIZE PUSH1 0x4 PUSH2 0xD18 JUMP JUMPDEST PUSH2 0x4E2 JUMP JUMPDEST PUSH2 0x1B1 PUSH2 0x2BD CALLDATASIZE PUSH1 0x4 PUSH2 0xD99 JUMP JUMPDEST PUSH2 0x4F0 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x185 JUMP JUMPDEST PUSH2 0x196 PUSH2 0x586 JUMP JUMPDEST PUSH2 0x26E PUSH2 0x2F3 CALLDATASIZE PUSH1 0x4 PUSH2 0xD7E JUMP JUMPDEST PUSH2 0x595 JUMP JUMPDEST PUSH2 0x26E PUSH2 0x5C3 JUMP JUMPDEST PUSH2 0x17B PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1B1 PUSH2 0x317 CALLDATASIZE PUSH1 0x4 PUSH2 0xD7E JUMP JUMPDEST PUSH2 0x5CC JUMP JUMPDEST PUSH2 0x17B PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x17B PUSH2 0x333 CALLDATASIZE PUSH1 0x4 PUSH2 0xDB2 JUMP JUMPDEST PUSH1 0x0 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x26E PUSH2 0x349 CALLDATASIZE PUSH1 0x4 PUSH2 0xD7E JUMP JUMPDEST PUSH2 0x5D9 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x35D SWAP1 PUSH2 0xDE5 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x389 SWAP1 PUSH2 0xDE5 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3D6 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3AB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3D6 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3B9 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x405 PUSH1 0x8 PUSH1 0x2 ADD SLOAD PUSH2 0x3FF PUSH1 0x8 PUSH1 0x0 ADD SLOAD PUSH1 0x8 PUSH1 0x1 ADD SLOAD PUSH2 0x6CB JUMP JUMPDEST SWAP1 PUSH2 0x721 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x415 CALLER PUSH2 0x5CC JUMP JUMPDEST PUSH2 0x43A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x431 SWAP1 PUSH2 0xE19 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x444 DUP4 DUP4 PUSH2 0x72D JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x458 CALLER DUP3 PUSH2 0x83B JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x0 SWAP1 DUP2 JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x48F JUMPI PUSH1 0x5 SLOAD PUSH2 0x47B SWAP1 DUP4 SWAP1 PUSH2 0x932 JUMP JUMPDEST SWAP2 POP DUP1 PUSH2 0x487 DUP2 PUSH2 0xE7F JUMP JUMPDEST SWAP2 POP POP PUSH2 0x463 JUMP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 DUP2 ADD SLOAD DUP2 SLOAD PUSH1 0x1 DUP4 ADD SLOAD PUSH2 0x4C7 SWAP3 SWAP2 PUSH2 0x3FF SWAP2 PUSH2 0x6CB JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x4D6 PUSH2 0x93E JUMP JUMPDEST PUSH2 0x4E0 PUSH1 0x0 PUSH2 0x998 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x4EC DUP3 DUP3 PUSH2 0x9E8 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4FA PUSH2 0x93E JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x0 DUP4 JUMPDEST PUSH1 0x4 SLOAD DUP2 LT PUSH2 0x533 JUMPI PUSH2 0x515 DUP3 PUSH1 0x1 PUSH2 0x721 JUMP JUMPDEST SWAP2 POP PUSH2 0x52C PUSH1 0x5 SLOAD DUP3 PUSH2 0x9F2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x501 JUMP JUMPDEST PUSH1 0x6 DUP3 SWAP1 SSTORE PUSH1 0xB DUP2 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE SWAP1 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0x47EB304B27F9EFB047A046029F8A279A7CC8FCCC6786F1E2F65939639584FBDC SWAP1 PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x35D SWAP1 PUSH2 0xDE5 JUMP JUMPDEST PUSH2 0x59E CALLER PUSH2 0x5CC JUMP JUMPDEST PUSH2 0x5BA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x431 SWAP1 PUSH2 0xE19 JUMP JUMPDEST PUSH2 0x458 DUP2 PUSH2 0x9FE JUMP JUMPDEST PUSH2 0x4E0 CALLER PUSH2 0xA40 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x448 PUSH1 0xD DUP4 PUSH2 0xA82 JUMP JUMPDEST PUSH2 0x5E1 PUSH2 0x93E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x646 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x431 JUMP JUMPDEST PUSH2 0x458 DUP2 PUSH2 0x998 JUMP JUMPDEST PUSH2 0x659 DUP3 DUP3 PUSH2 0xA82 JUMP JUMPDEST ISZERO PUSH2 0x6A6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526F6C65733A206163636F756E7420616C72656164792068617320726F6C6500 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x431 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 SUB PUSH2 0x6DD JUMPI POP PUSH1 0x0 PUSH2 0x448 JUMP JUMPDEST PUSH2 0x6E9 DUP4 PUSH1 0xB SLOAD PUSH2 0xB05 JUMP JUMPDEST SWAP3 POP DUP2 JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x719 JUMPI PUSH1 0x5 SLOAD PUSH2 0x705 SWAP1 DUP6 SWAP1 PUSH2 0x932 JUMP JUMPDEST SWAP4 POP DUP1 PUSH2 0x711 DUP2 PUSH2 0xE7F JUMP JUMPDEST SWAP2 POP POP PUSH2 0x6ED JUMP JUMPDEST POP SWAP2 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C7 DUP3 DUP5 PUSH2 0xE98 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x799 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4175746F5265666163746F72436F696E6167653A206D696E7420746F20746865 PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x207A65726F2061646472657373 PUSH1 0x98 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x431 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x7BB DUP5 PUSH2 0x495 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x7C9 DUP3 DUP6 PUSH2 0x721 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x7D6 DUP3 PUSH2 0xB28 JUMP JUMPDEST DUP1 DUP6 SSTORE PUSH1 0x6 SLOAD PUSH1 0x1 DUP7 ADD SSTORE SWAP1 POP PUSH2 0x7EC DUP6 PUSH2 0xB36 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH2 0x822 DUP5 PUSH2 0xB72 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x8A9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4175746F5265666163746F72436F696E6167653A206275726E2066726F6D2074 PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x6865207A65726F2061646472657373 PUSH1 0x88 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x431 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x8CB DUP5 PUSH2 0x495 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x8D9 DUP3 DUP6 PUSH2 0xB80 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x8E6 DUP3 PUSH2 0xB28 JUMP JUMPDEST DUP1 DUP6 SSTORE PUSH1 0x6 SLOAD PUSH1 0x1 DUP7 ADD SSTORE SWAP1 POP PUSH2 0x8FC DUP6 PUSH2 0xB8C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH2 0x822 DUP5 PUSH2 0xB72 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C7 DUP3 DUP5 PUSH2 0xEAB JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x4E0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x431 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x4EC DUP3 DUP3 PUSH2 0x83B JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C7 DUP3 DUP5 PUSH2 0xEC2 JUMP JUMPDEST PUSH2 0xA09 PUSH1 0xD DUP3 PUSH2 0x64F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0x6AE172837EA30B801FBFCDD4108AA1D5BF8FF775444FD70256B44E6BF3DFC3F6 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0xA4B PUSH1 0xD DUP3 PUSH2 0xBAC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0xE94479A9F7E1952CC78F2D6BAAB678ADC1B772D936C6583DEF489E524CB66692 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xAE5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526F6C65733A206163636F756E7420697320746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x431 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH12 0x33B2E3C9FD0803CE8000000 PUSH2 0xB1E DUP5 DUP5 PUSH2 0xC2E JUMP JUMPDEST PUSH2 0x4C7 SWAP2 SWAP1 PUSH2 0xEC2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x448 DUP3 PUSH1 0xB SLOAD PUSH2 0xC95 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x9 SLOAD PUSH1 0x0 SWAP2 PUSH2 0xB48 SWAP2 PUSH2 0x6CB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xB56 DUP3 DUP5 PUSH2 0x721 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xB63 DUP3 PUSH2 0xB28 JUMP JUMPDEST PUSH1 0x8 SSTORE POP POP PUSH1 0x6 SLOAD PUSH1 0x9 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x448 DUP3 PUSH1 0xB SLOAD PUSH2 0xB05 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C7 DUP3 DUP5 PUSH2 0xEE4 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x9 SLOAD PUSH1 0x0 SWAP2 PUSH2 0xB9E SWAP2 PUSH2 0x6CB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xB56 DUP3 DUP5 PUSH2 0xB80 JUMP JUMPDEST PUSH2 0xBB6 DUP3 DUP3 PUSH2 0xA82 JUMP JUMPDEST PUSH2 0xC0C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526F6C65733A206163636F756E7420646F6573206E6F74206861766520726F6C PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x65 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x431 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO DUP1 PUSH2 0xC52 JUMPI POP DUP3 DUP3 PUSH2 0xC44 DUP2 DUP4 PUSH2 0xEAB JUMP JUMPDEST SWAP3 POP PUSH2 0xC50 SWAP1 DUP4 PUSH2 0xEC2 JUMP JUMPDEST EQ JUMPDEST PUSH2 0x448 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x64732D6D6174682D6D756C2D6F766572666C6F77 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x431 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0xB1E DUP5 PUSH12 0x33B2E3C9FD0803CE8000000 PUSH2 0xC2E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xCDB JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0xCBF JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xD13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD2B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD34 DUP4 PUSH2 0xCFC JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xD57 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD60 DUP5 PUSH2 0xCFC JUMP JUMPDEST SWAP3 POP PUSH2 0xD6E PUSH1 0x20 DUP6 ADD PUSH2 0xCFC JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4C7 DUP3 PUSH2 0xCFC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDAB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDC5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDCE DUP4 PUSH2 0xCFC JUMP JUMPDEST SWAP2 POP PUSH2 0xDDC PUSH1 0x20 DUP5 ADD PUSH2 0xCFC JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xDF9 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x48F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x30 SWAP1 DUP3 ADD MSTORE PUSH32 0x4D696E746572526F6C653A2063616C6C657220646F6573206E6F742068617665 PUSH1 0x40 DUP3 ADD MSTORE PUSH16 0x20746865204D696E74657220726F6C65 PUSH1 0x80 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0xE91 JUMPI PUSH2 0xE91 PUSH2 0xE69 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x448 JUMPI PUSH2 0x448 PUSH2 0xE69 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x448 JUMPI PUSH2 0x448 PUSH2 0xE69 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xEDF JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x448 JUMPI PUSH2 0x448 PUSH2 0xE69 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP1 SWAP4 GT 0x2B SWAP14 0xB0 0xB5 0xDB PUSH18 0x4B3A42F5266C201F24297D7071C6DF5474F4 PUSH20 0x5BDA0E3264736F6C634300081200330000000000 ","sourceMap":"1394:6506:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1663:35;;;;;;;;;160:25:17;;;148:2;133:18;1663:35:15;;;;;;;;646:81:6;;;:::i;:::-;;;;;;;:::i;7689:91:15:-;;;;;;:::i;:::-;;;1351:14:17;;1344:22;1326:41;;1314:2;1299:18;7689:91:15;1186:187:17;3302:160:15;;;:::i;7784:114::-;;;;;;:::i;1736:44::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2104:25:17;;;2160:2;2145:18;;2138:34;;;;2188:18;;;2181:34;2092:2;2077:18;1736:44:15;1902:319:17;1474:81:6;1539:9;;1474:81;;1539:9;;;;2368:36:17;;2356:2;2341:18;1474:81:6;2226:184:17;1785:27:15;;;;;;;;;;;;;3958:130;;;;;;:::i;:::-;;:::i;4902:77::-;;;;;;:::i;:::-;;:::i;:::-;;3045:203;;;:::i;1817:22::-;;;;;;3515:184;;;;;;:::i;:::-;;:::i;1831:101:0:-;;;:::i;5030:97:15:-;;;;;;:::i;:::-;;:::i;6440:339::-;;;;;;:::i;:::-;;:::i;1201:85:0:-;1247:7;1273:6;1201:85;;-1:-1:-1;;;;;1273:6:0;;;2746:51:17;;2734:2;2719:18;1201:85:0;2600:203:17;840:85:6;;;:::i;2636:86:15:-;;;;;;:::i;:::-;;:::i;2726:73::-;;;:::i;1703:28::-;;;;;;2529:103;;;;;;:::i;:::-;;:::i;1616:43::-;;;;;;7585:100;;;;;;:::i;:::-;7657:7;7585:100;;;;;2081:198:0;;;;;;:::i;:::-;;:::i;646:81:6:-;683:13;715:5;708:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;646:81;:::o;3302:160:15:-;3346:7;3368:89;3437:12;:19;;;3368:64;3381:12;:20;;;3403:12;:28;;;3368:12;:64::i;:::-;:68;;:89::i;:::-;3361:96;;3302:160;:::o;3958:130::-;4032:4;2436:22;719:10:1;2529:103:15;:::i;2436:22::-;2428:83;;;;-1:-1:-1;;;2428:83:15;;;;;;;:::i;:::-;;;;;;;;;4044:22:::1;4050:7;4059:6;4044:5;:22::i;:::-;-1:-1:-1::0;4079:4:15::1;2519:1;3958:130:::0;;;;:::o;4902:77::-;4947:27;719:10:1;4967:6:15;4947:5;:27::i;:::-;4902:77;:::o;3045:203::-;3116:7;;3084;;;3129:96;3153:13;;3149:1;:17;3129:96;;;3201:16;;3190:28;;:6;;:10;:28::i;:::-;3181:37;-1:-1:-1;3168:3:15;;;;:::i;:::-;;;;3129:96;;;-1:-1:-1;3237:6:15;3045:203;-1:-1:-1;3045:203:15:o;3515:184::-;-1:-1:-1;;;;;3607:17:15;;3572:7;3607:17;;;:8;:17;;;;;3685:8;;;;3651:9;;3662:17;;;;3638:56;;3685:8;3638:42;;:12;:42::i;:56::-;3631:63;3515:184;-1:-1:-1;;;3515:184:15:o;1831:101:0:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;5030:97:15:-;5096:26;5106:7;5115:6;5096:9;:26::i;:::-;5030:97;;:::o;6440:339::-;6503:4;1094:13:0;:11;:13::i;:::-;6534:7:15::1;::::0;6515:16:::1;6583:6:::0;6595:95:::1;6607:17;;6602:1;:22;6595:95;;6671:12;:5:::0;6681:1:::1;6671:9;:12::i;:::-;6663:20;;6630:23;6636:16;;6630:1;:5;;:23;;;;:::i;:::-;6626:27;;6595:95;;;6696:13;:21:::0;;;6723:7:::1;:11:::0;;;6745:29:::1;::::0;;2104:25:17;;;2160:2;2145:18;;2138:34;;;2188:18;;;2181:34;;;6745:29:15::1;::::0;2092:2:17;2077:18;6745:29:15::1;;;;;;;6509:270;;;6440:339:::0;;;:::o;840:85:6:-;879:13;911:7;904:14;;;;;:::i;2636:86:15:-;2436:22;719:10:1;2529:103:15;:::i;2436:22::-;2428:83;;;;-1:-1:-1;;;2428:83:15;;;;;;;:::i;:::-;2698:19:::1;2709:7;2698:10;:19::i;2726:73::-:0;2767:27;719:10:1;2767:13:15;:27::i;2529:103::-;2585:4;2606:21;:8;2619:7;2606:12;:21::i;2081:198:0:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2169:22:0;::::1;2161:73;;;::::0;-1:-1:-1;;;2161:73:0;;4349:2:17;2161:73:0::1;::::0;::::1;4331:21:17::0;4388:2;4368:18;;;4361:30;4427:34;4407:18;;;4400:62;-1:-1:-1;;;4478:18:17;;;4471:36;4524:19;;2161:73:0::1;4147:402:17::0;2161:73:0::1;2244:28;2263:8;2244:18;:28::i;260:175:10:-:0;337:18;341:4;347:7;337:3;:18::i;:::-;336:19;328:63;;;;-1:-1:-1;;;328:63:10;;4756:2:17;328:63:10;;;4738:21:17;4795:2;4775:18;;;4768:30;4834:33;4814:18;;;4807:61;4885:18;;328:63:10;4554:355:17;328:63:10;-1:-1:-1;;;;;401:20:10;:11;:20;;;;;;;;;;;:27;;-1:-1:-1;;401:27:10;424:4;401:27;;;260:175::o;5802:284:15:-;5883:7;5902:1;5907;5902:6;5898:35;;-1:-1:-1;5925:1:15;5918:8;;5898:35;5943:17;5949:1;5952:7;;5943:5;:17::i;:::-;5939:21;-1:-1:-1;5984:15:15;5967:100;6005:13;;6001:1;:17;5967:100;;;6043:16;;6037:23;;:1;;:5;:23::i;:::-;6033:27;-1:-1:-1;6020:3:15;;;;:::i;:::-;;;;5967:100;;;-1:-1:-1;6080:1:15;;5802:284;-1:-1:-1;;5802:284:15:o;2755:96:2:-;2813:7;2839:5;2843:1;2839;:5;:::i;4092:502:15:-;-1:-1:-1;;;;;4163:21:15;;4155:79;;;;-1:-1:-1;;;4155:79:15;;5246:2:17;4155:79:15;;;5228:21:17;5285:2;5265:18;;;5258:30;5324:34;5304:18;;;5297:62;-1:-1:-1;;;5375:18:17;;;5368:43;5428:19;;4155:79:15;5044:409:17;4155:79:15;-1:-1:-1;;;;;4260:17:15;;4240;4260;;;:8;:17;;;;;;4309:18;4269:7;4309:9;:18::i;:::-;4284:43;-1:-1:-1;4333:18:15;4354:26;4284:43;4373:6;4354:18;:26::i;:::-;4333:47;;4387:16;4406:23;4418:10;4406:11;:23::i;:::-;4435:20;;;4481:13;;4461:17;;;:33;4387:42;-1:-1:-1;4501:22:15;4516:6;4501:14;:22::i;:::-;-1:-1:-1;;;;;4534:55:15;;4551:1;4534:55;4564:24;4579:8;4564:14;:24::i;:::-;4534:55;;160:25:17;;;148:2;133:18;4534:55:15;;;;;;;4149:445;;;;4092:502;;:::o;5131:504::-;-1:-1:-1;;;;;5202:21:15;;5194:81;;;;-1:-1:-1;;;5194:81:15;;5660:2:17;5194:81:15;;;5642:21:17;5699:2;5679:18;;;5672:30;5738:34;5718:18;;;5711:62;-1:-1:-1;;;5789:18:17;;;5782:45;5844:19;;5194:81:15;5458:411:17;5194:81:15;-1:-1:-1;;;;;5301:17:15;;5281;5301;;;:8;:17;;;;;;5350:18;5310:7;5350:9;:18::i;:::-;5325:43;-1:-1:-1;5374:18:15;5395:26;5325:43;5414:6;5395:18;:26::i;:::-;5374:47;;5428:16;5447:23;5459:10;5447:11;:23::i;:::-;5476:20;;;5522:13;;5502:17;;;:33;5428:42;-1:-1:-1;5542:22:15;5557:6;5542:14;:22::i;:::-;5601:1;-1:-1:-1;;;;;5575:55:15;;;5605:24;5620:8;5605:14;:24::i;3465:96:2:-;3523:7;3549:5;3553:1;3549;:5;:::i;1359:130:0:-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:0;719:10:1;1422:23:0;1414:68;;;;-1:-1:-1;;;1414:68:0;;6249:2:17;1414:68:0;;;6231:21:17;;;6268:18;;;6261:30;6327:34;6307:18;;;6300:62;6379:18;;1414:68:0;6047:356:17;2433:187:0;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:0;;;-1:-1:-1;;;;;;2541:17:0;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;5639:94:15:-;5706:22;5712:7;5721:6;5706:5;:22::i;3850:96:2:-;3908:7;3934:5;3938:1;3934;:5;:::i;2803:113:15:-;2857:21;:8;2870:7;2857:12;:21::i;:::-;2891:20;;-1:-1:-1;;;;;2891:20:15;;;;;;;;2803:113;:::o;2920:121::-;2977:24;:8;2993:7;2977:15;:24::i;:::-;3014:22;;-1:-1:-1;;;;;3014:22:15;;;;;;;;2920:121;:::o;779:200:10:-;851:4;-1:-1:-1;;;;;875:21:10;;867:68;;;;-1:-1:-1;;;867:68:10;;6832:2:17;867:68:10;;;6814:21:17;6871:2;6851:18;;;6844:30;6910:34;6890:18;;;6883:62;-1:-1:-1;;;6961:18:17;;;6954:32;7003:19;;867:68:10;6630:398:17;867:68:10;-1:-1:-1;;;;;;952:20:10;:11;:20;;;;;;;;;;;;;;;779:200::o;2423:107:14:-;2483:9;1797:6;2508:9;2512:1;2515;2508:3;:9::i;:::-;:15;;;;:::i;6150:104:15:-;6206:10;6231:18;6237:2;6241:7;;6231:5;:18::i;6783:334::-;6875:12;:20;6897:28;;6838:21;;6862:64;;:12;:64::i;:::-;6838:88;-1:-1:-1;6932:17:15;6952:25;6838:88;6970:6;6952:17;:25::i;:::-;6932:45;;6984:16;7003:22;7015:9;7003:11;:22::i;:::-;7031:12;:31;-1:-1:-1;;7099:13:15;;7068:28;:44;-1:-1:-1;;6783:334:15:o;6318:107::-;6377:10;6402:18;6408:2;6412:7;;6402:5;:18::i;3122:96:2:-;3180:7;3206:5;3210:1;3206;:5;:::i;7121:334:15:-;7213:12;:20;7235:28;;7176:21;;7200:64;;:12;:64::i;:::-;7176:88;-1:-1:-1;7270:17:15;7290:25;7176:88;7308:6;7290:17;:25::i;510:180:10:-;589:18;593:4;599:7;589:3;:18::i;:::-;581:64;;;;-1:-1:-1;;;581:64:10;;7368:2:17;581:64:10;;;7350:21:17;7407:2;7387:18;;;7380:30;7446:34;7426:18;;;7419:62;-1:-1:-1;;;7497:18:17;;;7490:31;7538:19;;581:64:10;7166:397:17;581:64:10;-1:-1:-1;;;;;655:20:10;678:5;655:20;;;;;;;;;;;:28;;-1:-1:-1;;655:28:10;;;510:180::o;1136:149:14:-;1194:9;1223:6;;;:30;;-1:-1:-1;1252:1:14;1247;1238:5;1247:1;1252;1238:5;:::i;:::-;1234:9;-1:-1:-1;1233:15:14;;1234:9;1233:15;:::i;:::-;:20;1223:30;1215:63;;;;-1:-1:-1;;;1215:63:14;;7770:2:17;1215:63:14;;;7752:21:17;7809:2;7789:18;;;7782:30;-1:-1:-1;;;7828:18:17;;;7821:50;7888:18;;1215:63:14;7568:344:17;2649:107:14;2709:9;2748:1;2734:11;2738:1;1797:6;2734:3;:11::i;196:548:17:-;308:4;337:2;366;355:9;348:21;398:6;392:13;441:6;436:2;425:9;421:18;414:34;466:1;476:140;490:6;487:1;484:13;476:140;;;585:14;;;581:23;;575:30;551:17;;;570:2;547:26;540:66;505:10;;476:140;;;480:3;665:1;660:2;651:6;640:9;636:22;632:31;625:42;735:2;728;724:7;719:2;711:6;707:15;703:29;692:9;688:45;684:54;676:62;;;;196:548;;;;:::o;749:173::-;817:20;;-1:-1:-1;;;;;866:31:17;;856:42;;846:70;;912:1;909;902:12;846:70;749:173;;;:::o;927:254::-;995:6;1003;1056:2;1044:9;1035:7;1031:23;1027:32;1024:52;;;1072:1;1069;1062:12;1024:52;1095:29;1114:9;1095:29;:::i;:::-;1085:39;1171:2;1156:18;;;;1143:32;;-1:-1:-1;;;927:254:17:o;1378:328::-;1455:6;1463;1471;1524:2;1512:9;1503:7;1499:23;1495:32;1492:52;;;1540:1;1537;1530:12;1492:52;1563:29;1582:9;1563:29;:::i;:::-;1553:39;;1611:38;1645:2;1634:9;1630:18;1611:38;:::i;:::-;1601:48;;1696:2;1685:9;1681:18;1668:32;1658:42;;1378:328;;;;;:::o;1711:186::-;1770:6;1823:2;1811:9;1802:7;1798:23;1794:32;1791:52;;;1839:1;1836;1829:12;1791:52;1862:29;1881:9;1862:29;:::i;2415:180::-;2474:6;2527:2;2515:9;2506:7;2502:23;2498:32;2495:52;;;2543:1;2540;2533:12;2495:52;-1:-1:-1;2566:23:17;;2415:180;-1:-1:-1;2415:180:17:o;2808:260::-;2876:6;2884;2937:2;2925:9;2916:7;2912:23;2908:32;2905:52;;;2953:1;2950;2943:12;2905:52;2976:29;2995:9;2976:29;:::i;:::-;2966:39;;3024:38;3058:2;3047:9;3043:18;3024:38;:::i;:::-;3014:48;;2808:260;;;;;:::o;3073:380::-;3152:1;3148:12;;;;3195;;;3216:61;;3270:4;3262:6;3258:17;3248:27;;3216:61;3323:2;3315:6;3312:14;3292:18;3289:38;3286:161;;3369:10;3364:3;3360:20;3357:1;3350:31;3404:4;3401:1;3394:15;3432:4;3429:1;3422:15;3458:412;3660:2;3642:21;;;3699:2;3679:18;;;3672:30;3738:34;3733:2;3718:18;;3711:62;-1:-1:-1;;;3804:2:17;3789:18;;3782:46;3860:3;3845:19;;3458:412::o;3875:127::-;3936:10;3931:3;3927:20;3924:1;3917:31;3967:4;3964:1;3957:15;3991:4;3988:1;3981:15;4007:135;4046:3;4067:17;;;4064:43;;4087:18;;:::i;:::-;-1:-1:-1;4134:1:17;4123:13;;4007:135::o;4914:125::-;4979:9;;;5000:10;;;4997:36;;;5013:18;;:::i;5874:168::-;5947:9;;;5978;;5995:15;;;5989:22;;5975:37;5965:71;;6016:18;;:::i;6408:217::-;6448:1;6474;6464:132;;6518:10;6513:3;6509:20;6506:1;6499:31;6553:4;6550:1;6543:15;6581:4;6578:1;6571:15;6464:132;-1:-1:-1;6610:9:17;;6408:217::o;7033:128::-;7100:9;;;7121:11;;;7118:37;;;7135:18;;:::i"},"gasEstimates":{"creation":{"codeDepositCost":"777000","executionCost":"infinite","totalCost":"infinite"},"external":{"REFACTOR_BOUNDARY()":"2394","REFACTOR_DIVIDER()":"2308","_factor()":"2417","_totalSupply()":"6597","addMinter(address)":"infinite","allowance(address,address)":"infinite","approve(address,uint256)":"376","balanceOf(address)":"infinite","balances(address)":"6928","burn(uint256)":"infinite","burnFrom(address,uint256)":"infinite","decimals()":"2312","factor()":"infinite","isMinter(address)":"2738","mint(address,uint256)":"infinite","name()":"infinite","owner()":"2390","refactorCount()":"2328","renounceMinter()":"27985","renounceOwnership()":"infinite","setFactor(uint256)":"infinite","symbol()":"infinite","totalSupply()":"infinite","transfer(address,uint256)":"374","transferFrom(address,address,uint256)":"infinite","transferOwnership(address)":"28487"},"internal":{"_addMinter(address)":"infinite","_applyFactor(uint256,uint256)":"infinite","_burn(address,uint256)":"infinite","_burnFrom(address,uint256)":"infinite","_mint(address,uint256)":"infinite","_removeMinter(address)":"infinite","_toRAYBased(uint256)":"infinite","_toRAYFactored(uint256)":"infinite","addTotalSupply(uint256)":"infinite","subTotalSupply(uint256)":"infinite"}},"methodIdentifiers":{"REFACTOR_BOUNDARY()":"b7c246d7","REFACTOR_DIVIDER()":"00d87a9c","_factor()":"6d150611","_totalSupply()":"3eaaf86b","addMinter(address)":"983b2d56","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","balances(address)":"27e235e3","burn(uint256)":"42966c68","burnFrom(address,uint256)":"79cc6790","decimals()":"313ce567","factor()":"54f703f8","isMinter(address)":"aa271e1a","mint(address,uint256)":"40c10f19","name()":"06fdde03","owner()":"8da5cb5b","refactorCount()":"a7ac30b0","renounceMinter()":"98650275","renounceOwnership()":"715018a6","setFactor(uint256)":"817e9d31","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"factor\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previous\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"current\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shiftCount\",\"type\":\"uint256\"}],\"name\":\"FactorSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"MinterAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"MinterRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"REFACTOR_BOUNDARY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"REFACTOR_DIVIDER\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_factor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"refactoredCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"remain\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addMinter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"refactoredCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"remain\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isMinter\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"refactorCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceMinter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"factor\",\"type\":\"uint256\"}],\"name\":\"setFactor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of coin age token based on ERC20 of openzeppelin/-solidity AutoRefactorCoinage stores `_totalSupply` and `_balances` as RAY BASED value, `_allowances` as RAY FACTORED value. This takes public function (including _approve) parameters as RAY FACTORED value and internal function (including approve) parameters as RAY BASED value, and emits event in RAY FACTORED value. `RAY BASED` = `RAY FACTORED`  / factor  factor increases exponentially for each block mined.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys `amount` tokens from `account`, reducing the total supply. Emits a {Transfer} event with `to` set to the zero address. Requirements - `account` cannot be the zero address. - `account` must have at least `amount` tokens.\"},\"burnFrom(address,uint256)\":{\"details\":\"See {ERC20-_burnFrom}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"mint(address,uint256)\":{\"details\":\"Creates `amount` tokens and assigns them to `account`, increasing the total supply. Emits a {Transfer} event with `from` set to the zero address. Requirements - `to` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/test/AutoRefactorCoinage.sol\":\"AutoRefactorCoinage\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\\n\\npragma solidity ^0.8.0;\\n\\n// CAUTION\\n// This version of SafeMath should only be used with Solidity 0.8 or later,\\n// because it relies on the compiler's built in overflow checks.\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations.\\n *\\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\\n * now has built in overflow checking.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            uint256 c = a + b;\\n            if (c < a) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b > a) return (false, 0);\\n            return (true, a - b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n            // benefit is lost if 'b' is also tested.\\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n            if (a == 0) return (true, 0);\\n            uint256 c = a * b;\\n            if (c / a != b) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a / b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a % b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a + b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a * b;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a % b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {trySub}.\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b <= a, errorMessage);\\n            return a - b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a / b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting with custom message when dividing by zero.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryMod}.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a % b;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\"},\"contracts/AccessControl/ERC20Detailed.sol\":{\"content\":\"pragma solidity ^0.8.4;\\n\\nimport \\\"./IERC20.sol\\\";\\n\\n/**\\n * @dev Optional functions from the ERC20 standard.\\n */\\nabstract contract ERC20Detailed is IERC20 {\\n    string private _name;\\n    string private _symbol;\\n    uint8 private _decimals;\\n\\n    /**\\n     * @dev Sets the values for `name`, `symbol`, and `decimals`. All three of\\n     * these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor (string memory name, string memory symbol, uint8 decimals) {\\n        _name = name;\\n        _symbol = symbol;\\n        _decimals = decimals;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5,05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view returns (uint8) {\\n        return _decimals;\\n    }\\n}\\n\",\"keccak256\":\"0xb5ec874cbe9e9b8e5bb00e9165ff55076392b6de078533d92e8239d3c8340eee\"},\"contracts/AccessControl/IERC20.sol\":{\"content\":\"pragma solidity ^0.8.4;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP. Does not include\\n * the optional functions; to access them see {ERC20Detailed}.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x15f1080f668baa0d47cc70d176bf94cc175256262ed88ac624ea1295cde0eb19\"},\"contracts/AccessControl/Roles.sol\":{\"content\":\"pragma solidity ^0.8.4;\\n\\n/**\\n * @title Roles\\n * @dev Library for managing addresses assigned to a Role.\\n */\\nlibrary Roles {\\n    struct Role {\\n        mapping (address => bool) bearer;\\n    }\\n\\n    /**\\n     * @dev Give an account access to this role.\\n     */\\n    function add(Role storage role, address account) internal {\\n        require(!has(role, account), \\\"Roles: account already has role\\\");\\n        role.bearer[account] = true;\\n    }\\n\\n    /**\\n     * @dev Remove an account's access to this role.\\n     */\\n    function remove(Role storage role, address account) internal {\\n        require(has(role, account), \\\"Roles: account does not have role\\\");\\n        role.bearer[account] = false;\\n    }\\n\\n    /**\\n     * @dev Check if an account has this role.\\n     * @return bool\\n     */\\n    function has(Role storage role, address account) internal view returns (bool) {\\n        require(account != address(0), \\\"Roles: account is the zero address\\\");\\n        return role.bearer[account];\\n    }\\n}\\n\",\"keccak256\":\"0x9cc0f220ec4f4e9ff47823597384e9ab28df6d854640eb1cd6950e7fef5de3fd\"},\"contracts/interfaces/AutoRefactorCoinageI.sol\":{\"content\":\"pragma solidity ^0.8.4;\\n\\ninterface AutoRefactorCoinageI {\\n  function factor() external view returns (uint256);\\n  function setFactor(uint256 factor) external returns (bool);\\n  function burn(uint256 amount) external;\\n  function burnFrom(address account, uint256 amount) external;\\n  function mint(address account, uint256 amount) external returns (bool);\\n  function totalSupply() external view returns (uint256);\\n  function balanceOf(address account) external view returns (uint256);\\n  function addMinter(address account) external;\\n  function renounceMinter() external;\\n  function transferOwnership(address newOwner) external;\\n}\\n\",\"keccak256\":\"0xdecaf358ce9773c212861d34d59c6774f549052961b26ac3760c2b41927b1354\"},\"contracts/lib/DSMath.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-or-later\\n// https://github.com/dapphub/ds-math/blob/de45767/src/math.sol\\n/// math.sol -- mixin for inline numerical wizardry\\n\\n// This program is free software: you can redistribute it and/or modify\\n// it under the terms of the GNU General Public License as published by\\n// the Free Software Foundation, either version 3 of the License, or\\n// (at your option) any later version.\\n\\n// This program is distributed in the hope that it will be useful,\\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n// GNU General Public License for more details.\\n\\n// You should have received a copy of the GNU General Public License\\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\\n\\npragma solidity >0.4.13;\\n\\ncontract DSMath {\\n    function add(uint256 x, uint256 y) internal pure returns (uint256 z) {\\n        require((z = x + y) >= x, \\\"ds-math-add-overflow\\\");\\n    }\\n\\n    function sub(uint256 x, uint256 y) internal pure returns (uint256 z) {\\n        require((z = x - y) <= x, \\\"ds-math-sub-underflow\\\");\\n    }\\n\\n    function mul(uint256 x, uint256 y) internal pure returns (uint256 z) {\\n        require(y == 0 || (z = x * y) / y == x, \\\"ds-math-mul-overflow\\\");\\n    }\\n\\n    function min(uint256 x, uint256 y) internal pure returns (uint256 z) {\\n        return x <= y ? x : y;\\n    }\\n\\n    function max(uint256 x, uint256 y) internal pure returns (uint256 z) {\\n        return x >= y ? x : y;\\n    }\\n\\n    function imin(int256 x, int256 y) internal pure returns (int256 z) {\\n        return x <= y ? x : y;\\n    }\\n\\n    function imax(int256 x, int256 y) internal pure returns (int256 z) {\\n        return x >= y ? x : y;\\n    }\\n\\n    uint256 constant WAD = 10**18;\\n    uint256 constant RAY = 10**27;\\n\\n    function wmul(uint256 x, uint256 y) internal pure returns (uint256 z) {\\n        z = add(mul(x, y), WAD / 2) / WAD;\\n    }\\n\\n    function rmul(uint256 x, uint256 y) internal pure returns (uint256 z) {\\n        z = add(mul(x, y), RAY / 2) / RAY;\\n    }\\n\\n    function wdiv(uint256 x, uint256 y) internal pure returns (uint256 z) {\\n        z = add(mul(x, WAD), y / 2) / y;\\n    }\\n\\n    function rdiv(uint256 x, uint256 y) internal pure returns (uint256 z) {\\n        z = add(mul(x, RAY), y / 2) / y;\\n    }\\n\\n    function wmul2(uint256 x, uint256 y) internal pure returns (uint256 z) {\\n        z = mul(x, y) / WAD;\\n    }\\n\\n    function rmul2(uint256 x, uint256 y) internal pure returns (uint256 z) {\\n        z = mul(x, y) / RAY;\\n    }\\n\\n    function wdiv2(uint256 x, uint256 y) internal pure returns (uint256 z) {\\n        z = mul(x, WAD) / y;\\n    }\\n\\n    function rdiv2(uint256 x, uint256 y) internal pure returns (uint256 z) {\\n        z = mul(x, RAY) / y;\\n    }\\n\\n    // This famous algorithm is called \\\"exponentiation by squaring\\\"\\n    // and calculates x^n with x as fixed-point and n as regular unsigned.\\n    //\\n    // It's O(log n), instead of O(n) for naive repeated multiplication.\\n    //\\n    // These facts are why it works:\\n    //\\n    //  If n is even, then x^n = (x^2)^(n/2).\\n    //  If n is odd,  then x^n = x * x^(n-1),\\n    //   and applying the equation for even x gives\\n    //  x^n = x * (x^2)^((n-1) / 2).\\n    //\\n    //  Also, EVM division is flooring and\\n    //  floor[(n-1) / 2] = floor[n / 2].\\n    //\\n    function wpow(uint256 x, uint256 n) internal pure returns (uint256 z) {\\n        z = n % 2 != 0 ? x : WAD;\\n\\n        for (n /= 2; n != 0; n /= 2) {\\n            x = wmul(x, x);\\n\\n            if (n % 2 != 0) {\\n                z = wmul(z, x);\\n            }\\n        }\\n    }\\n\\n    function rpow(uint256 x, uint256 n) internal pure returns (uint256 z) {\\n        z = n % 2 != 0 ? x : RAY;\\n\\n        for (n /= 2; n != 0; n /= 2) {\\n            x = rmul(x, x);\\n\\n            if (n % 2 != 0) {\\n                z = rmul(z, x);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xa7cbbf8cc883d53eb96b44f2d459ac295e31362aa335098fc5042d5a14985415\",\"license\":\"GPL-3.0-or-later\"},\"contracts/test/AutoRefactorCoinage.sol\":{\"content\":\"// based on ERC20 implementation of openzeppelin/-solidity: https://github.com/OpenZeppelin/openzeppelin/-contracts/blob/7552af95e4ec6fccd64a95b206f59a1b4ff91517/contracts/token/ERC20/ERC20.sol\\npragma solidity ^0.8.4;\\n\\nimport { AutoRefactorCoinageI } from \\\"../interfaces/AutoRefactorCoinageI.sol\\\";\\nimport { SafeMath } from \\\"@openzeppelin/contracts/utils/math/SafeMath.sol\\\";\\n// import { Context } from \\\"../AccessControl/Context.sol\\\";\\n\\nimport { Ownable } from \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n// import { IERC20 } from \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport { ERC20Detailed } from \\\"../AccessControl/ERC20Detailed.sol\\\";\\n// import { ERC20Mintable } from \\\"../AccessControl/ERC20Mintable.sol\\\";\\n// import { ERC20Burnable } from \\\"../AccessControl/ERC20Burnable.sol\\\";\\nimport \\\"../AccessControl/Roles.sol\\\";\\nimport { DSMath } from \\\"../lib/DSMath.sol\\\";\\n\\n\\n/**\\n * @dev Implementation of coin age token based on ERC20 of openzeppelin/-solidity\\n *\\n * AutoRefactorCoinage stores `_totalSupply` and `_balances` as RAY BASED value,\\n * `_allowances` as RAY FACTORED value.\\n *\\n * This takes public function (including _approve) parameters as RAY FACTORED value\\n * and internal function (including approve) parameters as RAY BASED value, and emits event in RAY FACTORED value.\\n *\\n * `RAY BASED` = `RAY FACTORED`  / factor\\n *\\n *  factor increases exponentially for each block mined.\\n */\\ncontract AutoRefactorCoinage is DSMath, Ownable, ERC20Detailed {\\n  using SafeMath for uint256;\\n  using Roles for Roles.Role;\\n\\n  struct Balance {\\n    uint256 balance;\\n    uint256 refactoredCount;\\n    uint256 remain;\\n  }\\n\\n  uint256 public REFACTOR_BOUNDARY = 10 ** 28;\\n  uint256 public REFACTOR_DIVIDER = 2;\\n\\n  uint256 public refactorCount;\\n\\n  mapping (address => Balance) public balances;\\n\\n  Balance public _totalSupply;\\n\\n  uint256 public _factor;\\n\\n  bool internal _transfersEnabled;\\n\\n  event FactorSet(uint256 previous, uint256 current, uint256 shiftCount);\\n\\n  event MinterAdded(address indexed account);\\n  event MinterRemoved(address indexed account);\\n\\n  Roles.Role private _minters;\\n\\n  constructor (\\n    string memory name,\\n    string memory symbol,\\n    uint256 factor\\n  )\\n    public\\n    ERC20Detailed(name, symbol, 27)\\n  {\\n    _addMinter(_msgSender());\\n    _factor = factor;\\n    //_factorIncrement = factorIncrement;\\n    //_lastBlock = block.number;\\n    //_transfersEnabled = transfersEnabled;\\n  }\\n\\n  modifier onlyMinter() {\\n      require(isMinter(_msgSender()), \\\"MinterRole: caller does not have the Minter role\\\");\\n      _;\\n  }\\n\\n  function isMinter(address account) public view returns (bool) {\\n      return _minters.has(account);\\n  }\\n\\n  function addMinter(address account) public onlyMinter {\\n      _addMinter(account);\\n  }\\n\\n  function renounceMinter() public {\\n      _removeMinter(_msgSender());\\n  }\\n\\n  function _addMinter(address account) internal {\\n      _minters.add(account);\\n      emit MinterAdded(account);\\n  }\\n\\n  function _removeMinter(address account) internal {\\n      _minters.remove(account);\\n      emit MinterRemoved(account);\\n  }\\n\\n  function factor() public view returns (uint256) {\\n    uint256 result = _factor;\\n    for (uint256 i = 0; i < refactorCount; i++) {\\n      result = result.mul(REFACTOR_DIVIDER);\\n    }\\n    return result;\\n  }\\n\\n  /**\\n    * @dev See {IERC20-totalSupply}.\\n    */\\n  function totalSupply() public view returns (uint256) {\\n    return _applyFactor(_totalSupply.balance, _totalSupply.refactoredCount).add(_totalSupply.remain);\\n  }\\n\\n\\n  /**\\n    * @dev See {IERC20-balanceOf}.\\n    */\\n  function balanceOf(address account) public view returns (uint256) {\\n    Balance storage b = balances[account];\\n\\n    return _applyFactor(b.balance, b.refactoredCount).add(b.remain);\\n  }\\n\\n  /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n    * the total supply.\\n    *\\n    * Emits a {Transfer} event with `from` set to the zero address.\\n    *\\n    * Requirements\\n    *\\n    * - `to` cannot be the zero address.\\n    */\\n\\n  function mint(address account, uint256 amount) public onlyMinter returns (bool) {\\n    _mint(account, amount);\\n    return true;\\n  }\\n\\n  function _mint(address account, uint256 amount) internal {\\n    require(account != address(0), \\\"AutoRefactorCoinage: mint to the zero address\\\");\\n    Balance storage b = balances[account];\\n\\n    uint256 currentBalance = balanceOf(account);\\n    uint256 newBalance = currentBalance.add(amount);\\n\\n    uint256 rbAmount = _toRAYBased(newBalance);\\n    b.balance = rbAmount;\\n    b.refactoredCount = refactorCount;\\n\\n    addTotalSupply(amount);\\n    emit Transfer(address(0), account, _toRAYFactored(rbAmount));\\n  }\\n\\n    /**\\n    * @dev Destroys `amount` tokens from `account`, reducing the\\n    * total supply.\\n    *\\n    * Emits a {Transfer} event with `to` set to the zero address.\\n    *\\n    * Requirements\\n    *\\n    * - `account` cannot be the zero address.\\n    * - `account` must have at least `amount` tokens.\\n    */\\n\\n  function burn(uint256 amount) public {\\n      _burn(_msgSender(), amount);\\n  }\\n\\n  /**\\n    * @dev See {ERC20-_burnFrom}.\\n    */\\n  function burnFrom(address account, uint256 amount) public {\\n      _burnFrom(account, amount);\\n  }\\n\\n  function _burn(address account, uint256 amount) internal {\\n    require(account != address(0), \\\"AutoRefactorCoinage: burn from the zero address\\\");\\n    Balance storage b = balances[account];\\n\\n    uint256 currentBalance = balanceOf(account);\\n    uint256 newBalance = currentBalance.sub(amount);\\n\\n    uint256 rbAmount = _toRAYBased(newBalance);\\n    b.balance = rbAmount;\\n    b.refactoredCount = refactorCount;\\n\\n    subTotalSupply(amount);\\n    emit Transfer(account, address(0), _toRAYFactored(rbAmount));\\n  }\\n\\n  function _burnFrom(address account, uint256 amount) internal {\\n    _burn(account, amount);\\n  }\\n\\n  // helpers\\n\\n  /**\\n   * @param v the value to be factored\\n   */\\n  function _applyFactor(uint256 v, uint256 refactoredCount) internal view returns (uint256) {\\n    if (v == 0) {\\n      return 0;\\n    }\\n\\n    v = rmul2(v, _factor);\\n\\n    for (uint256 i = refactoredCount; i < refactorCount; i++) {\\n      v = v.mul(REFACTOR_DIVIDER);\\n    }\\n\\n    return v;\\n  }\\n\\n  /**\\n   * @dev Calculate RAY BASED from RAY FACTORED\\n   */\\n  function _toRAYBased(uint256 rf) internal view returns (uint256 rb) {\\n    return rdiv2(rf, _factor);\\n  }\\n\\n  /**\\n   * @dev Calculate RAY FACTORED from RAY BASED\\n   */\\n  function _toRAYFactored(uint256 rb) internal view returns (uint256 rf) {\\n    return rmul2(rb, _factor);\\n  }\\n\\n\\n  // new\\n\\n  function setFactor(uint256 factor) external onlyOwner returns (bool) {\\n    uint256 previous = _factor;\\n\\n    uint256 count = 0;\\n    uint256 f = factor;\\n    for (; f >= REFACTOR_BOUNDARY; f = f.div(REFACTOR_DIVIDER)) {\\n      count = count.add(1);\\n    }\\n\\n    refactorCount = count;\\n    _factor = f;\\n    emit FactorSet(previous, f, count);\\n  }\\n\\n  function addTotalSupply(uint256 amount) internal {\\n    uint256 currentSupply = _applyFactor(_totalSupply.balance, _totalSupply.refactoredCount);\\n    uint256 newSupply = currentSupply.add(amount);\\n\\n    uint256 rbAmount = _toRAYBased(newSupply);\\n    _totalSupply.balance = rbAmount;\\n    _totalSupply.refactoredCount = refactorCount;\\n  }\\n\\n  function subTotalSupply(uint256 amount) internal {\\n    uint256 currentSupply = _applyFactor(_totalSupply.balance, _totalSupply.refactoredCount);\\n    uint256 newSupply = currentSupply.sub(amount);\\n\\n    uint256 rbAmount = _toRAYBased(newSupply);\\n    _totalSupply.balance = rbAmount;\\n    _totalSupply.refactoredCount = refactorCount;\\n  }\\n\\n  // unsupported functions\\n\\n  function transfer(address recipient, uint256 amount) public returns (bool) {\\n    revert();\\n  }\\n\\n  function allowance(address owner, address spender) public view returns (uint256) {\\n    return 0;\\n  }\\n\\n  function approve(address spender, uint256 amount) public returns (bool) {\\n    revert();\\n  }\\n\\n  function transferFrom(address sender, address recipient, uint256 amount) public returns (bool) {\\n    revert();\\n  }\\n}\\n\",\"keccak256\":\"0x5c726b5bca46785438726f2fd559a39b8719c9f58a4b5009a3261b0a01c4e5c9\"}},\"version\":1}","storageLayout":{"storage":[{"astId":7,"contract":"contracts/test/AutoRefactorCoinage.sol:AutoRefactorCoinage","label":"_owner","offset":0,"slot":"0","type":"t_address"},{"astId":941,"contract":"contracts/test/AutoRefactorCoinage.sol:AutoRefactorCoinage","label":"_name","offset":0,"slot":"1","type":"t_string_storage"},{"astId":943,"contract":"contracts/test/AutoRefactorCoinage.sol:AutoRefactorCoinage","label":"_symbol","offset":0,"slot":"2","type":"t_string_storage"},{"astId":945,"contract":"contracts/test/AutoRefactorCoinage.sol:AutoRefactorCoinage","label":"_decimals","offset":0,"slot":"3","type":"t_uint8"},{"astId":2041,"contract":"contracts/test/AutoRefactorCoinage.sol:AutoRefactorCoinage","label":"REFACTOR_BOUNDARY","offset":0,"slot":"4","type":"t_uint256"},{"astId":2044,"contract":"contracts/test/AutoRefactorCoinage.sol:AutoRefactorCoinage","label":"REFACTOR_DIVIDER","offset":0,"slot":"5","type":"t_uint256"},{"astId":2046,"contract":"contracts/test/AutoRefactorCoinage.sol:AutoRefactorCoinage","label":"refactorCount","offset":0,"slot":"6","type":"t_uint256"},{"astId":2051,"contract":"contracts/test/AutoRefactorCoinage.sol:AutoRefactorCoinage","label":"balances","offset":0,"slot":"7","type":"t_mapping(t_address,t_struct(Balance)2036_storage)"},{"astId":2054,"contract":"contracts/test/AutoRefactorCoinage.sol:AutoRefactorCoinage","label":"_totalSupply","offset":0,"slot":"8","type":"t_struct(Balance)2036_storage"},{"astId":2056,"contract":"contracts/test/AutoRefactorCoinage.sol:AutoRefactorCoinage","label":"_factor","offset":0,"slot":"11","type":"t_uint256"},{"astId":2058,"contract":"contracts/test/AutoRefactorCoinage.sol:AutoRefactorCoinage","label":"_transfersEnabled","offset":0,"slot":"12","type":"t_bool"},{"astId":2077,"contract":"contracts/test/AutoRefactorCoinage.sol:AutoRefactorCoinage","label":"_minters","offset":0,"slot":"13","type":"t_struct(Role)1221_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_struct(Balance)2036_storage)":{"encoding":"mapping","key":"t_address","label":"mapping(address => struct AutoRefactorCoinage.Balance)","numberOfBytes":"32","value":"t_struct(Balance)2036_storage"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_struct(Balance)2036_storage":{"encoding":"inplace","label":"struct AutoRefactorCoinage.Balance","members":[{"astId":2031,"contract":"contracts/test/AutoRefactorCoinage.sol:AutoRefactorCoinage","label":"balance","offset":0,"slot":"0","type":"t_uint256"},{"astId":2033,"contract":"contracts/test/AutoRefactorCoinage.sol:AutoRefactorCoinage","label":"refactoredCount","offset":0,"slot":"1","type":"t_uint256"},{"astId":2035,"contract":"contracts/test/AutoRefactorCoinage.sol:AutoRefactorCoinage","label":"remain","offset":0,"slot":"2","type":"t_uint256"}],"numberOfBytes":"96"},"t_struct(Role)1221_storage":{"encoding":"inplace","label":"struct Roles.Role","members":[{"astId":1220,"contract":"contracts/test/AutoRefactorCoinage.sol:AutoRefactorCoinage","label":"bearer","offset":0,"slot":"0","type":"t_mapping(t_address,t_bool)"}],"numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/test/CoinageFactory.sol":{"CoinageFactory":{"abi":[{"inputs":[],"name":"RAY","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"deploy","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"608060405234801561001057600080fd5b50611668806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063552033c41461003b578063775c300c14610061575b600080fd5b61004e6b033b2e3c9fd0803ce800000081565b6040519081526020015b60405180910390f35b610069610076565b60405161005891906101f8565b6000806b033b2e3c9fd0803ce8000000604051610092906101eb565b60608082526000908201819052608060208301819052820152604081019190915260a001604051809103906000f0801580156100d2573d6000803e3d6000fd5b50604051634c1d96ab60e11b81529091506001600160a01b0382169063983b2d56906101029033906004016101f8565b600060405180830381600087803b15801561011c57600080fd5b505af1158015610130573d6000803e3d6000fd5b50505050806001600160a01b031663986502756040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561016f57600080fd5b505af1158015610183573d6000803e3d6000fd5b505060405163f2fde38b60e01b81526001600160a01b038416925063f2fde38b91506101b39033906004016101f8565b600060405180830381600087803b1580156101cd57600080fd5b505af11580156101e1573d6000803e3d6000fd5b5092949350505050565b6114268061020d83390190565b6001600160a01b039190911681526020019056fe60806040526b204fce5e3e2502611000000060045560026005553480156200002657600080fd5b50604051620014263803806200142683398101604081905262000049916200031b565b8282601b6200005833620000ab565b60016200006684826200041d565b5060026200007583826200041d565b506003805460ff191660ff92909216919091179055506200009f9050620000993390565b620000fb565b600b5550620004e99050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6200011681600d6200014d60201b6200064f1790919060201c565b6040516001600160a01b038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b620001598282620001d1565b15620001ac5760405162461bcd60e51b815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c650060448201526064015b60405180910390fd5b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b60006001600160a01b038216620002365760405162461bcd60e51b815260206004820152602260248201527f526f6c65733a206163636f756e7420697320746865207a65726f206164647265604482015261737360f01b6064820152608401620001a3565b506001600160a01b03166000908152602091909152604090205460ff1690565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200027e57600080fd5b81516001600160401b03808211156200029b576200029b62000256565b604051601f8301601f19908116603f01168101908282118183101715620002c657620002c662000256565b81604052838152602092508683858801011115620002e357600080fd5b600091505b83821015620003075785820183015181830184015290820190620002e8565b600093810190920192909252949350505050565b6000806000606084860312156200033157600080fd5b83516001600160401b03808211156200034957600080fd5b62000357878388016200026c565b945060208601519150808211156200036e57600080fd5b506200037d868287016200026c565b925050604084015190509250925092565b600181811c90821680620003a357607f821691505b602082108103620003c457634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200041857600081815260208120601f850160051c81016020861015620003f35750805b601f850160051c820191505b818110156200041457828155600101620003ff565b5050505b505050565b81516001600160401b0381111562000439576200043962000256565b62000451816200044a84546200038e565b84620003ca565b602080601f831160018114620004895760008415620004705750858301515b600019600386901b1c1916600185901b17855562000414565b600085815260208120601f198616915b82811015620004ba5788860151825594840194600190910190840162000499565b5085821015620004d95787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b610f2d80620004f96000396000f3fe608060405234801561001057600080fd5b506004361061016d5760003560e01c8063715018a6116100ce578063986502751161008757806398650275146102f8578063a7ac30b014610300578063a9059cbb146101a3578063aa271e1a14610309578063b7c246d71461031c578063dd62ed3e14610325578063f2fde38b1461033b57600080fd5b8063715018a61461029457806379cc67901461029c578063817e9d31146102af5780638da5cb5b146102c257806395d89b41146102dd578063983b2d56146102e557600080fd5b8063313ce5671161012b578063313ce567146102215780633eaaf86b1461023657806340c10f191461024857806342966c681461025b57806354f703f8146102705780636d1506111461027857806370a082311461028157600080fd5b8062d87a9c1461017257806306fdde031461018e578063095ea7b3146101a357806318160ddd146101c157806323b872dd146101c957806327e235e3146101d7575b600080fd5b61017b60055481565b6040519081526020015b60405180910390f35b61019661034e565b6040516101859190610cae565b6101b161016d366004610d18565b6040519015158152602001610185565b61017b6103e0565b6101b161016d366004610d42565b6102066101e5366004610d7e565b60076020526000908152604090208054600182015460029092015490919083565b60408051938452602084019290925290820152606001610185565b60035460405160ff9091168152602001610185565b600854600954600a5461020692919083565b6101b1610256366004610d18565b61040a565b61026e610269366004610d99565b61044e565b005b61017b61045b565b61017b600b5481565b61017b61028f366004610d7e565b610495565b61026e6104ce565b61026e6102aa366004610d18565b6104e2565b6101b16102bd366004610d99565b6104f0565b6000546040516001600160a01b039091168152602001610185565b610196610586565b61026e6102f3366004610d7e565b610595565b61026e6105c3565b61017b60065481565b6101b1610317366004610d7e565b6105cc565b61017b60045481565b61017b610333366004610db2565b600092915050565b61026e610349366004610d7e565b6105d9565b60606001805461035d90610de5565b80601f016020809104026020016040519081016040528092919081815260200182805461038990610de5565b80156103d65780601f106103ab576101008083540402835291602001916103d6565b820191906000526020600020905b8154815290600101906020018083116103b957829003601f168201915b5050505050905090565b60006104056008600201546103ff6008600001546008600101546106cb565b90610721565b905090565b6000610415336105cc565b61043a5760405162461bcd60e51b815260040161043190610e19565b60405180910390fd5b610444838361072d565b5060015b92915050565b610458338261083b565b50565b600b54600090815b60065481101561048f5760055461047b908390610932565b91508061048781610e7f565b915050610463565b50919050565b6001600160a01b03811660009081526007602052604081206002810154815460018301546104c792916103ff916106cb565b9392505050565b6104d661093e565b6104e06000610998565b565b6104ec82826109e8565b5050565b60006104fa61093e565b600b546000835b600454811061053357610515826001610721565b915061052c600554826109f290919063ffffffff16565b9050610501565b6006829055600b81905560408051848152602081018390529081018390527f47eb304b27f9efb047a046029f8a279a7cc8fccc6786f1e2f65939639584fbdc9060600160405180910390a1505050919050565b60606002805461035d90610de5565b61059e336105cc565b6105ba5760405162461bcd60e51b815260040161043190610e19565b610458816109fe565b6104e033610a40565b6000610448600d83610a82565b6105e161093e565b6001600160a01b0381166106465760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610431565b61045881610998565b6106598282610a82565b156106a65760405162461bcd60e51b815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c65006044820152606401610431565b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b6000826000036106dd57506000610448565b6106e983600b54610b05565b9250815b60065481101561071957600554610705908590610932565b93508061071181610e7f565b9150506106ed565b509192915050565b60006104c78284610e98565b6001600160a01b0382166107995760405162461bcd60e51b815260206004820152602d60248201527f4175746f5265666163746f72436f696e6167653a206d696e7420746f2074686560448201526c207a65726f206164647265737360981b6064820152608401610431565b6001600160a01b0382166000908152600760205260408120906107bb84610495565b905060006107c98285610721565b905060006107d682610b28565b808555600654600186015590506107ec85610b36565b6001600160a01b03861660007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef61082284610b72565b60405190815260200160405180910390a3505050505050565b6001600160a01b0382166108a95760405162461bcd60e51b815260206004820152602f60248201527f4175746f5265666163746f72436f696e6167653a206275726e2066726f6d207460448201526e6865207a65726f206164647265737360881b6064820152608401610431565b6001600160a01b0382166000908152600760205260408120906108cb84610495565b905060006108d98285610b80565b905060006108e682610b28565b808555600654600186015590506108fc85610b8c565b60006001600160a01b0387167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef61082284610b72565b60006104c78284610eab565b6000546001600160a01b031633146104e05760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610431565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6104ec828261083b565b60006104c78284610ec2565b610a09600d8261064f565b6040516001600160a01b038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b610a4b600d82610bac565b6040516001600160a01b038216907fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669290600090a250565b60006001600160a01b038216610ae55760405162461bcd60e51b815260206004820152602260248201527f526f6c65733a206163636f756e7420697320746865207a65726f206164647265604482015261737360f01b6064820152608401610431565b506001600160a01b03166000908152602091909152604090205460ff1690565b60006b033b2e3c9fd0803ce8000000610b1e8484610c2e565b6104c79190610ec2565b600061044882600b54610c95565b600854600954600091610b48916106cb565b90506000610b568284610721565b90506000610b6382610b28565b60085550506006546009555050565b600061044882600b54610b05565b60006104c78284610ee4565b600854600954600091610b9e916106cb565b90506000610b568284610b80565b610bb68282610a82565b610c0c5760405162461bcd60e51b815260206004820152602160248201527f526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c6044820152606560f81b6064820152608401610431565b6001600160a01b0316600090815260209190915260409020805460ff19169055565b6000811580610c5257508282610c448183610eab565b9250610c509083610ec2565b145b6104485760405162461bcd60e51b815260206004820152601460248201527364732d6d6174682d6d756c2d6f766572666c6f7760601b6044820152606401610431565b600081610b1e846b033b2e3c9fd0803ce8000000610c2e565b600060208083528351808285015260005b81811015610cdb57858101830151858201604001528201610cbf565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b0381168114610d1357600080fd5b919050565b60008060408385031215610d2b57600080fd5b610d3483610cfc565b946020939093013593505050565b600080600060608486031215610d5757600080fd5b610d6084610cfc565b9250610d6e60208501610cfc565b9150604084013590509250925092565b600060208284031215610d9057600080fd5b6104c782610cfc565b600060208284031215610dab57600080fd5b5035919050565b60008060408385031215610dc557600080fd5b610dce83610cfc565b9150610ddc60208401610cfc565b90509250929050565b600181811c90821680610df957607f821691505b60208210810361048f57634e487b7160e01b600052602260045260246000fd5b60208082526030908201527f4d696e746572526f6c653a2063616c6c657220646f6573206e6f74206861766560408201526f20746865204d696e74657220726f6c6560801b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b600060018201610e9157610e91610e69565b5060010190565b8082018082111561044857610448610e69565b808202811582820484141761044857610448610e69565b600082610edf57634e487b7160e01b600052601260045260246000fd5b500490565b8181038181111561044857610448610e6956fea26469706673582212208093112b9db0b5db714b3a42f5266c201f24297d7071c6df5474f4735bda0e3264736f6c63430008120033a264697066735822122000b89497e25454f3c5cb6bb34a1d71cfdb0535a54100959b9a51fc2de4c3ce2964736f6c63430008120033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1668 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x552033C4 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0x775C300C EQ PUSH2 0x61 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH12 0x33B2E3C9FD0803CE8000000 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x69 PUSH2 0x76 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x58 SWAP2 SWAP1 PUSH2 0x1F8 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH12 0x33B2E3C9FD0803CE8000000 PUSH1 0x40 MLOAD PUSH2 0x92 SWAP1 PUSH2 0x1EB JUMP JUMPDEST PUSH1 0x60 DUP1 DUP3 MSTORE PUSH1 0x0 SWAP1 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x20 DUP4 ADD DUP2 SWAP1 MSTORE DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xA0 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH2 0xD2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0x4C1D96AB PUSH1 0xE1 SHL DUP2 MSTORE SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0x983B2D56 SWAP1 PUSH2 0x102 SWAP1 CALLER SWAP1 PUSH1 0x4 ADD PUSH2 0x1F8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x11C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x130 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x98650275 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x16F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x183 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH4 0xF2FDE38B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP3 POP PUSH4 0xF2FDE38B SWAP2 POP PUSH2 0x1B3 SWAP1 CALLER SWAP1 PUSH1 0x4 ADD PUSH2 0x1F8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1E1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP SWAP3 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x1426 DUP1 PUSH2 0x20D DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH12 0x204FCE5E3E25026110000000 PUSH1 0x4 SSTORE PUSH1 0x2 PUSH1 0x5 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x26 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1426 CODESIZE SUB DUP1 PUSH3 0x1426 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x49 SWAP2 PUSH3 0x31B JUMP JUMPDEST DUP3 DUP3 PUSH1 0x1B PUSH3 0x58 CALLER PUSH3 0xAB JUMP JUMPDEST PUSH1 0x1 PUSH3 0x66 DUP5 DUP3 PUSH3 0x41D JUMP JUMPDEST POP PUSH1 0x2 PUSH3 0x75 DUP4 DUP3 PUSH3 0x41D JUMP JUMPDEST POP PUSH1 0x3 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0xFF SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP PUSH3 0x9F SWAP1 POP PUSH3 0x99 CALLER SWAP1 JUMP JUMPDEST PUSH3 0xFB JUMP JUMPDEST PUSH1 0xB SSTORE POP PUSH3 0x4E9 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH3 0x116 DUP2 PUSH1 0xD PUSH3 0x14D PUSH1 0x20 SHL PUSH3 0x64F OR SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0x6AE172837EA30B801FBFCDD4108AA1D5BF8FF775444FD70256B44E6BF3DFC3F6 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH3 0x159 DUP3 DUP3 PUSH3 0x1D1 JUMP JUMPDEST ISZERO PUSH3 0x1AC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526F6C65733A206163636F756E7420616C72656164792068617320726F6C6500 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH3 0x236 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526F6C65733A206163636F756E7420697320746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH3 0x1A3 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x27E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x29B JUMPI PUSH3 0x29B PUSH3 0x256 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x2C6 JUMPI PUSH3 0x2C6 PUSH3 0x256 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 DUP4 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0x2E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x307 JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0x2E8 JUMP JUMPDEST PUSH1 0x0 SWAP4 DUP2 ADD SWAP1 SWAP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x331 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x349 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x357 DUP8 DUP4 DUP9 ADD PUSH3 0x26C JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x36E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x37D DUP7 DUP3 DUP8 ADD PUSH3 0x26C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD MLOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x3A3 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x3C4 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x418 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x3F3 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x414 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x3FF JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x439 JUMPI PUSH3 0x439 PUSH3 0x256 JUMP JUMPDEST PUSH3 0x451 DUP2 PUSH3 0x44A DUP5 SLOAD PUSH3 0x38E JUMP JUMPDEST DUP5 PUSH3 0x3CA JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x489 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x470 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x414 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x4BA JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x499 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x4D9 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0xF2D DUP1 PUSH3 0x4F9 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x16D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xCE JUMPI DUP1 PUSH4 0x98650275 GT PUSH2 0x87 JUMPI DUP1 PUSH4 0x98650275 EQ PUSH2 0x2F8 JUMPI DUP1 PUSH4 0xA7AC30B0 EQ PUSH2 0x300 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1A3 JUMPI DUP1 PUSH4 0xAA271E1A EQ PUSH2 0x309 JUMPI DUP1 PUSH4 0xB7C246D7 EQ PUSH2 0x31C JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x325 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x33B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x294 JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x29C JUMPI DUP1 PUSH4 0x817E9D31 EQ PUSH2 0x2AF JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2C2 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2DD JUMPI DUP1 PUSH4 0x983B2D56 EQ PUSH2 0x2E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0x12B JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x221 JUMPI DUP1 PUSH4 0x3EAAF86B EQ PUSH2 0x236 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x248 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x25B JUMPI DUP1 PUSH4 0x54F703F8 EQ PUSH2 0x270 JUMPI DUP1 PUSH4 0x6D150611 EQ PUSH2 0x278 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x281 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0xD87A9C EQ PUSH2 0x172 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x18E JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1A3 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1C1 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1C9 JUMPI DUP1 PUSH4 0x27E235E3 EQ PUSH2 0x1D7 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x17B PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x196 PUSH2 0x34E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x185 SWAP2 SWAP1 PUSH2 0xCAE JUMP JUMPDEST PUSH2 0x1B1 PUSH2 0x16D CALLDATASIZE PUSH1 0x4 PUSH2 0xD18 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x185 JUMP JUMPDEST PUSH2 0x17B PUSH2 0x3E0 JUMP JUMPDEST PUSH2 0x1B1 PUSH2 0x16D CALLDATASIZE PUSH1 0x4 PUSH2 0xD42 JUMP JUMPDEST PUSH2 0x206 PUSH2 0x1E5 CALLDATASIZE PUSH1 0x4 PUSH2 0xD7E JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD SWAP1 SWAP2 SWAP1 DUP4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x185 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x185 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x9 SLOAD PUSH1 0xA SLOAD PUSH2 0x206 SWAP3 SWAP2 SWAP1 DUP4 JUMP JUMPDEST PUSH2 0x1B1 PUSH2 0x256 CALLDATASIZE PUSH1 0x4 PUSH2 0xD18 JUMP JUMPDEST PUSH2 0x40A JUMP JUMPDEST PUSH2 0x26E PUSH2 0x269 CALLDATASIZE PUSH1 0x4 PUSH2 0xD99 JUMP JUMPDEST PUSH2 0x44E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x17B PUSH2 0x45B JUMP JUMPDEST PUSH2 0x17B PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH2 0x17B PUSH2 0x28F CALLDATASIZE PUSH1 0x4 PUSH2 0xD7E JUMP JUMPDEST PUSH2 0x495 JUMP JUMPDEST PUSH2 0x26E PUSH2 0x4CE JUMP JUMPDEST PUSH2 0x26E PUSH2 0x2AA CALLDATASIZE PUSH1 0x4 PUSH2 0xD18 JUMP JUMPDEST PUSH2 0x4E2 JUMP JUMPDEST PUSH2 0x1B1 PUSH2 0x2BD CALLDATASIZE PUSH1 0x4 PUSH2 0xD99 JUMP JUMPDEST PUSH2 0x4F0 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x185 JUMP JUMPDEST PUSH2 0x196 PUSH2 0x586 JUMP JUMPDEST PUSH2 0x26E PUSH2 0x2F3 CALLDATASIZE PUSH1 0x4 PUSH2 0xD7E JUMP JUMPDEST PUSH2 0x595 JUMP JUMPDEST PUSH2 0x26E PUSH2 0x5C3 JUMP JUMPDEST PUSH2 0x17B PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1B1 PUSH2 0x317 CALLDATASIZE PUSH1 0x4 PUSH2 0xD7E JUMP JUMPDEST PUSH2 0x5CC JUMP JUMPDEST PUSH2 0x17B PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x17B PUSH2 0x333 CALLDATASIZE PUSH1 0x4 PUSH2 0xDB2 JUMP JUMPDEST PUSH1 0x0 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x26E PUSH2 0x349 CALLDATASIZE PUSH1 0x4 PUSH2 0xD7E JUMP JUMPDEST PUSH2 0x5D9 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x35D SWAP1 PUSH2 0xDE5 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x389 SWAP1 PUSH2 0xDE5 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3D6 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3AB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3D6 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3B9 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x405 PUSH1 0x8 PUSH1 0x2 ADD SLOAD PUSH2 0x3FF PUSH1 0x8 PUSH1 0x0 ADD SLOAD PUSH1 0x8 PUSH1 0x1 ADD SLOAD PUSH2 0x6CB JUMP JUMPDEST SWAP1 PUSH2 0x721 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x415 CALLER PUSH2 0x5CC JUMP JUMPDEST PUSH2 0x43A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x431 SWAP1 PUSH2 0xE19 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x444 DUP4 DUP4 PUSH2 0x72D JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x458 CALLER DUP3 PUSH2 0x83B JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x0 SWAP1 DUP2 JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x48F JUMPI PUSH1 0x5 SLOAD PUSH2 0x47B SWAP1 DUP4 SWAP1 PUSH2 0x932 JUMP JUMPDEST SWAP2 POP DUP1 PUSH2 0x487 DUP2 PUSH2 0xE7F JUMP JUMPDEST SWAP2 POP POP PUSH2 0x463 JUMP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 DUP2 ADD SLOAD DUP2 SLOAD PUSH1 0x1 DUP4 ADD SLOAD PUSH2 0x4C7 SWAP3 SWAP2 PUSH2 0x3FF SWAP2 PUSH2 0x6CB JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x4D6 PUSH2 0x93E JUMP JUMPDEST PUSH2 0x4E0 PUSH1 0x0 PUSH2 0x998 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x4EC DUP3 DUP3 PUSH2 0x9E8 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4FA PUSH2 0x93E JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x0 DUP4 JUMPDEST PUSH1 0x4 SLOAD DUP2 LT PUSH2 0x533 JUMPI PUSH2 0x515 DUP3 PUSH1 0x1 PUSH2 0x721 JUMP JUMPDEST SWAP2 POP PUSH2 0x52C PUSH1 0x5 SLOAD DUP3 PUSH2 0x9F2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x501 JUMP JUMPDEST PUSH1 0x6 DUP3 SWAP1 SSTORE PUSH1 0xB DUP2 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE SWAP1 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0x47EB304B27F9EFB047A046029F8A279A7CC8FCCC6786F1E2F65939639584FBDC SWAP1 PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x35D SWAP1 PUSH2 0xDE5 JUMP JUMPDEST PUSH2 0x59E CALLER PUSH2 0x5CC JUMP JUMPDEST PUSH2 0x5BA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x431 SWAP1 PUSH2 0xE19 JUMP JUMPDEST PUSH2 0x458 DUP2 PUSH2 0x9FE JUMP JUMPDEST PUSH2 0x4E0 CALLER PUSH2 0xA40 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x448 PUSH1 0xD DUP4 PUSH2 0xA82 JUMP JUMPDEST PUSH2 0x5E1 PUSH2 0x93E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x646 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x431 JUMP JUMPDEST PUSH2 0x458 DUP2 PUSH2 0x998 JUMP JUMPDEST PUSH2 0x659 DUP3 DUP3 PUSH2 0xA82 JUMP JUMPDEST ISZERO PUSH2 0x6A6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526F6C65733A206163636F756E7420616C72656164792068617320726F6C6500 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x431 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 SUB PUSH2 0x6DD JUMPI POP PUSH1 0x0 PUSH2 0x448 JUMP JUMPDEST PUSH2 0x6E9 DUP4 PUSH1 0xB SLOAD PUSH2 0xB05 JUMP JUMPDEST SWAP3 POP DUP2 JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x719 JUMPI PUSH1 0x5 SLOAD PUSH2 0x705 SWAP1 DUP6 SWAP1 PUSH2 0x932 JUMP JUMPDEST SWAP4 POP DUP1 PUSH2 0x711 DUP2 PUSH2 0xE7F JUMP JUMPDEST SWAP2 POP POP PUSH2 0x6ED JUMP JUMPDEST POP SWAP2 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C7 DUP3 DUP5 PUSH2 0xE98 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x799 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4175746F5265666163746F72436F696E6167653A206D696E7420746F20746865 PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x207A65726F2061646472657373 PUSH1 0x98 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x431 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x7BB DUP5 PUSH2 0x495 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x7C9 DUP3 DUP6 PUSH2 0x721 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x7D6 DUP3 PUSH2 0xB28 JUMP JUMPDEST DUP1 DUP6 SSTORE PUSH1 0x6 SLOAD PUSH1 0x1 DUP7 ADD SSTORE SWAP1 POP PUSH2 0x7EC DUP6 PUSH2 0xB36 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH2 0x822 DUP5 PUSH2 0xB72 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x8A9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4175746F5265666163746F72436F696E6167653A206275726E2066726F6D2074 PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x6865207A65726F2061646472657373 PUSH1 0x88 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x431 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x8CB DUP5 PUSH2 0x495 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x8D9 DUP3 DUP6 PUSH2 0xB80 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x8E6 DUP3 PUSH2 0xB28 JUMP JUMPDEST DUP1 DUP6 SSTORE PUSH1 0x6 SLOAD PUSH1 0x1 DUP7 ADD SSTORE SWAP1 POP PUSH2 0x8FC DUP6 PUSH2 0xB8C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH2 0x822 DUP5 PUSH2 0xB72 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C7 DUP3 DUP5 PUSH2 0xEAB JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x4E0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x431 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x4EC DUP3 DUP3 PUSH2 0x83B JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C7 DUP3 DUP5 PUSH2 0xEC2 JUMP JUMPDEST PUSH2 0xA09 PUSH1 0xD DUP3 PUSH2 0x64F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0x6AE172837EA30B801FBFCDD4108AA1D5BF8FF775444FD70256B44E6BF3DFC3F6 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0xA4B PUSH1 0xD DUP3 PUSH2 0xBAC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0xE94479A9F7E1952CC78F2D6BAAB678ADC1B772D936C6583DEF489E524CB66692 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xAE5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526F6C65733A206163636F756E7420697320746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x431 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH12 0x33B2E3C9FD0803CE8000000 PUSH2 0xB1E DUP5 DUP5 PUSH2 0xC2E JUMP JUMPDEST PUSH2 0x4C7 SWAP2 SWAP1 PUSH2 0xEC2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x448 DUP3 PUSH1 0xB SLOAD PUSH2 0xC95 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x9 SLOAD PUSH1 0x0 SWAP2 PUSH2 0xB48 SWAP2 PUSH2 0x6CB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xB56 DUP3 DUP5 PUSH2 0x721 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xB63 DUP3 PUSH2 0xB28 JUMP JUMPDEST PUSH1 0x8 SSTORE POP POP PUSH1 0x6 SLOAD PUSH1 0x9 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x448 DUP3 PUSH1 0xB SLOAD PUSH2 0xB05 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C7 DUP3 DUP5 PUSH2 0xEE4 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x9 SLOAD PUSH1 0x0 SWAP2 PUSH2 0xB9E SWAP2 PUSH2 0x6CB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xB56 DUP3 DUP5 PUSH2 0xB80 JUMP JUMPDEST PUSH2 0xBB6 DUP3 DUP3 PUSH2 0xA82 JUMP JUMPDEST PUSH2 0xC0C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526F6C65733A206163636F756E7420646F6573206E6F74206861766520726F6C PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x65 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x431 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO DUP1 PUSH2 0xC52 JUMPI POP DUP3 DUP3 PUSH2 0xC44 DUP2 DUP4 PUSH2 0xEAB JUMP JUMPDEST SWAP3 POP PUSH2 0xC50 SWAP1 DUP4 PUSH2 0xEC2 JUMP JUMPDEST EQ JUMPDEST PUSH2 0x448 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x64732D6D6174682D6D756C2D6F766572666C6F77 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x431 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0xB1E DUP5 PUSH12 0x33B2E3C9FD0803CE8000000 PUSH2 0xC2E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xCDB JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0xCBF JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xD13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD2B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD34 DUP4 PUSH2 0xCFC JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xD57 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD60 DUP5 PUSH2 0xCFC JUMP JUMPDEST SWAP3 POP PUSH2 0xD6E PUSH1 0x20 DUP6 ADD PUSH2 0xCFC JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4C7 DUP3 PUSH2 0xCFC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDAB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDC5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDCE DUP4 PUSH2 0xCFC JUMP JUMPDEST SWAP2 POP PUSH2 0xDDC PUSH1 0x20 DUP5 ADD PUSH2 0xCFC JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xDF9 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x48F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x30 SWAP1 DUP3 ADD MSTORE PUSH32 0x4D696E746572526F6C653A2063616C6C657220646F6573206E6F742068617665 PUSH1 0x40 DUP3 ADD MSTORE PUSH16 0x20746865204D696E74657220726F6C65 PUSH1 0x80 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0xE91 JUMPI PUSH2 0xE91 PUSH2 0xE69 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x448 JUMPI PUSH2 0x448 PUSH2 0xE69 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x448 JUMPI PUSH2 0x448 PUSH2 0xE69 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xEDF JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x448 JUMPI PUSH2 0x448 PUSH2 0xE69 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP1 SWAP4 GT 0x2B SWAP14 0xB0 0xB5 0xDB PUSH18 0x4B3A42F5266C201F24297D7071C6DF5474F4 PUSH20 0x5BDA0E3264736F6C63430008120033A264697066 PUSH20 0x5822122000B89497E25454F3C5CB6BB34A1D71CF 0xDB SDIV CALLDATALOAD 0xA5 COINBASE STOP SWAP6 SWAP12 SWAP11 MLOAD 0xFC 0x2D 0xE4 0xC3 0xCE 0x29 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ","sourceMap":"160:419:16:-:0;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@RAY_2733":{"entryPoint":null,"id":2733,"parameterSlots":0,"returnSlots":0},"@deploy_2777":{"entryPoint":118,"id":2777,"parameterSlots":0,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":504,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_t_uint256__to_t_string_memory_ptr_t_string_memory_ptr_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:944:17","statements":[{"nodeType":"YulBlock","src":"6:3:17","statements":[]},{"body":{"nodeType":"YulBlock","src":"115:76:17","statements":[{"nodeType":"YulAssignment","src":"125:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"137:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"148:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"133:3:17"},"nodeType":"YulFunctionCall","src":"133:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"125:4:17"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"167:9:17"},{"name":"value0","nodeType":"YulIdentifier","src":"178:6:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"160:6:17"},"nodeType":"YulFunctionCall","src":"160:25:17"},"nodeType":"YulExpressionStatement","src":"160:25:17"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"84:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"95:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"106:4:17","type":""}],"src":"14:177:17"},{"body":{"nodeType":"YulBlock","src":"297:102:17","statements":[{"nodeType":"YulAssignment","src":"307:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"319:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"330:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"315:3:17"},"nodeType":"YulFunctionCall","src":"315:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"307:4:17"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"349:9:17"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"364:6:17"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"380:3:17","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"385:1:17","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"376:3:17"},"nodeType":"YulFunctionCall","src":"376:11:17"},{"kind":"number","nodeType":"YulLiteral","src":"389:1:17","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"372:3:17"},"nodeType":"YulFunctionCall","src":"372:19:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"360:3:17"},"nodeType":"YulFunctionCall","src":"360:32:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"342:6:17"},"nodeType":"YulFunctionCall","src":"342:51:17"},"nodeType":"YulExpressionStatement","src":"342:51:17"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"266:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"277:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"288:4:17","type":""}],"src":"196:203:17"},{"body":{"nodeType":"YulBlock","src":"707:235:17","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"724:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"735:2:17","type":"","value":"96"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"717:6:17"},"nodeType":"YulFunctionCall","src":"717:21:17"},"nodeType":"YulExpressionStatement","src":"717:21:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"758:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"769:2:17","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"754:3:17"},"nodeType":"YulFunctionCall","src":"754:18:17"},{"kind":"number","nodeType":"YulLiteral","src":"774:1:17","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"747:6:17"},"nodeType":"YulFunctionCall","src":"747:29:17"},"nodeType":"YulExpressionStatement","src":"747:29:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"796:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"807:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"792:3:17"},"nodeType":"YulFunctionCall","src":"792:20:17"},{"kind":"number","nodeType":"YulLiteral","src":"814:3:17","type":"","value":"128"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"785:6:17"},"nodeType":"YulFunctionCall","src":"785:33:17"},"nodeType":"YulExpressionStatement","src":"785:33:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"838:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"849:3:17","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"834:3:17"},"nodeType":"YulFunctionCall","src":"834:19:17"},{"kind":"number","nodeType":"YulLiteral","src":"855:1:17","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"827:6:17"},"nodeType":"YulFunctionCall","src":"827:30:17"},"nodeType":"YulExpressionStatement","src":"827:30:17"},{"nodeType":"YulAssignment","src":"866:27:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"878:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"889:3:17","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"874:3:17"},"nodeType":"YulFunctionCall","src":"874:19:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"866:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"913:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"924:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"909:3:17"},"nodeType":"YulFunctionCall","src":"909:18:17"},{"name":"value0","nodeType":"YulIdentifier","src":"929:6:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"902:6:17"},"nodeType":"YulFunctionCall","src":"902:34:17"},"nodeType":"YulExpressionStatement","src":"902:34:17"}]},"name":"abi_encode_tuple_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_t_uint256__to_t_string_memory_ptr_t_string_memory_ptr_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"676:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"687:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"698:4:17","type":""}],"src":"404:538:17"}]},"contents":"{\n    { }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_t_uint256__to_t_string_memory_ptr_t_string_memory_ptr_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 96)\n        mstore(add(headStart, 96), 0)\n        mstore(add(headStart, 0x20), 128)\n        mstore(add(headStart, 128), 0)\n        tail := add(headStart, 160)\n        mstore(add(headStart, 64), value0)\n    }\n}","id":17,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100365760003560e01c8063552033c41461003b578063775c300c14610061575b600080fd5b61004e6b033b2e3c9fd0803ce800000081565b6040519081526020015b60405180910390f35b610069610076565b60405161005891906101f8565b6000806b033b2e3c9fd0803ce8000000604051610092906101eb565b60608082526000908201819052608060208301819052820152604081019190915260a001604051809103906000f0801580156100d2573d6000803e3d6000fd5b50604051634c1d96ab60e11b81529091506001600160a01b0382169063983b2d56906101029033906004016101f8565b600060405180830381600087803b15801561011c57600080fd5b505af1158015610130573d6000803e3d6000fd5b50505050806001600160a01b031663986502756040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561016f57600080fd5b505af1158015610183573d6000803e3d6000fd5b505060405163f2fde38b60e01b81526001600160a01b038416925063f2fde38b91506101b39033906004016101f8565b600060405180830381600087803b1580156101cd57600080fd5b505af11580156101e1573d6000803e3d6000fd5b5092949350505050565b6114268061020d83390190565b6001600160a01b039190911681526020019056fe60806040526b204fce5e3e2502611000000060045560026005553480156200002657600080fd5b50604051620014263803806200142683398101604081905262000049916200031b565b8282601b6200005833620000ab565b60016200006684826200041d565b5060026200007583826200041d565b506003805460ff191660ff92909216919091179055506200009f9050620000993390565b620000fb565b600b5550620004e99050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6200011681600d6200014d60201b6200064f1790919060201c565b6040516001600160a01b038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b620001598282620001d1565b15620001ac5760405162461bcd60e51b815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c650060448201526064015b60405180910390fd5b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b60006001600160a01b038216620002365760405162461bcd60e51b815260206004820152602260248201527f526f6c65733a206163636f756e7420697320746865207a65726f206164647265604482015261737360f01b6064820152608401620001a3565b506001600160a01b03166000908152602091909152604090205460ff1690565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200027e57600080fd5b81516001600160401b03808211156200029b576200029b62000256565b604051601f8301601f19908116603f01168101908282118183101715620002c657620002c662000256565b81604052838152602092508683858801011115620002e357600080fd5b600091505b83821015620003075785820183015181830184015290820190620002e8565b600093810190920192909252949350505050565b6000806000606084860312156200033157600080fd5b83516001600160401b03808211156200034957600080fd5b62000357878388016200026c565b945060208601519150808211156200036e57600080fd5b506200037d868287016200026c565b925050604084015190509250925092565b600181811c90821680620003a357607f821691505b602082108103620003c457634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200041857600081815260208120601f850160051c81016020861015620003f35750805b601f850160051c820191505b818110156200041457828155600101620003ff565b5050505b505050565b81516001600160401b0381111562000439576200043962000256565b62000451816200044a84546200038e565b84620003ca565b602080601f831160018114620004895760008415620004705750858301515b600019600386901b1c1916600185901b17855562000414565b600085815260208120601f198616915b82811015620004ba5788860151825594840194600190910190840162000499565b5085821015620004d95787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b610f2d80620004f96000396000f3fe608060405234801561001057600080fd5b506004361061016d5760003560e01c8063715018a6116100ce578063986502751161008757806398650275146102f8578063a7ac30b014610300578063a9059cbb146101a3578063aa271e1a14610309578063b7c246d71461031c578063dd62ed3e14610325578063f2fde38b1461033b57600080fd5b8063715018a61461029457806379cc67901461029c578063817e9d31146102af5780638da5cb5b146102c257806395d89b41146102dd578063983b2d56146102e557600080fd5b8063313ce5671161012b578063313ce567146102215780633eaaf86b1461023657806340c10f191461024857806342966c681461025b57806354f703f8146102705780636d1506111461027857806370a082311461028157600080fd5b8062d87a9c1461017257806306fdde031461018e578063095ea7b3146101a357806318160ddd146101c157806323b872dd146101c957806327e235e3146101d7575b600080fd5b61017b60055481565b6040519081526020015b60405180910390f35b61019661034e565b6040516101859190610cae565b6101b161016d366004610d18565b6040519015158152602001610185565b61017b6103e0565b6101b161016d366004610d42565b6102066101e5366004610d7e565b60076020526000908152604090208054600182015460029092015490919083565b60408051938452602084019290925290820152606001610185565b60035460405160ff9091168152602001610185565b600854600954600a5461020692919083565b6101b1610256366004610d18565b61040a565b61026e610269366004610d99565b61044e565b005b61017b61045b565b61017b600b5481565b61017b61028f366004610d7e565b610495565b61026e6104ce565b61026e6102aa366004610d18565b6104e2565b6101b16102bd366004610d99565b6104f0565b6000546040516001600160a01b039091168152602001610185565b610196610586565b61026e6102f3366004610d7e565b610595565b61026e6105c3565b61017b60065481565b6101b1610317366004610d7e565b6105cc565b61017b60045481565b61017b610333366004610db2565b600092915050565b61026e610349366004610d7e565b6105d9565b60606001805461035d90610de5565b80601f016020809104026020016040519081016040528092919081815260200182805461038990610de5565b80156103d65780601f106103ab576101008083540402835291602001916103d6565b820191906000526020600020905b8154815290600101906020018083116103b957829003601f168201915b5050505050905090565b60006104056008600201546103ff6008600001546008600101546106cb565b90610721565b905090565b6000610415336105cc565b61043a5760405162461bcd60e51b815260040161043190610e19565b60405180910390fd5b610444838361072d565b5060015b92915050565b610458338261083b565b50565b600b54600090815b60065481101561048f5760055461047b908390610932565b91508061048781610e7f565b915050610463565b50919050565b6001600160a01b03811660009081526007602052604081206002810154815460018301546104c792916103ff916106cb565b9392505050565b6104d661093e565b6104e06000610998565b565b6104ec82826109e8565b5050565b60006104fa61093e565b600b546000835b600454811061053357610515826001610721565b915061052c600554826109f290919063ffffffff16565b9050610501565b6006829055600b81905560408051848152602081018390529081018390527f47eb304b27f9efb047a046029f8a279a7cc8fccc6786f1e2f65939639584fbdc9060600160405180910390a1505050919050565b60606002805461035d90610de5565b61059e336105cc565b6105ba5760405162461bcd60e51b815260040161043190610e19565b610458816109fe565b6104e033610a40565b6000610448600d83610a82565b6105e161093e565b6001600160a01b0381166106465760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610431565b61045881610998565b6106598282610a82565b156106a65760405162461bcd60e51b815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c65006044820152606401610431565b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b6000826000036106dd57506000610448565b6106e983600b54610b05565b9250815b60065481101561071957600554610705908590610932565b93508061071181610e7f565b9150506106ed565b509192915050565b60006104c78284610e98565b6001600160a01b0382166107995760405162461bcd60e51b815260206004820152602d60248201527f4175746f5265666163746f72436f696e6167653a206d696e7420746f2074686560448201526c207a65726f206164647265737360981b6064820152608401610431565b6001600160a01b0382166000908152600760205260408120906107bb84610495565b905060006107c98285610721565b905060006107d682610b28565b808555600654600186015590506107ec85610b36565b6001600160a01b03861660007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef61082284610b72565b60405190815260200160405180910390a3505050505050565b6001600160a01b0382166108a95760405162461bcd60e51b815260206004820152602f60248201527f4175746f5265666163746f72436f696e6167653a206275726e2066726f6d207460448201526e6865207a65726f206164647265737360881b6064820152608401610431565b6001600160a01b0382166000908152600760205260408120906108cb84610495565b905060006108d98285610b80565b905060006108e682610b28565b808555600654600186015590506108fc85610b8c565b60006001600160a01b0387167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef61082284610b72565b60006104c78284610eab565b6000546001600160a01b031633146104e05760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610431565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6104ec828261083b565b60006104c78284610ec2565b610a09600d8261064f565b6040516001600160a01b038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b610a4b600d82610bac565b6040516001600160a01b038216907fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669290600090a250565b60006001600160a01b038216610ae55760405162461bcd60e51b815260206004820152602260248201527f526f6c65733a206163636f756e7420697320746865207a65726f206164647265604482015261737360f01b6064820152608401610431565b506001600160a01b03166000908152602091909152604090205460ff1690565b60006b033b2e3c9fd0803ce8000000610b1e8484610c2e565b6104c79190610ec2565b600061044882600b54610c95565b600854600954600091610b48916106cb565b90506000610b568284610721565b90506000610b6382610b28565b60085550506006546009555050565b600061044882600b54610b05565b60006104c78284610ee4565b600854600954600091610b9e916106cb565b90506000610b568284610b80565b610bb68282610a82565b610c0c5760405162461bcd60e51b815260206004820152602160248201527f526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c6044820152606560f81b6064820152608401610431565b6001600160a01b0316600090815260209190915260409020805460ff19169055565b6000811580610c5257508282610c448183610eab565b9250610c509083610ec2565b145b6104485760405162461bcd60e51b815260206004820152601460248201527364732d6d6174682d6d756c2d6f766572666c6f7760601b6044820152606401610431565b600081610b1e846b033b2e3c9fd0803ce8000000610c2e565b600060208083528351808285015260005b81811015610cdb57858101830151858201604001528201610cbf565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b0381168114610d1357600080fd5b919050565b60008060408385031215610d2b57600080fd5b610d3483610cfc565b946020939093013593505050565b600080600060608486031215610d5757600080fd5b610d6084610cfc565b9250610d6e60208501610cfc565b9150604084013590509250925092565b600060208284031215610d9057600080fd5b6104c782610cfc565b600060208284031215610dab57600080fd5b5035919050565b60008060408385031215610dc557600080fd5b610dce83610cfc565b9150610ddc60208401610cfc565b90509250929050565b600181811c90821680610df957607f821691505b60208210810361048f57634e487b7160e01b600052602260045260246000fd5b60208082526030908201527f4d696e746572526f6c653a2063616c6c657220646f6573206e6f74206861766560408201526f20746865204d696e74657220726f6c6560801b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b600060018201610e9157610e91610e69565b5060010190565b8082018082111561044857610448610e69565b808202811582820484141761044857610448610e69565b600082610edf57634e487b7160e01b600052601260045260246000fd5b500490565b8181038181111561044857610448610e6956fea26469706673582212208093112b9db0b5db714b3a42f5266c201f24297d7071c6df5474f4735bda0e3264736f6c63430008120033a264697066735822122000b89497e25454f3c5cb6bb34a1d71cfdb0535a54100959b9a51fc2de4c3ce2964736f6c63430008120033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x552033C4 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0x775C300C EQ PUSH2 0x61 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH12 0x33B2E3C9FD0803CE8000000 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x69 PUSH2 0x76 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x58 SWAP2 SWAP1 PUSH2 0x1F8 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH12 0x33B2E3C9FD0803CE8000000 PUSH1 0x40 MLOAD PUSH2 0x92 SWAP1 PUSH2 0x1EB JUMP JUMPDEST PUSH1 0x60 DUP1 DUP3 MSTORE PUSH1 0x0 SWAP1 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x20 DUP4 ADD DUP2 SWAP1 MSTORE DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xA0 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH2 0xD2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0x4C1D96AB PUSH1 0xE1 SHL DUP2 MSTORE SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0x983B2D56 SWAP1 PUSH2 0x102 SWAP1 CALLER SWAP1 PUSH1 0x4 ADD PUSH2 0x1F8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x11C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x130 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x98650275 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x16F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x183 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH4 0xF2FDE38B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP3 POP PUSH4 0xF2FDE38B SWAP2 POP PUSH2 0x1B3 SWAP1 CALLER SWAP1 PUSH1 0x4 ADD PUSH2 0x1F8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1E1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP SWAP3 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x1426 DUP1 PUSH2 0x20D DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH12 0x204FCE5E3E25026110000000 PUSH1 0x4 SSTORE PUSH1 0x2 PUSH1 0x5 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x26 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1426 CODESIZE SUB DUP1 PUSH3 0x1426 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x49 SWAP2 PUSH3 0x31B JUMP JUMPDEST DUP3 DUP3 PUSH1 0x1B PUSH3 0x58 CALLER PUSH3 0xAB JUMP JUMPDEST PUSH1 0x1 PUSH3 0x66 DUP5 DUP3 PUSH3 0x41D JUMP JUMPDEST POP PUSH1 0x2 PUSH3 0x75 DUP4 DUP3 PUSH3 0x41D JUMP JUMPDEST POP PUSH1 0x3 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0xFF SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP PUSH3 0x9F SWAP1 POP PUSH3 0x99 CALLER SWAP1 JUMP JUMPDEST PUSH3 0xFB JUMP JUMPDEST PUSH1 0xB SSTORE POP PUSH3 0x4E9 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH3 0x116 DUP2 PUSH1 0xD PUSH3 0x14D PUSH1 0x20 SHL PUSH3 0x64F OR SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0x6AE172837EA30B801FBFCDD4108AA1D5BF8FF775444FD70256B44E6BF3DFC3F6 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH3 0x159 DUP3 DUP3 PUSH3 0x1D1 JUMP JUMPDEST ISZERO PUSH3 0x1AC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526F6C65733A206163636F756E7420616C72656164792068617320726F6C6500 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH3 0x236 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526F6C65733A206163636F756E7420697320746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH3 0x1A3 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x27E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x29B JUMPI PUSH3 0x29B PUSH3 0x256 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x2C6 JUMPI PUSH3 0x2C6 PUSH3 0x256 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 DUP4 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0x2E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x307 JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0x2E8 JUMP JUMPDEST PUSH1 0x0 SWAP4 DUP2 ADD SWAP1 SWAP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x331 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x349 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x357 DUP8 DUP4 DUP9 ADD PUSH3 0x26C JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x36E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x37D DUP7 DUP3 DUP8 ADD PUSH3 0x26C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD MLOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x3A3 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x3C4 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x418 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x3F3 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x414 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x3FF JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x439 JUMPI PUSH3 0x439 PUSH3 0x256 JUMP JUMPDEST PUSH3 0x451 DUP2 PUSH3 0x44A DUP5 SLOAD PUSH3 0x38E JUMP JUMPDEST DUP5 PUSH3 0x3CA JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x489 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x470 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x414 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x4BA JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x499 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x4D9 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0xF2D DUP1 PUSH3 0x4F9 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x16D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xCE JUMPI DUP1 PUSH4 0x98650275 GT PUSH2 0x87 JUMPI DUP1 PUSH4 0x98650275 EQ PUSH2 0x2F8 JUMPI DUP1 PUSH4 0xA7AC30B0 EQ PUSH2 0x300 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1A3 JUMPI DUP1 PUSH4 0xAA271E1A EQ PUSH2 0x309 JUMPI DUP1 PUSH4 0xB7C246D7 EQ PUSH2 0x31C JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x325 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x33B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x294 JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x29C JUMPI DUP1 PUSH4 0x817E9D31 EQ PUSH2 0x2AF JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2C2 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2DD JUMPI DUP1 PUSH4 0x983B2D56 EQ PUSH2 0x2E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0x12B JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x221 JUMPI DUP1 PUSH4 0x3EAAF86B EQ PUSH2 0x236 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x248 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x25B JUMPI DUP1 PUSH4 0x54F703F8 EQ PUSH2 0x270 JUMPI DUP1 PUSH4 0x6D150611 EQ PUSH2 0x278 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x281 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0xD87A9C EQ PUSH2 0x172 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x18E JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1A3 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1C1 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1C9 JUMPI DUP1 PUSH4 0x27E235E3 EQ PUSH2 0x1D7 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x17B PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x196 PUSH2 0x34E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x185 SWAP2 SWAP1 PUSH2 0xCAE JUMP JUMPDEST PUSH2 0x1B1 PUSH2 0x16D CALLDATASIZE PUSH1 0x4 PUSH2 0xD18 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x185 JUMP JUMPDEST PUSH2 0x17B PUSH2 0x3E0 JUMP JUMPDEST PUSH2 0x1B1 PUSH2 0x16D CALLDATASIZE PUSH1 0x4 PUSH2 0xD42 JUMP JUMPDEST PUSH2 0x206 PUSH2 0x1E5 CALLDATASIZE PUSH1 0x4 PUSH2 0xD7E JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD SWAP1 SWAP2 SWAP1 DUP4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x185 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x185 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x9 SLOAD PUSH1 0xA SLOAD PUSH2 0x206 SWAP3 SWAP2 SWAP1 DUP4 JUMP JUMPDEST PUSH2 0x1B1 PUSH2 0x256 CALLDATASIZE PUSH1 0x4 PUSH2 0xD18 JUMP JUMPDEST PUSH2 0x40A JUMP JUMPDEST PUSH2 0x26E PUSH2 0x269 CALLDATASIZE PUSH1 0x4 PUSH2 0xD99 JUMP JUMPDEST PUSH2 0x44E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x17B PUSH2 0x45B JUMP JUMPDEST PUSH2 0x17B PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH2 0x17B PUSH2 0x28F CALLDATASIZE PUSH1 0x4 PUSH2 0xD7E JUMP JUMPDEST PUSH2 0x495 JUMP JUMPDEST PUSH2 0x26E PUSH2 0x4CE JUMP JUMPDEST PUSH2 0x26E PUSH2 0x2AA CALLDATASIZE PUSH1 0x4 PUSH2 0xD18 JUMP JUMPDEST PUSH2 0x4E2 JUMP JUMPDEST PUSH2 0x1B1 PUSH2 0x2BD CALLDATASIZE PUSH1 0x4 PUSH2 0xD99 JUMP JUMPDEST PUSH2 0x4F0 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x185 JUMP JUMPDEST PUSH2 0x196 PUSH2 0x586 JUMP JUMPDEST PUSH2 0x26E PUSH2 0x2F3 CALLDATASIZE PUSH1 0x4 PUSH2 0xD7E JUMP JUMPDEST PUSH2 0x595 JUMP JUMPDEST PUSH2 0x26E PUSH2 0x5C3 JUMP JUMPDEST PUSH2 0x17B PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1B1 PUSH2 0x317 CALLDATASIZE PUSH1 0x4 PUSH2 0xD7E JUMP JUMPDEST PUSH2 0x5CC JUMP JUMPDEST PUSH2 0x17B PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x17B PUSH2 0x333 CALLDATASIZE PUSH1 0x4 PUSH2 0xDB2 JUMP JUMPDEST PUSH1 0x0 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x26E PUSH2 0x349 CALLDATASIZE PUSH1 0x4 PUSH2 0xD7E JUMP JUMPDEST PUSH2 0x5D9 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x35D SWAP1 PUSH2 0xDE5 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x389 SWAP1 PUSH2 0xDE5 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3D6 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3AB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3D6 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3B9 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x405 PUSH1 0x8 PUSH1 0x2 ADD SLOAD PUSH2 0x3FF PUSH1 0x8 PUSH1 0x0 ADD SLOAD PUSH1 0x8 PUSH1 0x1 ADD SLOAD PUSH2 0x6CB JUMP JUMPDEST SWAP1 PUSH2 0x721 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x415 CALLER PUSH2 0x5CC JUMP JUMPDEST PUSH2 0x43A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x431 SWAP1 PUSH2 0xE19 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x444 DUP4 DUP4 PUSH2 0x72D JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x458 CALLER DUP3 PUSH2 0x83B JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x0 SWAP1 DUP2 JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x48F JUMPI PUSH1 0x5 SLOAD PUSH2 0x47B SWAP1 DUP4 SWAP1 PUSH2 0x932 JUMP JUMPDEST SWAP2 POP DUP1 PUSH2 0x487 DUP2 PUSH2 0xE7F JUMP JUMPDEST SWAP2 POP POP PUSH2 0x463 JUMP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 DUP2 ADD SLOAD DUP2 SLOAD PUSH1 0x1 DUP4 ADD SLOAD PUSH2 0x4C7 SWAP3 SWAP2 PUSH2 0x3FF SWAP2 PUSH2 0x6CB JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x4D6 PUSH2 0x93E JUMP JUMPDEST PUSH2 0x4E0 PUSH1 0x0 PUSH2 0x998 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x4EC DUP3 DUP3 PUSH2 0x9E8 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4FA PUSH2 0x93E JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x0 DUP4 JUMPDEST PUSH1 0x4 SLOAD DUP2 LT PUSH2 0x533 JUMPI PUSH2 0x515 DUP3 PUSH1 0x1 PUSH2 0x721 JUMP JUMPDEST SWAP2 POP PUSH2 0x52C PUSH1 0x5 SLOAD DUP3 PUSH2 0x9F2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x501 JUMP JUMPDEST PUSH1 0x6 DUP3 SWAP1 SSTORE PUSH1 0xB DUP2 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE SWAP1 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0x47EB304B27F9EFB047A046029F8A279A7CC8FCCC6786F1E2F65939639584FBDC SWAP1 PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x35D SWAP1 PUSH2 0xDE5 JUMP JUMPDEST PUSH2 0x59E CALLER PUSH2 0x5CC JUMP JUMPDEST PUSH2 0x5BA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x431 SWAP1 PUSH2 0xE19 JUMP JUMPDEST PUSH2 0x458 DUP2 PUSH2 0x9FE JUMP JUMPDEST PUSH2 0x4E0 CALLER PUSH2 0xA40 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x448 PUSH1 0xD DUP4 PUSH2 0xA82 JUMP JUMPDEST PUSH2 0x5E1 PUSH2 0x93E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x646 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x431 JUMP JUMPDEST PUSH2 0x458 DUP2 PUSH2 0x998 JUMP JUMPDEST PUSH2 0x659 DUP3 DUP3 PUSH2 0xA82 JUMP JUMPDEST ISZERO PUSH2 0x6A6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526F6C65733A206163636F756E7420616C72656164792068617320726F6C6500 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x431 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 SUB PUSH2 0x6DD JUMPI POP PUSH1 0x0 PUSH2 0x448 JUMP JUMPDEST PUSH2 0x6E9 DUP4 PUSH1 0xB SLOAD PUSH2 0xB05 JUMP JUMPDEST SWAP3 POP DUP2 JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x719 JUMPI PUSH1 0x5 SLOAD PUSH2 0x705 SWAP1 DUP6 SWAP1 PUSH2 0x932 JUMP JUMPDEST SWAP4 POP DUP1 PUSH2 0x711 DUP2 PUSH2 0xE7F JUMP JUMPDEST SWAP2 POP POP PUSH2 0x6ED JUMP JUMPDEST POP SWAP2 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C7 DUP3 DUP5 PUSH2 0xE98 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x799 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4175746F5265666163746F72436F696E6167653A206D696E7420746F20746865 PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x207A65726F2061646472657373 PUSH1 0x98 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x431 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x7BB DUP5 PUSH2 0x495 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x7C9 DUP3 DUP6 PUSH2 0x721 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x7D6 DUP3 PUSH2 0xB28 JUMP JUMPDEST DUP1 DUP6 SSTORE PUSH1 0x6 SLOAD PUSH1 0x1 DUP7 ADD SSTORE SWAP1 POP PUSH2 0x7EC DUP6 PUSH2 0xB36 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH2 0x822 DUP5 PUSH2 0xB72 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x8A9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4175746F5265666163746F72436F696E6167653A206275726E2066726F6D2074 PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x6865207A65726F2061646472657373 PUSH1 0x88 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x431 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x8CB DUP5 PUSH2 0x495 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x8D9 DUP3 DUP6 PUSH2 0xB80 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x8E6 DUP3 PUSH2 0xB28 JUMP JUMPDEST DUP1 DUP6 SSTORE PUSH1 0x6 SLOAD PUSH1 0x1 DUP7 ADD SSTORE SWAP1 POP PUSH2 0x8FC DUP6 PUSH2 0xB8C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH2 0x822 DUP5 PUSH2 0xB72 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C7 DUP3 DUP5 PUSH2 0xEAB JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x4E0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x431 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x4EC DUP3 DUP3 PUSH2 0x83B JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C7 DUP3 DUP5 PUSH2 0xEC2 JUMP JUMPDEST PUSH2 0xA09 PUSH1 0xD DUP3 PUSH2 0x64F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0x6AE172837EA30B801FBFCDD4108AA1D5BF8FF775444FD70256B44E6BF3DFC3F6 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0xA4B PUSH1 0xD DUP3 PUSH2 0xBAC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0xE94479A9F7E1952CC78F2D6BAAB678ADC1B772D936C6583DEF489E524CB66692 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xAE5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526F6C65733A206163636F756E7420697320746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x431 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH12 0x33B2E3C9FD0803CE8000000 PUSH2 0xB1E DUP5 DUP5 PUSH2 0xC2E JUMP JUMPDEST PUSH2 0x4C7 SWAP2 SWAP1 PUSH2 0xEC2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x448 DUP3 PUSH1 0xB SLOAD PUSH2 0xC95 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x9 SLOAD PUSH1 0x0 SWAP2 PUSH2 0xB48 SWAP2 PUSH2 0x6CB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xB56 DUP3 DUP5 PUSH2 0x721 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xB63 DUP3 PUSH2 0xB28 JUMP JUMPDEST PUSH1 0x8 SSTORE POP POP PUSH1 0x6 SLOAD PUSH1 0x9 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x448 DUP3 PUSH1 0xB SLOAD PUSH2 0xB05 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C7 DUP3 DUP5 PUSH2 0xEE4 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x9 SLOAD PUSH1 0x0 SWAP2 PUSH2 0xB9E SWAP2 PUSH2 0x6CB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xB56 DUP3 DUP5 PUSH2 0xB80 JUMP JUMPDEST PUSH2 0xBB6 DUP3 DUP3 PUSH2 0xA82 JUMP JUMPDEST PUSH2 0xC0C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526F6C65733A206163636F756E7420646F6573206E6F74206861766520726F6C PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x65 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x431 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO DUP1 PUSH2 0xC52 JUMPI POP DUP3 DUP3 PUSH2 0xC44 DUP2 DUP4 PUSH2 0xEAB JUMP JUMPDEST SWAP3 POP PUSH2 0xC50 SWAP1 DUP4 PUSH2 0xEC2 JUMP JUMPDEST EQ JUMPDEST PUSH2 0x448 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x64732D6D6174682D6D756C2D6F766572666C6F77 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x431 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0xB1E DUP5 PUSH12 0x33B2E3C9FD0803CE8000000 PUSH2 0xC2E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xCDB JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0xCBF JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xD13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD2B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD34 DUP4 PUSH2 0xCFC JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xD57 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD60 DUP5 PUSH2 0xCFC JUMP JUMPDEST SWAP3 POP PUSH2 0xD6E PUSH1 0x20 DUP6 ADD PUSH2 0xCFC JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4C7 DUP3 PUSH2 0xCFC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDAB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDC5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDCE DUP4 PUSH2 0xCFC JUMP JUMPDEST SWAP2 POP PUSH2 0xDDC PUSH1 0x20 DUP5 ADD PUSH2 0xCFC JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xDF9 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x48F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x30 SWAP1 DUP3 ADD MSTORE PUSH32 0x4D696E746572526F6C653A2063616C6C657220646F6573206E6F742068617665 PUSH1 0x40 DUP3 ADD MSTORE PUSH16 0x20746865204D696E74657220726F6C65 PUSH1 0x80 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0xE91 JUMPI PUSH2 0xE91 PUSH2 0xE69 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x448 JUMPI PUSH2 0x448 PUSH2 0xE69 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x448 JUMPI PUSH2 0x448 PUSH2 0xE69 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xEDF JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x448 JUMPI PUSH2 0x448 PUSH2 0xE69 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP1 SWAP4 GT 0x2B SWAP14 0xB0 0xB5 0xDB PUSH18 0x4B3A42F5266C201F24297D7071C6DF5474F4 PUSH20 0x5BDA0E3264736F6C63430008120033A264697066 PUSH20 0x5822122000B89497E25454F3C5CB6BB34A1D71CF 0xDB SDIV CALLDATALOAD 0xA5 COINBASE STOP SWAP6 SWAP12 SWAP11 MLOAD 0xFC 0x2D 0xE4 0xC3 0xCE 0x29 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ","sourceMap":"160:419:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;207:38;;237:8;207:38;;;;;160:25:17;;;148:2;133:18;207:38:16;;;;;;;;310:267;;;:::i;:::-;;;;;;;:::i;:::-;346:7;361:21;237:8;385:72;;;;;:::i;:::-;735:2:17;717:21;;;774:1;754:18;;;747:29;;;814:3;807:4;792:20;;785:33;;;834:19;;827:30;-1:-1:-1;909:18:17;;902:34;;;;889:3;874:19;385:72:16;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;464:23:16;;-1:-1:-1;;;464:23:16;;361:96;;-1:-1:-1;;;;;;464:11:16;;;;;:23;;476:10;;464:23;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;493:1;-1:-1:-1;;;;;493:16:16;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;517:31:16;;-1:-1:-1;;;517:31:16;;-1:-1:-1;;;;;517:19:16;;;-1:-1:-1;517:19:16;;-1:-1:-1;517:31:16;;537:10;;517:31;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;570:1:16;;310:267;-1:-1:-1;;;;310:267:16:o;-1:-1:-1:-;;;;;;;;:::o;196:203:17:-;-1:-1:-1;;;;;360:32:17;;;;342:51;;330:2;315:18;;196:203::o"},"gasEstimates":{"creation":{"codeDepositCost":"1147200","executionCost":"1194","totalCost":"1148394"},"external":{"RAY()":"162","deploy()":"infinite"}},"methodIdentifiers":{"RAY()":"552033c4","deploy()":"775c300c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"RAY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deploy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/test/CoinageFactory.sol\":\"CoinageFactory\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\\n\\npragma solidity ^0.8.0;\\n\\n// CAUTION\\n// This version of SafeMath should only be used with Solidity 0.8 or later,\\n// because it relies on the compiler's built in overflow checks.\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations.\\n *\\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\\n * now has built in overflow checking.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            uint256 c = a + b;\\n            if (c < a) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b > a) return (false, 0);\\n            return (true, a - b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n            // benefit is lost if 'b' is also tested.\\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n            if (a == 0) return (true, 0);\\n            uint256 c = a * b;\\n            if (c / a != b) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a / b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a % b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a + b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a * b;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a % b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {trySub}.\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b <= a, errorMessage);\\n            return a - b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a / b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting with custom message when dividing by zero.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryMod}.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a % b;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\"},\"contracts/AccessControl/ERC20Detailed.sol\":{\"content\":\"pragma solidity ^0.8.4;\\n\\nimport \\\"./IERC20.sol\\\";\\n\\n/**\\n * @dev Optional functions from the ERC20 standard.\\n */\\nabstract contract ERC20Detailed is IERC20 {\\n    string private _name;\\n    string private _symbol;\\n    uint8 private _decimals;\\n\\n    /**\\n     * @dev Sets the values for `name`, `symbol`, and `decimals`. All three of\\n     * these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor (string memory name, string memory symbol, uint8 decimals) {\\n        _name = name;\\n        _symbol = symbol;\\n        _decimals = decimals;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5,05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view returns (uint8) {\\n        return _decimals;\\n    }\\n}\\n\",\"keccak256\":\"0xb5ec874cbe9e9b8e5bb00e9165ff55076392b6de078533d92e8239d3c8340eee\"},\"contracts/AccessControl/IERC20.sol\":{\"content\":\"pragma solidity ^0.8.4;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP. Does not include\\n * the optional functions; to access them see {ERC20Detailed}.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x15f1080f668baa0d47cc70d176bf94cc175256262ed88ac624ea1295cde0eb19\"},\"contracts/AccessControl/Roles.sol\":{\"content\":\"pragma solidity ^0.8.4;\\n\\n/**\\n * @title Roles\\n * @dev Library for managing addresses assigned to a Role.\\n */\\nlibrary Roles {\\n    struct Role {\\n        mapping (address => bool) bearer;\\n    }\\n\\n    /**\\n     * @dev Give an account access to this role.\\n     */\\n    function add(Role storage role, address account) internal {\\n        require(!has(role, account), \\\"Roles: account already has role\\\");\\n        role.bearer[account] = true;\\n    }\\n\\n    /**\\n     * @dev Remove an account's access to this role.\\n     */\\n    function remove(Role storage role, address account) internal {\\n        require(has(role, account), \\\"Roles: account does not have role\\\");\\n        role.bearer[account] = false;\\n    }\\n\\n    /**\\n     * @dev Check if an account has this role.\\n     * @return bool\\n     */\\n    function has(Role storage role, address account) internal view returns (bool) {\\n        require(account != address(0), \\\"Roles: account is the zero address\\\");\\n        return role.bearer[account];\\n    }\\n}\\n\",\"keccak256\":\"0x9cc0f220ec4f4e9ff47823597384e9ab28df6d854640eb1cd6950e7fef5de3fd\"},\"contracts/interfaces/AutoRefactorCoinageI.sol\":{\"content\":\"pragma solidity ^0.8.4;\\n\\ninterface AutoRefactorCoinageI {\\n  function factor() external view returns (uint256);\\n  function setFactor(uint256 factor) external returns (bool);\\n  function burn(uint256 amount) external;\\n  function burnFrom(address account, uint256 amount) external;\\n  function mint(address account, uint256 amount) external returns (bool);\\n  function totalSupply() external view returns (uint256);\\n  function balanceOf(address account) external view returns (uint256);\\n  function addMinter(address account) external;\\n  function renounceMinter() external;\\n  function transferOwnership(address newOwner) external;\\n}\\n\",\"keccak256\":\"0xdecaf358ce9773c212861d34d59c6774f549052961b26ac3760c2b41927b1354\"},\"contracts/interfaces/CoinageFactoryI.sol\":{\"content\":\"pragma solidity ^0.8.4;\\n\\ninterface CoinageFactoryI {\\n  function deploy() external returns (address);\\n}\\n\",\"keccak256\":\"0xc4c7b3d2abf07feb6802dc3fb510f9537968d4df32da39790fe946e6b4b84e7b\"},\"contracts/lib/DSMath.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-or-later\\n// https://github.com/dapphub/ds-math/blob/de45767/src/math.sol\\n/// math.sol -- mixin for inline numerical wizardry\\n\\n// This program is free software: you can redistribute it and/or modify\\n// it under the terms of the GNU General Public License as published by\\n// the Free Software Foundation, either version 3 of the License, or\\n// (at your option) any later version.\\n\\n// This program is distributed in the hope that it will be useful,\\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n// GNU General Public License for more details.\\n\\n// You should have received a copy of the GNU General Public License\\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\\n\\npragma solidity >0.4.13;\\n\\ncontract DSMath {\\n    function add(uint256 x, uint256 y) internal pure returns (uint256 z) {\\n        require((z = x + y) >= x, \\\"ds-math-add-overflow\\\");\\n    }\\n\\n    function sub(uint256 x, uint256 y) internal pure returns (uint256 z) {\\n        require((z = x - y) <= x, \\\"ds-math-sub-underflow\\\");\\n    }\\n\\n    function mul(uint256 x, uint256 y) internal pure returns (uint256 z) {\\n        require(y == 0 || (z = x * y) / y == x, \\\"ds-math-mul-overflow\\\");\\n    }\\n\\n    function min(uint256 x, uint256 y) internal pure returns (uint256 z) {\\n        return x <= y ? x : y;\\n    }\\n\\n    function max(uint256 x, uint256 y) internal pure returns (uint256 z) {\\n        return x >= y ? x : y;\\n    }\\n\\n    function imin(int256 x, int256 y) internal pure returns (int256 z) {\\n        return x <= y ? x : y;\\n    }\\n\\n    function imax(int256 x, int256 y) internal pure returns (int256 z) {\\n        return x >= y ? x : y;\\n    }\\n\\n    uint256 constant WAD = 10**18;\\n    uint256 constant RAY = 10**27;\\n\\n    function wmul(uint256 x, uint256 y) internal pure returns (uint256 z) {\\n        z = add(mul(x, y), WAD / 2) / WAD;\\n    }\\n\\n    function rmul(uint256 x, uint256 y) internal pure returns (uint256 z) {\\n        z = add(mul(x, y), RAY / 2) / RAY;\\n    }\\n\\n    function wdiv(uint256 x, uint256 y) internal pure returns (uint256 z) {\\n        z = add(mul(x, WAD), y / 2) / y;\\n    }\\n\\n    function rdiv(uint256 x, uint256 y) internal pure returns (uint256 z) {\\n        z = add(mul(x, RAY), y / 2) / y;\\n    }\\n\\n    function wmul2(uint256 x, uint256 y) internal pure returns (uint256 z) {\\n        z = mul(x, y) / WAD;\\n    }\\n\\n    function rmul2(uint256 x, uint256 y) internal pure returns (uint256 z) {\\n        z = mul(x, y) / RAY;\\n    }\\n\\n    function wdiv2(uint256 x, uint256 y) internal pure returns (uint256 z) {\\n        z = mul(x, WAD) / y;\\n    }\\n\\n    function rdiv2(uint256 x, uint256 y) internal pure returns (uint256 z) {\\n        z = mul(x, RAY) / y;\\n    }\\n\\n    // This famous algorithm is called \\\"exponentiation by squaring\\\"\\n    // and calculates x^n with x as fixed-point and n as regular unsigned.\\n    //\\n    // It's O(log n), instead of O(n) for naive repeated multiplication.\\n    //\\n    // These facts are why it works:\\n    //\\n    //  If n is even, then x^n = (x^2)^(n/2).\\n    //  If n is odd,  then x^n = x * x^(n-1),\\n    //   and applying the equation for even x gives\\n    //  x^n = x * (x^2)^((n-1) / 2).\\n    //\\n    //  Also, EVM division is flooring and\\n    //  floor[(n-1) / 2] = floor[n / 2].\\n    //\\n    function wpow(uint256 x, uint256 n) internal pure returns (uint256 z) {\\n        z = n % 2 != 0 ? x : WAD;\\n\\n        for (n /= 2; n != 0; n /= 2) {\\n            x = wmul(x, x);\\n\\n            if (n % 2 != 0) {\\n                z = wmul(z, x);\\n            }\\n        }\\n    }\\n\\n    function rpow(uint256 x, uint256 n) internal pure returns (uint256 z) {\\n        z = n % 2 != 0 ? x : RAY;\\n\\n        for (n /= 2; n != 0; n /= 2) {\\n            x = rmul(x, x);\\n\\n            if (n % 2 != 0) {\\n                z = rmul(z, x);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xa7cbbf8cc883d53eb96b44f2d459ac295e31362aa335098fc5042d5a14985415\",\"license\":\"GPL-3.0-or-later\"},\"contracts/test/AutoRefactorCoinage.sol\":{\"content\":\"// based on ERC20 implementation of openzeppelin/-solidity: https://github.com/OpenZeppelin/openzeppelin/-contracts/blob/7552af95e4ec6fccd64a95b206f59a1b4ff91517/contracts/token/ERC20/ERC20.sol\\npragma solidity ^0.8.4;\\n\\nimport { AutoRefactorCoinageI } from \\\"../interfaces/AutoRefactorCoinageI.sol\\\";\\nimport { SafeMath } from \\\"@openzeppelin/contracts/utils/math/SafeMath.sol\\\";\\n// import { Context } from \\\"../AccessControl/Context.sol\\\";\\n\\nimport { Ownable } from \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n// import { IERC20 } from \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport { ERC20Detailed } from \\\"../AccessControl/ERC20Detailed.sol\\\";\\n// import { ERC20Mintable } from \\\"../AccessControl/ERC20Mintable.sol\\\";\\n// import { ERC20Burnable } from \\\"../AccessControl/ERC20Burnable.sol\\\";\\nimport \\\"../AccessControl/Roles.sol\\\";\\nimport { DSMath } from \\\"../lib/DSMath.sol\\\";\\n\\n\\n/**\\n * @dev Implementation of coin age token based on ERC20 of openzeppelin/-solidity\\n *\\n * AutoRefactorCoinage stores `_totalSupply` and `_balances` as RAY BASED value,\\n * `_allowances` as RAY FACTORED value.\\n *\\n * This takes public function (including _approve) parameters as RAY FACTORED value\\n * and internal function (including approve) parameters as RAY BASED value, and emits event in RAY FACTORED value.\\n *\\n * `RAY BASED` = `RAY FACTORED`  / factor\\n *\\n *  factor increases exponentially for each block mined.\\n */\\ncontract AutoRefactorCoinage is DSMath, Ownable, ERC20Detailed {\\n  using SafeMath for uint256;\\n  using Roles for Roles.Role;\\n\\n  struct Balance {\\n    uint256 balance;\\n    uint256 refactoredCount;\\n    uint256 remain;\\n  }\\n\\n  uint256 public REFACTOR_BOUNDARY = 10 ** 28;\\n  uint256 public REFACTOR_DIVIDER = 2;\\n\\n  uint256 public refactorCount;\\n\\n  mapping (address => Balance) public balances;\\n\\n  Balance public _totalSupply;\\n\\n  uint256 public _factor;\\n\\n  bool internal _transfersEnabled;\\n\\n  event FactorSet(uint256 previous, uint256 current, uint256 shiftCount);\\n\\n  event MinterAdded(address indexed account);\\n  event MinterRemoved(address indexed account);\\n\\n  Roles.Role private _minters;\\n\\n  constructor (\\n    string memory name,\\n    string memory symbol,\\n    uint256 factor\\n  )\\n    public\\n    ERC20Detailed(name, symbol, 27)\\n  {\\n    _addMinter(_msgSender());\\n    _factor = factor;\\n    //_factorIncrement = factorIncrement;\\n    //_lastBlock = block.number;\\n    //_transfersEnabled = transfersEnabled;\\n  }\\n\\n  modifier onlyMinter() {\\n      require(isMinter(_msgSender()), \\\"MinterRole: caller does not have the Minter role\\\");\\n      _;\\n  }\\n\\n  function isMinter(address account) public view returns (bool) {\\n      return _minters.has(account);\\n  }\\n\\n  function addMinter(address account) public onlyMinter {\\n      _addMinter(account);\\n  }\\n\\n  function renounceMinter() public {\\n      _removeMinter(_msgSender());\\n  }\\n\\n  function _addMinter(address account) internal {\\n      _minters.add(account);\\n      emit MinterAdded(account);\\n  }\\n\\n  function _removeMinter(address account) internal {\\n      _minters.remove(account);\\n      emit MinterRemoved(account);\\n  }\\n\\n  function factor() public view returns (uint256) {\\n    uint256 result = _factor;\\n    for (uint256 i = 0; i < refactorCount; i++) {\\n      result = result.mul(REFACTOR_DIVIDER);\\n    }\\n    return result;\\n  }\\n\\n  /**\\n    * @dev See {IERC20-totalSupply}.\\n    */\\n  function totalSupply() public view returns (uint256) {\\n    return _applyFactor(_totalSupply.balance, _totalSupply.refactoredCount).add(_totalSupply.remain);\\n  }\\n\\n\\n  /**\\n    * @dev See {IERC20-balanceOf}.\\n    */\\n  function balanceOf(address account) public view returns (uint256) {\\n    Balance storage b = balances[account];\\n\\n    return _applyFactor(b.balance, b.refactoredCount).add(b.remain);\\n  }\\n\\n  /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n    * the total supply.\\n    *\\n    * Emits a {Transfer} event with `from` set to the zero address.\\n    *\\n    * Requirements\\n    *\\n    * - `to` cannot be the zero address.\\n    */\\n\\n  function mint(address account, uint256 amount) public onlyMinter returns (bool) {\\n    _mint(account, amount);\\n    return true;\\n  }\\n\\n  function _mint(address account, uint256 amount) internal {\\n    require(account != address(0), \\\"AutoRefactorCoinage: mint to the zero address\\\");\\n    Balance storage b = balances[account];\\n\\n    uint256 currentBalance = balanceOf(account);\\n    uint256 newBalance = currentBalance.add(amount);\\n\\n    uint256 rbAmount = _toRAYBased(newBalance);\\n    b.balance = rbAmount;\\n    b.refactoredCount = refactorCount;\\n\\n    addTotalSupply(amount);\\n    emit Transfer(address(0), account, _toRAYFactored(rbAmount));\\n  }\\n\\n    /**\\n    * @dev Destroys `amount` tokens from `account`, reducing the\\n    * total supply.\\n    *\\n    * Emits a {Transfer} event with `to` set to the zero address.\\n    *\\n    * Requirements\\n    *\\n    * - `account` cannot be the zero address.\\n    * - `account` must have at least `amount` tokens.\\n    */\\n\\n  function burn(uint256 amount) public {\\n      _burn(_msgSender(), amount);\\n  }\\n\\n  /**\\n    * @dev See {ERC20-_burnFrom}.\\n    */\\n  function burnFrom(address account, uint256 amount) public {\\n      _burnFrom(account, amount);\\n  }\\n\\n  function _burn(address account, uint256 amount) internal {\\n    require(account != address(0), \\\"AutoRefactorCoinage: burn from the zero address\\\");\\n    Balance storage b = balances[account];\\n\\n    uint256 currentBalance = balanceOf(account);\\n    uint256 newBalance = currentBalance.sub(amount);\\n\\n    uint256 rbAmount = _toRAYBased(newBalance);\\n    b.balance = rbAmount;\\n    b.refactoredCount = refactorCount;\\n\\n    subTotalSupply(amount);\\n    emit Transfer(account, address(0), _toRAYFactored(rbAmount));\\n  }\\n\\n  function _burnFrom(address account, uint256 amount) internal {\\n    _burn(account, amount);\\n  }\\n\\n  // helpers\\n\\n  /**\\n   * @param v the value to be factored\\n   */\\n  function _applyFactor(uint256 v, uint256 refactoredCount) internal view returns (uint256) {\\n    if (v == 0) {\\n      return 0;\\n    }\\n\\n    v = rmul2(v, _factor);\\n\\n    for (uint256 i = refactoredCount; i < refactorCount; i++) {\\n      v = v.mul(REFACTOR_DIVIDER);\\n    }\\n\\n    return v;\\n  }\\n\\n  /**\\n   * @dev Calculate RAY BASED from RAY FACTORED\\n   */\\n  function _toRAYBased(uint256 rf) internal view returns (uint256 rb) {\\n    return rdiv2(rf, _factor);\\n  }\\n\\n  /**\\n   * @dev Calculate RAY FACTORED from RAY BASED\\n   */\\n  function _toRAYFactored(uint256 rb) internal view returns (uint256 rf) {\\n    return rmul2(rb, _factor);\\n  }\\n\\n\\n  // new\\n\\n  function setFactor(uint256 factor) external onlyOwner returns (bool) {\\n    uint256 previous = _factor;\\n\\n    uint256 count = 0;\\n    uint256 f = factor;\\n    for (; f >= REFACTOR_BOUNDARY; f = f.div(REFACTOR_DIVIDER)) {\\n      count = count.add(1);\\n    }\\n\\n    refactorCount = count;\\n    _factor = f;\\n    emit FactorSet(previous, f, count);\\n  }\\n\\n  function addTotalSupply(uint256 amount) internal {\\n    uint256 currentSupply = _applyFactor(_totalSupply.balance, _totalSupply.refactoredCount);\\n    uint256 newSupply = currentSupply.add(amount);\\n\\n    uint256 rbAmount = _toRAYBased(newSupply);\\n    _totalSupply.balance = rbAmount;\\n    _totalSupply.refactoredCount = refactorCount;\\n  }\\n\\n  function subTotalSupply(uint256 amount) internal {\\n    uint256 currentSupply = _applyFactor(_totalSupply.balance, _totalSupply.refactoredCount);\\n    uint256 newSupply = currentSupply.sub(amount);\\n\\n    uint256 rbAmount = _toRAYBased(newSupply);\\n    _totalSupply.balance = rbAmount;\\n    _totalSupply.refactoredCount = refactorCount;\\n  }\\n\\n  // unsupported functions\\n\\n  function transfer(address recipient, uint256 amount) public returns (bool) {\\n    revert();\\n  }\\n\\n  function allowance(address owner, address spender) public view returns (uint256) {\\n    return 0;\\n  }\\n\\n  function approve(address spender, uint256 amount) public returns (bool) {\\n    revert();\\n  }\\n\\n  function transferFrom(address sender, address recipient, uint256 amount) public returns (bool) {\\n    revert();\\n  }\\n}\\n\",\"keccak256\":\"0x5c726b5bca46785438726f2fd559a39b8719c9f58a4b5009a3261b0a01c4e5c9\"},\"contracts/test/CoinageFactory.sol\":{\"content\":\"pragma solidity ^0.8.4;\\n\\nimport { AutoRefactorCoinage } from \\\"./AutoRefactorCoinage.sol\\\";\\nimport { CoinageFactoryI } from \\\"../interfaces/CoinageFactoryI.sol\\\";\\n\\ncontract CoinageFactory is CoinageFactoryI {\\n  uint256 constant public RAY = 10 ** 27; // 1 RAY\\n  uint256 constant internal _DEFAULT_FACTOR = RAY;\\n\\n  function deploy() external returns (address) {\\n    AutoRefactorCoinage c = new AutoRefactorCoinage(\\n      \\\"\\\",\\n      \\\"\\\",\\n      _DEFAULT_FACTOR\\n    );\\n\\n    c.addMinter(msg.sender);\\n    c.renounceMinter();\\n    c.transferOwnership(msg.sender);\\n\\n    return address(c);\\n  }\\n}\\n\",\"keccak256\":\"0xbbfd292998753620dbe46433891d621b0fc5e8c04ae36258664bd6ee55ba1791\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}}}}}